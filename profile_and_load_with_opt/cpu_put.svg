<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (597 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.34%)</title><rect x="10.0" y="755.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.34%)</title><rect x="10.0" y="739.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.34%)</title><rect x="10.0" y="723.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (2 samples, 0.34%)</title><rect x="10.0" y="707.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.34%)</title><rect x="10.0" y="691.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$114/216767555.run (2 samples, 0.34%)</title><rect x="10.0" y="675.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (2 samples, 0.34%)</title><rect x="10.0" y="659.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (2 samples, 0.34%)</title><rect x="10.0" y="643.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (2 samples, 0.34%)</title><rect x="10.0" y="627.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (2 samples, 0.34%)</title><rect x="10.0" y="611.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.17%)</title><rect x="10.0" y="595.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1 samples, 0.17%)</title><rect x="10.0" y="579.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport$1.run (1 samples, 0.17%)</title><rect x="10.0" y="563.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>sun/rmi/server/UnicastServerRef.dispatch (1 samples, 0.17%)</title><rect x="10.0" y="547.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Method.invoke (1 samples, 0.17%)</title><rect x="10.0" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingMethodAccessorImpl.invoke (1 samples, 0.17%)</title><rect x="10.0" y="515.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedMethodAccessor46.invoke (1 samples, 0.17%)</title><rect x="10.0" y="499.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.invoke (1 samples, 0.17%)</title><rect x="10.0" y="483.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doPrivilegedOperation (1 samples, 0.17%)</title><rect x="10.0" y="467.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl$PrivilegedOperation.run (1 samples, 0.17%)</title><rect x="10.0" y="451.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="462.0"></text>
</g>
<g>
<title>javax/management/remote/rmi/RMIConnectionImpl.doOperation (1 samples, 0.17%)</title><rect x="10.0" y="435.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/JmxMBeanServer.invoke (1 samples, 0.17%)</title><rect x="10.0" y="419.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>com/sun/jmx/interceptor/DefaultMBeanServerInterceptor.invoke (1 samples, 0.17%)</title><rect x="10.0" y="403.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>javax/management/StandardMBean.invoke (1 samples, 0.17%)</title><rect x="10.0" y="387.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanSupport.invoke (1 samples, 0.17%)</title><rect x="10.0" y="371.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/PerInterface.invoke (1 samples, 0.17%)</title><rect x="10.0" y="355.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="366.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MBeanIntrospector.invokeM (1 samples, 0.17%)</title><rect x="10.0" y="339.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="350.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.17%)</title><rect x="10.0" y="323.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="334.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/MXBeanIntrospector.invokeM2 (1 samples, 0.17%)</title><rect x="10.0" y="307.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="318.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.17%)</title><rect x="10.0" y="291.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="302.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/ConvertingMethod.invokeWithOpenReturn (1 samples, 0.17%)</title><rect x="10.0" y="275.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="286.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.17%)</title><rect x="10.0" y="259.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="270.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$ArrayMapping.toNonNullOpenValue (1 samples, 0.17%)</title><rect x="10.0" y="243.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="254.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$NonNullMXBeanMapping.toOpenValue (1 samples, 0.17%)</title><rect x="10.0" y="227.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="238.0"></text>
</g>
<g>
<title>com/sun/jmx/mbeanserver/DefaultMXBeanMappingFactory$CompositeMapping.toNonNullOpenValue (1 samples, 0.17%)</title><rect x="10.0" y="211.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="222.0"></text>
</g>
<g>
<title>sun/reflect/misc/MethodUtil.invoke (1 samples, 0.17%)</title><rect x="10.0" y="195.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (1 samples, 0.17%)</title><rect x="12.0" y="595.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.0" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.17%)</title><rect x="12.0" y="579.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.0" y="590.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="12.0" y="563.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.0" y="574.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="12.0" y="547.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="15.0" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="12.0" y="531.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.0" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="12.0" y="515.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="15.0" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (515 samples, 86.26%)</title><rect x="14.0" y="755.0" width="1017.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.0" y="766.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (56 samples, 9.38%)</title><rect x="15.9" y="739.0" width="110.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.9" y="750.0">one/nio/net/N..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.17%)</title><rect x="21.9" y="723.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (52 samples, 8.71%)</title><rect x="23.8" y="723.0" width="102.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.8" y="734.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.50%)</title><rect x="35.7" y="707.0" width="5.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="38.7" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (7 samples, 1.17%)</title><rect x="41.6" y="707.0" width="13.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="44.6" y="718.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.50%)</title><rect x="49.5" y="691.0" width="6.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="52.5" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.17%)</title><rect x="55.5" y="707.0" width="1.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="58.5" y="718.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.50%)</title><rect x="57.4" y="707.0" width="6.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="60.4" y="718.0"></text>
</g>
<g>
<title>epoll_wait (32 samples, 5.36%)</title><rect x="63.4" y="707.0" width="63.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="66.4" y="718.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 4.86%)</title><rect x="69.3" y="691.0" width="57.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="72.3" y="702.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (29 samples, 4.86%)</title><rect x="69.3" y="675.0" width="57.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="72.3" y="686.0">do_sys..</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.17%)</title><rect x="71.3" y="659.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="74.3" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.17%)</title><rect x="71.3" y="643.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="74.3" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (27 samples, 4.52%)</title><rect x="73.2" y="659.0" width="53.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="76.2" y="670.0">__x64..</text>
</g>
<g>
<title>do_epoll_wait (27 samples, 4.52%)</title><rect x="73.2" y="643.0" width="53.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="76.2" y="654.0">do_ep..</text>
</g>
<g>
<title>__fget_light (3 samples, 0.50%)</title><rect x="77.2" y="627.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="80.2" y="638.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.34%)</title><rect x="79.2" y="611.0" width="3.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="82.2" y="622.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.34%)</title><rect x="83.1" y="627.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="86.1" y="638.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (10 samples, 1.68%)</title><rect x="87.1" y="627.0" width="19.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.1" y="638.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.34%)</title><rect x="89.1" y="611.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="92.1" y="622.0"></text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 0.67%)</title><rect x="93.0" y="611.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="96.0" y="622.0"></text>
</g>
<g>
<title>ep_item_poll (3 samples, 0.50%)</title><rect x="95.0" y="595.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="98.0" y="606.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.50%)</title><rect x="95.0" y="579.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="98.0" y="590.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.50%)</title><rect x="95.0" y="563.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="98.0" y="574.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.50%)</title><rect x="100.9" y="611.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="103.9" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (10 samples, 1.68%)</title><rect x="106.9" y="627.0" width="19.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="109.9" y="638.0"></text>
</g>
<g>
<title>schedule (7 samples, 1.17%)</title><rect x="112.8" y="611.0" width="13.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="115.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (458 samples, 76.72%)</title><rect x="126.6" y="739.0" width="905.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="129.6" y="750.0">one/nio/net/Session.process</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="126.6" y="723.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="129.6" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.17%)</title><rect x="126.6" y="707.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="129.6" y="718.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.17%)</title><rect x="128.6" y="723.0" width="2.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="131.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (456 samples, 76.38%)</title><rect x="130.6" y="723.0" width="901.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.6" y="734.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (423 samples, 70.85%)</title><rect x="130.6" y="707.0" width="836.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="133.6" y="718.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (398 samples, 66.67%)</title><rect x="132.5" y="691.0" width="786.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.5" y="702.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (398 samples, 66.67%)</title><rect x="132.5" y="675.0" width="786.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="135.5" y="686.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (398 samples, 66.67%)</title><rect x="132.5" y="659.0" width="786.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="135.5" y="670.0">RequestHandler3_upsert.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (184 samples, 30.82%)</title><rect x="134.5" y="643.0" width="363.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.5" y="654.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.34%)</title><rect x="134.5" y="627.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.34%)</title><rect x="134.5" y="611.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.34%)</title><rect x="134.5" y="595.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.17%)</title><rect x="134.5" y="579.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="137.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.17%)</title><rect x="134.5" y="563.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.5" y="574.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.17%)</title><rect x="134.5" y="547.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.5" y="558.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.17%)</title><rect x="134.5" y="531.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.17%)</title><rect x="136.5" y="579.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="139.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.17%)</title><rect x="136.5" y="563.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="139.5" y="574.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.17%)</title><rect x="136.5" y="547.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="139.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (180 samples, 30.15%)</title><rect x="138.5" y="627.0" width="355.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="141.5" y="638.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 1.34%)</title><rect x="138.5" y="611.0" width="15.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.5" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.34%)</title><rect x="140.5" y="595.0" width="3.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="143.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.84%)</title><rect x="144.4" y="595.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.17%)</title><rect x="146.4" y="579.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.50%)</title><rect x="148.4" y="579.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.50%)</title><rect x="148.4" y="563.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.50%)</title><rect x="148.4" y="547.0" width="5.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="151.4" y="558.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.17%)</title><rect x="152.3" y="531.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="155.3" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.17%)</title><rect x="152.3" y="515.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.3" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (172 samples, 28.81%)</title><rect x="154.3" y="611.0" width="340.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="157.3" y="622.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (172 samples, 28.81%)</title><rect x="154.3" y="595.0" width="340.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="157.3" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (171 samples, 28.64%)</title><rect x="156.3" y="579.0" width="338.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="159.3" y="590.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (171 samples, 28.64%)</title><rect x="156.3" y="563.0" width="338.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="159.3" y="574.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.50%)</title><rect x="158.2" y="547.0" width="6.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="161.2" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="162.2" y="531.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="165.2" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="162.2" y="515.0" width="2.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="165.2" y="526.0"></text>
</g>
<g>
<title>__libc_send (167 samples, 27.97%)</title><rect x="164.2" y="547.0" width="330.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="167.2" y="558.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (159 samples, 26.63%)</title><rect x="180.0" y="531.0" width="314.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="183.0" y="542.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (159 samples, 26.63%)</title><rect x="180.0" y="515.0" width="314.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="183.0" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.17%)</title><rect x="183.9" y="499.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.9" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.17%)</title><rect x="183.9" y="483.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.9" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (155 samples, 25.96%)</title><rect x="185.9" y="499.0" width="306.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="188.9" y="510.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (154 samples, 25.80%)</title><rect x="187.9" y="483.0" width="304.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.9" y="494.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (152 samples, 25.46%)</title><rect x="187.9" y="467.0" width="300.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="190.9" y="478.0">sock_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (152 samples, 25.46%)</title><rect x="187.9" y="451.0" width="300.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="190.9" y="462.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.17%)</title><rect x="187.9" y="435.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.9" y="446.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.17%)</title><rect x="187.9" y="419.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="190.9" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.17%)</title><rect x="189.9" y="435.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.9" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.17%)</title><rect x="189.9" y="419.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="192.9" y="430.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.50%)</title><rect x="191.8" y="435.0" width="6.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="194.8" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.17%)</title><rect x="195.8" y="419.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="198.8" y="430.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.17%)</title><rect x="195.8" y="403.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="198.8" y="414.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.17%)</title><rect x="195.8" y="387.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="198.8" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (147 samples, 24.62%)</title><rect x="197.8" y="435.0" width="290.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="200.8" y="446.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (133 samples, 22.28%)</title><rect x="199.7" y="419.0" width="262.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="202.7" y="430.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (133 samples, 22.28%)</title><rect x="199.7" y="403.0" width="262.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="202.7" y="414.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (122 samples, 20.44%)</title><rect x="203.7" y="387.0" width="241.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.7" y="398.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (115 samples, 19.26%)</title><rect x="213.6" y="371.0" width="227.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="216.6" y="382.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.17%)</title><rect x="215.6" y="355.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="218.6" y="366.0"></text>
</g>
<g>
<title>__sk_dst_check (5 samples, 0.84%)</title><rect x="217.5" y="355.0" width="9.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="220.5" y="366.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.17%)</title><rect x="219.5" y="339.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="222.5" y="350.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.50%)</title><rect x="221.5" y="339.0" width="5.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="224.5" y="350.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="227.4" y="355.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="230.4" y="366.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="227.4" y="339.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="230.4" y="350.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.17%)</title><rect x="227.4" y="323.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="230.4" y="334.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.17%)</title><rect x="227.4" y="307.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="230.4" y="318.0"></text>
</g>
<g>
<title>asm_call_on_stack (1 samples, 0.17%)</title><rect x="227.4" y="291.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="230.4" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.17%)</title><rect x="227.4" y="275.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="230.4" y="286.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.17%)</title><rect x="227.4" y="259.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="230.4" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.17%)</title><rect x="227.4" y="243.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="230.4" y="254.0"></text>
</g>
<g>
<title>ip_output (107 samples, 17.92%)</title><rect x="229.4" y="355.0" width="211.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.4" y="366.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (103 samples, 17.25%)</title><rect x="233.4" y="339.0" width="203.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="236.4" y="350.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 2.18%)</title><rect x="235.3" y="323.0" width="25.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="238.3" y="334.0">_..</text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.17%)</title><rect x="241.3" y="307.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="244.3" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 1.01%)</title><rect x="243.2" y="307.0" width="11.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="246.2" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 1.01%)</title><rect x="243.2" y="291.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="246.2" y="302.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.50%)</title><rect x="247.2" y="275.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.2" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.50%)</title><rect x="247.2" y="259.0" width="5.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="250.2" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.50%)</title><rect x="247.2" y="243.0" width="5.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.2" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.17%)</title><rect x="253.1" y="275.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="256.1" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.50%)</title><rect x="255.1" y="307.0" width="5.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="258.1" y="318.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (3 samples, 0.50%)</title><rect x="255.1" y="291.0" width="5.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="258.1" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (89 samples, 14.91%)</title><rect x="261.0" y="323.0" width="175.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.0" y="334.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq (89 samples, 14.91%)</title><rect x="261.0" y="307.0" width="175.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.0" y="318.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (89 samples, 14.91%)</title><rect x="261.0" y="291.0" width="175.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="264.0" y="302.0">do_softirq_own_stack</text>
</g>
<g>
<title>asm_call_on_stack (89 samples, 14.91%)</title><rect x="261.0" y="275.0" width="175.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="264.0" y="286.0">asm_call_on_stack</text>
</g>
<g>
<title>__softirqentry_text_start (89 samples, 14.91%)</title><rect x="261.0" y="259.0" width="175.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="264.0" y="270.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (86 samples, 14.41%)</title><rect x="267.0" y="243.0" width="169.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="270.0" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.17%)</title><rect x="268.9" y="227.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="271.9" y="238.0"></text>
</g>
<g>
<title>process_backlog (84 samples, 14.07%)</title><rect x="270.9" y="227.0" width="166.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.9" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (82 samples, 13.74%)</title><rect x="274.9" y="211.0" width="162.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="277.9" y="222.0">__netif_receive_skb_o..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.67%)</title><rect x="274.9" y="195.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv (78 samples, 13.07%)</title><rect x="282.8" y="195.0" width="154.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.8" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (78 samples, 13.07%)</title><rect x="282.8" y="179.0" width="154.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="285.8" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (77 samples, 12.90%)</title><rect x="284.7" y="163.0" width="152.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="287.7" y="174.0">ip_local_deliver_fi..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (77 samples, 12.90%)</title><rect x="284.7" y="147.0" width="152.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="287.7" y="158.0">ip_protocol_deliver..</text>
</g>
<g>
<title>tcp_v4_rcv (76 samples, 12.73%)</title><rect x="286.7" y="131.0" width="150.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="289.7" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.50%)</title><rect x="288.7" y="115.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="291.7" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.17%)</title><rect x="292.6" y="99.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="295.6" y="110.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.34%)</title><rect x="294.6" y="115.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="297.6" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.17%)</title><rect x="294.6" y="99.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="297.6" y="110.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.17%)</title><rect x="296.6" y="99.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.6" y="110.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.17%)</title><rect x="298.6" y="115.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="301.6" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (69 samples, 11.56%)</title><rect x="300.6" y="115.0" width="136.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.6" y="126.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (69 samples, 11.56%)</title><rect x="300.6" y="99.0" width="136.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.6" y="110.0">tcp_rcv_established</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.17%)</title><rect x="302.5" y="83.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="305.5" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.17%)</title><rect x="304.5" y="83.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="307.5" y="94.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.17%)</title><rect x="304.5" y="67.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="307.5" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (47 samples, 7.87%)</title><rect x="306.5" y="83.0" width="92.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="309.5" y="94.0">sock_def_re..</text>
</g>
<g>
<title>__wake_up_common_lock (47 samples, 7.87%)</title><rect x="306.5" y="67.0" width="92.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="309.5" y="78.0">__wake_up_c..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.17%)</title><rect x="306.5" y="51.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="309.5" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (46 samples, 7.71%)</title><rect x="308.5" y="51.0" width="90.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="311.5" y="62.0">_raw_spin_..</text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.17%)</title><rect x="397.4" y="35.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="400.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 2.68%)</title><rect x="399.4" y="83.0" width="31.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="402.4" y="94.0">tc..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 1.01%)</title><rect x="405.3" y="67.0" width="11.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.3" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.50%)</title><rect x="405.3" y="51.0" width="5.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="408.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.34%)</title><rect x="405.3" y="35.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="408.3" y="46.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (1 samples, 0.17%)</title><rect x="409.3" y="35.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="412.3" y="46.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.34%)</title><rect x="411.2" y="51.0" width="4.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="414.2" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.17%)</title><rect x="415.2" y="51.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="418.2" y="62.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.17%)</title><rect x="417.2" y="67.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="420.2" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.34%)</title><rect x="419.1" y="67.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="422.1" y="78.0"></text>
</g>
<g>
<title>cache_from_obj (1 samples, 0.17%)</title><rect x="421.1" y="51.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="424.1" y="62.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.17%)</title><rect x="423.1" y="67.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="426.1" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (1 samples, 0.17%)</title><rect x="425.1" y="67.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="428.1" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.17%)</title><rect x="427.1" y="67.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="430.1" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.17%)</title><rect x="429.0" y="67.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="432.0" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.17%)</title><rect x="431.0" y="83.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="434.0" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.34%)</title><rect x="433.0" y="83.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="436.0" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.17%)</title><rect x="435.0" y="67.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="438.0" y="78.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.34%)</title><rect x="436.9" y="339.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="439.9" y="350.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.34%)</title><rect x="436.9" y="323.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="439.9" y="334.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.17%)</title><rect x="438.9" y="307.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="441.9" y="318.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.17%)</title><rect x="438.9" y="291.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.9" y="302.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.34%)</title><rect x="440.9" y="371.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.9" y="382.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.67%)</title><rect x="444.8" y="387.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="447.8" y="398.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.50%)</title><rect x="446.8" y="371.0" width="5.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="449.8" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.50%)</title><rect x="452.7" y="387.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="455.7" y="398.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (2 samples, 0.34%)</title><rect x="458.7" y="387.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="461.7" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.17%)</title><rect x="460.7" y="371.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.7" y="382.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.17%)</title><rect x="460.7" y="355.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="463.7" y="366.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.17%)</title><rect x="462.6" y="419.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="465.6" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.17%)</title><rect x="462.6" y="403.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="465.6" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 1.01%)</title><rect x="464.6" y="419.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.6" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 1.01%)</title><rect x="464.6" y="403.0" width="11.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="467.6" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.17%)</title><rect x="466.6" y="387.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="469.6" y="398.0"></text>
</g>
<g>
<title>__ksize (2 samples, 0.34%)</title><rect x="468.6" y="387.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="471.6" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.34%)</title><rect x="472.5" y="387.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.5" y="398.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.17%)</title><rect x="474.5" y="371.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="477.5" y="382.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (1 samples, 0.17%)</title><rect x="476.5" y="419.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="479.5" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.50%)</title><rect x="478.4" y="419.0" width="6.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="481.4" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.50%)</title><rect x="478.4" y="403.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.4" y="414.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.17%)</title><rect x="482.4" y="387.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="485.4" y="398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.34%)</title><rect x="484.4" y="419.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.4" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.34%)</title><rect x="488.3" y="467.0" width="4.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="491.3" y="478.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.34%)</title><rect x="488.3" y="451.0" width="4.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.3" y="462.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.34%)</title><rect x="488.3" y="435.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="491.3" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.17%)</title><rect x="492.3" y="499.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="495.3" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.17%)</title><rect x="492.3" y="483.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="495.3" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.34%)</title><rect x="494.3" y="627.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.34%)</title><rect x="494.3" y="611.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.17%)</title><rect x="496.2" y="595.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="496.2" y="579.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="499.2" y="590.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.17%)</title><rect x="496.2" y="563.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="499.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (5 samples, 0.84%)</title><rect x="498.2" y="643.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="501.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.84%)</title><rect x="498.2" y="627.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="501.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.17%)</title><rect x="498.2" y="611.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="501.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.indexOf (1 samples, 0.17%)</title><rect x="498.2" y="595.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.17%)</title><rect x="500.2" y="611.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="503.2" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.50%)</title><rect x="502.2" y="611.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.2" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.50%)</title><rect x="502.2" y="595.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.50%)</title><rect x="502.2" y="579.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.34%)</title><rect x="504.1" y="563.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="507.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.17%)</title><rect x="508.1" y="643.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="511.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceImpl.upsert (207 samples, 34.67%)</title><rect x="510.1" y="643.0" width="409.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.1" y="654.0">ru/mail/polis/service/gogun/ServiceImpl.upsert</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (206 samples, 34.51%)</title><rect x="510.1" y="627.0" width="407.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="513.1" y="638.0">ru/mail/polis/dao/gogun/DAOImpl.upsert</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.flush (181 samples, 30.32%)</title><rect x="510.1" y="611.0" width="357.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.1" y="622.0">ru/mail/polis/dao/gogun/DAOImpl.flush</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.serialize (181 samples, 30.32%)</title><rect x="510.1" y="595.0" width="357.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.1" y="606.0">ru/mail/polis/dao/gogun/SSTable.serialize</text>
</g>
<g>
<title>java/io/FileOutputStream.&lt;init&gt; (1 samples, 0.17%)</title><rect x="510.1" y="579.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.17%)</title><rect x="512.0" y="579.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.0" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="512.0" y="563.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.0" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="512.0" y="547.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.0" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="512.0" y="531.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.0" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.17%)</title><rect x="512.0" y="515.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="515.0" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.17%)</title><rect x="514.0" y="579.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="517.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.17%)</title><rect x="514.0" y="563.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="517.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.position (6 samples, 1.01%)</title><rect x="516.0" y="579.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek (6 samples, 1.01%)</title><rect x="516.0" y="563.0" width="11.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.seek0 (6 samples, 1.01%)</title><rect x="516.0" y="547.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.0" y="558.0"></text>
</g>
<g>
<title>llseek@GLIBC_2.2.5 (5 samples, 0.84%)</title><rect x="518.0" y="531.0" width="9.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="521.0" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.67%)</title><rect x="519.9" y="515.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.9" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.67%)</title><rect x="519.9" y="499.0" width="8.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.9" y="510.0"></text>
</g>
<g>
<title>ksys_lseek (1 samples, 0.17%)</title><rect x="525.9" y="483.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="528.9" y="494.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.17%)</title><rect x="525.9" y="467.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="528.9" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (172 samples, 28.81%)</title><rect x="527.9" y="579.0" width="339.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.9" y="590.0">sun/nio/ch/FileChannelImpl.write</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (4 samples, 0.67%)</title><rect x="529.8" y="563.0" width="7.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.8" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.67%)</title><rect x="529.8" y="547.0" width="7.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="532.8" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.67%)</title><rect x="529.8" y="531.0" width="7.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="532.8" y="542.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.67%)</title><rect x="529.8" y="515.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.8" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.67%)</title><rect x="529.8" y="499.0" width="7.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.34%)</title><rect x="537.7" y="563.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.7" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.34%)</title><rect x="537.7" y="547.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="540.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (162 samples, 27.14%)</title><rect x="541.7" y="563.0" width="320.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.7" y="574.0">sun/nio/ch/IOUtil.write</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (139 samples, 23.28%)</title><rect x="541.7" y="547.0" width="274.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.7" y="558.0">sun/nio/ch/IOUtil.writeFromNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (139 samples, 23.28%)</title><rect x="541.7" y="531.0" width="274.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="544.7" y="542.0">sun/nio/ch/FileDispatcherImpl.write</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (139 samples, 23.28%)</title><rect x="541.7" y="515.0" width="274.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="544.7" y="526.0">sun/nio/ch/FileDispatcherImpl.write0</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/libnio.so (1 samples, 0.17%)</title><rect x="547.6" y="499.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="550.6" y="510.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.50%)</title><rect x="549.6" y="499.0" width="5.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="552.6" y="510.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.34%)</title><rect x="555.5" y="499.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="558.5" y="510.0"></text>
</g>
<g>
<title>__write (130 samples, 21.78%)</title><rect x="559.5" y="499.0" width="256.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="562.5" y="510.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (107 samples, 17.92%)</title><rect x="604.9" y="483.0" width="211.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.9" y="494.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (107 samples, 17.92%)</title><rect x="604.9" y="467.0" width="211.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="607.9" y="478.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (4 samples, 0.67%)</title><rect x="650.4" y="451.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="653.4" y="462.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.67%)</title><rect x="650.4" y="435.0" width="7.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="653.4" y="446.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.17%)</title><rect x="656.3" y="419.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="659.3" y="430.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.17%)</title><rect x="658.3" y="451.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="661.3" y="462.0"></text>
</g>
<g>
<title>ksys_write (70 samples, 11.73%)</title><rect x="660.3" y="451.0" width="138.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="663.3" y="462.0">ksys_write</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.84%)</title><rect x="662.3" y="435.0" width="9.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="665.3" y="446.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.50%)</title><rect x="662.3" y="419.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="665.3" y="430.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.34%)</title><rect x="664.2" y="403.0" width="4.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="667.2" y="414.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.34%)</title><rect x="668.2" y="419.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="671.2" y="430.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.67%)</title><rect x="672.1" y="435.0" width="8.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="675.1" y="446.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.17%)</title><rect x="680.1" y="435.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="683.1" y="446.0"></text>
</g>
<g>
<title>vfs_write (59 samples, 9.88%)</title><rect x="682.0" y="435.0" width="116.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="685.0" y="446.0">vfs_write</text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.34%)</title><rect x="684.0" y="419.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="687.0" y="430.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.34%)</title><rect x="688.0" y="419.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.0" y="430.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.17%)</title><rect x="688.0" y="403.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="691.0" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.17%)</title><rect x="689.9" y="403.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="692.9" y="414.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.34%)</title><rect x="691.9" y="419.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="694.9" y="430.0"></text>
</g>
<g>
<title>fsnotify_parent (2 samples, 0.34%)</title><rect x="695.9" y="419.0" width="3.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="698.9" y="430.0"></text>
</g>
<g>
<title>new_sync_write (50 samples, 8.38%)</title><rect x="699.8" y="419.0" width="98.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="702.8" y="430.0">new_sync_write</text>
</g>
<g>
<title>generic_file_write_iter (45 samples, 7.54%)</title><rect x="707.7" y="403.0" width="89.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="710.7" y="414.0">generic_fi..</text>
</g>
<g>
<title>__generic_file_write_iter (37 samples, 6.20%)</title><rect x="711.7" y="387.0" width="73.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="714.7" y="398.0">__generi..</text>
</g>
<g>
<title>generic_perform_write (36 samples, 6.03%)</title><rect x="713.7" y="371.0" width="71.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="716.7" y="382.0">generic_..</text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.17%)</title><rect x="717.6" y="355.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="720.6" y="366.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (10 samples, 1.68%)</title><rect x="719.6" y="355.0" width="19.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="722.6" y="366.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.34%)</title><rect x="725.5" y="339.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="728.5" y="350.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.50%)</title><rect x="729.5" y="339.0" width="5.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="732.5" y="350.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.34%)</title><rect x="735.4" y="339.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="738.4" y="350.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.17%)</title><rect x="737.4" y="323.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="740.4" y="334.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.17%)</title><rect x="739.3" y="355.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="742.3" y="366.0"></text>
</g>
<g>
<title>shmem_write_begin (16 samples, 2.68%)</title><rect x="741.3" y="355.0" width="31.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="744.3" y="366.0">sh..</text>
</g>
<g>
<title>shmem_getpage_gfp (14 samples, 2.35%)</title><rect x="745.3" y="339.0" width="27.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="748.3" y="350.0">s..</text>
</g>
<g>
<title>find_lock_entry (11 samples, 1.84%)</title><rect x="747.3" y="323.0" width="21.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="750.3" y="334.0">f..</text>
</g>
<g>
<title>find_get_entry (9 samples, 1.51%)</title><rect x="747.3" y="307.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="750.3" y="318.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.17%)</title><rect x="757.1" y="291.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="760.1" y="302.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.50%)</title><rect x="759.1" y="291.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="762.1" y="302.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.34%)</title><rect x="765.0" y="307.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="768.0" y="318.0"></text>
</g>
<g>
<title>shmem_add_to_page_cache (1 samples, 0.17%)</title><rect x="769.0" y="323.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="772.0" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.17%)</title><rect x="769.0" y="307.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="772.0" y="318.0"></text>
</g>
<g>
<title>shmem_alloc_and_acct_page (1 samples, 0.17%)</title><rect x="771.0" y="323.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="774.0" y="334.0"></text>
</g>
<g>
<title>shmem_alloc_page (1 samples, 0.17%)</title><rect x="771.0" y="307.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="774.0" y="318.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.17%)</title><rect x="771.0" y="291.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="774.0" y="302.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.17%)</title><rect x="771.0" y="275.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="774.0" y="286.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.17%)</title><rect x="771.0" y="259.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="774.0" y="270.0"></text>
</g>
<g>
<title>shmem_write_end (6 samples, 1.01%)</title><rect x="772.9" y="355.0" width="11.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="775.9" y="366.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (1 samples, 0.17%)</title><rect x="774.9" y="339.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.9" y="350.0"></text>
</g>
<g>
<title>set_page_dirty (2 samples, 0.34%)</title><rect x="776.9" y="339.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.9" y="350.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.34%)</title><rect x="776.9" y="323.0" width="4.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="779.9" y="334.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.34%)</title><rect x="780.9" y="339.0" width="3.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="783.9" y="350.0"></text>
</g>
<g>
<title>down_write (2 samples, 0.34%)</title><rect x="784.8" y="387.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="787.8" y="398.0"></text>
</g>
<g>
<title>up_write (4 samples, 0.67%)</title><rect x="788.8" y="387.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="791.8" y="398.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.17%)</title><rect x="796.7" y="403.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="799.7" y="414.0"></text>
</g>
<g>
<title>syscall_trace_enter (9 samples, 1.51%)</title><rect x="798.6" y="451.0" width="17.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="801.6" y="462.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.34%)</title><rect x="812.5" y="435.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="815.5" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (23 samples, 3.85%)</title><rect x="816.4" y="547.0" width="45.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="819.4" y="558.0">sun/..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.84%)</title><rect x="818.4" y="531.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="821.4" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.84%)</title><rect x="818.4" y="515.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="821.4" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (4 samples, 0.67%)</title><rect x="820.4" y="499.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.4" y="510.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.nextIndex (1 samples, 0.17%)</title><rect x="826.3" y="483.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.3" y="494.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (5 samples, 0.84%)</title><rect x="828.3" y="531.0" width="9.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="831.3" y="542.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.17%)</title><rect x="838.2" y="531.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="841.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (10 samples, 1.68%)</title><rect x="840.2" y="531.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.2" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.84%)</title><rect x="850.0" y="515.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.0" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.84%)</title><rect x="850.0" y="499.0" width="9.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.0" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.84%)</title><rect x="850.0" y="483.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="853.0" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.34%)</title><rect x="856.0" y="467.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="859.0" y="478.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.17%)</title><rect x="859.9" y="531.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="862.9" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.50%)</title><rect x="861.9" y="563.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="864.9" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.50%)</title><rect x="861.9" y="547.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="864.9" y="558.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.17%)</title><rect x="865.8" y="531.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="868.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (25 samples, 4.19%)</title><rect x="867.8" y="611.0" width="49.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="870.8" y="622.0">ru/ma..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (2 samples, 0.34%)</title><rect x="869.8" y="595.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="872.8" y="606.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.34%)</title><rect x="869.8" y="579.0" width="4.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="872.8" y="590.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.17%)</title><rect x="873.8" y="595.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="876.8" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (21 samples, 3.52%)</title><rect x="875.7" y="595.0" width="41.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="878.7" y="606.0">jav..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 2.51%)</title><rect x="885.6" y="579.0" width="29.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="888.6" y="590.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (12 samples, 2.01%)</title><rect x="891.5" y="563.0" width="23.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="894.5" y="574.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.17%)</title><rect x="891.5" y="547.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.5" y="558.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 1.17%)</title><rect x="893.5" y="547.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.5" y="558.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.67%)</title><rect x="899.4" y="531.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="902.4" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.17%)</title><rect x="905.4" y="515.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.4" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.67%)</title><rect x="907.4" y="547.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="910.4" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.50%)</title><rect x="907.4" y="531.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="910.4" y="542.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.17%)</title><rect x="911.3" y="515.0" width="2.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="914.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.17%)</title><rect x="913.3" y="531.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.17%)</title><rect x="915.3" y="579.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="918.3" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.parentOf (1 samples, 0.17%)</title><rect x="915.3" y="563.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceImpl.getBuffer (1 samples, 0.17%)</title><rect x="917.2" y="627.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.17%)</title><rect x="917.2" y="611.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.17%)</title><rect x="917.2" y="595.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="917.2" y="579.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="917.2" y="563.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.2" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.17%)</title><rect x="917.2" y="547.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.2" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.17%)</title><rect x="917.2" y="531.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="920.2" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.17%)</title><rect x="917.2" y="515.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.2" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.17%)</title><rect x="917.2" y="499.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.2" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 1.34%)</title><rect x="919.2" y="691.0" width="15.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="922.2" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.67%)</title><rect x="919.2" y="675.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.67%)</title><rect x="919.2" y="659.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.2" y="670.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.17%)</title><rect x="925.1" y="643.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.1" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.67%)</title><rect x="927.1" y="675.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="930.1" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.17%)</title><rect x="933.0" y="659.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="936.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 1.01%)</title><rect x="935.0" y="691.0" width="11.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="938.0" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 1.01%)</title><rect x="935.0" y="675.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="938.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 1.01%)</title><rect x="935.0" y="659.0" width="11.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="938.0" y="670.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.17%)</title><rect x="941.0" y="643.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.17%)</title><rect x="942.9" y="643.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.17%)</title><rect x="942.9" y="627.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.9" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (1 samples, 0.17%)</title><rect x="942.9" y="611.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.17%)</title><rect x="944.9" y="643.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.17%)</title><rect x="944.9" y="627.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.17%)</title><rect x="946.9" y="691.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 1.01%)</title><rect x="948.9" y="691.0" width="11.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.67%)</title><rect x="948.9" y="675.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="951.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.17%)</title><rect x="948.9" y="659.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="951.9" y="670.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.17%)</title><rect x="950.8" y="659.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="953.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.17%)</title><rect x="950.8" y="643.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="953.8" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.17%)</title><rect x="950.8" y="627.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.34%)</title><rect x="952.8" y="659.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.8" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.34%)</title><rect x="952.8" y="643.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.34%)</title><rect x="952.8" y="627.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.8" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (2 samples, 0.34%)</title><rect x="952.8" y="611.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.34%)</title><rect x="956.8" y="675.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="959.8" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.34%)</title><rect x="956.8" y="659.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.34%)</title><rect x="956.8" y="643.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="959.8" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.34%)</title><rect x="956.8" y="627.0" width="3.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="959.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.50%)</title><rect x="960.7" y="691.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="963.7" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.50%)</title><rect x="960.7" y="675.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (33 samples, 5.53%)</title><rect x="966.6" y="707.0" width="65.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.6" y="718.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (33 samples, 5.53%)</title><rect x="966.6" y="691.0" width="65.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.6" y="702.0">one/nio..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (2 samples, 0.34%)</title><rect x="970.6" y="675.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="973.6" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 1.68%)</title><rect x="974.6" y="675.0" width="19.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="977.6" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (5 samples, 0.84%)</title><rect x="974.6" y="659.0" width="9.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="977.6" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="982.5" y="643.0" width="1.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="985.5" y="654.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.84%)</title><rect x="984.4" y="659.0" width="9.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="987.4" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.17%)</title><rect x="994.3" y="675.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="997.3" y="686.0"></text>
</g>
<g>
<title>__libc_recv (18 samples, 3.02%)</title><rect x="996.3" y="675.0" width="35.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="999.3" y="686.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 1.84%)</title><rect x="1010.1" y="659.0" width="21.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1013.1" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 1.84%)</title><rect x="1010.1" y="643.0" width="21.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1013.1" y="654.0">d..</text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 1.17%)</title><rect x="1018.0" y="627.0" width="13.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1021.0" y="638.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 1.17%)</title><rect x="1018.0" y="611.0" width="13.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1021.0" y="622.0"></text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 1.17%)</title><rect x="1018.0" y="595.0" width="13.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1021.0" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (7 samples, 1.17%)</title><rect x="1018.0" y="579.0" width="13.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1021.0" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.34%)</title><rect x="1022.0" y="563.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1025.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.34%)</title><rect x="1022.0" y="547.0" width="3.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1025.0" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.17%)</title><rect x="1025.9" y="563.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1028.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.17%)</title><rect x="1025.9" y="547.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1028.9" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.34%)</title><rect x="1027.9" y="563.0" width="4.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1030.9" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.17%)</title><rect x="1029.9" y="547.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1032.9" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.17%)</title><rect x="1029.9" y="531.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.9" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.17%)</title><rect x="1029.9" y="515.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1032.9" y="526.0"></text>
</g>
<g>
<title>start_thread (80 samples, 13.40%)</title><rect x="1031.9" y="755.0" width="158.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1034.9" y="766.0">start_thread</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (80 samples, 13.40%)</title><rect x="1031.9" y="739.0" width="158.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1034.9" y="750.0">/usr/lib/jvm/java-11..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (80 samples, 13.40%)</title><rect x="1031.9" y="723.0" width="158.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1034.9" y="734.0">/usr/lib/jvm/java-11..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (80 samples, 13.40%)</title><rect x="1031.9" y="707.0" width="158.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1034.9" y="718.0">/usr/lib/jvm/java-11..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (80 samples, 13.40%)</title><rect x="1031.9" y="691.0" width="158.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1034.9" y="702.0">/usr/lib/jvm/java-11..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (80 samples, 13.40%)</title><rect x="1031.9" y="675.0" width="158.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1034.9" y="686.0">/usr/lib/jvm/java-11..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (78 samples, 13.07%)</title><rect x="1035.8" y="659.0" width="154.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1038.8" y="670.0">/usr/lib/jvm/java-11..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (32 samples, 5.36%)</title><rect x="1126.8" y="643.0" width="63.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1129.8" y="654.0">/usr/li..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (13 samples, 2.18%)</title><rect x="1164.3" y="627.0" width="25.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1167.3" y="638.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (9 samples, 1.51%)</title><rect x="1172.2" y="611.0" width="17.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1175.2" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (9 samples, 1.51%)</title><rect x="1172.2" y="595.0" width="17.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1175.2" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (6 samples, 1.01%)</title><rect x="1178.1" y="579.0" width="11.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1181.1" y="590.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (4 samples, 0.67%)</title><rect x="1182.1" y="563.0" width="7.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1185.1" y="574.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (3 samples, 0.50%)</title><rect x="1184.1" y="547.0" width="5.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1187.1" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (2 samples, 0.34%)</title><rect x="1186.0" y="531.0" width="4.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1189.0" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="515.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1191.0" y="526.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="499.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1191.0" y="510.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="483.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.0" y="494.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="467.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1191.0" y="478.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="451.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1191.0" y="462.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="435.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.0" y="446.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="419.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1191.0" y="430.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.17%)</title><rect x="1188.0" y="403.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1191.0" y="414.0"></text>
</g>
</g>
</svg>
