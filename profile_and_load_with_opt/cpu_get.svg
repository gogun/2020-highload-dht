<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (873 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="739.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="723.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="707.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="691.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="675.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="659.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="643.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="627.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="611.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="595.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="10.0" y="579.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 0.23%)</title><rect x="11.4" y="739.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 0.23%)</title><rect x="11.4" y="723.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 0.23%)</title><rect x="11.4" y="707.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.4" y="718.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run (2 samples, 0.23%)</title><rect x="11.4" y="691.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.4" y="702.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.23%)</title><rect x="11.4" y="675.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="14.4" y="686.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler$$Lambda$114/809496661.run (2 samples, 0.23%)</title><rect x="11.4" y="659.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.4" y="670.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.lambda$run$0 (2 samples, 0.23%)</title><rect x="11.4" y="643.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.4" y="654.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport$ConnectionHandler.run0 (2 samples, 0.23%)</title><rect x="11.4" y="627.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.4" y="638.0"></text>
</g>
<g>
<title>sun/rmi/transport/tcp/TCPTransport.handleMessages (2 samples, 0.23%)</title><rect x="11.4" y="611.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.4" y="622.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.serviceCall (1 samples, 0.11%)</title><rect x="12.7" y="595.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.7" y="606.0"></text>
</g>
<g>
<title>sun/rmi/transport/Transport.setContextClassLoader (1 samples, 0.11%)</title><rect x="12.7" y="579.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.7" y="590.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.11%)</title><rect x="12.7" y="563.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.7" y="574.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="12.7" y="547.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="15.7" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="12.7" y="531.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.7" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="12.7" y="515.0" width="1.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="15.7" y="526.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="12.7" y="499.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="15.7" y="510.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (869 samples, 99.54%)</title><rect x="14.1" y="739.0" width="1174.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="17.1" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.34%)</title><rect x="14.1" y="723.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.11%)</title><rect x="14.1" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.access$100 (1 samples, 0.11%)</title><rect x="14.1" y="691.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="17.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.23%)</title><rect x="15.4" y="707.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.4" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.23%)</title><rect x="15.4" y="691.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="18.4" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (866 samples, 99.20%)</title><rect x="18.1" y="723.0" width="1170.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.1" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (866 samples, 99.20%)</title><rect x="18.1" y="707.0" width="1170.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.1" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (861 samples, 98.63%)</title><rect x="19.5" y="691.0" width="1163.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.5" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (860 samples, 98.51%)</title><rect x="19.5" y="675.0" width="1162.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.5" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (860 samples, 98.51%)</title><rect x="19.5" y="659.0" width="1162.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="22.5" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (859 samples, 98.40%)</title><rect x="19.5" y="643.0" width="1161.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="22.5" y="654.0">RequestHandler1_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (19 samples, 2.18%)</title><rect x="19.5" y="627.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.5" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (19 samples, 2.18%)</title><rect x="19.5" y="611.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="22.5" y="622.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.11%)</title><rect x="19.5" y="595.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.5" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="19.5" y="579.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="22.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (18 samples, 2.06%)</title><rect x="20.8" y="595.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.8" y="606.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (18 samples, 2.06%)</title><rect x="20.8" y="579.0" width="24.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.8" y="590.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (18 samples, 2.06%)</title><rect x="20.8" y="563.0" width="24.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="23.8" y="574.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (18 samples, 2.06%)</title><rect x="20.8" y="547.0" width="24.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.8" y="558.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.11%)</title><rect x="20.8" y="531.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="23.8" y="542.0"></text>
</g>
<g>
<title>__libc_send (17 samples, 1.95%)</title><rect x="22.2" y="531.0" width="22.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="25.2" y="542.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 1.95%)</title><rect x="22.2" y="515.0" width="22.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="25.2" y="526.0">e..</text>
</g>
<g>
<title>do_syscall_64 (17 samples, 1.95%)</title><rect x="22.2" y="499.0" width="22.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="25.2" y="510.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (16 samples, 1.83%)</title><rect x="23.5" y="483.0" width="21.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.5" y="494.0">_..</text>
</g>
<g>
<title>__sys_sendto (16 samples, 1.83%)</title><rect x="23.5" y="467.0" width="21.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="26.5" y="478.0">_..</text>
</g>
<g>
<title>sock_sendmsg (16 samples, 1.83%)</title><rect x="23.5" y="451.0" width="21.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.5" y="462.0">s..</text>
</g>
<g>
<title>tcp_sendmsg (16 samples, 1.83%)</title><rect x="23.5" y="435.0" width="21.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="26.5" y="446.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (16 samples, 1.83%)</title><rect x="23.5" y="419.0" width="21.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="26.5" y="430.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (14 samples, 1.60%)</title><rect x="23.5" y="403.0" width="18.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="26.5" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (14 samples, 1.60%)</title><rect x="23.5" y="387.0" width="18.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="26.5" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 1.60%)</title><rect x="23.5" y="371.0" width="18.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="26.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 1.49%)</title><rect x="23.5" y="355.0" width="17.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="26.5" y="366.0"></text>
</g>
<g>
<title>ip_output (12 samples, 1.37%)</title><rect x="24.9" y="339.0" width="16.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.9" y="350.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.11%)</title><rect x="24.9" y="323.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="27.9" y="334.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.11%)</title><rect x="24.9" y="307.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.9" y="318.0"></text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 1.15%)</title><rect x="26.2" y="323.0" width="13.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.2" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.23%)</title><rect x="26.2" y="307.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="29.2" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.11%)</title><rect x="27.6" y="291.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="30.6" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (8 samples, 0.92%)</title><rect x="28.9" y="307.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="31.9" y="318.0"></text>
</g>
<g>
<title>do_softirq (8 samples, 0.92%)</title><rect x="28.9" y="291.0" width="10.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="31.9" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (8 samples, 0.92%)</title><rect x="28.9" y="275.0" width="10.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="31.9" y="286.0"></text>
</g>
<g>
<title>asm_call_on_stack (8 samples, 0.92%)</title><rect x="28.9" y="259.0" width="10.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="31.9" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (8 samples, 0.92%)</title><rect x="28.9" y="243.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="31.9" y="254.0"></text>
</g>
<g>
<title>net_rx_action (7 samples, 0.80%)</title><rect x="30.3" y="227.0" width="9.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="33.3" y="238.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 0.69%)</title><rect x="31.6" y="211.0" width="8.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="34.6" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 0.69%)</title><rect x="31.6" y="195.0" width="8.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="34.6" y="206.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.11%)</title><rect x="31.6" y="179.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="34.6" y="190.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 0.57%)</title><rect x="33.0" y="179.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="36.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 0.57%)</title><rect x="33.0" y="163.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="36.0" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 0.57%)</title><rect x="33.0" y="147.0" width="6.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.0" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 0.57%)</title><rect x="33.0" y="131.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="36.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 0.57%)</title><rect x="33.0" y="115.0" width="6.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.0" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.57%)</title><rect x="33.0" y="99.0" width="6.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="36.0" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.57%)</title><rect x="33.0" y="83.0" width="6.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.0" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.34%)</title><rect x="33.0" y="67.0" width="4.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.0" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.34%)</title><rect x="33.0" y="51.0" width="4.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.0" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.34%)</title><rect x="33.0" y="35.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="36.0" y="46.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.23%)</title><rect x="37.0" y="67.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="40.0" y="78.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.11%)</title><rect x="38.4" y="51.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="41.4" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.11%)</title><rect x="38.4" y="35.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="41.4" y="46.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.11%)</title><rect x="39.7" y="323.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="42.7" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.11%)</title><rect x="39.7" y="307.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="42.7" y="318.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.11%)</title><rect x="41.1" y="355.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="44.1" y="366.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.11%)</title><rect x="42.4" y="403.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="45.4" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.11%)</title><rect x="42.4" y="387.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="45.4" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.11%)</title><rect x="42.4" y="371.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="45.4" y="382.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (1 samples, 0.11%)</title><rect x="43.8" y="403.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="46.8" y="414.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.11%)</title><rect x="43.8" y="387.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="46.8" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.11%)</title><rect x="45.1" y="627.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.11%)</title><rect x="45.1" y="611.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="48.1" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.11%)</title><rect x="45.1" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="48.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.11%)</title><rect x="45.1" y="579.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="48.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceImpl.get (839 samples, 96.11%)</title><rect x="46.5" y="627.0" width="1134.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.5" y="638.0">ru/mail/polis/service/gogun/ServiceImpl.get</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (839 samples, 96.11%)</title><rect x="46.5" y="611.0" width="1134.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.5" y="622.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (15 samples, 1.72%)</title><rect x="46.5" y="595.0" width="20.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.5" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (15 samples, 1.72%)</title><rect x="46.5" y="579.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.5" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (15 samples, 1.72%)</title><rect x="46.5" y="563.0" width="20.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (15 samples, 1.72%)</title><rect x="46.5" y="547.0" width="20.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (15 samples, 1.72%)</title><rect x="46.5" y="531.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (15 samples, 1.72%)</title><rect x="46.5" y="515.0" width="20.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (15 samples, 1.72%)</title><rect x="46.5" y="499.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (15 samples, 1.72%)</title><rect x="46.5" y="483.0" width="20.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (15 samples, 1.72%)</title><rect x="46.5" y="467.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="49.5" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (15 samples, 1.72%)</title><rect x="46.5" y="451.0" width="20.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.5" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 1.72%)</title><rect x="46.5" y="435.0" width="20.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.5" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (15 samples, 1.72%)</title><rect x="46.5" y="419.0" width="20.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="49.5" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (15 samples, 1.72%)</title><rect x="46.5" y="403.0" width="20.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.5" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.11%)</title><rect x="46.5" y="387.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.5" y="398.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.11%)</title><rect x="46.5" y="371.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.5" y="382.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.11%)</title><rect x="46.5" y="355.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.5" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (1 samples, 0.11%)</title><rect x="46.5" y="339.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.5" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.11%)</title><rect x="46.5" y="323.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (14 samples, 1.60%)</title><rect x="47.8" y="387.0" width="19.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (14 samples, 1.60%)</title><rect x="47.8" y="371.0" width="19.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (14 samples, 1.60%)</title><rect x="47.8" y="355.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.8" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (4 samples, 0.46%)</title><rect x="47.8" y="339.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.46%)</title><rect x="47.8" y="323.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.46%)</title><rect x="47.8" y="307.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.46%)</title><rect x="47.8" y="291.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.46%)</title><rect x="47.8" y="275.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.46%)</title><rect x="47.8" y="259.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="50.8" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.46%)</title><rect x="47.8" y="243.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.8" y="254.0"></text>
</g>
<g>
<title>pread (4 samples, 0.46%)</title><rect x="47.8" y="227.0" width="5.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="50.8" y="238.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.34%)</title><rect x="49.2" y="211.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="52.2" y="222.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.34%)</title><rect x="49.2" y="195.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="52.2" y="206.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.11%)</title><rect x="51.9" y="179.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.9" y="190.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.11%)</title><rect x="51.9" y="163.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.9" y="174.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.11%)</title><rect x="51.9" y="147.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="54.9" y="158.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.11%)</title><rect x="51.9" y="131.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="54.9" y="142.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="51.9" y="115.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="54.9" y="126.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="51.9" y="99.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="54.9" y="110.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (10 samples, 1.15%)</title><rect x="53.3" y="339.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="56.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (10 samples, 1.15%)</title><rect x="53.3" y="323.0" width="13.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="56.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (9 samples, 1.03%)</title><rect x="53.3" y="307.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (9 samples, 1.03%)</title><rect x="53.3" y="291.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.3" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (9 samples, 1.03%)</title><rect x="53.3" y="275.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="56.3" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (9 samples, 1.03%)</title><rect x="53.3" y="259.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.3" y="270.0"></text>
</g>
<g>
<title>pread (9 samples, 1.03%)</title><rect x="53.3" y="243.0" width="12.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="56.3" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.80%)</title><rect x="56.0" y="227.0" width="9.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.0" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.80%)</title><rect x="56.0" y="211.0" width="9.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="59.0" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3 samples, 0.34%)</title><rect x="58.7" y="195.0" width="4.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="61.7" y="206.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.11%)</title><rect x="58.7" y="179.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="61.7" y="190.0"></text>
</g>
<g>
<title>vfs_read (2 samples, 0.23%)</title><rect x="60.0" y="179.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="63.0" y="190.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.11%)</title><rect x="61.4" y="163.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="64.4" y="174.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.11%)</title><rect x="61.4" y="147.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="64.4" y="158.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (1 samples, 0.11%)</title><rect x="61.4" y="131.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="64.4" y="142.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.11%)</title><rect x="61.4" y="115.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="64.4" y="126.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.11%)</title><rect x="61.4" y="99.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="64.4" y="110.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="62.7" y="195.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="65.7" y="206.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="64.1" y="195.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="67.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.11%)</title><rect x="65.4" y="307.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="68.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.iterator (824 samples, 94.39%)</title><rect x="66.8" y="595.0" width="1113.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.8" y="606.0">ru/mail/polis/dao/gogun/DAOImpl.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (824 samples, 94.39%)</title><rect x="66.8" y="579.0" width="1113.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="69.8" y="590.0">ru/mail/polis/dao/gogun/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (42 samples, 4.81%)</title><rect x="66.8" y="563.0" width="56.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="69.8" y="574.0">com/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (42 samples, 4.81%)</title><rect x="66.8" y="547.0" width="56.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.8" y="558.0">com/go..</text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.11%)</title><rect x="66.8" y="531.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.8" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.11%)</title><rect x="66.8" y="515.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (41 samples, 4.70%)</title><rect x="68.1" y="531.0" width="55.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.1" y="542.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (40 samples, 4.58%)</title><rect x="69.5" y="515.0" width="54.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.5" y="526.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (1 samples, 0.11%)</title><rect x="69.5" y="499.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.5" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.11%)</title><rect x="69.5" y="483.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.5" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (39 samples, 4.47%)</title><rect x="70.8" y="499.0" width="52.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.8" y="510.0">java/..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (39 samples, 4.47%)</title><rect x="70.8" y="483.0" width="52.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.8" y="494.0">java/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 4.47%)</title><rect x="70.8" y="467.0" width="52.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.8" y="478.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (39 samples, 4.47%)</title><rect x="70.8" y="451.0" width="52.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="73.8" y="462.0">com/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (39 samples, 4.47%)</title><rect x="70.8" y="435.0" width="52.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="73.8" y="446.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (38 samples, 4.35%)</title><rect x="72.2" y="419.0" width="51.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.2" y="430.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (38 samples, 4.35%)</title><rect x="72.2" y="403.0" width="51.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.2" y="414.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (38 samples, 4.35%)</title><rect x="72.2" y="387.0" width="51.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.2" y="398.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (16 samples, 1.83%)</title><rect x="72.2" y="371.0" width="21.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.2" y="382.0">r..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 1.83%)</title><rect x="72.2" y="355.0" width="21.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.2" y="366.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 1.83%)</title><rect x="72.2" y="339.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.2" y="350.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 1.72%)</title><rect x="72.2" y="323.0" width="20.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 1.49%)</title><rect x="72.2" y="307.0" width="17.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 1.49%)</title><rect x="72.2" y="291.0" width="17.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 1.49%)</title><rect x="72.2" y="275.0" width="17.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.2" y="286.0"></text>
</g>
<g>
<title>pread (13 samples, 1.49%)</title><rect x="72.2" y="259.0" width="17.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="75.2" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.80%)</title><rect x="80.3" y="243.0" width="9.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="83.3" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.80%)</title><rect x="80.3" y="227.0" width="9.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="83.3" y="238.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.46%)</title><rect x="83.0" y="211.0" width="5.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="86.0" y="222.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.46%)</title><rect x="83.0" y="195.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="86.0" y="206.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.11%)</title><rect x="83.0" y="179.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.0" y="190.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.23%)</title><rect x="84.3" y="179.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.3" y="190.0"></text>
</g>
<g>
<title>shmem_file_read_iter (2 samples, 0.23%)</title><rect x="84.3" y="163.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="87.3" y="174.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="84.3" y="147.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="87.3" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="84.3" y="131.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.3" y="142.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (1 samples, 0.11%)</title><rect x="85.7" y="147.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="88.7" y="158.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.11%)</title><rect x="85.7" y="131.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="88.7" y="142.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.11%)</title><rect x="85.7" y="115.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="88.7" y="126.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.11%)</title><rect x="87.0" y="179.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.0" y="190.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.11%)</title><rect x="88.4" y="211.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="91.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.23%)</title><rect x="89.7" y="307.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.11%)</title><rect x="89.7" y="291.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.7" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.11%)</title><rect x="89.7" y="275.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.11%)</title><rect x="91.1" y="291.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.11%)</title><rect x="92.5" y="323.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="95.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (22 samples, 2.52%)</title><rect x="93.8" y="371.0" width="29.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.8" y="382.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (22 samples, 2.52%)</title><rect x="93.8" y="355.0" width="29.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.8" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.11%)</title><rect x="93.8" y="339.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.8" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.11%)</title><rect x="93.8" y="323.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="96.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (21 samples, 2.41%)</title><rect x="95.2" y="339.0" width="28.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="98.2" y="350.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (18 samples, 2.06%)</title><rect x="95.2" y="323.0" width="24.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="98.2" y="334.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 2.06%)</title><rect x="95.2" y="307.0" width="24.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.2" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 2.06%)</title><rect x="95.2" y="291.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.2" y="302.0">s..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/libnio.so (1 samples, 0.11%)</title><rect x="95.2" y="275.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="98.2" y="286.0"></text>
</g>
<g>
<title>pread (17 samples, 1.95%)</title><rect x="96.5" y="275.0" width="23.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="99.5" y="286.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 1.60%)</title><rect x="100.6" y="259.0" width="18.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="103.6" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 1.60%)</title><rect x="100.6" y="243.0" width="18.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.6" y="254.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.92%)</title><rect x="104.6" y="227.0" width="10.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.6" y="238.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.11%)</title><rect x="104.6" y="211.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="107.6" y="222.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.80%)</title><rect x="106.0" y="211.0" width="9.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="109.0" y="222.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.57%)</title><rect x="106.0" y="195.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="109.0" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (3 samples, 0.34%)</title><rect x="108.7" y="179.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="111.7" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="108.7" y="163.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="111.7" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.11%)</title><rect x="108.7" y="147.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="111.7" y="158.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.23%)</title><rect x="110.0" y="163.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.0" y="174.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.23%)</title><rect x="110.0" y="147.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="113.0" y="158.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.23%)</title><rect x="110.0" y="131.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="113.0" y="142.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.23%)</title><rect x="112.7" y="195.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="115.7" y="206.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.11%)</title><rect x="114.1" y="179.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="117.1" y="190.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.34%)</title><rect x="115.4" y="227.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="118.4" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.34%)</title><rect x="119.5" y="323.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.5" y="334.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="119.5" y="307.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="122.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.23%)</title><rect x="120.8" y="307.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.8" y="318.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (767 samples, 87.86%)</title><rect x="123.5" y="563.0" width="1036.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.5" y="574.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$131/221244942.accept (767 samples, 87.86%)</title><rect x="123.5" y="547.0" width="1036.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="126.5" y="558.0">ru/mail/polis/dao/gogun/DAOImpl$$Lambda$131/221244942.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$4 (767 samples, 87.86%)</title><rect x="123.5" y="531.0" width="1036.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.5" y="542.0">ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$4</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (767 samples, 87.86%)</title><rect x="123.5" y="515.0" width="1036.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.5" y="526.0">ru/mail/polis/dao/gogun/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (767 samples, 87.86%)</title><rect x="123.5" y="499.0" width="1036.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.5" y="510.0">ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (767 samples, 87.86%)</title><rect x="123.5" y="483.0" width="1036.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="126.5" y="494.0">ru/mail/polis/dao/gogun/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.46%)</title><rect x="126.2" y="467.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.2" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.11%)</title><rect x="126.2" y="451.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.2" y="462.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.11%)</title><rect x="126.2" y="435.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="129.2" y="446.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.34%)</title><rect x="127.6" y="451.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="130.3" y="435.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (761 samples, 87.17%)</title><rect x="131.6" y="467.0" width="1028.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="134.6" y="478.0">ru/mail/polis/dao/gogun/SSTable.key</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (5 samples, 0.57%)</title><rect x="131.6" y="451.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.57%)</title><rect x="131.6" y="435.0" width="6.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.6" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.46%)</title><rect x="133.0" y="419.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="136.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.11%)</title><rect x="138.4" y="451.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="141.4" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.rewind (1 samples, 0.11%)</title><rect x="138.4" y="435.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.11%)</title><rect x="138.4" y="419.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getLong (1 samples, 0.11%)</title><rect x="139.8" y="451.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.8" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.11%)</title><rect x="139.8" y="435.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (754 samples, 86.37%)</title><rect x="141.1" y="451.0" width="1019.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.1" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (753 samples, 86.25%)</title><rect x="142.5" y="435.0" width="1017.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.5" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (4 samples, 0.46%)</title><rect x="145.2" y="419.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.2" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (36 samples, 4.12%)</title><rect x="150.6" y="419.0" width="48.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.6" y="430.0">sun/..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (36 samples, 4.12%)</title><rect x="150.6" y="403.0" width="48.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.6" y="414.0">java..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (9 samples, 1.03%)</title><rect x="187.1" y="387.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.1" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (9 samples, 1.03%)</title><rect x="187.1" y="371.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.1" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (9 samples, 1.03%)</title><rect x="187.1" y="355.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="190.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (11 samples, 1.26%)</title><rect x="199.2" y="419.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="202.2" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (10 samples, 1.15%)</title><rect x="200.6" y="403.0" width="13.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="203.6" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.11%)</title><rect x="212.7" y="387.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaLangAccess (1 samples, 0.11%)</title><rect x="212.7" y="371.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="215.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (662 samples, 75.83%)</title><rect x="214.1" y="419.0" width="894.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="217.1" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.57%)</title><rect x="215.5" y="403.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.5" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.34%)</title><rect x="218.2" y="387.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="221.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.34%)</title><rect x="218.2" y="371.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="221.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.34%)</title><rect x="218.2" y="355.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="221.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.23%)</title><rect x="218.2" y="339.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="221.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.11%)</title><rect x="218.2" y="323.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="221.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.11%)</title><rect x="219.5" y="323.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.11%)</title><rect x="219.5" y="307.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.11%)</title><rect x="220.9" y="339.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="223.9" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.23%)</title><rect x="222.2" y="403.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.2" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (2 samples, 0.23%)</title><rect x="222.2" y="387.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.23%)</title><rect x="222.2" y="371.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="225.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (2 samples, 0.23%)</title><rect x="222.2" y="355.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (573 samples, 65.64%)</title><rect x="224.9" y="403.0" width="774.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.9" y="414.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (573 samples, 65.64%)</title><rect x="224.9" y="387.0" width="774.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.9" y="398.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (573 samples, 65.64%)</title><rect x="224.9" y="371.0" width="774.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.9" y="382.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/libnio.so (7 samples, 0.80%)</title><rect x="242.5" y="355.0" width="9.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="245.5" y="366.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (11 samples, 1.26%)</title><rect x="251.9" y="355.0" width="14.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="254.9" y="366.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (9 samples, 1.03%)</title><rect x="266.8" y="355.0" width="12.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="269.8" y="366.0"></text>
</g>
<g>
<title>pread (533 samples, 61.05%)</title><rect x="279.0" y="355.0" width="720.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="282.0" y="366.0">pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (391 samples, 44.79%)</title><rect x="470.9" y="339.0" width="528.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="473.9" y="350.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (391 samples, 44.79%)</title><rect x="470.9" y="323.0" width="528.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.9" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (17 samples, 1.95%)</title><rect x="596.6" y="307.0" width="23.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="599.6" y="318.0">_..</text>
</g>
<g>
<title>__audit_syscall_exit (16 samples, 1.83%)</title><rect x="598.0" y="291.0" width="21.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="601.0" y="302.0">_..</text>
</g>
<g>
<title>kfree (4 samples, 0.46%)</title><rect x="606.1" y="275.0" width="5.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="609.1" y="286.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.11%)</title><rect x="611.5" y="275.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="614.5" y="286.0"></text>
</g>
<g>
<title>path_put (3 samples, 0.34%)</title><rect x="612.8" y="275.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="615.8" y="286.0"></text>
</g>
<g>
<title>dput (1 samples, 0.11%)</title><rect x="615.5" y="259.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="618.5" y="270.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.23%)</title><rect x="616.9" y="275.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="619.9" y="286.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (264 samples, 30.24%)</title><rect x="619.6" y="307.0" width="356.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="622.6" y="318.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fget_light (33 samples, 3.78%)</title><rect x="625.0" y="291.0" width="44.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="628.0" y="302.0">__fg..</text>
</g>
<g>
<title>__fget_files (24 samples, 2.75%)</title><rect x="637.2" y="275.0" width="32.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.2" y="286.0">__..</text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.11%)</title><rect x="666.9" y="259.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="669.9" y="270.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.11%)</title><rect x="668.3" y="259.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="671.3" y="270.0"></text>
</g>
<g>
<title>fput_many (7 samples, 0.80%)</title><rect x="669.6" y="291.0" width="9.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="672.6" y="302.0"></text>
</g>
<g>
<title>vfs_read (220 samples, 25.20%)</title><rect x="679.1" y="291.0" width="297.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="682.1" y="302.0">vfs_read</text>
</g>
<g>
<title>fsnotify (15 samples, 1.72%)</title><rect x="698.0" y="275.0" width="20.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="701.0" y="286.0"></text>
</g>
<g>
<title>fsnotify_parent (13 samples, 1.49%)</title><rect x="718.3" y="275.0" width="17.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="721.3" y="286.0"></text>
</g>
<g>
<title>new_sync_read (167 samples, 19.13%)</title><rect x="735.8" y="275.0" width="225.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="738.8" y="286.0">new_sync_read</text>
</g>
<g>
<title>__x86_retpoline_rax (2 samples, 0.23%)</title><rect x="756.1" y="259.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="759.1" y="270.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.11%)</title><rect x="758.8" y="259.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="761.8" y="270.0"></text>
</g>
<g>
<title>shmem_file_read_iter (149 samples, 17.07%)</title><rect x="760.2" y="259.0" width="201.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="763.2" y="270.0">shmem_file_read_iter</text>
</g>
<g>
<title>copy_page_to_iter (33 samples, 3.78%)</title><rect x="806.1" y="243.0" width="44.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="809.1" y="254.0">copy..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.57%)</title><rect x="812.9" y="227.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.9" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (23 samples, 2.63%)</title><rect x="819.6" y="227.0" width="31.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.6" y="238.0">co..</text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.11%)</title><rect x="850.7" y="243.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="853.7" y="254.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (67 samples, 7.67%)</title><rect x="852.1" y="243.0" width="90.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="855.1" y="254.0">shmem_getp..</text>
</g>
<g>
<title>find_lock_entry (55 samples, 6.30%)</title><rect x="868.3" y="227.0" width="74.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="871.3" y="238.0">find_loc..</text>
</g>
<g>
<title>find_get_entry (41 samples, 4.70%)</title><rect x="873.7" y="211.0" width="55.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="876.7" y="222.0">find_..</text>
</g>
<g>
<title>PageHuge (1 samples, 0.11%)</title><rect x="902.1" y="195.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="905.1" y="206.0"></text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.23%)</title><rect x="903.4" y="195.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="906.4" y="206.0"></text>
</g>
<g>
<title>__rcu_read_unlock (3 samples, 0.34%)</title><rect x="906.2" y="195.0" width="4.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="909.2" y="206.0"></text>
</g>
<g>
<title>xas_load (14 samples, 1.60%)</title><rect x="910.2" y="195.0" width="18.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.2" y="206.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.57%)</title><rect x="922.4" y="179.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="925.4" y="190.0"></text>
</g>
<g>
<title>page_mapping (10 samples, 1.15%)</title><rect x="929.1" y="211.0" width="13.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.1" y="222.0"></text>
</g>
<g>
<title>touch_atime (9 samples, 1.03%)</title><rect x="942.6" y="243.0" width="12.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="945.6" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (7 samples, 0.80%)</title><rect x="945.3" y="227.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="948.3" y="238.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.57%)</title><rect x="948.1" y="211.0" width="6.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="951.1" y="222.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.34%)</title><rect x="950.8" y="195.0" width="4.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="953.8" y="206.0"></text>
</g>
<g>
<title>unlock_page (5 samples, 0.57%)</title><rect x="954.8" y="243.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.8" y="254.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.11%)</title><rect x="961.6" y="275.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="964.6" y="286.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 1.15%)</title><rect x="962.9" y="275.0" width="13.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="965.9" y="286.0"></text>
</g>
<g>
<title>fsnotify_parent (4 samples, 0.46%)</title><rect x="971.0" y="259.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="974.0" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.11%)</title><rect x="976.4" y="307.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="979.4" y="318.0"></text>
</g>
<g>
<title>syscall_trace_enter (16 samples, 1.83%)</title><rect x="977.8" y="307.0" width="21.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.8" y="318.0">s..</text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.23%)</title><rect x="995.4" y="291.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="998.4" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.11%)</title><rect x="998.1" y="291.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1001.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (81 samples, 9.28%)</title><rect x="999.4" y="403.0" width="109.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.4" y="414.0">sun/nio/ch/Ut..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (35 samples, 4.01%)</title><rect x="1000.8" y="387.0" width="47.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.8" y="398.0">java..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (35 samples, 4.01%)</title><rect x="1000.8" y="371.0" width="47.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.8" y="382.0">java..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (21 samples, 2.41%)</title><rect x="1019.7" y="355.0" width="28.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1022.7" y="366.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.23%)</title><rect x="1045.4" y="339.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1048.4" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.11%)</title><rect x="1048.1" y="387.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1051.1" y="398.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.23%)</title><rect x="1049.4" y="387.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1052.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (42 samples, 4.81%)</title><rect x="1052.1" y="387.0" width="56.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1055.1" y="398.0">sun/ni..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.46%)</title><rect x="1103.5" y="371.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1106.5" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (4 samples, 0.46%)</title><rect x="1103.5" y="355.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1106.5" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (4 samples, 0.46%)</title><rect x="1103.5" y="339.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1106.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (27 samples, 3.09%)</title><rect x="1108.9" y="419.0" width="36.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.9" y="430.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (18 samples, 2.06%)</title><rect x="1121.1" y="403.0" width="24.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1124.1" y="414.0">s..</text>
</g>
<g>
<title>pthread_self (1 samples, 0.11%)</title><rect x="1144.0" y="387.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1147.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (11 samples, 1.26%)</title><rect x="1145.4" y="419.0" width="14.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1148.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (12 samples, 1.37%)</title><rect x="1160.3" y="563.0" width="16.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1163.3" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (12 samples, 1.37%)</title><rect x="1160.3" y="547.0" width="16.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1163.3" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (12 samples, 1.37%)</title><rect x="1160.3" y="531.0" width="16.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1163.3" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (12 samples, 1.37%)</title><rect x="1160.3" y="515.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (12 samples, 1.37%)</title><rect x="1160.3" y="499.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (12 samples, 1.37%)</title><rect x="1160.3" y="483.0" width="16.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1163.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (12 samples, 1.37%)</title><rect x="1160.3" y="467.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 1.37%)</title><rect x="1160.3" y="451.0" width="16.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1163.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (12 samples, 1.37%)</title><rect x="1160.3" y="435.0" width="16.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1163.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (12 samples, 1.37%)</title><rect x="1160.3" y="419.0" width="16.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1163.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (12 samples, 1.37%)</title><rect x="1160.3" y="403.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1163.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (12 samples, 1.37%)</title><rect x="1160.3" y="387.0" width="16.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1163.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (12 samples, 1.37%)</title><rect x="1160.3" y="371.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1163.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (6 samples, 0.69%)</title><rect x="1160.3" y="355.0" width="8.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1163.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.69%)</title><rect x="1160.3" y="339.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.69%)</title><rect x="1160.3" y="323.0" width="8.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1163.3" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.11%)</title><rect x="1160.3" y="307.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.57%)</title><rect x="1161.6" y="307.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1164.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (5 samples, 0.57%)</title><rect x="1161.6" y="291.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (5 samples, 0.57%)</title><rect x="1161.6" y="275.0" width="6.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (5 samples, 0.57%)</title><rect x="1161.6" y="259.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1164.6" y="270.0"></text>
</g>
<g>
<title>pread (5 samples, 0.57%)</title><rect x="1161.6" y="243.0" width="6.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1164.6" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.46%)</title><rect x="1163.0" y="227.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1166.0" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.46%)</title><rect x="1163.0" y="211.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1166.0" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.46%)</title><rect x="1163.0" y="195.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1166.0" y="206.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.46%)</title><rect x="1163.0" y="179.0" width="5.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.0" y="190.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.11%)</title><rect x="1163.0" y="163.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1166.0" y="174.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.34%)</title><rect x="1164.3" y="163.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1167.3" y="174.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.11%)</title><rect x="1167.0" y="147.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.0" y="158.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.11%)</title><rect x="1167.0" y="131.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.69%)</title><rect x="1168.4" y="355.0" width="8.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1171.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.69%)</title><rect x="1168.4" y="339.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (6 samples, 0.69%)</title><rect x="1168.4" y="323.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1171.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.69%)</title><rect x="1168.4" y="307.0" width="8.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6 samples, 0.69%)</title><rect x="1168.4" y="291.0" width="8.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6 samples, 0.69%)</title><rect x="1168.4" y="275.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.4" y="286.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.11%)</title><rect x="1168.4" y="259.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1171.4" y="270.0"></text>
</g>
<g>
<title>pread (5 samples, 0.57%)</title><rect x="1169.7" y="259.0" width="6.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1172.7" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.23%)</title><rect x="1173.8" y="243.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1176.8" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.23%)</title><rect x="1173.8" y="227.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1176.8" y="238.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.11%)</title><rect x="1175.1" y="211.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1178.1" y="222.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.11%)</title><rect x="1175.1" y="195.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1178.1" y="206.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.11%)</title><rect x="1175.1" y="179.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.1" y="190.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.11%)</title><rect x="1175.1" y="163.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1178.1" y="174.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (1 samples, 0.11%)</title><rect x="1175.1" y="147.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1178.1" y="158.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.11%)</title><rect x="1175.1" y="131.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1178.1" y="142.0"></text>
</g>
<g>
<title>page_mapping (1 samples, 0.11%)</title><rect x="1175.1" y="115.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1178.1" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (3 samples, 0.34%)</title><rect x="1176.5" y="563.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1179.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (1 samples, 0.11%)</title><rect x="1176.5" y="547.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1179.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1176.5" y="531.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1179.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (1 samples, 0.11%)</title><rect x="1176.5" y="515.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1179.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.11%)</title><rect x="1176.5" y="499.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1179.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.23%)</title><rect x="1177.8" y="547.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (2 samples, 0.23%)</title><rect x="1177.8" y="531.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1180.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.23%)</title><rect x="1177.8" y="515.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1180.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.23%)</title><rect x="1177.8" y="499.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1180.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.23%)</title><rect x="1177.8" y="483.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1180.8" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.23%)</title><rect x="1177.8" y="467.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1180.8" y="478.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.23%)</title><rect x="1177.8" y="451.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1180.8" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.11%)</title><rect x="1179.2" y="435.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1182.2" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.11%)</title><rect x="1179.2" y="419.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1182.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.11%)</title><rect x="1180.5" y="643.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1183.5" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.11%)</title><rect x="1180.5" y="627.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.11%)</title><rect x="1180.5" y="611.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.11%)</title><rect x="1180.5" y="595.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1183.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.11%)</title><rect x="1180.5" y="579.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1183.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.11%)</title><rect x="1181.9" y="675.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.46%)</title><rect x="1183.2" y="691.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1186.2" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.46%)</title><rect x="1183.2" y="675.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.2" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.34%)</title><rect x="1183.2" y="659.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1186.2" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.34%)</title><rect x="1183.2" y="643.0" width="4.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1186.2" y="654.0"></text>
</g>
<g>
<title>__libc_recv (1 samples, 0.11%)</title><rect x="1187.3" y="659.0" width="1.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1190.3" y="670.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.11%)</title><rect x="1187.3" y="643.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1190.3" y="654.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.11%)</title><rect x="1187.3" y="627.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1190.3" y="638.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.11%)</title><rect x="1187.3" y="611.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1190.3" y="622.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.11%)</title><rect x="1187.3" y="595.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1190.3" y="606.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.11%)</title><rect x="1187.3" y="579.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.3" y="590.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.11%)</title><rect x="1187.3" y="563.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.3" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.11%)</title><rect x="1187.3" y="547.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1190.3" y="558.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.11%)</title><rect x="1187.3" y="531.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1190.3" y="542.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.11%)</title><rect x="1188.6" y="739.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.6" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="723.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1191.6" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="707.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1191.6" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="691.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1191.6" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="675.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1191.6" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="659.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1191.6" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="643.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.6" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="627.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1191.6" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="611.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1191.6" y="622.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="595.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.6" y="606.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="579.0" width="1.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1191.6" y="590.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="563.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.6" y="574.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="547.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.6" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.11%)</title><rect x="1188.6" y="531.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1191.6" y="542.0"></text>
</g>
</g>
</svg>
