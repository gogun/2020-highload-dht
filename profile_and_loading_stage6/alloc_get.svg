<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758"
	 xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="741"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="741"> </text>
<g id="frames">
<g>
<title>all (140,306 samples, 100.00%)</title><rect x="10.0" y="707.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="718.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (84,724 samples, 60.39%)</title><rect x="10.0" y="691.0" width="712.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="702.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (84,724 samples, 60.39%)</title><rect x="10.0" y="675.0" width="712.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="686.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (84,724 samples, 60.39%)</title><rect x="10.0" y="659.0" width="712.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="670.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (21,378 samples, 15.24%)</title><rect x="10.0" y="643.0" width="179.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.0" y="654.0">java/util/concurrent/Co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9,421 samples, 6.71%)</title><rect x="10.0" y="627.0" width="79.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="638.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9,397 samples, 6.70%)</title><rect x="10.0" y="611.0" width="79.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="622.0">java/util..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (56 samples, 0.04%)</title><rect x="10.0" y="595.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1563358180.apply (9,340 samples, 6.66%)</title><rect x="10.5" y="595.0" width="78.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.5" y="606.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (9,340 samples, 6.66%)</title><rect x="10.5" y="579.0" width="78.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.5" y="590.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (9,340 samples, 6.66%)</title><rect x="10.5" y="563.0" width="78.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.5" y="574.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.04%)</title><rect x="10.5" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.04%)</title><rect x="10.5" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$359/1611607641.get$Lambda (39 samples, 0.03%)</title><rect x="10.5" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$359 (39 samples, 0.03%)</title><rect x="10.5" y="499.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="13.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (128 samples, 0.09%)</title><rect x="11.0" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="14.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (128 samples, 0.09%)</title><rect x="11.0" y="531.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (64 samples, 0.05%)</title><rect x="11.0" y="515.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="14.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="11.5" y="515.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="14.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="11.5" y="499.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="11.5" y="483.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="14.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (272 samples, 0.19%)</title><rect x="12.1" y="547.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (272 samples, 0.19%)</title><rect x="12.1" y="531.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.1" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (151 samples, 0.11%)</title><rect x="12.1" y="515.0" width="1.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="15.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.09%)</title><rect x="13.3" y="515.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (121 samples, 0.09%)</title><rect x="13.3" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="16.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (121 samples, 0.09%)</title><rect x="13.3" y="483.0" width="1.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="16.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (8,556 samples, 6.10%)</title><rect x="14.3" y="547.0" width="72.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.3" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (8,556 samples, 6.10%)</title><rect x="14.3" y="531.0" width="72.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.3" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (8,556 samples, 6.10%)</title><rect x="14.3" y="515.0" width="72.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.3" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (131 samples, 0.09%)</title><rect x="14.3" y="499.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="17.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (131 samples, 0.09%)</title><rect x="14.3" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/311098875.get$Lambda (34 samples, 0.02%)</title><rect x="14.3" y="467.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.3" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$212 (34 samples, 0.02%)</title><rect x="14.3" y="451.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="17.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.get$Lambda (42 samples, 0.03%)</title><rect x="14.6" y="467.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.6" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (42 samples, 0.03%)</title><rect x="14.6" y="451.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="17.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/1583544498.get$Lambda (55 samples, 0.04%)</title><rect x="15.0" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.0" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$312 (55 samples, 0.04%)</title><rect x="15.0" y="451.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="18.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (5,950 samples, 4.24%)</title><rect x="15.4" y="499.0" width="50.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.4" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (5,950 samples, 4.24%)</title><rect x="15.4" y="483.0" width="50.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.4" y="494.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5,900 samples, 4.21%)</title><rect x="15.4" y="467.0" width="49.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.4" y="478.0">java/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/1583544498.apply (5,900 samples, 4.21%)</title><rect x="15.4" y="451.0" width="49.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.4" y="462.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (5,900 samples, 4.21%)</title><rect x="15.4" y="435.0" width="49.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.4" y="446.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (5,900 samples, 4.21%)</title><rect x="15.4" y="419.0" width="49.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.4" y="430.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.apply (5,900 samples, 4.21%)</title><rect x="15.4" y="403.0" width="49.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.4" y="414.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (5,900 samples, 4.21%)</title><rect x="15.4" y="387.0" width="49.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.4" y="398.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (52 samples, 0.04%)</title><rect x="15.4" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (52 samples, 0.04%)</title><rect x="15.4" y="355.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.get$Lambda (52 samples, 0.04%)</title><rect x="15.4" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="18.4" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$357 (52 samples, 0.04%)</title><rect x="15.4" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="18.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (136 samples, 0.10%)</title><rect x="15.9" y="371.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="18.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (136 samples, 0.10%)</title><rect x="15.9" y="355.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.9" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (71 samples, 0.05%)</title><rect x="15.9" y="339.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="18.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.04%)</title><rect x="16.5" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.04%)</title><rect x="16.5" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="19.5" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.04%)</title><rect x="16.5" y="307.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="19.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (133 samples, 0.09%)</title><rect x="17.0" y="371.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="20.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (133 samples, 0.09%)</title><rect x="17.0" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (73 samples, 0.05%)</title><rect x="17.0" y="339.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="20.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="17.6" y="339.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.04%)</title><rect x="17.6" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.04%)</title><rect x="17.6" y="307.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="20.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (5,579 samples, 3.98%)</title><rect x="18.1" y="371.0" width="47.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="21.1" y="382.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (54 samples, 0.04%)</title><rect x="18.1" y="355.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (54 samples, 0.04%)</title><rect x="18.1" y="339.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="21.1" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$354/1635338225.get$Lambda (32 samples, 0.02%)</title><rect x="18.3" y="323.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$354 (32 samples, 0.02%)</title><rect x="18.3" y="307.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="21.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4,589 samples, 3.27%)</title><rect x="18.6" y="355.0" width="38.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.6" y="366.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4,589 samples, 3.27%)</title><rect x="18.6" y="339.0" width="38.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.6" y="350.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (60 samples, 0.04%)</title><rect x="18.6" y="323.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="21.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1158701491.apply (4,405 samples, 3.14%)</title><rect x="19.1" y="323.0" width="37.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="22.1" y="334.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (4,405 samples, 3.14%)</title><rect x="19.1" y="307.0" width="37.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.1" y="318.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.03%)</title><rect x="19.1" y="291.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.1" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.03%)</title><rect x="19.1" y="275.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$373/1303546226.get$Lambda (37 samples, 0.03%)</title><rect x="19.1" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$373 (37 samples, 0.03%)</title><rect x="19.1" y="243.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="22.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (152 samples, 0.11%)</title><rect x="19.4" y="291.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (152 samples, 0.11%)</title><rect x="19.4" y="275.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.4" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (96 samples, 0.07%)</title><rect x="19.4" y="259.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="22.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="20.2" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="20.2" y="243.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.04%)</title><rect x="20.2" y="227.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="23.2" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.04%)</title><rect x="20.7" y="291.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="23.7" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (81 samples, 0.06%)</title><rect x="21.2" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (33 samples, 0.02%)</title><rect x="21.2" y="275.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="24.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (48 samples, 0.03%)</title><rect x="21.5" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (46 samples, 0.03%)</title><rect x="21.5" y="259.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (46 samples, 0.03%)</title><rect x="21.5" y="243.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (46 samples, 0.03%)</title><rect x="21.5" y="227.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (46 samples, 0.03%)</title><rect x="21.5" y="211.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (46 samples, 0.03%)</title><rect x="21.5" y="195.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="24.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (144 samples, 0.10%)</title><rect x="21.9" y="291.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (144 samples, 0.10%)</title><rect x="21.9" y="275.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (42 samples, 0.03%)</title><rect x="21.9" y="259.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (42 samples, 0.03%)</title><rect x="21.9" y="243.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (42 samples, 0.03%)</title><rect x="21.9" y="227.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (42 samples, 0.03%)</title><rect x="21.9" y="211.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="24.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (102 samples, 0.07%)</title><rect x="22.2" y="259.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (102 samples, 0.07%)</title><rect x="22.2" y="243.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="25.2" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (76 samples, 0.05%)</title><rect x="22.2" y="227.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="25.2" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (3,933 samples, 2.80%)</title><rect x="23.1" y="291.0" width="33.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.1" y="302.0">jd..</text>
</g>
<g>
<title>java.lang.StringBuilder (35 samples, 0.02%)</title><rect x="23.1" y="275.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="26.1" y="286.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (324 samples, 0.23%)</title><rect x="23.4" y="275.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.4" y="286.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (324 samples, 0.23%)</title><rect x="23.4" y="259.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="26.4" y="270.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (324 samples, 0.23%)</title><rect x="23.4" y="243.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="26.4" y="254.0"></text>
</g>
<g>
<title>byte[] (317 samples, 0.23%)</title><rect x="23.4" y="227.0" width="2.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="26.4" y="238.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (137 samples, 0.10%)</title><rect x="26.1" y="275.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="29.1" y="286.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (137 samples, 0.10%)</title><rect x="26.1" y="259.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.1" y="270.0"></text>
</g>
<g>
<title>byte[] (137 samples, 0.10%)</title><rect x="26.1" y="243.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="29.1" y="254.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (372 samples, 0.27%)</title><rect x="27.2" y="275.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.2" y="286.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (372 samples, 0.27%)</title><rect x="27.2" y="259.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="30.2" y="270.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.04%)</title><rect x="27.2" y="243.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="30.2" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (318 samples, 0.23%)</title><rect x="27.7" y="243.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.7" y="254.0"></text>
</g>
<g>
<title>byte[] (301 samples, 0.21%)</title><rect x="27.7" y="227.0" width="2.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="30.7" y="238.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (78 samples, 0.06%)</title><rect x="30.4" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="33.4" y="286.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (78 samples, 0.06%)</title><rect x="30.4" y="259.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.4" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (78 samples, 0.06%)</title><rect x="30.4" y="243.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="33.4" y="254.0"></text>
</g>
<g>
<title>java/util/List.of (58 samples, 0.04%)</title><rect x="31.0" y="275.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.0" y="286.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (58 samples, 0.04%)</title><rect x="31.0" y="259.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="34.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (2,333 samples, 1.66%)</title><rect x="31.5" y="275.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="34.5" y="286.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (37 samples, 0.03%)</title><rect x="31.5" y="259.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="34.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.03%)</title><rect x="31.5" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="34.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.03%)</title><rect x="31.5" y="227.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.5" y="238.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$376/1989645083.get$Lambda (37 samples, 0.03%)</title><rect x="31.5" y="211.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="34.5" y="222.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$376 (37 samples, 0.03%)</title><rect x="31.5" y="195.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="34.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1,319 samples, 0.94%)</title><rect x="31.8" y="259.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.8" y="270.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (808 samples, 0.58%)</title><rect x="31.8" y="243.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="34.8" y="254.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (808 samples, 0.58%)</title><rect x="31.8" y="227.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="34.8" y="238.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (808 samples, 0.58%)</title><rect x="31.8" y="211.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.8" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (808 samples, 0.58%)</title><rect x="31.8" y="195.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.8" y="206.0"></text>
</g>
<g>
<title>byte[] (757 samples, 0.54%)</title><rect x="31.8" y="179.0" width="6.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="34.8" y="190.0"></text>
</g>
<g>
<title>byte[] (51 samples, 0.04%)</title><rect x="38.2" y="179.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="41.2" y="190.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (131 samples, 0.09%)</title><rect x="38.6" y="243.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.6" y="254.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (131 samples, 0.09%)</title><rect x="38.6" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.6" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (131 samples, 0.09%)</title><rect x="38.6" y="211.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="41.6" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (131 samples, 0.09%)</title><rect x="38.6" y="195.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="41.6" y="206.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (101 samples, 0.07%)</title><rect x="39.7" y="243.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.7" y="254.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (51 samples, 0.04%)</title><rect x="39.7" y="227.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="42.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (50 samples, 0.04%)</title><rect x="40.2" y="227.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.2" y="238.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (50 samples, 0.04%)</title><rect x="40.2" y="211.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="43.2" y="222.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$376/1989645083.test (279 samples, 0.20%)</title><rect x="40.6" y="243.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.6" y="254.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (279 samples, 0.20%)</title><rect x="40.6" y="227.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="43.6" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1020154737.test (279 samples, 0.20%)</title><rect x="40.6" y="211.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (279 samples, 0.20%)</title><rect x="40.6" y="195.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.6" y="206.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$84/246273275.test (279 samples, 0.20%)</title><rect x="40.6" y="179.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="43.6" y="190.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (279 samples, 0.20%)</title><rect x="40.6" y="163.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/716487794.test (279 samples, 0.20%)</title><rect x="40.6" y="147.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="43.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (279 samples, 0.20%)</title><rect x="40.6" y="131.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.6" y="142.0"></text>
</g>
<g>
<title>java/lang/String.substring (279 samples, 0.20%)</title><rect x="40.6" y="115.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="43.6" y="126.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (279 samples, 0.20%)</title><rect x="40.6" y="99.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="43.6" y="110.0"></text>
</g>
<g>
<title>java.lang.String (125 samples, 0.09%)</title><rect x="40.6" y="83.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="43.6" y="94.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (154 samples, 0.11%)</title><rect x="41.6" y="83.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.6" y="94.0"></text>
</g>
<g>
<title>byte[] (154 samples, 0.11%)</title><rect x="41.6" y="67.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="44.6" y="78.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (977 samples, 0.70%)</title><rect x="42.9" y="259.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="45.9" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (977 samples, 0.70%)</title><rect x="42.9" y="243.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.9" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (977 samples, 0.70%)</title><rect x="42.9" y="227.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.9" y="238.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (30 samples, 0.02%)</title><rect x="42.9" y="211.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="45.9" y="222.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.03%)</title><rect x="43.2" y="211.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="46.2" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (77 samples, 0.05%)</title><rect x="43.5" y="211.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="46.5" y="222.0"></text>
</g>
<g>
<title>java.util.TreeSet (32 samples, 0.02%)</title><rect x="44.1" y="211.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="47.1" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.04%)</title><rect x="44.4" y="211.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.4" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.04%)</title><rect x="44.4" y="195.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="47.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (51 samples, 0.04%)</title><rect x="44.4" y="179.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.4" y="190.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (51 samples, 0.04%)</title><rect x="44.4" y="163.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="47.4" y="174.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (63 samples, 0.04%)</title><rect x="44.8" y="211.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.8" y="222.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (63 samples, 0.04%)</title><rect x="44.8" y="195.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="47.8" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (597 samples, 0.43%)</title><rect x="45.4" y="211.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.4" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (597 samples, 0.43%)</title><rect x="45.4" y="195.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.4" y="206.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (597 samples, 0.43%)</title><rect x="45.4" y="179.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.4" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (110 samples, 0.08%)</title><rect x="45.4" y="163.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.4" y="174.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (110 samples, 0.08%)</title><rect x="45.4" y="147.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (110 samples, 0.08%)</title><rect x="45.4" y="131.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.4" y="142.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.08%)</title><rect x="45.4" y="115.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="48.4" y="126.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (110 samples, 0.08%)</title><rect x="45.4" y="99.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.4" y="110.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.08%)</title><rect x="45.4" y="83.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="48.4" y="94.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (110 samples, 0.08%)</title><rect x="45.4" y="67.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.4" y="78.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (110 samples, 0.08%)</title><rect x="45.4" y="51.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="48.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object[] (110 samples, 0.08%)</title><rect x="45.4" y="35.0" width="0.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="48.4" y="46.0"></text>
</g>
<g>
<title>java/util/List.copyOf (270 samples, 0.19%)</title><rect x="46.3" y="163.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.3" y="174.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (270 samples, 0.19%)</title><rect x="46.3" y="147.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.3" y="158.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (134 samples, 0.10%)</title><rect x="46.3" y="131.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.3" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (134 samples, 0.10%)</title><rect x="46.3" y="115.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.3" y="126.0"></text>
</g>
<g>
<title>java.lang.Object[] (134 samples, 0.10%)</title><rect x="46.3" y="99.0" width="1.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="49.3" y="110.0"></text>
</g>
<g>
<title>java/util/List.of (136 samples, 0.10%)</title><rect x="47.4" y="131.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.4" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (136 samples, 0.10%)</title><rect x="47.4" y="115.0" width="1.2" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="50.4" y="126.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (217 samples, 0.15%)</title><rect x="48.6" y="163.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="51.6" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (217 samples, 0.15%)</title><rect x="48.6" y="147.0" width="1.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="51.6" y="158.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (90 samples, 0.06%)</title><rect x="50.4" y="211.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.4" y="222.0"></text>
</g>
<g>
<title>java.util.TreeMap (90 samples, 0.06%)</title><rect x="50.4" y="195.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="53.4" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (143 samples, 0.10%)</title><rect x="51.1" y="275.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.1" y="286.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (42 samples, 0.03%)</title><rect x="51.1" y="259.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.1" y="270.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.03%)</title><rect x="51.1" y="243.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="54.1" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (101 samples, 0.07%)</title><rect x="51.5" y="259.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.5" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (101 samples, 0.07%)</title><rect x="51.5" y="243.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.5" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1954471782.invoke (101 samples, 0.07%)</title><rect x="51.5" y="227.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (101 samples, 0.07%)</title><rect x="51.5" y="211.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="54.5" y="222.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (51 samples, 0.04%)</title><rect x="51.5" y="195.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.5" y="206.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.04%)</title><rect x="51.5" y="179.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="54.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (50 samples, 0.04%)</title><rect x="51.9" y="195.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="54.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (50 samples, 0.04%)</title><rect x="51.9" y="179.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.9" y="190.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.04%)</title><rect x="51.9" y="163.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="54.9" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (115 samples, 0.08%)</title><rect x="52.3" y="275.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="55.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (115 samples, 0.08%)</title><rect x="52.3" y="259.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.3" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (115 samples, 0.08%)</title><rect x="52.3" y="243.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.3" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (115 samples, 0.08%)</title><rect x="52.3" y="227.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.3" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1954471782.invoke (115 samples, 0.08%)</title><rect x="52.3" y="211.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (115 samples, 0.08%)</title><rect x="52.3" y="195.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.3" y="206.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (54 samples, 0.04%)</title><rect x="52.3" y="179.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.3" y="190.0"></text>
</g>
<g>
<title>java.lang.String (54 samples, 0.04%)</title><rect x="52.3" y="163.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="55.3" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (61 samples, 0.04%)</title><rect x="52.8" y="179.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="55.8" y="190.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (61 samples, 0.04%)</title><rect x="52.8" y="163.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="55.8" y="174.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.04%)</title><rect x="52.8" y="147.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="55.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (338 samples, 0.24%)</title><rect x="53.3" y="275.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.3" y="286.0"></text>
</g>
<g>
<title>java.util.ArrayList (73 samples, 0.05%)</title><rect x="53.3" y="259.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="56.3" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (87 samples, 0.06%)</title><rect x="53.9" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.9" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (87 samples, 0.06%)</title><rect x="53.9" y="243.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="56.9" y="254.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (178 samples, 0.13%)</title><rect x="54.6" y="259.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="57.6" y="270.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (178 samples, 0.13%)</title><rect x="54.6" y="243.0" width="1.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="57.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (124 samples, 0.09%)</title><rect x="56.1" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (124 samples, 0.09%)</title><rect x="56.1" y="307.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="59.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (124 samples, 0.09%)</title><rect x="56.1" y="291.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="59.1" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (171 samples, 0.12%)</title><rect x="57.2" y="355.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="60.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.04%)</title><rect x="58.6" y="355.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="61.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (705 samples, 0.50%)</title><rect x="59.1" y="355.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.1" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (65 samples, 0.05%)</title><rect x="59.1" y="339.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="62.1" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (65 samples, 0.05%)</title><rect x="59.1" y="323.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/689855706.get$Lambda (37 samples, 0.03%)</title><rect x="59.4" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$327 (37 samples, 0.03%)</title><rect x="59.4" y="291.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="62.4" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (74 samples, 0.05%)</title><rect x="59.7" y="339.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="62.7" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (47 samples, 0.03%)</title><rect x="60.3" y="339.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="63.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (72 samples, 0.05%)</title><rect x="60.7" y="339.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="63.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (212 samples, 0.15%)</title><rect x="61.3" y="339.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.3" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (212 samples, 0.15%)</title><rect x="61.3" y="323.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (212 samples, 0.15%)</title><rect x="61.3" y="307.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="64.3" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (212 samples, 0.15%)</title><rect x="61.3" y="291.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (212 samples, 0.15%)</title><rect x="61.3" y="275.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (212 samples, 0.15%)</title><rect x="61.3" y="259.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (212 samples, 0.15%)</title><rect x="61.3" y="243.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (212 samples, 0.15%)</title><rect x="61.3" y="227.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (212 samples, 0.15%)</title><rect x="61.3" y="211.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.3" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.06%)</title><rect x="61.3" y="195.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="64.3" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.06%)</title><rect x="61.3" y="179.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.3" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$335/500555321.get$Lambda (53 samples, 0.04%)</title><rect x="61.5" y="163.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="64.5" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$335 (53 samples, 0.04%)</title><rect x="61.5" y="147.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="64.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (73 samples, 0.05%)</title><rect x="62.0" y="195.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="65.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (60 samples, 0.04%)</title><rect x="62.6" y="195.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (60 samples, 0.04%)</title><rect x="62.6" y="179.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="65.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (39 samples, 0.03%)</title><rect x="62.8" y="163.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="65.8" y="174.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (39 samples, 0.03%)</title><rect x="62.8" y="147.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="65.8" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (171 samples, 0.12%)</title><rect x="63.1" y="339.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="66.1" y="350.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (42 samples, 0.03%)</title><rect x="63.1" y="323.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="66.1" y="334.0"></text>
</g>
<g>
<title>java.util.HashMap (69 samples, 0.05%)</title><rect x="63.4" y="323.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="66.4" y="334.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (60 samples, 0.04%)</title><rect x="64.0" y="323.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.0" y="334.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (60 samples, 0.04%)</title><rect x="64.0" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.0" y="318.0"></text>
</g>
<g>
<title>byte[] (60 samples, 0.04%)</title><rect x="64.0" y="291.0" width="0.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="67.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (64 samples, 0.05%)</title><rect x="64.5" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.5" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="64.5" y="323.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="67.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="65.1" y="467.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (50 samples, 0.04%)</title><rect x="65.1" y="451.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (50 samples, 0.04%)</title><rect x="65.1" y="435.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="68.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (117 samples, 0.08%)</title><rect x="65.5" y="499.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (117 samples, 0.08%)</title><rect x="65.5" y="483.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (56 samples, 0.04%)</title><rect x="65.5" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="68.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.04%)</title><rect x="66.0" y="467.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (61 samples, 0.04%)</title><rect x="66.0" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="69.0" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (61 samples, 0.04%)</title><rect x="66.0" y="435.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="69.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (2,358 samples, 1.68%)</title><rect x="66.5" y="499.0" width="19.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.5" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (63 samples, 0.04%)</title><rect x="66.5" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.5" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (63 samples, 0.04%)</title><rect x="66.5" y="467.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="69.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/1126457052.get$Lambda (42 samples, 0.03%)</title><rect x="66.5" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (42 samples, 0.03%)</title><rect x="66.5" y="435.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="69.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (126 samples, 0.09%)</title><rect x="67.0" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (126 samples, 0.09%)</title><rect x="67.0" y="467.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$307/339638944.apply (62 samples, 0.04%)</title><rect x="67.0" y="451.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (62 samples, 0.04%)</title><rect x="67.0" y="435.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (62 samples, 0.04%)</title><rect x="67.0" y="419.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="70.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.04%)</title><rect x="67.0" y="403.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="70.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="67.5" y="451.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="70.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (64 samples, 0.05%)</title><rect x="67.5" y="435.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="70.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="67.5" y="419.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="70.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (56 samples, 0.04%)</title><rect x="68.1" y="483.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (56 samples, 0.04%)</title><rect x="68.1" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="68.1" y="451.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="71.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (56 samples, 0.04%)</title><rect x="68.1" y="435.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.04%)</title><rect x="68.1" y="419.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="71.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (2,113 samples, 1.51%)</title><rect x="68.5" y="483.0" width="17.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2,113 samples, 1.51%)</title><rect x="68.5" y="467.0" width="17.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (165 samples, 0.12%)</title><rect x="68.5" y="451.0" width="1.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="71.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (1,884 samples, 1.34%)</title><rect x="69.9" y="451.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.9" y="462.0"></text>
</g>
<g>
<title>java.lang.Object (30 samples, 0.02%)</title><rect x="69.9" y="435.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="72.9" y="446.0"></text>
</g>
<g>
<title>java.util.LinkedList (62 samples, 0.04%)</title><rect x="70.2" y="435.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="73.2" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (37 samples, 0.03%)</title><rect x="70.7" y="435.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="73.7" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (93 samples, 0.07%)</title><rect x="71.0" y="435.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.0" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (93 samples, 0.07%)</title><rect x="71.0" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="74.0" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (93 samples, 0.07%)</title><rect x="71.0" y="403.0" width="0.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="74.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (33 samples, 0.02%)</title><rect x="71.8" y="435.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.8" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (33 samples, 0.02%)</title><rect x="71.8" y="419.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="74.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (137 samples, 0.10%)</title><rect x="72.1" y="435.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="75.1" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (70 samples, 0.05%)</title><rect x="73.2" y="435.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="76.2" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (121 samples, 0.09%)</title><rect x="73.8" y="435.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="76.8" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (130 samples, 0.09%)</title><rect x="74.8" y="435.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="77.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (554 samples, 0.39%)</title><rect x="75.9" y="435.0" width="4.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.9" y="446.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (50 samples, 0.04%)</title><rect x="75.9" y="419.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="78.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (50 samples, 0.04%)</title><rect x="76.6" y="419.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="79.6" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (32 samples, 0.02%)</title><rect x="77.0" y="419.0" width="0.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="80.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (43 samples, 0.03%)</title><rect x="77.5" y="419.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (43 samples, 0.03%)</title><rect x="77.5" y="403.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="80.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (45 samples, 0.03%)</title><rect x="77.8" y="419.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="80.8" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="78.2" y="419.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="81.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (226 samples, 0.16%)</title><rect x="78.7" y="419.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (36 samples, 0.03%)</title><rect x="78.7" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="81.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (80 samples, 0.06%)</title><rect x="79.0" y="403.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="82.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (81 samples, 0.06%)</title><rect x="79.9" y="403.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (30 samples, 0.02%)</title><rect x="80.3" y="387.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="83.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (355 samples, 0.25%)</title><rect x="80.6" y="435.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.02%)</title><rect x="80.6" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.02%)</title><rect x="80.6" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$218/1006706451.get$Lambda (34 samples, 0.02%)</title><rect x="80.6" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="83.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$$Lambda$218 (34 samples, 0.02%)</title><rect x="80.6" y="371.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="83.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (45 samples, 0.03%)</title><rect x="81.5" y="419.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.5" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (45 samples, 0.03%)</title><rect x="81.5" y="403.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="84.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (195 samples, 0.14%)</title><rect x="81.9" y="419.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (33 samples, 0.02%)</title><rect x="81.9" y="403.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="84.9" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (62 samples, 0.04%)</title><rect x="82.2" y="403.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="85.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (30 samples, 0.02%)</title><rect x="82.7" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.7" y="414.0"></text>
</g>
<g>
<title>java.lang.Object (30 samples, 0.02%)</title><rect x="82.7" y="387.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="85.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (70 samples, 0.05%)</title><rect x="83.0" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="86.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (113 samples, 0.08%)</title><rect x="83.7" y="435.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (113 samples, 0.08%)</title><rect x="83.7" y="419.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="86.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (54 samples, 0.04%)</title><rect x="83.7" y="403.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="86.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (59 samples, 0.04%)</title><rect x="84.2" y="403.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.2" y="414.0"></text>
</g>
<g>
<title>java/util/HashMap.get (59 samples, 0.04%)</title><rect x="84.2" y="387.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.2" y="398.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (59 samples, 0.04%)</title><rect x="84.2" y="371.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (59 samples, 0.04%)</title><rect x="84.2" y="355.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.2" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.04%)</title><rect x="84.2" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="87.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (131 samples, 0.09%)</title><rect x="84.7" y="435.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/310623126.linkToTargetMethod (38 samples, 0.03%)</title><rect x="84.7" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.7" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="84.7" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$222/1637846157.get$Lambda (38 samples, 0.03%)</title><rect x="84.7" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="87.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$222 (38 samples, 0.03%)</title><rect x="84.7" y="371.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="87.7" y="382.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (93 samples, 0.07%)</title><rect x="85.0" y="419.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$222/1637846157.run (93 samples, 0.07%)</title><rect x="85.0" y="403.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="88.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (93 samples, 0.07%)</title><rect x="85.0" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="88.0" y="398.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (66 samples, 0.05%)</title><rect x="85.2" y="371.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.2" y="382.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (31 samples, 0.02%)</title><rect x="85.2" y="355.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="88.2" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (35 samples, 0.02%)</title><rect x="85.5" y="355.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="88.5" y="366.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (35 samples, 0.02%)</title><rect x="85.5" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.5" y="350.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (35 samples, 0.02%)</title><rect x="85.5" y="323.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.5" y="334.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (35 samples, 0.02%)</title><rect x="85.5" y="307.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.5" y="318.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (35 samples, 0.02%)</title><rect x="85.5" y="291.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="88.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (64 samples, 0.05%)</title><rect x="85.8" y="451.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.8" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="85.8" y="435.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="88.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (87 samples, 0.06%)</title><rect x="86.3" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (87 samples, 0.06%)</title><rect x="86.3" y="531.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="89.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (87 samples, 0.06%)</title><rect x="86.3" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.3" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (87 samples, 0.06%)</title><rect x="86.3" y="499.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="89.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (237 samples, 0.17%)</title><rect x="87.0" y="547.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (153 samples, 0.11%)</title><rect x="87.0" y="531.0" width="1.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="90.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (84 samples, 0.06%)</title><rect x="88.3" y="531.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="91.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (84 samples, 0.06%)</title><rect x="88.3" y="515.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="91.3" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.now (45 samples, 0.03%)</title><rect x="88.3" y="499.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="91.3" y="510.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (45 samples, 0.03%)</title><rect x="88.3" y="483.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.3" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (45 samples, 0.03%)</title><rect x="88.3" y="467.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="91.3" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.create (45 samples, 0.03%)</title><rect x="88.3" y="451.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="91.3" y="462.0"></text>
</g>
<g>
<title>java.time.Instant (45 samples, 0.03%)</title><rect x="88.3" y="435.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="91.3" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.03%)</title><rect x="88.7" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.7" y="510.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (39 samples, 0.03%)</title><rect x="88.7" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.7" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.03%)</title><rect x="88.7" y="467.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.03%)</title><rect x="88.7" y="451.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.7" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (39 samples, 0.03%)</title><rect x="88.7" y="435.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.7" y="446.0"></text>
</g>
<g>
<title>java/time/Instant.plus (39 samples, 0.03%)</title><rect x="88.7" y="419.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.7" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (39 samples, 0.03%)</title><rect x="88.7" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="414.0"></text>
</g>
<g>
<title>java/time/Instant.create (39 samples, 0.03%)</title><rect x="88.7" y="387.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.7" y="398.0"></text>
</g>
<g>
<title>java.time.Instant (39 samples, 0.03%)</title><rect x="88.7" y="371.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="91.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$131/640212311.get (11,957 samples, 8.52%)</title><rect x="89.2" y="627.0" width="100.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.2" y="638.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$proxy$8 (11,957 samples, 8.52%)</title><rect x="89.2" y="611.0" width="100.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="92.2" y="622.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (11,957 samples, 8.52%)</title><rect x="89.2" y="595.0" width="100.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.2" y="606.0">ru/mail/poli..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (59 samples, 0.04%)</title><rect x="89.2" y="579.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1287890507.invoke (59 samples, 0.04%)</title><rect x="89.2" y="563.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (59 samples, 0.04%)</title><rect x="89.2" y="547.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (34 samples, 0.02%)</title><rect x="89.4" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (34 samples, 0.02%)</title><rect x="89.4" y="515.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.4" y="526.0"></text>
</g>
<g>
<title>byte[] (34 samples, 0.02%)</title><rect x="89.4" y="499.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="92.4" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (127 samples, 0.09%)</title><rect x="89.7" y="579.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="92.7" y="590.0"></text>
</g>
<g>
<title>one.nio.http.Response (30 samples, 0.02%)</title><rect x="89.7" y="563.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="92.7" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (97 samples, 0.07%)</title><rect x="90.0" y="563.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="93.0" y="574.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.03%)</title><rect x="90.0" y="547.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="93.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (33 samples, 0.02%)</title><rect x="90.4" y="547.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="93.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (11,740 samples, 8.37%)</title><rect x="90.8" y="579.0" width="98.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="93.8" y="590.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2,040 samples, 1.45%)</title><rect x="90.8" y="563.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="93.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1,779 samples, 1.27%)</title><rect x="90.8" y="547.0" width="15.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.8" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (282 samples, 0.20%)</title><rect x="90.8" y="531.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (282 samples, 0.20%)</title><rect x="90.8" y="515.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (282 samples, 0.20%)</title><rect x="90.8" y="499.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.8" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (282 samples, 0.20%)</title><rect x="90.8" y="483.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="93.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (282 samples, 0.20%)</title><rect x="90.8" y="467.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.8" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (282 samples, 0.20%)</title><rect x="90.8" y="451.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.8" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (282 samples, 0.20%)</title><rect x="90.8" y="435.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="93.8" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (282 samples, 0.20%)</title><rect x="90.8" y="419.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="93.8" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (282 samples, 0.20%)</title><rect x="90.8" y="403.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="93.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (282 samples, 0.20%)</title><rect x="90.8" y="387.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (282 samples, 0.20%)</title><rect x="90.8" y="371.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (282 samples, 0.20%)</title><rect x="90.8" y="355.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="93.8" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (282 samples, 0.20%)</title><rect x="90.8" y="339.0" width="2.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="93.8" y="350.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,497 samples, 1.07%)</title><rect x="93.2" y="531.0" width="12.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,497 samples, 1.07%)</title><rect x="93.2" y="515.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.2" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,497 samples, 1.07%)</title><rect x="93.2" y="499.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,497 samples, 1.07%)</title><rect x="93.2" y="483.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,497 samples, 1.07%)</title><rect x="93.2" y="467.0" width="12.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.2" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,497 samples, 1.07%)</title><rect x="93.2" y="451.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,185 samples, 0.84%)</title><rect x="93.2" y="435.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="96.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (1,160 samples, 0.83%)</title><rect x="93.4" y="419.0" width="9.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="96.4" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (1,160 samples, 0.83%)</title><rect x="93.4" y="403.0" width="9.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.4" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (1,160 samples, 0.83%)</title><rect x="93.4" y="387.0" width="9.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.4" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (593 samples, 0.42%)</title><rect x="93.4" y="371.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="96.4" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (389 samples, 0.28%)</title><rect x="93.4" y="355.0" width="3.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="96.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (204 samples, 0.15%)</title><rect x="96.7" y="355.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.7" y="366.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.15%)</title><rect x="96.7" y="339.0" width="1.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="99.7" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (60 samples, 0.04%)</title><rect x="98.4" y="371.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="101.4" y="382.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (38 samples, 0.03%)</title><rect x="98.9" y="371.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="101.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (440 samples, 0.31%)</title><rect x="99.2" y="371.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="102.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (440 samples, 0.31%)</title><rect x="99.2" y="355.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="102.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (298 samples, 0.21%)</title><rect x="99.2" y="339.0" width="2.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="102.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (142 samples, 0.10%)</title><rect x="101.7" y="339.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="104.7" y="350.0"></text>
</g>
<g>
<title>byte[] (142 samples, 0.10%)</title><rect x="101.7" y="323.0" width="1.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="104.7" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (312 samples, 0.22%)</title><rect x="103.1" y="435.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.1" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (312 samples, 0.22%)</title><rect x="103.1" y="419.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.1" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (312 samples, 0.22%)</title><rect x="103.1" y="403.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.1" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (312 samples, 0.22%)</title><rect x="103.1" y="387.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (312 samples, 0.22%)</title><rect x="103.1" y="371.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (312 samples, 0.22%)</title><rect x="103.1" y="355.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.1" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (312 samples, 0.22%)</title><rect x="103.1" y="339.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.1" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (312 samples, 0.22%)</title><rect x="103.1" y="323.0" width="2.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="106.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$493/1711690302.apply (261 samples, 0.19%)</title><rect x="105.8" y="547.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (261 samples, 0.19%)</title><rect x="105.8" y="531.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.8" y="542.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (261 samples, 0.19%)</title><rect x="105.8" y="515.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.8" y="526.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (261 samples, 0.19%)</title><rect x="105.8" y="499.0" width="2.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="108.8" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (9,700 samples, 6.91%)</title><rect x="108.0" y="563.0" width="81.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.0" y="574.0">ru/mail/p..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,585 samples, 1.13%)</title><rect x="108.0" y="547.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.0" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,565 samples, 1.12%)</title><rect x="108.1" y="531.0" width="13.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="111.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (75 samples, 0.05%)</title><rect x="108.3" y="515.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.3" y="526.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (75 samples, 0.05%)</title><rect x="108.3" y="499.0" width="0.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="111.3" y="510.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (34 samples, 0.02%)</title><rect x="109.0" y="515.0" width="0.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="112.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (35 samples, 0.02%)</title><rect x="109.2" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="112.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Object[] (35 samples, 0.02%)</title><rect x="109.2" y="499.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="112.2" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,397 samples, 1.00%)</title><rect x="109.5" y="515.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="112.5" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,397 samples, 1.00%)</title><rect x="109.5" y="499.0" width="11.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.5" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (34 samples, 0.02%)</title><rect x="109.5" y="483.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.5" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (34 samples, 0.02%)</title><rect x="109.5" y="467.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.5" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (34 samples, 0.02%)</title><rect x="109.5" y="451.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="112.5" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,363 samples, 0.97%)</title><rect x="109.8" y="483.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,363 samples, 0.97%)</title><rect x="109.8" y="467.0" width="11.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,363 samples, 0.97%)</title><rect x="109.8" y="451.0" width="11.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,363 samples, 0.97%)</title><rect x="109.8" y="435.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,162 samples, 0.83%)</title><rect x="109.8" y="419.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.8" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (50 samples, 0.04%)</title><rect x="109.8" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (1,112 samples, 0.79%)</title><rect x="110.2" y="403.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (1,112 samples, 0.79%)</title><rect x="110.2" y="387.0" width="9.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (1,112 samples, 0.79%)</title><rect x="110.2" y="371.0" width="9.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.2" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (565 samples, 0.40%)</title><rect x="110.2" y="355.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.2" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (376 samples, 0.27%)</title><rect x="110.2" y="339.0" width="3.2" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="113.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (189 samples, 0.13%)</title><rect x="113.4" y="339.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.4" y="350.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.13%)</title><rect x="113.4" y="323.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="116.4" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (47 samples, 0.03%)</title><rect x="115.0" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="118.0" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (45 samples, 0.03%)</title><rect x="115.4" y="355.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="118.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (422 samples, 0.30%)</title><rect x="115.8" y="355.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (422 samples, 0.30%)</title><rect x="115.8" y="339.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.8" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (278 samples, 0.20%)</title><rect x="115.8" y="323.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="118.8" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (144 samples, 0.10%)</title><rect x="118.1" y="323.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.1" y="334.0"></text>
</g>
<g>
<title>byte[] (144 samples, 0.10%)</title><rect x="118.1" y="307.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="121.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (33 samples, 0.02%)</title><rect x="119.3" y="355.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.3" y="366.0"></text>
</g>
<g>
<title>java/util/Optional.of (33 samples, 0.02%)</title><rect x="119.3" y="339.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="122.3" y="350.0"></text>
</g>
<g>
<title>java.util.Optional (33 samples, 0.02%)</title><rect x="119.3" y="323.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="122.3" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (201 samples, 0.14%)</title><rect x="119.6" y="419.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="122.6" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (201 samples, 0.14%)</title><rect x="119.6" y="403.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.6" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (201 samples, 0.14%)</title><rect x="119.6" y="387.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.6" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (201 samples, 0.14%)</title><rect x="119.6" y="371.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="122.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (201 samples, 0.14%)</title><rect x="119.6" y="355.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="122.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (201 samples, 0.14%)</title><rect x="119.6" y="339.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.6" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (201 samples, 0.14%)</title><rect x="119.6" y="323.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="122.6" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (201 samples, 0.14%)</title><rect x="119.6" y="307.0" width="1.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="122.6" y="318.0"></text>
</g>
<g>
<title>java.util.ArrayList (86 samples, 0.06%)</title><rect x="121.3" y="547.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="124.3" y="558.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7,583 samples, 5.40%)</title><rect x="122.0" y="547.0" width="63.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.0" y="558.0">java/la..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (50 samples, 0.04%)</title><rect x="122.0" y="531.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="125.0" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (51 samples, 0.04%)</title><rect x="122.4" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="125.4" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (51 samples, 0.04%)</title><rect x="122.4" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.4" y="526.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (51 samples, 0.04%)</title><rect x="122.4" y="499.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="125.4" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$487/55263987.accept (7,482 samples, 5.33%)</title><rect x="122.9" y="531.0" width="62.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.9" y="542.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (7,482 samples, 5.33%)</title><rect x="122.9" y="515.0" width="62.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.9" y="526.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (7,482 samples, 5.33%)</title><rect x="122.9" y="499.0" width="62.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.9" y="510.0">ru/mai..</text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.SSTable$1 (39 samples, 0.03%)</title><rect x="122.9" y="483.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="125.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (7,443 samples, 5.30%)</title><rect x="123.2" y="483.0" width="62.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.2" y="494.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (7,443 samples, 5.30%)</title><rect x="123.2" y="467.0" width="62.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="126.2" y="478.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (7,443 samples, 5.30%)</title><rect x="123.2" y="451.0" width="62.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.2" y="462.0">ru/mai..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7,443 samples, 5.30%)</title><rect x="123.2" y="435.0" width="62.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.2" y="446.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,084 samples, 3.62%)</title><rect x="123.2" y="419.0" width="42.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="126.2" y="430.0">java..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2,359 samples, 1.68%)</title><rect x="165.9" y="419.0" width="19.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.9" y="430.0"></text>
</g>
<g>
<title>byte[] (2,359 samples, 1.68%)</title><rect x="165.9" y="403.0" width="19.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="168.9" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (57 samples, 0.04%)</title><rect x="185.8" y="547.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.8" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (57 samples, 0.04%)</title><rect x="185.8" y="531.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="188.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$481/1820953159.get$Lambda (31 samples, 0.02%)</title><rect x="185.8" y="515.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.8" y="526.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.DAOImpl$$Lambda$481 (31 samples, 0.02%)</title><rect x="185.8" y="499.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="188.8" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (33 samples, 0.02%)</title><rect x="186.3" y="547.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="189.3" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.02%)</title><rect x="186.3" y="531.0" width="0.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="189.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (236 samples, 0.17%)</title><rect x="186.5" y="547.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (216 samples, 0.15%)</title><rect x="186.7" y="531.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (216 samples, 0.15%)</title><rect x="186.7" y="515.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (88 samples, 0.06%)</title><rect x="186.7" y="499.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (88 samples, 0.06%)</title><rect x="186.7" y="483.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="189.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (88 samples, 0.06%)</title><rect x="186.7" y="467.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.06%)</title><rect x="186.7" y="451.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (88 samples, 0.06%)</title><rect x="186.7" y="435.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.7" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (88 samples, 0.06%)</title><rect x="186.7" y="419.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.7" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (88 samples, 0.06%)</title><rect x="186.7" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (88 samples, 0.06%)</title><rect x="186.7" y="387.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (88 samples, 0.06%)</title><rect x="186.7" y="371.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="189.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (88 samples, 0.06%)</title><rect x="186.7" y="355.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (88 samples, 0.06%)</title><rect x="186.7" y="339.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="189.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (88 samples, 0.06%)</title><rect x="186.7" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="189.7" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (88 samples, 0.06%)</title><rect x="186.7" y="307.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="189.7" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (128 samples, 0.09%)</title><rect x="187.4" y="499.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="190.4" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (128 samples, 0.09%)</title><rect x="187.4" y="483.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="190.4" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (128 samples, 0.09%)</title><rect x="187.4" y="467.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="190.4" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (128 samples, 0.09%)</title><rect x="187.4" y="451.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.4" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (128 samples, 0.09%)</title><rect x="187.4" y="435.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="190.4" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (128 samples, 0.09%)</title><rect x="187.4" y="419.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.4" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (30 samples, 0.02%)</title><rect x="187.4" y="403.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (30 samples, 0.02%)</title><rect x="187.4" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (30 samples, 0.02%)</title><rect x="187.4" y="371.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.4" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable$$Lambda$468/1112584852.apply (30 samples, 0.02%)</title><rect x="187.4" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="190.4" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.lambda$iterator$0 (30 samples, 0.02%)</title><rect x="187.4" y="339.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.4" y="350.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (30 samples, 0.02%)</title><rect x="187.4" y="323.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="190.4" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (98 samples, 0.07%)</title><rect x="187.7" y="403.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="190.7" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (98 samples, 0.07%)</title><rect x="187.7" y="387.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (98 samples, 0.07%)</title><rect x="187.7" y="371.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="190.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (98 samples, 0.07%)</title><rect x="187.7" y="355.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="190.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (98 samples, 0.07%)</title><rect x="187.7" y="339.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="190.7" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (98 samples, 0.07%)</title><rect x="187.7" y="323.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="190.7" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (98 samples, 0.07%)</title><rect x="187.7" y="307.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="190.7" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (98 samples, 0.07%)</title><rect x="187.7" y="291.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="190.7" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (120 samples, 0.09%)</title><rect x="188.5" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (36 samples, 0.03%)</title><rect x="188.8" y="531.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="191.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (36 samples, 0.03%)</title><rect x="188.8" y="515.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="191.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (35 samples, 0.02%)</title><rect x="189.2" y="531.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (35 samples, 0.02%)</title><rect x="189.2" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.2" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (35 samples, 0.02%)</title><rect x="189.2" y="499.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.2" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (35 samples, 0.02%)</title><rect x="189.2" y="483.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="192.2" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getArray (31 samples, 0.02%)</title><rect x="189.5" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.5" y="590.0"></text>
</g>
<g>
<title>byte[] (31 samples, 0.02%)</title><rect x="189.5" y="563.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="192.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (763 samples, 0.54%)</title><rect x="189.8" y="643.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (112 samples, 0.08%)</title><rect x="189.8" y="627.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (112 samples, 0.08%)</title><rect x="189.8" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (112 samples, 0.08%)</title><rect x="189.8" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="192.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (112 samples, 0.08%)</title><rect x="189.8" y="579.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (112 samples, 0.08%)</title><rect x="189.8" y="563.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (112 samples, 0.08%)</title><rect x="189.8" y="547.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (112 samples, 0.08%)</title><rect x="189.8" y="531.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (112 samples, 0.08%)</title><rect x="189.8" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="192.8" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (112 samples, 0.08%)</title><rect x="189.8" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="192.8" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (112 samples, 0.08%)</title><rect x="189.8" y="483.0" width="0.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="192.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (651 samples, 0.46%)</title><rect x="190.7" y="627.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (651 samples, 0.46%)</title><rect x="190.7" y="611.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$209/236399593.accept (651 samples, 0.46%)</title><rect x="190.7" y="595.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$6 (651 samples, 0.46%)</title><rect x="190.7" y="579.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.03%)</title><rect x="190.7" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.03%)</title><rect x="190.7" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.7" y="558.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.MergeResponses (34 samples, 0.02%)</title><rect x="191.1" y="563.0" width="0.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="194.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (578 samples, 0.41%)</title><rect x="191.3" y="563.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (131 samples, 0.09%)</title><rect x="191.3" y="547.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="194.3" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (131 samples, 0.09%)</title><rect x="191.3" y="531.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.3" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (96 samples, 0.07%)</title><rect x="191.3" y="515.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.3" y="526.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (96 samples, 0.07%)</title><rect x="191.3" y="499.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="194.3" y="510.0"></text>
</g>
<g>
<title>byte[] (96 samples, 0.07%)</title><rect x="191.3" y="483.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="194.3" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 0.02%)</title><rect x="192.2" y="515.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="195.2" y="526.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (35 samples, 0.02%)</title><rect x="192.2" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="195.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$459/714641870.get (447 samples, 0.32%)</title><rect x="192.5" y="547.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/MergeResponses.mergeGetResponses (447 samples, 0.32%)</title><rect x="192.5" y="531.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (93 samples, 0.07%)</title><rect x="192.7" y="515.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.7" y="526.0"></text>
</g>
<g>
<title>byte[] (36 samples, 0.03%)</title><rect x="192.7" y="499.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="195.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (31 samples, 0.02%)</title><rect x="193.0" y="499.0" width="0.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="196.0" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (232 samples, 0.17%)</title><rect x="193.5" y="515.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="196.5" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (232 samples, 0.17%)</title><rect x="193.5" y="499.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="196.5" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (232 samples, 0.17%)</title><rect x="193.5" y="483.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.5" y="494.0"></text>
</g>
<g>
<title>java.lang.String (118 samples, 0.08%)</title><rect x="193.5" y="467.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="196.5" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (114 samples, 0.08%)</title><rect x="194.4" y="467.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="197.4" y="478.0"></text>
</g>
<g>
<title>byte[] (114 samples, 0.08%)</title><rect x="194.4" y="451.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="197.4" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (96 samples, 0.07%)</title><rect x="195.4" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (77 samples, 0.05%)</title><rect x="195.6" y="499.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.6" y="510.0"></text>
</g>
<g>
<title>byte[] (38 samples, 0.03%)</title><rect x="195.6" y="483.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="198.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (651 samples, 0.46%)</title><rect x="196.2" y="643.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (445 samples, 0.32%)</title><rect x="196.2" y="627.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="199.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (438 samples, 0.31%)</title><rect x="196.2" y="611.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (438 samples, 0.31%)</title><rect x="196.2" y="595.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.2" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (438 samples, 0.31%)</title><rect x="196.2" y="579.0" width="3.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="199.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (206 samples, 0.15%)</title><rect x="200.0" y="627.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="203.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (200 samples, 0.14%)</title><rect x="200.0" y="611.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (200 samples, 0.14%)</title><rect x="200.0" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (200 samples, 0.14%)</title><rect x="200.0" y="579.0" width="1.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="203.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1348530906.run (936 samples, 0.67%)</title><rect x="201.7" y="643.0" width="7.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (936 samples, 0.67%)</title><rect x="201.7" y="627.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (936 samples, 0.67%)</title><rect x="201.7" y="611.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (936 samples, 0.67%)</title><rect x="201.7" y="595.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (936 samples, 0.67%)</title><rect x="201.7" y="579.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (936 samples, 0.67%)</title><rect x="201.7" y="563.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (936 samples, 0.67%)</title><rect x="201.7" y="547.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (936 samples, 0.67%)</title><rect x="201.7" y="531.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (936 samples, 0.67%)</title><rect x="201.7" y="515.0" width="7.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (936 samples, 0.67%)</title><rect x="201.7" y="499.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="204.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (936 samples, 0.67%)</title><rect x="201.7" y="483.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (846 samples, 0.60%)</title><rect x="201.7" y="467.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="204.7" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (95 samples, 0.07%)</title><rect x="201.7" y="451.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (95 samples, 0.07%)</title><rect x="201.7" y="435.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.7" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$387/1884261112.get$Lambda (53 samples, 0.04%)</title><rect x="201.7" y="419.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.7" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$387 (53 samples, 0.04%)</title><rect x="201.7" y="403.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="204.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/137632694.get$Lambda (42 samples, 0.03%)</title><rect x="202.1" y="419.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.1" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$409 (42 samples, 0.03%)</title><rect x="202.1" y="403.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="205.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (751 samples, 0.54%)</title><rect x="202.5" y="451.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (84 samples, 0.06%)</title><rect x="202.5" y="435.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="205.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (667 samples, 0.48%)</title><rect x="203.2" y="435.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.2" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (667 samples, 0.48%)</title><rect x="203.2" y="419.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (667 samples, 0.48%)</title><rect x="203.2" y="403.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (317 samples, 0.23%)</title><rect x="203.2" y="387.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="206.2" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (107 samples, 0.08%)</title><rect x="203.2" y="371.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="206.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$402/198896344.apply (207 samples, 0.15%)</title><rect x="204.1" y="371.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.1" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (207 samples, 0.15%)</title><rect x="204.1" y="355.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="207.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (207 samples, 0.15%)</title><rect x="204.1" y="339.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (34 samples, 0.02%)</title><rect x="204.1" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="207.1" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (34 samples, 0.02%)</title><rect x="204.1" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.1" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (34 samples, 0.02%)</title><rect x="204.1" y="291.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="207.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (173 samples, 0.12%)</title><rect x="204.4" y="323.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="207.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (150 samples, 0.11%)</title><rect x="204.6" y="307.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="207.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (150 samples, 0.11%)</title><rect x="204.6" y="291.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.6" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (90 samples, 0.06%)</title><rect x="204.6" y="275.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="207.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.04%)</title><rect x="205.3" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (60 samples, 0.04%)</title><rect x="205.3" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (60 samples, 0.04%)</title><rect x="205.3" y="243.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="208.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (350 samples, 0.25%)</title><rect x="205.9" y="387.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.9" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (350 samples, 0.25%)</title><rect x="205.9" y="371.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="208.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.apply (350 samples, 0.25%)</title><rect x="205.9" y="355.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (350 samples, 0.25%)</title><rect x="205.9" y="339.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="208.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (350 samples, 0.25%)</title><rect x="205.9" y="323.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.9" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/311098875.apply (350 samples, 0.25%)</title><rect x="205.9" y="307.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.9" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (350 samples, 0.25%)</title><rect x="205.9" y="291.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.9" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (128 samples, 0.09%)</title><rect x="206.1" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="209.1" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (128 samples, 0.09%)</title><rect x="206.1" y="259.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="209.1" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (75 samples, 0.05%)</title><rect x="206.1" y="243.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="209.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="206.7" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="209.7" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="206.7" y="227.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.7" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="206.7" y="211.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="209.7" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (195 samples, 0.14%)</title><rect x="207.2" y="275.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (117 samples, 0.08%)</title><rect x="207.2" y="259.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.2" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1BodySubscriber$1 (50 samples, 0.04%)</title><rect x="207.2" y="243.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="210.2" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (67 samples, 0.05%)</title><rect x="207.6" y="243.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="210.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (67 samples, 0.05%)</title><rect x="207.6" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="210.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.05%)</title><rect x="207.6" y="211.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="210.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (78 samples, 0.06%)</title><rect x="208.1" y="259.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (40 samples, 0.03%)</title><rect x="208.1" y="243.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="211.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (38 samples, 0.03%)</title><rect x="208.5" y="243.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (38 samples, 0.03%)</title><rect x="208.5" y="227.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (38 samples, 0.03%)</title><rect x="208.5" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.5" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (38 samples, 0.03%)</title><rect x="208.5" y="195.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (38 samples, 0.03%)</title><rect x="208.5" y="179.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.5" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (38 samples, 0.03%)</title><rect x="208.5" y="163.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="211.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (90 samples, 0.06%)</title><rect x="208.8" y="467.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="211.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (90 samples, 0.06%)</title><rect x="208.8" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (90 samples, 0.06%)</title><rect x="208.8" y="435.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (90 samples, 0.06%)</title><rect x="208.8" y="419.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (90 samples, 0.06%)</title><rect x="208.8" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.8" y="414.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (90 samples, 0.06%)</title><rect x="208.8" y="387.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.8" y="398.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (36 samples, 0.03%)</title><rect x="208.8" y="371.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.8" y="382.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (36 samples, 0.03%)</title><rect x="208.8" y="355.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="211.8" y="366.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (54 samples, 0.04%)</title><rect x="209.1" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.1" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (54 samples, 0.04%)</title><rect x="209.1" y="355.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="212.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10,618 samples, 7.57%)</title><rect x="209.6" y="643.0" width="89.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.6" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10,618 samples, 7.57%)</title><rect x="209.6" y="627.0" width="89.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.6" y="638.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (8,675 samples, 6.18%)</title><rect x="209.6" y="611.0" width="72.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.6" y="622.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (8,675 samples, 6.18%)</title><rect x="209.6" y="595.0" width="72.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.6" y="606.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8,675 samples, 6.18%)</title><rect x="209.6" y="579.0" width="72.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.6" y="590.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (144 samples, 0.10%)</title><rect x="209.6" y="563.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (144 samples, 0.10%)</title><rect x="209.6" y="547.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="212.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (144 samples, 0.10%)</title><rect x="209.6" y="531.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="212.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (144 samples, 0.10%)</title><rect x="209.6" y="515.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (73 samples, 0.05%)</title><rect x="209.6" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="212.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/201719260.invoke (73 samples, 0.05%)</title><rect x="209.6" y="483.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="212.6" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.05%)</title><rect x="209.6" y="467.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.6" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (73 samples, 0.05%)</title><rect x="209.6" y="451.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="212.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (73 samples, 0.05%)</title><rect x="209.6" y="435.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.6" y="446.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.05%)</title><rect x="209.6" y="419.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="212.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (71 samples, 0.05%)</title><rect x="210.2" y="499.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.2" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.05%)</title><rect x="210.2" y="483.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.2" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.05%)</title><rect x="210.2" y="467.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="213.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383/1051865462.get$Lambda (71 samples, 0.05%)</title><rect x="210.2" y="451.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383 (71 samples, 0.05%)</title><rect x="210.2" y="435.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="213.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (8,531 samples, 6.08%)</title><rect x="210.8" y="563.0" width="71.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="213.8" y="574.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (8,531 samples, 6.08%)</title><rect x="210.8" y="547.0" width="71.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.8" y="558.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,531 samples, 6.08%)</title><rect x="210.8" y="531.0" width="71.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="213.8" y="542.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (8,531 samples, 6.08%)</title><rect x="210.8" y="515.0" width="71.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.8" y="526.0">jdk/inte..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3,598 samples, 2.56%)</title><rect x="210.8" y="499.0" width="30.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="213.8" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,598 samples, 2.56%)</title><rect x="210.8" y="483.0" width="30.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="213.8" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,598 samples, 2.56%)</title><rect x="210.8" y="467.0" width="30.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.8" y="478.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3,598 samples, 2.56%)</title><rect x="210.8" y="451.0" width="30.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="213.8" y="462.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3,598 samples, 2.56%)</title><rect x="210.8" y="435.0" width="30.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.8" y="446.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (3,598 samples, 2.56%)</title><rect x="210.8" y="419.0" width="30.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="213.8" y="430.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3,598 samples, 2.56%)</title><rect x="210.8" y="403.0" width="30.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.8" y="414.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (3,520 samples, 2.51%)</title><rect x="210.8" y="387.0" width="29.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.8" y="398.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,520 samples, 2.51%)</title><rect x="210.8" y="371.0" width="29.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.8" y="382.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,456 samples, 2.46%)</title><rect x="210.8" y="355.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="213.8" y="366.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (66 samples, 0.05%)</title><rect x="210.8" y="339.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="213.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/699148914.apply (3,265 samples, 2.33%)</title><rect x="211.3" y="339.0" width="27.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="214.3" y="350.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3,265 samples, 2.33%)</title><rect x="211.3" y="323.0" width="27.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="214.3" y="334.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.03%)</title><rect x="211.3" y="307.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.03%)</title><rect x="211.3" y="291.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$450/1883991773.get$Lambda (42 samples, 0.03%)</title><rect x="211.3" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$450 (42 samples, 0.03%)</title><rect x="211.3" y="259.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="214.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (140 samples, 0.10%)</title><rect x="211.7" y="307.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (140 samples, 0.10%)</title><rect x="211.7" y="291.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.7" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (87 samples, 0.06%)</title><rect x="211.7" y="275.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="214.7" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="212.4" y="275.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="212.4" y="259.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="215.4" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="212.4" y="243.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="215.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3,083 samples, 2.20%)</title><rect x="212.9" y="307.0" width="25.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.9" y="318.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.02%)</title><rect x="212.9" y="291.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="215.9" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.02%)</title><rect x="212.9" y="275.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.9" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$449/1029797973.get$Lambda (34 samples, 0.02%)</title><rect x="212.9" y="259.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.9" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$449 (34 samples, 0.02%)</title><rect x="212.9" y="243.0" width="0.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="215.9" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (124 samples, 0.09%)</title><rect x="213.1" y="291.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.1" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (124 samples, 0.09%)</title><rect x="213.1" y="275.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.1" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (70 samples, 0.05%)</title><rect x="213.1" y="259.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="216.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.04%)</title><rect x="213.7" y="259.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (54 samples, 0.04%)</title><rect x="213.7" y="243.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.7" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (54 samples, 0.04%)</title><rect x="213.7" y="227.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="216.7" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2,925 samples, 2.08%)</title><rect x="214.2" y="291.0" width="24.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.2" y="302.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (48 samples, 0.03%)</title><rect x="214.2" y="275.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="217.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2,145 samples, 1.53%)</title><rect x="214.6" y="275.0" width="18.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="217.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.05%)</title><rect x="214.6" y="259.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="217.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.05%)</title><rect x="214.6" y="243.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="217.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/270619590.get$Lambda (31 samples, 0.02%)</title><rect x="214.6" y="227.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="217.6" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$441 (31 samples, 0.02%)</title><rect x="214.6" y="211.0" width="0.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="217.6" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$446/1616700890.get$Lambda (33 samples, 0.02%)</title><rect x="214.8" y="227.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$446 (33 samples, 0.02%)</title><rect x="214.8" y="211.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="217.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/740613335.linkToTargetMethod (64 samples, 0.05%)</title><rect x="215.1" y="259.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="218.1" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1957461316.invokeStatic (64 samples, 0.05%)</title><rect x="215.1" y="243.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="218.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1058928207.get$Lambda (64 samples, 0.05%)</title><rect x="215.1" y="227.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="218.1" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$420 (64 samples, 0.05%)</title><rect x="215.1" y="211.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="218.1" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (435 samples, 0.31%)</title><rect x="215.7" y="259.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.7" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (170 samples, 0.12%)</title><rect x="215.7" y="243.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="218.7" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (67 samples, 0.05%)</title><rect x="215.7" y="227.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.7" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (67 samples, 0.05%)</title><rect x="215.7" y="211.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="218.7" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (103 samples, 0.07%)</title><rect x="216.2" y="227.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.2" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (103 samples, 0.07%)</title><rect x="216.2" y="211.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="219.2" y="222.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (137 samples, 0.10%)</title><rect x="217.1" y="243.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.1" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (137 samples, 0.10%)</title><rect x="217.1" y="227.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="220.1" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (137 samples, 0.10%)</title><rect x="217.1" y="211.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.1" y="222.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (42 samples, 0.03%)</title><rect x="217.1" y="195.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.1" y="206.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (42 samples, 0.03%)</title><rect x="217.1" y="179.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.1" y="190.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (42 samples, 0.03%)</title><rect x="217.1" y="163.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.1" y="174.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (42 samples, 0.03%)</title><rect x="217.1" y="147.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="220.1" y="158.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$417/407033564.get (47 samples, 0.03%)</title><rect x="217.4" y="195.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="220.4" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (47 samples, 0.03%)</title><rect x="217.4" y="179.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="220.4" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (48 samples, 0.03%)</title><rect x="217.8" y="195.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="220.8" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.get (48 samples, 0.03%)</title><rect x="217.8" y="179.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.8" y="190.0"></text>
</g>
<g>
<title>java/util/OptionalLong.of (48 samples, 0.03%)</title><rect x="217.8" y="163.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.8" y="174.0"></text>
</g>
<g>
<title>java.util.OptionalLong (48 samples, 0.03%)</title><rect x="217.8" y="147.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="220.8" y="158.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (128 samples, 0.09%)</title><rect x="218.2" y="243.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.2" y="254.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (128 samples, 0.09%)</title><rect x="218.2" y="227.0" width="1.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="221.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (269 samples, 0.19%)</title><rect x="219.3" y="259.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (145 samples, 0.10%)</title><rect x="219.3" y="243.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.3" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (82 samples, 0.06%)</title><rect x="219.3" y="227.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="222.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.04%)</title><rect x="220.0" y="227.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.04%)</title><rect x="220.0" y="211.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="223.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.04%)</title><rect x="220.0" y="195.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="223.0" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (124 samples, 0.09%)</title><rect x="220.5" y="243.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (124 samples, 0.09%)</title><rect x="220.5" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.5" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (59 samples, 0.04%)</title><rect x="220.5" y="211.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="223.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.05%)</title><rect x="221.0" y="211.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (65 samples, 0.05%)</title><rect x="221.0" y="195.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.0" y="206.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (65 samples, 0.05%)</title><rect x="221.0" y="179.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="224.0" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (51 samples, 0.04%)</title><rect x="221.6" y="259.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="224.6" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (45 samples, 0.03%)</title><rect x="222.0" y="259.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="225.0" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (56 samples, 0.04%)</title><rect x="222.4" y="259.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="225.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,011 samples, 0.72%)</title><rect x="223.0" y="259.0" width="8.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1058928207.run (1,011 samples, 0.72%)</title><rect x="223.0" y="243.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (1,011 samples, 0.72%)</title><rect x="223.0" y="227.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="226.0" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (123 samples, 0.09%)</title><rect x="223.0" y="211.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (123 samples, 0.09%)</title><rect x="223.0" y="195.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="226.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/148987113.get$Lambda (51 samples, 0.04%)</title><rect x="223.2" y="179.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$422 (51 samples, 0.04%)</title><rect x="223.2" y="163.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="226.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/1845201983.get$Lambda (54 samples, 0.04%)</title><rect x="223.6" y="179.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.6" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$435 (54 samples, 0.04%)</title><rect x="223.6" y="163.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="226.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (107 samples, 0.08%)</title><rect x="224.1" y="211.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (107 samples, 0.08%)</title><rect x="224.1" y="195.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (56 samples, 0.04%)</title><rect x="224.1" y="179.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="227.1" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="224.6" y="179.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.6" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (51 samples, 0.04%)</title><rect x="224.6" y="163.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.6" y="174.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="224.6" y="147.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="227.6" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (63 samples, 0.04%)</title><rect x="225.0" y="211.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="228.0" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (67 samples, 0.05%)</title><rect x="225.5" y="211.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.5" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (67 samples, 0.05%)</title><rect x="225.5" y="195.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="228.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (167 samples, 0.12%)</title><rect x="226.1" y="211.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.1" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (167 samples, 0.12%)</title><rect x="226.1" y="195.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="229.1" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (38 samples, 0.03%)</title><rect x="226.1" y="179.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.1" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (38 samples, 0.03%)</title><rect x="226.1" y="163.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.1" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$438/275199194.get$Lambda (38 samples, 0.03%)</title><rect x="226.1" y="147.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.1" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$438 (38 samples, 0.03%)</title><rect x="226.1" y="131.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="229.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (129 samples, 0.09%)</title><rect x="226.4" y="179.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.4" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (129 samples, 0.09%)</title><rect x="226.4" y="163.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.4" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (129 samples, 0.09%)</title><rect x="226.4" y="147.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.4" y="158.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (82 samples, 0.06%)</title><rect x="226.4" y="131.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="229.4" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="227.1" y="131.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.1" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (47 samples, 0.03%)</title><rect x="227.1" y="115.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.1" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (47 samples, 0.03%)</title><rect x="227.1" y="99.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="230.1" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (186 samples, 0.13%)</title><rect x="227.5" y="211.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.5" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (186 samples, 0.13%)</title><rect x="227.5" y="195.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.5" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/797814020.invoke (186 samples, 0.13%)</title><rect x="227.5" y="179.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.5" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (186 samples, 0.13%)</title><rect x="227.5" y="163.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="230.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (46 samples, 0.03%)</title><rect x="227.5" y="147.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.03%)</title><rect x="227.5" y="131.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="230.5" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (140 samples, 0.10%)</title><rect x="227.9" y="147.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="230.9" y="158.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (140 samples, 0.10%)</title><rect x="227.9" y="131.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.9" y="142.0"></text>
</g>
<g>
<title>byte[] (140 samples, 0.10%)</title><rect x="227.9" y="115.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="230.9" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (298 samples, 0.21%)</title><rect x="229.0" y="211.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="232.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (101 samples, 0.07%)</title><rect x="229.0" y="195.0" width="0.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="232.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (197 samples, 0.14%)</title><rect x="229.9" y="195.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.9" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (197 samples, 0.14%)</title><rect x="229.9" y="179.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.9" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/797814020.invoke (197 samples, 0.14%)</title><rect x="229.9" y="163.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.9" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (197 samples, 0.14%)</title><rect x="229.9" y="147.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="232.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (40 samples, 0.03%)</title><rect x="229.9" y="131.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (40 samples, 0.03%)</title><rect x="229.9" y="115.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="232.9" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (157 samples, 0.11%)</title><rect x="230.2" y="131.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="233.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (157 samples, 0.11%)</title><rect x="230.2" y="115.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.2" y="126.0"></text>
</g>
<g>
<title>byte[] (157 samples, 0.11%)</title><rect x="230.2" y="99.0" width="1.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="233.2" y="110.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (128 samples, 0.09%)</title><rect x="231.5" y="259.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (128 samples, 0.09%)</title><rect x="231.5" y="243.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (128 samples, 0.09%)</title><rect x="231.5" y="227.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.5" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (128 samples, 0.09%)</title><rect x="231.5" y="211.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="234.5" y="222.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (75 samples, 0.05%)</title><rect x="231.5" y="195.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="234.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="232.2" y="195.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="235.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (53 samples, 0.04%)</title><rect x="232.2" y="179.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.2" y="190.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (53 samples, 0.04%)</title><rect x="232.2" y="163.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="235.2" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/GetBodyHandler.apply (732 samples, 0.52%)</title><rect x="232.6" y="275.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="235.6" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.03%)</title><rect x="232.6" y="259.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="235.6" y="270.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.03%)</title><rect x="232.6" y="243.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="235.6" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/GetBodyHandler$$Lambda$499/1081019303.get$Lambda (36 samples, 0.03%)</title><rect x="232.6" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="235.6" y="238.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.GetBodyHandler$$Lambda$499 (36 samples, 0.03%)</title><rect x="232.6" y="211.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="235.6" y="222.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (460 samples, 0.33%)</title><rect x="232.9" y="259.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="235.9" y="270.0"></text>
</g>
<g>
<title>java/util/Collection.stream (319 samples, 0.23%)</title><rect x="232.9" y="243.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.9" y="254.0"></text>
</g>
<g>
<title>java/util/List.spliterator (123 samples, 0.09%)</title><rect x="232.9" y="227.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="235.9" y="238.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (123 samples, 0.09%)</title><rect x="232.9" y="211.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="235.9" y="222.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (196 samples, 0.14%)</title><rect x="234.0" y="227.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.0" y="238.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (196 samples, 0.14%)</title><rect x="234.0" y="211.0" width="1.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="237.0" y="222.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (141 samples, 0.10%)</title><rect x="235.6" y="243.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="238.6" y="254.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (141 samples, 0.10%)</title><rect x="235.6" y="227.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="238.6" y="238.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (141 samples, 0.10%)</title><rect x="235.6" y="211.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="238.6" y="222.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$63/1029472813.get (90 samples, 0.06%)</title><rect x="235.6" y="195.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.6" y="206.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (90 samples, 0.06%)</title><rect x="235.6" y="179.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="238.6" y="190.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (51 samples, 0.04%)</title><rect x="236.4" y="195.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.4" y="206.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (51 samples, 0.04%)</title><rect x="236.4" y="179.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.4" y="190.0"></text>
</g>
<g>
<title>java/util/Optional.of (51 samples, 0.04%)</title><rect x="236.4" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.4" y="174.0"></text>
</g>
<g>
<title>java.util.Optional (51 samples, 0.04%)</title><rect x="236.4" y="147.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="239.4" y="158.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.mapping (59 samples, 0.04%)</title><rect x="236.8" y="259.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.8" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$MappingSubscriber (59 samples, 0.04%)</title><rect x="236.8" y="243.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="239.8" y="254.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (177 samples, 0.13%)</title><rect x="237.3" y="259.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber (61 samples, 0.04%)</title><rect x="237.3" y="243.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="240.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (116 samples, 0.08%)</title><rect x="237.8" y="243.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="240.8" y="254.0"></text>
</g>
<g>
<title>java.util.ArrayList (54 samples, 0.04%)</title><rect x="237.8" y="227.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="240.8" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (62 samples, 0.04%)</title><rect x="238.3" y="227.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="241.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$359/1611607641.apply (125 samples, 0.09%)</title><rect x="238.8" y="339.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="241.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (125 samples, 0.09%)</title><rect x="238.8" y="323.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="241.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (74 samples, 0.05%)</title><rect x="238.8" y="307.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.8" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (74 samples, 0.05%)</title><rect x="238.8" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="241.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (74 samples, 0.05%)</title><rect x="238.8" y="275.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="241.8" y="286.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (74 samples, 0.05%)</title><rect x="238.8" y="259.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="241.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (51 samples, 0.04%)</title><rect x="239.4" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (51 samples, 0.04%)</title><rect x="239.4" y="291.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="242.4" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (64 samples, 0.05%)</title><rect x="239.8" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (64 samples, 0.05%)</title><rect x="239.8" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/2115167929.apply (64 samples, 0.05%)</title><rect x="239.8" y="323.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="242.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (64 samples, 0.05%)</title><rect x="239.8" y="307.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="242.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (64 samples, 0.05%)</title><rect x="239.8" y="291.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="242.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (64 samples, 0.05%)</title><rect x="239.8" y="275.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="242.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$410/679706780.apply (78 samples, 0.06%)</title><rect x="240.4" y="387.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (78 samples, 0.06%)</title><rect x="240.4" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (78 samples, 0.06%)</title><rect x="240.4" y="355.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="243.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (4,933 samples, 3.52%)</title><rect x="241.0" y="499.0" width="41.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="244.0" y="510.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (308 samples, 0.22%)</title><rect x="241.0" y="483.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="244.0" y="494.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (308 samples, 0.22%)</title><rect x="241.0" y="467.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="244.0" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (308 samples, 0.22%)</title><rect x="241.0" y="451.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.0" y="462.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (308 samples, 0.22%)</title><rect x="241.0" y="435.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (308 samples, 0.22%)</title><rect x="241.0" y="419.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="244.0" y="430.0"></text>
</g>
<g>
<title>byte[] (308 samples, 0.22%)</title><rect x="241.0" y="403.0" width="2.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="244.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (391 samples, 0.28%)</title><rect x="243.6" y="483.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.6" y="494.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (49 samples, 0.03%)</title><rect x="243.6" y="467.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="246.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (99 samples, 0.07%)</title><rect x="244.0" y="467.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.0" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (99 samples, 0.07%)</title><rect x="244.0" y="451.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.0" y="462.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.03%)</title><rect x="244.0" y="435.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="247.0" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.04%)</title><rect x="244.4" y="435.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="247.4" y="446.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.04%)</title><rect x="244.4" y="419.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="247.4" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (55 samples, 0.04%)</title><rect x="244.9" y="467.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="247.9" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (55 samples, 0.04%)</title><rect x="244.9" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.9" y="462.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.04%)</title><rect x="244.9" y="435.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="247.9" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (188 samples, 0.13%)</title><rect x="245.3" y="467.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="248.3" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (188 samples, 0.13%)</title><rect x="245.3" y="451.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="248.3" y="462.0"></text>
</g>
<g>
<title>java.lang.String (124 samples, 0.09%)</title><rect x="245.3" y="435.0" width="1.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="248.3" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (64 samples, 0.05%)</title><rect x="246.4" y="435.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="249.4" y="446.0"></text>
</g>
<g>
<title>byte[] (64 samples, 0.05%)</title><rect x="246.4" y="419.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="249.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1,100 samples, 0.78%)</title><rect x="246.9" y="483.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1,100 samples, 0.78%)</title><rect x="246.9" y="467.0" width="9.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.9" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1,100 samples, 0.78%)</title><rect x="246.9" y="451.0" width="9.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="249.9" y="462.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (34 samples, 0.02%)</title><rect x="246.9" y="435.0" width="0.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="249.9" y="446.0"></text>
</g>
<g>
<title>java.util.ArrayList (38 samples, 0.03%)</title><rect x="247.2" y="435.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="250.2" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (91 samples, 0.06%)</title><rect x="247.5" y="435.0" width="0.8" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="250.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (60 samples, 0.04%)</title><rect x="248.5" y="435.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="251.5" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (60 samples, 0.04%)</title><rect x="248.5" y="419.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="251.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (60 samples, 0.04%)</title><rect x="248.5" y="403.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="251.5" y="414.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (60 samples, 0.04%)</title><rect x="248.5" y="387.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="251.5" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (58 samples, 0.04%)</title><rect x="249.0" y="435.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="252.0" y="446.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (58 samples, 0.04%)</title><rect x="249.0" y="419.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="252.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (703 samples, 0.50%)</title><rect x="249.5" y="435.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.5" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (703 samples, 0.50%)</title><rect x="249.5" y="419.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.5" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (703 samples, 0.50%)</title><rect x="249.5" y="403.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.5" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (93 samples, 0.07%)</title><rect x="249.5" y="387.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.5" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (93 samples, 0.07%)</title><rect x="249.5" y="371.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.5" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (93 samples, 0.07%)</title><rect x="249.5" y="355.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.07%)</title><rect x="249.5" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="252.5" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.07%)</title><rect x="249.5" y="323.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.5" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.07%)</title><rect x="249.5" y="307.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.07%)</title><rect x="249.5" y="291.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.5" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.07%)</title><rect x="249.5" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.5" y="286.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.07%)</title><rect x="249.5" y="259.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="252.5" y="270.0"></text>
</g>
<g>
<title>java/util/List.copyOf (332 samples, 0.24%)</title><rect x="250.2" y="387.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="253.2" y="398.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (332 samples, 0.24%)</title><rect x="250.2" y="371.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.2" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (172 samples, 0.12%)</title><rect x="250.2" y="355.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="253.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (172 samples, 0.12%)</title><rect x="250.2" y="339.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="253.2" y="350.0"></text>
</g>
<g>
<title>java.lang.Object[] (172 samples, 0.12%)</title><rect x="250.2" y="323.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="253.2" y="334.0"></text>
</g>
<g>
<title>java/util/List.of (160 samples, 0.11%)</title><rect x="251.7" y="355.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.7" y="366.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (160 samples, 0.11%)</title><rect x="251.7" y="339.0" width="1.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="254.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (278 samples, 0.20%)</title><rect x="253.0" y="387.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.0" y="398.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (278 samples, 0.20%)</title><rect x="253.0" y="371.0" width="2.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="256.0" y="382.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (94 samples, 0.07%)</title><rect x="255.4" y="435.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.4" y="446.0"></text>
</g>
<g>
<title>java.util.TreeMap (94 samples, 0.07%)</title><rect x="255.4" y="419.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="258.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (3,134 samples, 2.23%)</title><rect x="256.2" y="483.0" width="26.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.2" y="494.0">j..</text>
</g>
<g>
<title>java.lang.StringBuilder (168 samples, 0.12%)</title><rect x="256.2" y="467.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="259.2" y="478.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (247 samples, 0.18%)</title><rect x="257.6" y="467.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.6" y="478.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (247 samples, 0.18%)</title><rect x="257.6" y="451.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.6" y="462.0"></text>
</g>
<g>
<title>byte[] (247 samples, 0.18%)</title><rect x="257.6" y="435.0" width="2.0" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="260.6" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (469 samples, 0.33%)</title><rect x="259.6" y="467.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (469 samples, 0.33%)</title><rect x="259.6" y="451.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (176 samples, 0.13%)</title><rect x="259.6" y="435.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="262.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (293 samples, 0.21%)</title><rect x="261.1" y="435.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="264.1" y="446.0"></text>
</g>
<g>
<title>byte[] (293 samples, 0.21%)</title><rect x="261.1" y="419.0" width="2.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="264.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (2,250 samples, 1.60%)</title><rect x="263.6" y="467.0" width="18.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.6" y="478.0"></text>
</g>
<g>
<title>java/lang/String.substring (762 samples, 0.54%)</title><rect x="263.6" y="451.0" width="6.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.6" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (762 samples, 0.54%)</title><rect x="263.6" y="435.0" width="6.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.6" y="446.0"></text>
</g>
<g>
<title>java.lang.String (364 samples, 0.26%)</title><rect x="263.6" y="419.0" width="3.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="266.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (398 samples, 0.28%)</title><rect x="266.7" y="419.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.7" y="430.0"></text>
</g>
<g>
<title>byte[] (398 samples, 0.28%)</title><rect x="266.7" y="403.0" width="3.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="269.7" y="414.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (200 samples, 0.14%)</title><rect x="270.0" y="451.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.0" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (200 samples, 0.14%)</title><rect x="270.0" y="435.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.0" y="446.0"></text>
</g>
<g>
<title>byte[] (113 samples, 0.08%)</title><rect x="270.0" y="419.0" width="1.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="273.0" y="430.0"></text>
</g>
<g>
<title>java.lang.String (87 samples, 0.06%)</title><rect x="271.0" y="419.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="274.0" y="430.0"></text>
</g>
<g>
<title>java/lang/String.trim (342 samples, 0.24%)</title><rect x="271.7" y="451.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="274.7" y="462.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (342 samples, 0.24%)</title><rect x="271.7" y="435.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (342 samples, 0.24%)</title><rect x="271.7" y="419.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.7" y="430.0"></text>
</g>
<g>
<title>java.lang.String (160 samples, 0.11%)</title><rect x="271.7" y="403.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="274.7" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (182 samples, 0.13%)</title><rect x="273.0" y="403.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="276.0" y="414.0"></text>
</g>
<g>
<title>byte[] (182 samples, 0.13%)</title><rect x="273.0" y="387.0" width="1.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="276.0" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (406 samples, 0.29%)</title><rect x="274.6" y="451.0" width="3.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="277.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (406 samples, 0.29%)</title><rect x="274.6" y="435.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="277.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (406 samples, 0.29%)</title><rect x="274.6" y="419.0" width="3.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="277.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (406 samples, 0.29%)</title><rect x="274.6" y="403.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.6" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (406 samples, 0.29%)</title><rect x="274.6" y="387.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.6" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (406 samples, 0.29%)</title><rect x="274.6" y="371.0" width="3.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="277.6" y="382.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (540 samples, 0.38%)</title><rect x="278.0" y="451.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.0" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (237 samples, 0.17%)</title><rect x="278.0" y="435.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="281.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (237 samples, 0.17%)</title><rect x="278.0" y="419.0" width="2.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="281.0" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (138 samples, 0.10%)</title><rect x="280.0" y="435.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.0" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (138 samples, 0.10%)</title><rect x="280.0" y="419.0" width="1.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="283.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$414/1135712284.apply (165 samples, 0.12%)</title><rect x="281.1" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (165 samples, 0.12%)</title><rect x="281.1" y="419.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="284.1" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList (165 samples, 0.12%)</title><rect x="281.1" y="403.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="284.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1,943 samples, 1.38%)</title><rect x="282.5" y="611.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1,943 samples, 1.38%)</title><rect x="282.5" y="595.0" width="16.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1,943 samples, 1.38%)</title><rect x="282.5" y="579.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (1,943 samples, 1.38%)</title><rect x="282.5" y="563.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1,943 samples, 1.38%)</title><rect x="282.5" y="547.0" width="16.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (210 samples, 0.15%)</title><rect x="282.5" y="531.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="285.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (79 samples, 0.06%)</title><rect x="282.5" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.5" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (79 samples, 0.06%)</title><rect x="282.5" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$329/1270823062.get$Lambda (37 samples, 0.03%)</title><rect x="282.5" y="483.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$329 (37 samples, 0.03%)</title><rect x="282.5" y="467.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="285.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$335/500555321.get$Lambda (42 samples, 0.03%)</title><rect x="282.8" y="483.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.8" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$335 (42 samples, 0.03%)</title><rect x="282.8" y="467.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="285.8" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (60 samples, 0.04%)</title><rect x="283.2" y="515.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="286.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (71 samples, 0.05%)</title><rect x="283.7" y="515.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (71 samples, 0.05%)</title><rect x="283.7" y="499.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (50 samples, 0.04%)</title><rect x="283.9" y="483.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.9" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (50 samples, 0.04%)</title><rect x="283.9" y="467.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="286.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (1,718 samples, 1.22%)</title><rect x="284.3" y="531.0" width="14.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,718 samples, 1.22%)</title><rect x="284.3" y="515.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,718 samples, 1.22%)</title><rect x="284.3" y="499.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (1,718 samples, 1.22%)</title><rect x="284.3" y="483.0" width="14.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,718 samples, 1.22%)</title><rect x="284.3" y="467.0" width="14.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (1,718 samples, 1.22%)</title><rect x="284.3" y="451.0" width="14.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.3" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (93 samples, 0.07%)</title><rect x="284.3" y="435.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.3" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (93 samples, 0.07%)</title><rect x="284.3" y="419.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.3" y="430.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (93 samples, 0.07%)</title><rect x="284.3" y="403.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="287.3" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (44 samples, 0.03%)</title><rect x="285.1" y="435.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.1" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (44 samples, 0.03%)</title><rect x="285.1" y="419.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="288.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/1804270592.run (835 samples, 0.60%)</title><rect x="285.4" y="435.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (835 samples, 0.60%)</title><rect x="285.4" y="419.0" width="7.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (835 samples, 0.60%)</title><rect x="285.4" y="403.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="288.4" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (236 samples, 0.17%)</title><rect x="285.4" y="387.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.4" y="398.0"></text>
</g>
<g>
<title>java/util/Collection.stream (155 samples, 0.11%)</title><rect x="285.4" y="371.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.4" y="382.0"></text>
</g>
<g>
<title>java/util/List.spliterator (62 samples, 0.04%)</title><rect x="285.4" y="355.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="288.4" y="366.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (62 samples, 0.04%)</title><rect x="285.4" y="339.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="288.4" y="350.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (93 samples, 0.07%)</title><rect x="286.0" y="355.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (93 samples, 0.07%)</title><rect x="286.0" y="339.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="289.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (81 samples, 0.06%)</title><rect x="286.7" y="371.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.7" y="382.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (81 samples, 0.06%)</title><rect x="286.7" y="355.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.7" y="366.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (81 samples, 0.06%)</title><rect x="286.7" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.7" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$63/1029472813.get (54 samples, 0.04%)</title><rect x="286.7" y="323.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.7" y="334.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (54 samples, 0.04%)</title><rect x="286.7" y="307.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="289.7" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (599 samples, 0.43%)</title><rect x="287.4" y="387.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="290.4" y="398.0"></text>
</g>
<g>
<title>java/time/Instant.now (40 samples, 0.03%)</title><rect x="287.4" y="371.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.4" y="382.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (40 samples, 0.03%)</title><rect x="287.4" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.4" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (40 samples, 0.03%)</title><rect x="287.4" y="339.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.4" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.create (40 samples, 0.03%)</title><rect x="287.4" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.4" y="334.0"></text>
</g>
<g>
<title>java.time.Instant (40 samples, 0.03%)</title><rect x="287.4" y="307.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="290.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (559 samples, 0.40%)</title><rect x="287.8" y="371.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="290.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (246 samples, 0.18%)</title><rect x="287.8" y="355.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.8" y="366.0"></text>
</g>
<g>
<title>java/time/Instant.plus (53 samples, 0.04%)</title><rect x="287.8" y="339.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.8" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (53 samples, 0.04%)</title><rect x="287.8" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.8" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (53 samples, 0.04%)</title><rect x="287.8" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="290.8" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (53 samples, 0.04%)</title><rect x="287.8" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.8" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (53 samples, 0.04%)</title><rect x="287.8" y="275.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.8" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (53 samples, 0.04%)</title><rect x="287.8" y="259.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="290.8" y="270.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (41 samples, 0.03%)</title><rect x="288.2" y="339.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.2" y="350.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (41 samples, 0.03%)</title><rect x="288.2" y="323.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="291.2" y="334.0"></text>
</g>
<g>
<title>java/time/Instant.plus (41 samples, 0.03%)</title><rect x="288.2" y="307.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="291.2" y="318.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (41 samples, 0.03%)</title><rect x="288.2" y="291.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="291.2" y="302.0"></text>
</g>
<g>
<title>java/time/Instant.create (41 samples, 0.03%)</title><rect x="288.2" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.2" y="286.0"></text>
</g>
<g>
<title>java.time.Instant (41 samples, 0.03%)</title><rect x="288.2" y="259.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="291.2" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (56 samples, 0.04%)</title><rect x="288.5" y="339.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="291.5" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (56 samples, 0.04%)</title><rect x="288.5" y="323.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.5" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (56 samples, 0.04%)</title><rect x="288.5" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="291.5" y="318.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (39 samples, 0.03%)</title><rect x="289.1" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="292.1" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (39 samples, 0.03%)</title><rect x="289.1" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="292.1" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (39 samples, 0.03%)</title><rect x="289.1" y="307.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="292.1" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (53 samples, 0.04%)</title><rect x="289.4" y="339.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="292.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (87 samples, 0.06%)</title><rect x="289.8" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="292.8" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (41 samples, 0.03%)</title><rect x="289.8" y="339.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.8" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (41 samples, 0.03%)</title><rect x="289.8" y="323.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (41 samples, 0.03%)</title><rect x="289.8" y="307.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.03%)</title><rect x="289.8" y="291.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="292.8" y="302.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (46 samples, 0.03%)</title><rect x="290.2" y="339.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.2" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (46 samples, 0.03%)</title><rect x="290.2" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.2" y="334.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (46 samples, 0.03%)</title><rect x="290.2" y="307.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="293.2" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (226 samples, 0.16%)</title><rect x="290.6" y="355.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="293.6" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (51 samples, 0.04%)</title><rect x="290.6" y="339.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="293.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (175 samples, 0.12%)</title><rect x="291.0" y="339.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="294.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (55 samples, 0.04%)</title><rect x="291.0" y="323.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="294.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (55 samples, 0.04%)</title><rect x="291.0" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (55 samples, 0.04%)</title><rect x="291.0" y="291.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.0" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (55 samples, 0.04%)</title><rect x="291.0" y="275.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="294.0" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (120 samples, 0.09%)</title><rect x="291.4" y="323.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (120 samples, 0.09%)</title><rect x="291.4" y="307.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.4" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (82 samples, 0.06%)</title><rect x="291.4" y="291.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="294.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (38 samples, 0.03%)</title><rect x="292.1" y="291.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.1" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (38 samples, 0.03%)</title><rect x="292.1" y="275.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="295.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (597 samples, 0.43%)</title><rect x="292.5" y="435.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (597 samples, 0.43%)</title><rect x="292.5" y="419.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (597 samples, 0.43%)</title><rect x="292.5" y="403.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (597 samples, 0.43%)</title><rect x="292.5" y="387.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (536 samples, 0.38%)</title><rect x="292.5" y="371.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (536 samples, 0.38%)</title><rect x="292.5" y="355.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (416 samples, 0.30%)</title><rect x="292.5" y="339.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/GetBodyHandler$$Lambda$499/1081019303.apply (416 samples, 0.30%)</title><rect x="292.5" y="323.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/GetBodyHandler.lambda$apply$0 (416 samples, 0.30%)</title><rect x="292.5" y="307.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.5" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (207 samples, 0.15%)</title><rect x="292.5" y="291.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.5" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1879189356.invoke (207 samples, 0.15%)</title><rect x="292.5" y="275.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.5" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (207 samples, 0.15%)</title><rect x="292.5" y="259.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.5" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (80 samples, 0.06%)</title><rect x="292.5" y="243.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.5" y="254.0"></text>
</g>
<g>
<title>java.lang.String (80 samples, 0.06%)</title><rect x="292.5" y="227.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="295.5" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (127 samples, 0.09%)</title><rect x="293.1" y="243.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (127 samples, 0.09%)</title><rect x="293.1" y="227.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.1" y="238.0"></text>
</g>
<g>
<title>byte[] (127 samples, 0.09%)</title><rect x="293.1" y="211.0" width="1.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="296.1" y="222.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (209 samples, 0.15%)</title><rect x="294.2" y="291.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.2" y="302.0"></text>
</g>
<g>
<title>one.nio.http.Response (45 samples, 0.03%)</title><rect x="294.2" y="275.0" width="0.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="297.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (164 samples, 0.12%)</title><rect x="294.6" y="275.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.6" y="286.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.05%)</title><rect x="294.6" y="259.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="297.6" y="270.0"></text>
</g>
<g>
<title>java.lang.String[] (51 samples, 0.04%)</title><rect x="295.1" y="259.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="298.1" y="270.0"></text>
</g>
<g>
<title>java.lang.String (46 samples, 0.03%)</title><rect x="295.6" y="259.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="298.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (120 samples, 0.09%)</title><rect x="296.0" y="339.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (120 samples, 0.09%)</title><rect x="296.0" y="323.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="299.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/270619590.accept (120 samples, 0.09%)</title><rect x="296.0" y="307.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="299.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (120 samples, 0.09%)</title><rect x="296.0" y="291.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (120 samples, 0.09%)</title><rect x="296.0" y="275.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (120 samples, 0.09%)</title><rect x="296.0" y="259.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (120 samples, 0.09%)</title><rect x="296.0" y="243.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="299.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$450/1883991773.apply (120 samples, 0.09%)</title><rect x="296.0" y="227.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.0" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (120 samples, 0.09%)</title><rect x="296.0" y="211.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.0" y="222.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (120 samples, 0.09%)</title><rect x="296.0" y="195.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="299.0" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (61 samples, 0.04%)</title><rect x="297.0" y="371.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.0" y="382.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.04%)</title><rect x="297.0" y="355.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="300.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (149 samples, 0.11%)</title><rect x="297.5" y="435.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (149 samples, 0.11%)</title><rect x="297.5" y="419.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="300.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (149 samples, 0.11%)</title><rect x="297.5" y="403.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (149 samples, 0.11%)</title><rect x="297.5" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (149 samples, 0.11%)</title><rect x="297.5" y="371.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="300.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (149 samples, 0.11%)</title><rect x="297.5" y="355.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="300.5" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (149 samples, 0.11%)</title><rect x="297.5" y="339.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.5" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (41 samples, 0.03%)</title><rect x="297.5" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.03%)</title><rect x="297.5" y="307.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="300.5" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (108 samples, 0.08%)</title><rect x="297.8" y="323.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.8" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (108 samples, 0.08%)</title><rect x="297.8" y="307.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.8" y="318.0"></text>
</g>
<g>
<title>java.lang.Object[] (108 samples, 0.08%)</title><rect x="297.8" y="291.0" width="0.9" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="300.8" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1295475510.run (50,378 samples, 35.91%)</title><rect x="298.9" y="643.0" width="423.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="301.9" y="654.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (50,378 samples, 35.91%)</title><rect x="298.9" y="627.0" width="423.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.9" y="638.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execut..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (50,378 samples, 35.91%)</title><rect x="298.9" y="611.0" width="423.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="301.9" y="622.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>java/lang/String.getBytes (718 samples, 0.51%)</title><rect x="298.9" y="595.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="301.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (718 samples, 0.51%)</title><rect x="298.9" y="579.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (718 samples, 0.51%)</title><rect x="298.9" y="563.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (718 samples, 0.51%)</title><rect x="298.9" y="547.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="301.9" y="558.0"></text>
</g>
<g>
<title>byte[] (718 samples, 0.51%)</title><rect x="298.9" y="531.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="301.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (229 samples, 0.16%)</title><rect x="304.9" y="595.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.9" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (229 samples, 0.16%)</title><rect x="304.9" y="579.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="307.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$411/644013256.get$Lambda (79 samples, 0.06%)</title><rect x="305.0" y="563.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.0" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$411 (79 samples, 0.06%)</title><rect x="305.0" y="547.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="308.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$412/681916020.get$Lambda (76 samples, 0.05%)</title><rect x="305.7" y="563.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.7" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$412 (76 samples, 0.05%)</title><rect x="305.7" y="547.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="308.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$413/748337080.get$Lambda (60 samples, 0.04%)</title><rect x="306.3" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="309.3" y="574.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$413 (60 samples, 0.04%)</title><rect x="306.3" y="547.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="309.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (31 samples, 0.02%)</title><rect x="306.8" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="309.8" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (31 samples, 0.02%)</title><rect x="306.8" y="579.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="309.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (57 samples, 0.04%)</title><rect x="307.1" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (57 samples, 0.04%)</title><rect x="307.1" y="579.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (35 samples, 0.02%)</title><rect x="307.1" y="563.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="310.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (154 samples, 0.11%)</title><rect x="307.6" y="595.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (154 samples, 0.11%)</title><rect x="307.6" y="579.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.6" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (154 samples, 0.11%)</title><rect x="307.6" y="563.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.6" y="574.0"></text>
</g>
<g>
<title>java.lang.String (74 samples, 0.05%)</title><rect x="307.6" y="547.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="310.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.06%)</title><rect x="308.2" y="547.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.2" y="558.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.06%)</title><rect x="308.2" y="531.0" width="0.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="311.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (6,689 samples, 4.77%)</title><rect x="308.9" y="595.0" width="56.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="311.9" y="606.0">ru/mai..</text>
</g>
<g>
<title>java/lang/String.getBytes (65 samples, 0.05%)</title><rect x="308.9" y="579.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (65 samples, 0.05%)</title><rect x="308.9" y="563.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.9" y="574.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (65 samples, 0.05%)</title><rect x="308.9" y="547.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="311.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (65 samples, 0.05%)</title><rect x="308.9" y="531.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="311.9" y="542.0"></text>
</g>
<g>
<title>byte[] (65 samples, 0.05%)</title><rect x="308.9" y="515.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="311.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (81 samples, 0.06%)</title><rect x="309.5" y="579.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.5" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (81 samples, 0.06%)</title><rect x="309.5" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (144 samples, 0.10%)</title><rect x="310.1" y="579.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (144 samples, 0.10%)</title><rect x="310.1" y="563.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="313.1" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (87 samples, 0.06%)</title><rect x="310.1" y="547.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="313.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="310.9" y="547.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="313.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.04%)</title><rect x="310.9" y="531.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="313.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.04%)</title><rect x="310.9" y="515.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="313.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (4,021 samples, 2.87%)</title><rect x="311.4" y="579.0" width="33.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.4" y="590.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,021 samples, 2.87%)</title><rect x="311.4" y="563.0" width="33.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.4" y="574.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,021 samples, 2.87%)</title><rect x="311.4" y="547.0" width="33.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="314.4" y="558.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (4,021 samples, 2.87%)</title><rect x="311.4" y="531.0" width="33.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.4" y="542.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (31 samples, 0.02%)</title><rect x="311.4" y="515.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (31 samples, 0.02%)</title><rect x="311.4" y="499.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="314.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$195/1536212598.get$Lambda (31 samples, 0.02%)</title><rect x="311.4" y="483.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="314.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$195 (31 samples, 0.02%)</title><rect x="311.4" y="467.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="314.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (138 samples, 0.10%)</title><rect x="311.6" y="515.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (138 samples, 0.10%)</title><rect x="311.6" y="499.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.6" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (75 samples, 0.05%)</title><rect x="311.6" y="483.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="314.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.04%)</title><rect x="312.2" y="483.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="315.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (63 samples, 0.04%)</title><rect x="312.2" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="315.2" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (63 samples, 0.04%)</title><rect x="312.2" y="451.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="315.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (141 samples, 0.10%)</title><rect x="312.8" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (141 samples, 0.10%)</title><rect x="312.8" y="499.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.8" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (73 samples, 0.05%)</title><rect x="312.8" y="483.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="315.8" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.05%)</title><rect x="313.4" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="316.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (68 samples, 0.05%)</title><rect x="313.4" y="467.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.4" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (68 samples, 0.05%)</title><rect x="313.4" y="451.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="316.4" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (94 samples, 0.07%)</title><rect x="314.0" y="515.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="317.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (164 samples, 0.12%)</title><rect x="314.8" y="515.0" width="1.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="317.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,903 samples, 1.36%)</title><rect x="316.1" y="515.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.1" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (203 samples, 0.14%)</title><rect x="316.1" y="499.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="319.1" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (175 samples, 0.12%)</title><rect x="316.1" y="483.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.1" y="494.0"></text>
</g>
<g>
<title>java/util/List.spliterator (63 samples, 0.04%)</title><rect x="316.1" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.1" y="478.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (63 samples, 0.04%)</title><rect x="316.1" y="451.0" width="0.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="319.1" y="462.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (112 samples, 0.08%)</title><rect x="316.7" y="467.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="319.7" y="478.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (112 samples, 0.08%)</title><rect x="316.7" y="451.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="319.7" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (705 samples, 0.50%)</title><rect x="317.8" y="499.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.8" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (705 samples, 0.50%)</title><rect x="317.8" y="483.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="320.8" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (45 samples, 0.03%)</title><rect x="318.1" y="467.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="321.1" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (89 samples, 0.06%)</title><rect x="318.4" y="467.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="321.4" y="478.0"></text>
</g>
<g>
<title>java.util.TreeSet (42 samples, 0.03%)</title><rect x="319.2" y="467.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="322.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (56 samples, 0.04%)</title><rect x="319.5" y="467.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="322.5" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (56 samples, 0.04%)</title><rect x="319.5" y="451.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="322.5" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (56 samples, 0.04%)</title><rect x="319.5" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.5" y="446.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (56 samples, 0.04%)</title><rect x="319.5" y="419.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="322.5" y="430.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (275 samples, 0.20%)</title><rect x="320.0" y="467.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.0" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (275 samples, 0.20%)</title><rect x="320.0" y="451.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.0" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (275 samples, 0.20%)</title><rect x="320.0" y="435.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="323.0" y="446.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (275 samples, 0.20%)</title><rect x="320.0" y="419.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="323.0" y="430.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (88 samples, 0.06%)</title><rect x="320.0" y="403.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.0" y="414.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (88 samples, 0.06%)</title><rect x="320.0" y="387.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.0" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (88 samples, 0.06%)</title><rect x="320.0" y="371.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.0" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (88 samples, 0.06%)</title><rect x="320.0" y="355.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="323.0" y="366.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (88 samples, 0.06%)</title><rect x="320.0" y="339.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (88 samples, 0.06%)</title><rect x="320.0" y="323.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.0" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (88 samples, 0.06%)</title><rect x="320.0" y="307.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (88 samples, 0.06%)</title><rect x="320.0" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="323.0" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (88 samples, 0.06%)</title><rect x="320.0" y="275.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="323.0" y="286.0"></text>
</g>
<g>
<title>java/util/List.copyOf (111 samples, 0.08%)</title><rect x="320.7" y="403.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.7" y="414.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (111 samples, 0.08%)</title><rect x="320.7" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="323.7" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (59 samples, 0.04%)</title><rect x="320.7" y="371.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="323.7" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (59 samples, 0.04%)</title><rect x="320.7" y="355.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.7" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (59 samples, 0.04%)</title><rect x="320.7" y="339.0" width="0.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="323.7" y="350.0"></text>
</g>
<g>
<title>java/util/List.of (52 samples, 0.04%)</title><rect x="321.2" y="371.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.2" y="382.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (52 samples, 0.04%)</title><rect x="321.2" y="355.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="324.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (76 samples, 0.05%)</title><rect x="321.7" y="403.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="324.7" y="414.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (76 samples, 0.05%)</title><rect x="321.7" y="387.0" width="0.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="324.7" y="398.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (74 samples, 0.05%)</title><rect x="322.3" y="467.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="325.3" y="478.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (74 samples, 0.05%)</title><rect x="322.3" y="451.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="325.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (98 samples, 0.07%)</title><rect x="322.9" y="467.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="325.9" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap (98 samples, 0.07%)</title><rect x="322.9" y="451.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="325.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (32 samples, 0.02%)</title><rect x="323.8" y="499.0" width="0.2" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="326.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (712 samples, 0.51%)</title><rect x="324.0" y="499.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.0" y="510.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (712 samples, 0.51%)</title><rect x="324.0" y="483.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.0" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (656 samples, 0.47%)</title><rect x="324.0" y="467.0" width="5.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="327.0" y="478.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (656 samples, 0.47%)</title><rect x="324.0" y="451.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="327.0" y="462.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (656 samples, 0.47%)</title><rect x="324.0" y="435.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.0" y="446.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (127 samples, 0.09%)</title><rect x="324.0" y="419.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="327.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (188 samples, 0.13%)</title><rect x="325.1" y="419.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.1" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (188 samples, 0.13%)</title><rect x="325.1" y="403.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.1" y="414.0"></text>
</g>
<g>
<title>byte[] (188 samples, 0.13%)</title><rect x="325.1" y="387.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="328.1" y="398.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (341 samples, 0.24%)</title><rect x="326.7" y="419.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.7" y="430.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (341 samples, 0.24%)</title><rect x="326.7" y="403.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.7" y="414.0"></text>
</g>
<g>
<title>java.lang.String (152 samples, 0.11%)</title><rect x="326.7" y="387.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="329.7" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (189 samples, 0.13%)</title><rect x="328.0" y="387.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.0" y="398.0"></text>
</g>
<g>
<title>byte[] (189 samples, 0.13%)</title><rect x="328.0" y="371.0" width="1.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="331.0" y="382.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (56 samples, 0.04%)</title><rect x="329.6" y="467.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="332.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (91 samples, 0.06%)</title><rect x="330.0" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="333.0" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap (91 samples, 0.06%)</title><rect x="330.0" y="483.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="333.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (160 samples, 0.11%)</title><rect x="330.8" y="499.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.8" y="510.0"></text>
</g>
<g>
<title>java.util.ArrayList (42 samples, 0.03%)</title><rect x="330.8" y="483.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="333.8" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (38 samples, 0.03%)</title><rect x="331.1" y="483.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Object[] (38 samples, 0.03%)</title><rect x="331.1" y="467.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="334.1" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (80 samples, 0.06%)</title><rect x="331.5" y="483.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="334.5" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (80 samples, 0.06%)</title><rect x="331.5" y="467.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="334.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (1,039 samples, 0.74%)</title><rect x="332.1" y="515.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.1" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (39 samples, 0.03%)</title><rect x="332.1" y="499.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="335.1" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.map (106 samples, 0.08%)</title><rect x="332.5" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="335.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/167629462.apply (106 samples, 0.08%)</title><rect x="332.5" y="483.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="335.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (50 samples, 0.04%)</title><rect x="332.5" y="467.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="335.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (56 samples, 0.04%)</title><rect x="332.9" y="467.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="335.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (56 samples, 0.04%)</title><rect x="332.9" y="451.0" width="0.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="335.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (124 samples, 0.09%)</title><rect x="333.4" y="499.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="336.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (44 samples, 0.03%)</title><rect x="334.4" y="499.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="337.4" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (44 samples, 0.03%)</title><rect x="334.4" y="483.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="337.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (37 samples, 0.03%)</title><rect x="334.8" y="499.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="337.8" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (37 samples, 0.03%)</title><rect x="334.8" y="483.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.8" y="494.0"></text>
</g>
<g>
<title>java/util/Optional.of (37 samples, 0.03%)</title><rect x="334.8" y="467.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="337.8" y="478.0"></text>
</g>
<g>
<title>java.util.Optional (37 samples, 0.03%)</title><rect x="334.8" y="451.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="337.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (689 samples, 0.49%)</title><rect x="335.1" y="499.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="338.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (689 samples, 0.49%)</title><rect x="335.1" y="483.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="338.1" y="494.0"></text>
</g>
<g>
<title>java.lang.Class[] (57 samples, 0.04%)</title><rect x="335.1" y="467.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="338.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (61 samples, 0.04%)</title><rect x="335.6" y="467.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="338.6" y="478.0"></text>
</g>
<g>
<title>java.util.LinkedList (58 samples, 0.04%)</title><rect x="336.1" y="467.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="339.1" y="478.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (323 samples, 0.23%)</title><rect x="336.6" y="467.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (323 samples, 0.23%)</title><rect x="336.6" y="451.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="339.6" y="462.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (323 samples, 0.23%)</title><rect x="336.6" y="435.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="339.6" y="446.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (323 samples, 0.23%)</title><rect x="336.6" y="419.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.6" y="430.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (323 samples, 0.23%)</title><rect x="336.6" y="403.0" width="2.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="339.6" y="414.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (107 samples, 0.08%)</title><rect x="339.3" y="467.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (107 samples, 0.08%)</title><rect x="339.3" y="451.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2107.newInstance (78 samples, 0.06%)</title><rect x="339.5" y="435.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="342.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (78 samples, 0.06%)</title><rect x="339.5" y="419.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="342.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (83 samples, 0.06%)</title><rect x="340.2" y="467.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="343.2" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (83 samples, 0.06%)</title><rect x="340.2" y="451.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="343.2" y="462.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (83 samples, 0.06%)</title><rect x="340.2" y="435.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="343.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (511 samples, 0.36%)</title><rect x="340.9" y="515.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (92 samples, 0.07%)</title><rect x="340.9" y="499.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.9" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (36 samples, 0.03%)</title><rect x="340.9" y="483.0" width="0.3" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="343.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (56 samples, 0.04%)</title><rect x="341.2" y="483.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (56 samples, 0.04%)</title><rect x="341.2" y="467.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="344.2" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (53 samples, 0.04%)</title><rect x="341.2" y="451.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="344.2" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (75 samples, 0.05%)</title><rect x="341.6" y="499.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="344.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (344 samples, 0.25%)</title><rect x="342.3" y="499.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="345.3" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.04%)</title><rect x="342.3" y="483.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="345.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.04%)</title><rect x="342.3" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="345.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/699148914.get$Lambda (34 samples, 0.02%)</title><rect x="342.5" y="451.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="345.5" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$183 (34 samples, 0.02%)</title><rect x="342.5" y="435.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="345.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (283 samples, 0.20%)</title><rect x="342.8" y="483.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (283 samples, 0.20%)</title><rect x="342.8" y="467.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="345.8" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (149 samples, 0.11%)</title><rect x="342.8" y="451.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="345.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (134 samples, 0.10%)</title><rect x="344.0" y="451.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="347.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (134 samples, 0.10%)</title><rect x="344.0" y="435.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="347.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (134 samples, 0.10%)</title><rect x="344.0" y="419.0" width="1.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="347.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (818 samples, 0.58%)</title><rect x="345.2" y="579.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="348.2" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (82 samples, 0.06%)</title><rect x="345.2" y="563.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="348.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (736 samples, 0.52%)</title><rect x="345.9" y="563.0" width="6.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.9" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (703 samples, 0.50%)</title><rect x="345.9" y="547.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="348.9" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (703 samples, 0.50%)</title><rect x="345.9" y="531.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.9" y="542.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (37 samples, 0.03%)</title><rect x="345.9" y="515.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="348.9" y="526.0"></text>
</g>
<g>
<title>java.util.ArrayList (57 samples, 0.04%)</title><rect x="346.2" y="515.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="349.2" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (89 samples, 0.06%)</title><rect x="346.7" y="515.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="349.7" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (66 samples, 0.05%)</title><rect x="347.6" y="515.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (66 samples, 0.05%)</title><rect x="347.6" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (66 samples, 0.05%)</title><rect x="347.6" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.6" y="494.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (66 samples, 0.05%)</title><rect x="347.6" y="467.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="350.6" y="478.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (59 samples, 0.04%)</title><rect x="348.1" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.1" y="526.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (59 samples, 0.04%)</title><rect x="348.1" y="499.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="351.1" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (269 samples, 0.19%)</title><rect x="348.6" y="515.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (269 samples, 0.19%)</title><rect x="348.6" y="499.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (269 samples, 0.19%)</title><rect x="348.6" y="483.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (103 samples, 0.07%)</title><rect x="348.6" y="467.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="351.6" y="478.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (103 samples, 0.07%)</title><rect x="348.6" y="451.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.6" y="462.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (103 samples, 0.07%)</title><rect x="348.6" y="435.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="351.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.07%)</title><rect x="348.6" y="419.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.6" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (103 samples, 0.07%)</title><rect x="348.6" y="403.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="351.6" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.07%)</title><rect x="348.6" y="387.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.6" y="398.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (103 samples, 0.07%)</title><rect x="348.6" y="371.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.6" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (103 samples, 0.07%)</title><rect x="348.6" y="355.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.6" y="366.0"></text>
</g>
<g>
<title>java.lang.Object[] (103 samples, 0.07%)</title><rect x="348.6" y="339.0" width="0.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="351.6" y="350.0"></text>
</g>
<g>
<title>java/util/List.copyOf (88 samples, 0.06%)</title><rect x="349.5" y="467.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.5" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (88 samples, 0.06%)</title><rect x="349.5" y="451.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="352.5" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (44 samples, 0.03%)</title><rect x="349.5" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.5" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.03%)</title><rect x="349.5" y="419.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.5" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.03%)</title><rect x="349.5" y="403.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="352.5" y="414.0"></text>
</g>
<g>
<title>java/util/List.of (44 samples, 0.03%)</title><rect x="349.9" y="435.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.9" y="446.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (44 samples, 0.03%)</title><rect x="349.9" y="419.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="352.9" y="430.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (78 samples, 0.06%)</title><rect x="350.3" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.3" y="478.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (78 samples, 0.06%)</title><rect x="350.3" y="451.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="353.3" y="462.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (103 samples, 0.07%)</title><rect x="350.9" y="515.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.9" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap (103 samples, 0.07%)</title><rect x="350.9" y="499.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="353.9" y="510.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (33 samples, 0.02%)</title><rect x="351.8" y="547.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.8" y="558.0"></text>
</g>
<g>
<title>java/util/Optional.of (33 samples, 0.02%)</title><rect x="351.8" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="354.8" y="542.0"></text>
</g>
<g>
<title>java.util.Optional (33 samples, 0.02%)</title><rect x="351.8" y="515.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="354.8" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (133 samples, 0.09%)</title><rect x="352.1" y="579.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (133 samples, 0.09%)</title><rect x="352.1" y="563.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="355.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (133 samples, 0.09%)</title><rect x="352.1" y="547.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="355.1" y="558.0"></text>
</g>
<g>
<title>java.lang.String (66 samples, 0.05%)</title><rect x="352.1" y="531.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="355.1" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (67 samples, 0.05%)</title><rect x="352.6" y="531.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="355.6" y="542.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.05%)</title><rect x="352.6" y="515.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="355.6" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (124 samples, 0.09%)</title><rect x="353.2" y="579.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="356.2" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (124 samples, 0.09%)</title><rect x="353.2" y="563.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.2" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (124 samples, 0.09%)</title><rect x="353.2" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.2" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (124 samples, 0.09%)</title><rect x="353.2" y="531.0" width="1.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="356.2" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.requestForRepl (1,255 samples, 0.89%)</title><rect x="354.2" y="579.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="357.2" y="590.0"></text>
</g>
<g>
<title>java.net.URI (129 samples, 0.09%)</title><rect x="354.2" y="563.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="357.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (174 samples, 0.12%)</title><rect x="355.3" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.3" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (174 samples, 0.12%)</title><rect x="355.3" y="547.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="358.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1954471782.invoke (174 samples, 0.12%)</title><rect x="355.3" y="531.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="358.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (174 samples, 0.12%)</title><rect x="355.3" y="515.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="358.3" y="526.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (49 samples, 0.03%)</title><rect x="355.3" y="499.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="358.3" y="510.0"></text>
</g>
<g>
<title>java.lang.String (49 samples, 0.03%)</title><rect x="355.3" y="483.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="358.3" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (125 samples, 0.09%)</title><rect x="355.7" y="499.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (125 samples, 0.09%)</title><rect x="355.7" y="483.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.7" y="494.0"></text>
</g>
<g>
<title>byte[] (125 samples, 0.09%)</title><rect x="355.7" y="467.0" width="1.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="358.7" y="478.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (566 samples, 0.40%)</title><rect x="356.8" y="563.0" width="4.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.8" y="574.0"></text>
</g>
<g>
<title>java.net.URI$Parser (55 samples, 0.04%)</title><rect x="356.8" y="547.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="359.8" y="558.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (511 samples, 0.36%)</title><rect x="357.2" y="547.0" width="4.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.2" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (98 samples, 0.07%)</title><rect x="357.2" y="531.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="360.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (98 samples, 0.07%)</title><rect x="357.2" y="515.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.2" y="526.0"></text>
</g>
<g>
<title>java.lang.String (53 samples, 0.04%)</title><rect x="357.2" y="499.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="360.2" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (45 samples, 0.03%)</title><rect x="357.7" y="499.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.7" y="510.0"></text>
</g>
<g>
<title>byte[] (45 samples, 0.03%)</title><rect x="357.7" y="483.0" width="0.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="360.7" y="494.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (413 samples, 0.29%)</title><rect x="358.0" y="531.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.0" y="542.0"></text>
</g>
<g>
<title>java/lang/String.substring (220 samples, 0.16%)</title><rect x="358.0" y="515.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="361.0" y="526.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (220 samples, 0.16%)</title><rect x="358.0" y="499.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.0" y="510.0"></text>
</g>
<g>
<title>java.lang.String (88 samples, 0.06%)</title><rect x="358.0" y="483.0" width="0.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="361.0" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (132 samples, 0.09%)</title><rect x="358.8" y="483.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.8" y="494.0"></text>
</g>
<g>
<title>byte[] (132 samples, 0.09%)</title><rect x="358.8" y="467.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="361.8" y="478.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (193 samples, 0.14%)</title><rect x="359.9" y="515.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="362.9" y="526.0"></text>
</g>
<g>
<title>java/lang/String.substring (84 samples, 0.06%)</title><rect x="359.9" y="499.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.9" y="510.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (84 samples, 0.06%)</title><rect x="359.9" y="483.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="362.9" y="494.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.02%)</title><rect x="359.9" y="467.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="362.9" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (50 samples, 0.04%)</title><rect x="360.2" y="467.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="363.2" y="478.0"></text>
</g>
<g>
<title>byte[] (50 samples, 0.04%)</title><rect x="360.2" y="451.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="363.2" y="462.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (109 samples, 0.08%)</title><rect x="360.6" y="499.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.6" y="510.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (109 samples, 0.08%)</title><rect x="360.6" y="483.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="363.6" y="494.0"></text>
</g>
<g>
<title>java/lang/String.substring (109 samples, 0.08%)</title><rect x="360.6" y="467.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.6" y="478.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (109 samples, 0.08%)</title><rect x="360.6" y="451.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.6" y="462.0"></text>
</g>
<g>
<title>java.lang.String (51 samples, 0.04%)</title><rect x="360.6" y="435.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="363.6" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.04%)</title><rect x="361.0" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.0" y="446.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.04%)</title><rect x="361.0" y="419.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="364.0" y="430.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (204 samples, 0.15%)</title><rect x="361.5" y="563.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.5" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (77 samples, 0.05%)</title><rect x="361.5" y="547.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="364.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (127 samples, 0.09%)</title><rect x="362.2" y="547.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (101 samples, 0.07%)</title><rect x="362.4" y="531.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="365.4" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (101 samples, 0.07%)</title><rect x="362.4" y="515.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="365.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (182 samples, 0.13%)</title><rect x="363.2" y="563.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (182 samples, 0.13%)</title><rect x="363.2" y="547.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (182 samples, 0.13%)</title><rect x="363.2" y="531.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.2" y="542.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (182 samples, 0.13%)</title><rect x="363.2" y="515.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.2" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (71 samples, 0.05%)</title><rect x="363.2" y="499.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.2" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (71 samples, 0.05%)</title><rect x="363.2" y="483.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="366.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$142/1636010248.apply (111 samples, 0.08%)</title><rect x="363.8" y="499.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.8" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (111 samples, 0.08%)</title><rect x="363.8" y="483.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.8" y="494.0"></text>
</g>
<g>
<title>java.util.ArrayList (51 samples, 0.04%)</title><rect x="363.8" y="467.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="366.8" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (60 samples, 0.04%)</title><rect x="364.3" y="467.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="367.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (60 samples, 0.04%)</title><rect x="364.3" y="451.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="367.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (48 samples, 0.03%)</title><rect x="364.8" y="579.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="367.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (48 samples, 0.03%)</title><rect x="364.8" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="367.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (48 samples, 0.03%)</title><rect x="364.8" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="367.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (296 samples, 0.21%)</title><rect x="365.2" y="595.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="368.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (296 samples, 0.21%)</title><rect x="365.2" y="579.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="368.2" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (74 samples, 0.05%)</title><rect x="365.3" y="563.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (47 samples, 0.03%)</title><rect x="365.5" y="547.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.5" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (33 samples, 0.02%)</title><rect x="365.5" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="368.5" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (33 samples, 0.02%)</title><rect x="365.5" y="515.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.5" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (33 samples, 0.02%)</title><rect x="365.5" y="499.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="368.5" y="510.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (211 samples, 0.15%)</title><rect x="365.9" y="563.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="368.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (52 samples, 0.04%)</title><rect x="365.9" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="368.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (52 samples, 0.04%)</title><rect x="365.9" y="531.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="368.9" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (159 samples, 0.11%)</title><rect x="366.3" y="547.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="369.3" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (159 samples, 0.11%)</title><rect x="366.3" y="531.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="369.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (130 samples, 0.09%)</title><rect x="366.6" y="515.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="369.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (130 samples, 0.09%)</title><rect x="366.6" y="499.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.6" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (130 samples, 0.09%)</title><rect x="366.6" y="483.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="369.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (79 samples, 0.06%)</title><rect x="367.7" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (79 samples, 0.06%)</title><rect x="367.7" y="579.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.7" y="590.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (59 samples, 0.04%)</title><rect x="367.7" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="370.7" y="574.0"></text>
</g>
<g>
<title>java.lang.Integer (59 samples, 0.04%)</title><rect x="367.7" y="547.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="370.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (354 samples, 0.25%)</title><rect x="368.3" y="595.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="371.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (354 samples, 0.25%)</title><rect x="368.3" y="579.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.3" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (41 samples, 0.03%)</title><rect x="368.5" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="371.5" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (41 samples, 0.03%)</title><rect x="368.5" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="371.5" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (41 samples, 0.03%)</title><rect x="368.5" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="371.5" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (41 samples, 0.03%)</title><rect x="368.5" y="515.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="371.5" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (41 samples, 0.03%)</title><rect x="368.5" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.5" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.03%)</title><rect x="368.5" y="483.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="371.5" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (287 samples, 0.20%)</title><rect x="368.9" y="563.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="371.9" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (84 samples, 0.06%)</title><rect x="369.0" y="547.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="372.0" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (41 samples, 0.03%)</title><rect x="369.0" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.0" y="542.0"></text>
</g>
<g>
<title>java.lang.String[] (41 samples, 0.03%)</title><rect x="369.0" y="515.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="372.0" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (43 samples, 0.03%)</title><rect x="369.4" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (34 samples, 0.02%)</title><rect x="369.4" y="515.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="372.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (34 samples, 0.02%)</title><rect x="369.4" y="499.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="372.4" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (34 samples, 0.02%)</title><rect x="369.4" y="483.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="372.4" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (186 samples, 0.13%)</title><rect x="369.7" y="547.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.7" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (38 samples, 0.03%)</title><rect x="369.7" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.7" y="542.0"></text>
</g>
<g>
<title>java.util.TreeMap (38 samples, 0.03%)</title><rect x="369.7" y="515.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="372.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (148 samples, 0.11%)</title><rect x="370.1" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="373.1" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (148 samples, 0.11%)</title><rect x="370.1" y="515.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.1" y="526.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (120 samples, 0.09%)</title><rect x="370.3" y="499.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="373.3" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (120 samples, 0.09%)</title><rect x="370.3" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="373.3" y="494.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (120 samples, 0.09%)</title><rect x="370.3" y="467.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="373.3" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.atLeastAsync (429 samples, 0.31%)</title><rect x="371.3" y="595.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="374.3" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (36 samples, 0.03%)</title><rect x="371.7" y="579.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="374.7" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (325 samples, 0.23%)</title><rect x="372.0" y="579.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="375.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$204/1505551486.accept (325 samples, 0.23%)</title><rect x="372.0" y="563.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$1 (325 samples, 0.23%)</title><rect x="372.0" y="547.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (117 samples, 0.08%)</title><rect x="372.0" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="375.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (117 samples, 0.08%)</title><rect x="372.0" y="515.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="375.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.get$Lambda (117 samples, 0.08%)</title><rect x="372.0" y="499.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="375.0" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.Futures$$Lambda$206 (117 samples, 0.08%)</title><rect x="372.0" y="483.0" width="1.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="375.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (208 samples, 0.15%)</title><rect x="373.0" y="531.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (208 samples, 0.15%)</title><rect x="373.0" y="515.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="376.0" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (126 samples, 0.09%)</title><rect x="373.0" y="499.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="376.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.04%)</title><rect x="374.2" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="377.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (55 samples, 0.04%)</title><rect x="374.2" y="483.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="377.2" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (55 samples, 0.04%)</title><rect x="374.2" y="467.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="377.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (233 samples, 0.17%)</title><rect x="374.9" y="595.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="377.9" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (233 samples, 0.17%)</title><rect x="374.9" y="579.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.9" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (233 samples, 0.17%)</title><rect x="374.9" y="563.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="377.9" y="574.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (233 samples, 0.17%)</title><rect x="374.9" y="547.0" width="2.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="377.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (41,102 samples, 29.29%)</title><rect x="376.9" y="595.0" width="345.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="379.9" y="606.0">ru/mail/polis/service/gogun/ServiceUtils.selector</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (729 samples, 0.52%)</title><rect x="376.9" y="579.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (557 samples, 0.40%)</title><rect x="376.9" y="563.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="379.9" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (433 samples, 0.31%)</title><rect x="376.9" y="547.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.9" y="558.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (433 samples, 0.31%)</title><rect x="376.9" y="531.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.9" y="542.0"></text>
</g>
<g>
<title>byte[] (396 samples, 0.28%)</title><rect x="376.9" y="515.0" width="3.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="379.9" y="526.0"></text>
</g>
<g>
<title>byte[] (37 samples, 0.03%)</title><rect x="380.2" y="515.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="383.2" y="526.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (124 samples, 0.09%)</title><rect x="380.5" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.5" y="558.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (124 samples, 0.09%)</title><rect x="380.5" y="531.0" width="1.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="383.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (172 samples, 0.12%)</title><rect x="381.6" y="563.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="384.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (172 samples, 0.12%)</title><rect x="381.6" y="547.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.6" y="558.0"></text>
</g>
<g>
<title>java.lang.String[] (172 samples, 0.12%)</title><rect x="381.6" y="531.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="384.6" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$412/681916020.get (40,373 samples, 28.77%)</title><rect x="383.0" y="579.0" width="339.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="386.0" y="590.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$3 (40,373 samples, 28.77%)</title><rect x="383.0" y="563.0" width="339.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.0" y="574.0">ru/mail/polis/service/gogun/AsyncServiceImpl.l..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (40,373 samples, 28.77%)</title><rect x="383.0" y="547.0" width="339.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="386.0" y="558.0">ru/mail/polis/service/gogun/AsyncServiceImpl.h..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (237 samples, 0.17%)</title><rect x="383.0" y="531.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.0" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1287890507.invoke (237 samples, 0.17%)</title><rect x="383.0" y="515.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.0" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (237 samples, 0.17%)</title><rect x="383.0" y="499.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="386.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (89 samples, 0.06%)</title><rect x="383.0" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.0" y="494.0"></text>
</g>
<g>
<title>java.lang.String (89 samples, 0.06%)</title><rect x="383.0" y="467.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="386.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (148 samples, 0.11%)</title><rect x="383.7" y="483.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (148 samples, 0.11%)</title><rect x="383.7" y="467.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.7" y="478.0"></text>
</g>
<g>
<title>byte[] (148 samples, 0.11%)</title><rect x="383.7" y="451.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="386.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (387 samples, 0.28%)</title><rect x="385.0" y="531.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.0" y="542.0"></text>
</g>
<g>
<title>one.nio.http.Response (80 samples, 0.06%)</title><rect x="385.0" y="515.0" width="0.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="388.0" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (307 samples, 0.22%)</title><rect x="385.7" y="515.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.7" y="526.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.10%)</title><rect x="385.7" y="499.0" width="1.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="388.7" y="510.0"></text>
</g>
<g>
<title>java.lang.String[] (105 samples, 0.07%)</title><rect x="386.8" y="499.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="389.8" y="510.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.05%)</title><rect x="387.7" y="499.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="390.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (39,643 samples, 28.25%)</title><rect x="388.2" y="531.0" width="333.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.2" y="542.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (6,829 samples, 4.87%)</title><rect x="388.2" y="515.0" width="57.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.2" y="526.0">ru/mai..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5,875 samples, 4.19%)</title><rect x="388.2" y="499.0" width="49.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.2" y="510.0">com/g..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (985 samples, 0.70%)</title><rect x="388.2" y="483.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.2" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (985 samples, 0.70%)</title><rect x="388.2" y="467.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.2" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (985 samples, 0.70%)</title><rect x="388.2" y="451.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="391.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (985 samples, 0.70%)</title><rect x="388.2" y="435.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="391.2" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (985 samples, 0.70%)</title><rect x="388.2" y="419.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="391.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (985 samples, 0.70%)</title><rect x="388.2" y="403.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (985 samples, 0.70%)</title><rect x="388.2" y="387.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (985 samples, 0.70%)</title><rect x="388.2" y="371.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.2" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (985 samples, 0.70%)</title><rect x="388.2" y="355.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (985 samples, 0.70%)</title><rect x="388.2" y="339.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="391.2" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (985 samples, 0.70%)</title><rect x="388.2" y="323.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="391.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (985 samples, 0.70%)</title><rect x="388.2" y="307.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.2" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (985 samples, 0.70%)</title><rect x="388.2" y="291.0" width="8.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="391.2" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4,890 samples, 3.49%)</title><rect x="396.5" y="483.0" width="41.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.5" y="494.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4,890 samples, 3.49%)</title><rect x="396.5" y="467.0" width="41.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.5" y="478.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4,890 samples, 3.49%)</title><rect x="396.5" y="451.0" width="41.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.5" y="462.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4,890 samples, 3.49%)</title><rect x="396.5" y="435.0" width="41.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="399.5" y="446.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,890 samples, 3.49%)</title><rect x="396.5" y="419.0" width="41.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.5" y="430.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,890 samples, 3.49%)</title><rect x="396.5" y="403.0" width="41.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="399.5" y="414.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3,900 samples, 2.78%)</title><rect x="396.5" y="387.0" width="32.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.5" y="398.0">co..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (71 samples, 0.05%)</title><rect x="396.5" y="371.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="399.5" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (71 samples, 0.05%)</title><rect x="396.5" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.5" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable$$Lambda$468/1112584852.apply (71 samples, 0.05%)</title><rect x="396.5" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="399.5" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.lambda$iterator$0 (71 samples, 0.05%)</title><rect x="396.5" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.5" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (71 samples, 0.05%)</title><rect x="396.5" y="307.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="399.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (3,829 samples, 2.73%)</title><rect x="397.1" y="371.0" width="32.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.1" y="382.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (3,829 samples, 2.73%)</title><rect x="397.1" y="355.0" width="32.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.1" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (3,829 samples, 2.73%)</title><rect x="397.1" y="339.0" width="32.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.1" y="350.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,939 samples, 1.38%)</title><rect x="397.1" y="323.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="400.1" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,228 samples, 0.88%)</title><rect x="397.1" y="307.0" width="10.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="400.1" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (711 samples, 0.51%)</title><rect x="407.5" y="307.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="410.5" y="318.0"></text>
</g>
<g>
<title>byte[] (711 samples, 0.51%)</title><rect x="407.5" y="291.0" width="5.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="410.5" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (143 samples, 0.10%)</title><rect x="413.4" y="323.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="416.4" y="334.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (160 samples, 0.11%)</title><rect x="414.6" y="323.0" width="1.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="417.6" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (1,475 samples, 1.05%)</title><rect x="416.0" y="323.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.0" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,475 samples, 1.05%)</title><rect x="416.0" y="307.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="419.0" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (978 samples, 0.70%)</title><rect x="416.0" y="291.0" width="8.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="419.0" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (497 samples, 0.35%)</title><rect x="424.2" y="291.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.2" y="302.0"></text>
</g>
<g>
<title>byte[] (497 samples, 0.35%)</title><rect x="424.2" y="275.0" width="4.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="427.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (112 samples, 0.08%)</title><rect x="428.4" y="323.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.4" y="334.0"></text>
</g>
<g>
<title>java/util/Optional.of (112 samples, 0.08%)</title><rect x="428.4" y="307.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.4" y="318.0"></text>
</g>
<g>
<title>java.util.Optional (112 samples, 0.08%)</title><rect x="428.4" y="291.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="431.4" y="302.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (990 samples, 0.71%)</title><rect x="429.3" y="387.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.3" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (990 samples, 0.71%)</title><rect x="429.3" y="371.0" width="8.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.3" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (990 samples, 0.71%)</title><rect x="429.3" y="355.0" width="8.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.3" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (990 samples, 0.71%)</title><rect x="429.3" y="339.0" width="8.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="432.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (990 samples, 0.71%)</title><rect x="429.3" y="323.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (990 samples, 0.71%)</title><rect x="429.3" y="307.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (990 samples, 0.71%)</title><rect x="429.3" y="291.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (990 samples, 0.71%)</title><rect x="429.3" y="275.0" width="8.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="432.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$493/1711690302.apply (954 samples, 0.68%)</title><rect x="437.7" y="499.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="440.7" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (954 samples, 0.68%)</title><rect x="437.7" y="483.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (954 samples, 0.68%)</title><rect x="437.7" y="467.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="440.7" y="478.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (954 samples, 0.68%)</title><rect x="437.7" y="451.0" width="8.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="440.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (32,814 samples, 23.39%)</title><rect x="445.7" y="515.0" width="276.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.7" y="526.0">ru/mail/polis/dao/gogun/DAOImpl.rowIt..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5,403 samples, 3.85%)</title><rect x="445.7" y="499.0" width="45.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="448.7" y="510.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (51 samples, 0.04%)</title><rect x="445.7" y="483.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="448.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5,352 samples, 3.81%)</title><rect x="446.1" y="483.0" width="45.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="449.1" y="494.0">com/..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (98 samples, 0.07%)</title><rect x="446.1" y="467.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="449.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (228 samples, 0.16%)</title><rect x="446.9" y="467.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.9" y="478.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (228 samples, 0.16%)</title><rect x="446.9" y="451.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="449.9" y="462.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (105 samples, 0.07%)</title><rect x="448.9" y="467.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="451.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (82 samples, 0.06%)</title><rect x="449.7" y="467.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.7" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (82 samples, 0.06%)</title><rect x="449.7" y="451.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="452.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4,839 samples, 3.45%)</title><rect x="450.4" y="467.0" width="40.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="453.4" y="478.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4,839 samples, 3.45%)</title><rect x="450.4" y="451.0" width="40.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.4" y="462.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (160 samples, 0.11%)</title><rect x="450.4" y="435.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="453.4" y="446.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (160 samples, 0.11%)</title><rect x="450.4" y="419.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.4" y="430.0"></text>
</g>
<g>
<title>java.lang.Object[] (160 samples, 0.11%)</title><rect x="450.4" y="403.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="453.4" y="414.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4,679 samples, 3.33%)</title><rect x="451.8" y="435.0" width="39.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.8" y="446.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4,679 samples, 3.33%)</title><rect x="451.8" y="419.0" width="39.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.8" y="430.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,679 samples, 3.33%)</title><rect x="451.8" y="403.0" width="39.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.8" y="414.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4,679 samples, 3.33%)</title><rect x="451.8" y="387.0" width="39.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="454.8" y="398.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (4,054 samples, 2.89%)</title><rect x="451.8" y="371.0" width="34.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.8" y="382.0">co..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (164 samples, 0.12%)</title><rect x="451.8" y="355.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.8" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (75 samples, 0.05%)</title><rect x="451.8" y="339.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="454.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable$$Lambda$468/1112584852.apply (75 samples, 0.05%)</title><rect x="451.8" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.8" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.lambda$iterator$0 (75 samples, 0.05%)</title><rect x="451.8" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="454.8" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (75 samples, 0.05%)</title><rect x="451.8" y="291.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="454.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (89 samples, 0.06%)</title><rect x="452.4" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (89 samples, 0.06%)</title><rect x="452.4" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.4" y="334.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (89 samples, 0.06%)</title><rect x="452.4" y="307.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="455.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (3,890 samples, 2.77%)</title><rect x="453.1" y="355.0" width="32.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="456.1" y="366.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (3,890 samples, 2.77%)</title><rect x="453.1" y="339.0" width="32.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.1" y="350.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (3,890 samples, 2.77%)</title><rect x="453.1" y="323.0" width="32.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="456.1" y="334.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,962 samples, 1.40%)</title><rect x="453.1" y="307.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="456.1" y="318.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,274 samples, 0.91%)</title><rect x="453.1" y="291.0" width="10.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="456.1" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (688 samples, 0.49%)</title><rect x="463.9" y="291.0" width="5.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.9" y="302.0"></text>
</g>
<g>
<title>byte[] (688 samples, 0.49%)</title><rect x="463.9" y="275.0" width="5.8" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="466.9" y="286.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (170 samples, 0.12%)</title><rect x="469.7" y="307.0" width="1.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="472.7" y="318.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (174 samples, 0.12%)</title><rect x="471.1" y="307.0" width="1.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="474.1" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (1,473 samples, 1.05%)</title><rect x="472.5" y="307.0" width="12.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,473 samples, 1.05%)</title><rect x="472.5" y="291.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.5" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (967 samples, 0.69%)</title><rect x="472.5" y="275.0" width="8.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="475.5" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (506 samples, 0.36%)</title><rect x="480.7" y="275.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="483.7" y="286.0"></text>
</g>
<g>
<title>byte[] (506 samples, 0.36%)</title><rect x="480.7" y="259.0" width="4.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="483.7" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (111 samples, 0.08%)</title><rect x="484.9" y="307.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="487.9" y="318.0"></text>
</g>
<g>
<title>java/util/Optional.of (111 samples, 0.08%)</title><rect x="484.9" y="291.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.9" y="302.0"></text>
</g>
<g>
<title>java.util.Optional (111 samples, 0.08%)</title><rect x="484.9" y="275.0" width="1.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="487.9" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (625 samples, 0.45%)</title><rect x="485.9" y="371.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.9" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (625 samples, 0.45%)</title><rect x="485.9" y="355.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="488.9" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (625 samples, 0.45%)</title><rect x="485.9" y="339.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="488.9" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (625 samples, 0.45%)</title><rect x="485.9" y="323.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.9" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (625 samples, 0.45%)</title><rect x="485.9" y="307.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.9" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (625 samples, 0.45%)</title><rect x="485.9" y="291.0" width="5.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.9" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (625 samples, 0.45%)</title><rect x="485.9" y="275.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.9" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (625 samples, 0.45%)</title><rect x="485.9" y="259.0" width="5.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="488.9" y="270.0"></text>
</g>
<g>
<title>java.util.ArrayList (73 samples, 0.05%)</title><rect x="491.1" y="499.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="494.1" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (25,781 samples, 18.37%)</title><rect x="491.7" y="499.0" width="216.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="494.7" y="510.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (239 samples, 0.17%)</title><rect x="491.7" y="483.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.7" y="494.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (101 samples, 0.07%)</title><rect x="491.7" y="467.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="494.7" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (138 samples, 0.10%)</title><rect x="492.6" y="467.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="495.6" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (138 samples, 0.10%)</title><rect x="492.6" y="451.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="495.6" y="462.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (138 samples, 0.10%)</title><rect x="492.6" y="435.0" width="1.1" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="495.6" y="446.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (135 samples, 0.10%)</title><rect x="493.7" y="483.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="496.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (135 samples, 0.10%)</title><rect x="493.7" y="467.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.7" y="478.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (135 samples, 0.10%)</title><rect x="493.7" y="451.0" width="1.2" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="496.7" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$487/55263987.accept (25,407 samples, 18.11%)</title><rect x="494.9" y="483.0" width="213.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="497.9" y="494.0">ru/mail/polis/dao/gogun/DAOI..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (25,407 samples, 18.11%)</title><rect x="494.9" y="467.0" width="213.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.9" y="478.0">ru/mail/polis/dao/gogun/DAOI..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (25,407 samples, 18.11%)</title><rect x="494.9" y="451.0" width="213.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="497.9" y="462.0">ru/mail/polis/dao/gogun/SSTa..</text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.SSTable$1 (180 samples, 0.13%)</title><rect x="494.9" y="435.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="497.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (25,227 samples, 17.98%)</title><rect x="496.4" y="435.0" width="212.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="499.4" y="446.0">ru/mail/polis/dao/gogun/SSTa..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (25,227 samples, 17.98%)</title><rect x="496.4" y="419.0" width="212.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.4" y="430.0">ru/mail/polis/dao/gogun/SSTa..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (25,227 samples, 17.98%)</title><rect x="496.4" y="403.0" width="212.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.4" y="414.0">ru/mail/polis/dao/gogun/SSTa..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (25,227 samples, 17.98%)</title><rect x="496.4" y="387.0" width="212.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="499.4" y="398.0">java/nio/ByteBuffer.allocate</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (16,891 samples, 12.04%)</title><rect x="496.4" y="371.0" width="142.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="499.4" y="382.0">java.nio.HeapByteB..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8,336 samples, 5.94%)</title><rect x="638.5" y="371.0" width="70.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.5" y="382.0">java/nio..</text>
</g>
<g>
<title>byte[] (8,336 samples, 5.94%)</title><rect x="638.5" y="355.0" width="70.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="641.5" y="366.0">byte[]</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (154 samples, 0.11%)</title><rect x="708.6" y="499.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (154 samples, 0.11%)</title><rect x="708.6" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="711.6" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$481/1820953159.get$Lambda (75 samples, 0.05%)</title><rect x="708.6" y="467.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="711.6" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.DAOImpl$$Lambda$481 (75 samples, 0.05%)</title><rect x="708.6" y="451.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="711.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$487/55263987.get$Lambda (79 samples, 0.06%)</title><rect x="709.2" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.2" y="478.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.DAOImpl$$Lambda$487 (79 samples, 0.06%)</title><rect x="709.2" y="451.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="712.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (121 samples, 0.09%)</title><rect x="709.9" y="499.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.9" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (121 samples, 0.09%)</title><rect x="709.9" y="483.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="712.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (807 samples, 0.58%)</title><rect x="710.9" y="499.0" width="6.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.9" y="510.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (94 samples, 0.07%)</title><rect x="710.9" y="483.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="713.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (713 samples, 0.51%)</title><rect x="711.7" y="483.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.7" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (713 samples, 0.51%)</title><rect x="711.7" y="467.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.7" y="478.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (330 samples, 0.24%)</title><rect x="711.7" y="451.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.7" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (330 samples, 0.24%)</title><rect x="711.7" y="435.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="714.7" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (330 samples, 0.24%)</title><rect x="711.7" y="419.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.7" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (330 samples, 0.24%)</title><rect x="711.7" y="403.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.7" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (330 samples, 0.24%)</title><rect x="711.7" y="387.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.7" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (330 samples, 0.24%)</title><rect x="711.7" y="371.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="714.7" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (330 samples, 0.24%)</title><rect x="711.7" y="355.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (330 samples, 0.24%)</title><rect x="711.7" y="339.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.7" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (330 samples, 0.24%)</title><rect x="711.7" y="323.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (330 samples, 0.24%)</title><rect x="711.7" y="307.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (330 samples, 0.24%)</title><rect x="711.7" y="291.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="714.7" y="302.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (330 samples, 0.24%)</title><rect x="711.7" y="275.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="714.7" y="286.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (330 samples, 0.24%)</title><rect x="711.7" y="259.0" width="2.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="714.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (383 samples, 0.27%)</title><rect x="714.4" y="451.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.4" y="462.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (383 samples, 0.27%)</title><rect x="714.4" y="435.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="717.4" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (383 samples, 0.27%)</title><rect x="714.4" y="419.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.4" y="430.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (383 samples, 0.27%)</title><rect x="714.4" y="403.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="717.4" y="414.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (383 samples, 0.27%)</title><rect x="714.4" y="387.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.4" y="398.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (383 samples, 0.27%)</title><rect x="714.4" y="371.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="717.4" y="382.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (92 samples, 0.07%)</title><rect x="714.4" y="355.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.4" y="366.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (92 samples, 0.07%)</title><rect x="714.4" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="717.4" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (92 samples, 0.07%)</title><rect x="714.4" y="323.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable$$Lambda$468/1112584852.apply (92 samples, 0.07%)</title><rect x="714.4" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.4" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.lambda$iterator$0 (92 samples, 0.07%)</title><rect x="714.4" y="291.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="717.4" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (92 samples, 0.07%)</title><rect x="714.4" y="275.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="717.4" y="286.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (291 samples, 0.21%)</title><rect x="715.2" y="355.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.2" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (291 samples, 0.21%)</title><rect x="715.2" y="339.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.2" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (291 samples, 0.21%)</title><rect x="715.2" y="323.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.2" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (291 samples, 0.21%)</title><rect x="715.2" y="307.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="718.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (291 samples, 0.21%)</title><rect x="715.2" y="291.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="718.2" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (291 samples, 0.21%)</title><rect x="715.2" y="275.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.2" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (291 samples, 0.21%)</title><rect x="715.2" y="259.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.2" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (291 samples, 0.21%)</title><rect x="715.2" y="243.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="718.2" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (474 samples, 0.34%)</title><rect x="717.7" y="499.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.7" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (113 samples, 0.08%)</title><rect x="717.7" y="483.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="720.7" y="494.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (113 samples, 0.08%)</title><rect x="717.7" y="467.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="720.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (110 samples, 0.08%)</title><rect x="718.6" y="483.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (110 samples, 0.08%)</title><rect x="718.6" y="467.0" width="0.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="721.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (54 samples, 0.04%)</title><rect x="719.5" y="483.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.5" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$EntrySet (54 samples, 0.04%)</title><rect x="719.5" y="467.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="722.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (197 samples, 0.14%)</title><rect x="720.0" y="483.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (197 samples, 0.14%)</title><rect x="720.0" y="467.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="723.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (197 samples, 0.14%)</title><rect x="720.0" y="451.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.0" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (197 samples, 0.14%)</title><rect x="720.0" y="435.0" width="1.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="723.0" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getArray (106 samples, 0.08%)</title><rect x="721.7" y="531.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="724.7" y="542.0"></text>
</g>
<g>
<title>byte[] (106 samples, 0.08%)</title><rect x="721.7" y="515.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="724.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (186 samples, 0.13%)</title><rect x="722.5" y="691.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (186 samples, 0.13%)</title><rect x="722.5" y="675.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="725.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (186 samples, 0.13%)</title><rect x="722.5" y="659.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (186 samples, 0.13%)</title><rect x="722.5" y="643.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (186 samples, 0.13%)</title><rect x="722.5" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (186 samples, 0.13%)</title><rect x="722.5" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (186 samples, 0.13%)</title><rect x="722.5" y="595.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (186 samples, 0.13%)</title><rect x="722.5" y="579.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="725.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (186 samples, 0.13%)</title><rect x="722.5" y="563.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (186 samples, 0.13%)</title><rect x="722.5" y="547.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="725.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (186 samples, 0.13%)</title><rect x="722.5" y="531.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="725.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (186 samples, 0.13%)</title><rect x="722.5" y="515.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (186 samples, 0.13%)</title><rect x="722.5" y="499.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (186 samples, 0.13%)</title><rect x="722.5" y="483.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="725.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (186 samples, 0.13%)</title><rect x="722.5" y="467.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (186 samples, 0.13%)</title><rect x="722.5" y="451.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="725.5" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (186 samples, 0.13%)</title><rect x="722.5" y="435.0" width="1.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="725.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (2,694 samples, 1.92%)</title><rect x="724.1" y="691.0" width="22.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.1" y="702.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.05%)</title><rect x="724.1" y="675.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.1" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.05%)</title><rect x="724.1" y="659.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/1544661142.get$Lambda (31 samples, 0.02%)</title><rect x="724.1" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.1" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$363 (31 samples, 0.02%)</title><rect x="724.1" y="627.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="727.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/310623126.linkToTargetMethod (49 samples, 0.03%)</title><rect x="724.7" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (49 samples, 0.03%)</title><rect x="724.7" y="659.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="727.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$364/1313401388.get$Lambda (49 samples, 0.03%)</title><rect x="724.7" y="643.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.7" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$364 (49 samples, 0.03%)</title><rect x="724.7" y="627.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="727.7" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (569 samples, 0.41%)</title><rect x="725.1" y="675.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$365/1858085801.accept (472 samples, 0.34%)</title><rect x="725.1" y="659.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (472 samples, 0.34%)</title><rect x="725.1" y="643.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (472 samples, 0.34%)</title><rect x="725.1" y="627.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (472 samples, 0.34%)</title><rect x="725.1" y="611.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="728.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (472 samples, 0.34%)</title><rect x="725.1" y="595.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (472 samples, 0.34%)</title><rect x="725.1" y="579.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (472 samples, 0.34%)</title><rect x="725.1" y="563.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (472 samples, 0.34%)</title><rect x="725.1" y="547.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="728.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (472 samples, 0.34%)</title><rect x="725.1" y="531.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (472 samples, 0.34%)</title><rect x="725.1" y="515.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (472 samples, 0.34%)</title><rect x="725.1" y="499.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.1" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (472 samples, 0.34%)</title><rect x="725.1" y="483.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (91 samples, 0.06%)</title><rect x="725.1" y="467.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="728.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (91 samples, 0.06%)</title><rect x="725.1" y="451.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (91 samples, 0.06%)</title><rect x="725.1" y="435.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="728.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (45 samples, 0.03%)</title><rect x="725.1" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.1" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (45 samples, 0.03%)</title><rect x="725.1" y="403.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.1" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (45 samples, 0.03%)</title><rect x="725.1" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (45 samples, 0.03%)</title><rect x="725.1" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="728.1" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (45 samples, 0.03%)</title><rect x="725.1" y="355.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="728.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.03%)</title><rect x="725.5" y="419.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 0.03%)</title><rect x="725.5" y="403.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (46 samples, 0.03%)</title><rect x="725.5" y="387.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.03%)</title><rect x="725.5" y="371.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="728.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (46 samples, 0.03%)</title><rect x="725.5" y="355.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="728.5" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (46 samples, 0.03%)</title><rect x="725.5" y="339.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="728.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (36 samples, 0.03%)</title><rect x="725.9" y="467.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="728.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (36 samples, 0.03%)</title><rect x="725.9" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="728.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (36 samples, 0.03%)</title><rect x="725.9" y="435.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="728.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383/1051865462.get$Lambda (36 samples, 0.03%)</title><rect x="725.9" y="419.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="728.9" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383 (36 samples, 0.03%)</title><rect x="725.9" y="403.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="728.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (344 samples, 0.25%)</title><rect x="726.2" y="467.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="729.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (148 samples, 0.11%)</title><rect x="726.2" y="451.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="729.2" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (109 samples, 0.08%)</title><rect x="726.2" y="435.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.2" y="446.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (109 samples, 0.08%)</title><rect x="726.2" y="419.0" width="0.9" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="729.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (39 samples, 0.03%)</title><rect x="727.1" y="435.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.1" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (39 samples, 0.03%)</title><rect x="727.1" y="419.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.1" y="430.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (39 samples, 0.03%)</title><rect x="727.1" y="403.0" width="0.3" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="730.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (196 samples, 0.14%)</title><rect x="727.4" y="451.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="730.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$241/1017891750.get (196 samples, 0.14%)</title><rect x="727.4" y="435.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (196 samples, 0.14%)</title><rect x="727.4" y="419.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.4" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (196 samples, 0.14%)</title><rect x="727.4" y="403.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="730.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (195 samples, 0.14%)</title><rect x="727.4" y="387.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.4" y="398.0"></text>
</g>
<g>
<title>byte[] (185 samples, 0.13%)</title><rect x="727.5" y="371.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="730.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$368/1161710876.accept (97 samples, 0.07%)</title><rect x="729.1" y="659.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (97 samples, 0.07%)</title><rect x="729.1" y="643.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$364/1313401388.run (97 samples, 0.07%)</title><rect x="729.1" y="627.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (97 samples, 0.07%)</title><rect x="729.1" y="611.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="732.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (97 samples, 0.07%)</title><rect x="729.1" y="595.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="732.1" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (97 samples, 0.07%)</title><rect x="729.1" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="732.1" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (97 samples, 0.07%)</title><rect x="729.1" y="563.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.1" y="574.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (97 samples, 0.07%)</title><rect x="729.1" y="547.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="732.1" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (273 samples, 0.19%)</title><rect x="729.9" y="675.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="732.9" y="686.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (273 samples, 0.19%)</title><rect x="729.9" y="659.0" width="2.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="732.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (88 samples, 0.06%)</title><rect x="732.2" y="675.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="735.2" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (46 samples, 0.03%)</title><rect x="732.2" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.2" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (46 samples, 0.03%)</title><rect x="732.2" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (46 samples, 0.03%)</title><rect x="732.2" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.2" y="638.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (46 samples, 0.03%)</title><rect x="732.2" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.2" y="622.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (46 samples, 0.03%)</title><rect x="732.2" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.2" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (46 samples, 0.03%)</title><rect x="732.2" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.2" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (46 samples, 0.03%)</title><rect x="732.2" y="563.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="735.2" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (42 samples, 0.03%)</title><rect x="732.6" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="735.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (42 samples, 0.03%)</title><rect x="732.6" y="643.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="735.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (358 samples, 0.26%)</title><rect x="732.9" y="675.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="735.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$263/2089736233.run (169 samples, 0.12%)</title><rect x="732.9" y="659.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="735.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (169 samples, 0.12%)</title><rect x="732.9" y="643.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (169 samples, 0.12%)</title><rect x="732.9" y="627.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (169 samples, 0.12%)</title><rect x="732.9" y="611.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="735.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (169 samples, 0.12%)</title><rect x="732.9" y="595.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (169 samples, 0.12%)</title><rect x="732.9" y="579.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="735.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (169 samples, 0.12%)</title><rect x="732.9" y="563.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (169 samples, 0.12%)</title><rect x="732.9" y="547.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (169 samples, 0.12%)</title><rect x="732.9" y="531.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (169 samples, 0.12%)</title><rect x="732.9" y="515.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (121 samples, 0.09%)</title><rect x="732.9" y="499.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (121 samples, 0.09%)</title><rect x="732.9" y="483.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (121 samples, 0.09%)</title><rect x="732.9" y="467.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (88 samples, 0.06%)</title><rect x="732.9" y="451.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/201719260.invoke (88 samples, 0.06%)</title><rect x="732.9" y="435.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="735.9" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (88 samples, 0.06%)</title><rect x="732.9" y="419.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (88 samples, 0.06%)</title><rect x="732.9" y="403.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (88 samples, 0.06%)</title><rect x="732.9" y="387.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.9" y="398.0"></text>
</g>
<g>
<title>byte[] (88 samples, 0.06%)</title><rect x="732.9" y="371.0" width="0.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="735.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (33 samples, 0.02%)</title><rect x="733.7" y="451.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.7" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (33 samples, 0.02%)</title><rect x="733.7" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.7" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (33 samples, 0.02%)</title><rect x="733.7" y="419.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="736.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383/1051865462.get$Lambda (33 samples, 0.02%)</title><rect x="733.7" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.7" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383 (33 samples, 0.02%)</title><rect x="733.7" y="387.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="736.7" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (48 samples, 0.03%)</title><rect x="734.0" y="499.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.03%)</title><rect x="734.0" y="483.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="737.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (48 samples, 0.03%)</title><rect x="734.0" y="467.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="737.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 0.03%)</title><rect x="734.0" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.0" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (48 samples, 0.03%)</title><rect x="734.0" y="435.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="737.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (48 samples, 0.03%)</title><rect x="734.0" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="737.0" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (48 samples, 0.03%)</title><rect x="734.0" y="403.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="737.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$277/266906696.run (189 samples, 0.13%)</title><rect x="734.4" y="659.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="737.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (189 samples, 0.13%)</title><rect x="734.4" y="643.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="737.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (82 samples, 0.06%)</title><rect x="734.4" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (82 samples, 0.06%)</title><rect x="734.4" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="737.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1348530906.get$Lambda (82 samples, 0.06%)</title><rect x="734.4" y="595.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$375 (82 samples, 0.06%)</title><rect x="734.4" y="579.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="737.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (107 samples, 0.08%)</title><rect x="735.1" y="627.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (107 samples, 0.08%)</title><rect x="735.1" y="611.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="738.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (107 samples, 0.08%)</title><rect x="735.1" y="595.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.1" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (107 samples, 0.08%)</title><rect x="735.1" y="579.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="738.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (421 samples, 0.30%)</title><rect x="736.0" y="675.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.0" y="686.0"></text>
</g>
<g>
<title>java/time/Instant.now (119 samples, 0.08%)</title><rect x="736.0" y="659.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.0" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (119 samples, 0.08%)</title><rect x="736.0" y="643.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.0" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (119 samples, 0.08%)</title><rect x="736.0" y="627.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (119 samples, 0.08%)</title><rect x="736.0" y="611.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="739.0" y="622.0"></text>
</g>
<g>
<title>java.time.Instant (119 samples, 0.08%)</title><rect x="736.0" y="595.0" width="1.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="739.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (302 samples, 0.22%)</title><rect x="737.0" y="659.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.0" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (71 samples, 0.05%)</title><rect x="737.0" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="740.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (71 samples, 0.05%)</title><rect x="737.0" y="627.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$452/56536574.get$Lambda (71 samples, 0.05%)</title><rect x="737.0" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="740.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$452 (71 samples, 0.05%)</title><rect x="737.0" y="595.0" width="0.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="740.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (231 samples, 0.16%)</title><rect x="737.5" y="643.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="740.5" y="654.0"></text>
</g>
<g>
<title>java.util.ArrayList (90 samples, 0.06%)</title><rect x="737.5" y="627.0" width="0.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="740.5" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (141 samples, 0.10%)</title><rect x="738.3" y="627.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="741.3" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (141 samples, 0.10%)</title><rect x="738.3" y="611.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="741.3" y="622.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (141 samples, 0.10%)</title><rect x="738.3" y="595.0" width="1.2" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="741.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (404 samples, 0.29%)</title><rect x="739.5" y="675.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="742.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (37 samples, 0.03%)</title><rect x="739.5" y="659.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="742.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (37 samples, 0.03%)</title><rect x="739.5" y="643.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="742.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$362/1315817636.get$Lambda (37 samples, 0.03%)</title><rect x="739.5" y="627.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="742.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$362 (37 samples, 0.03%)</title><rect x="739.5" y="611.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="742.5" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (212 samples, 0.15%)</title><rect x="739.8" y="659.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="742.8" y="670.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (98 samples, 0.07%)</title><rect x="739.8" y="643.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.8" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (98 samples, 0.07%)</title><rect x="739.8" y="627.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="742.8" y="638.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (114 samples, 0.08%)</title><rect x="740.6" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="743.6" y="654.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (114 samples, 0.08%)</title><rect x="740.6" y="627.0" width="1.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="743.6" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (155 samples, 0.11%)</title><rect x="741.6" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.6" y="670.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (155 samples, 0.11%)</title><rect x="741.6" y="643.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="744.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (240 samples, 0.17%)</title><rect x="742.9" y="675.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (240 samples, 0.17%)</title><rect x="742.9" y="659.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="745.9" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (240 samples, 0.17%)</title><rect x="742.9" y="643.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.9" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (240 samples, 0.17%)</title><rect x="742.9" y="627.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="745.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (240 samples, 0.17%)</title><rect x="742.9" y="611.0" width="2.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="745.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (113 samples, 0.08%)</title><rect x="744.9" y="675.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="747.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (113 samples, 0.08%)</title><rect x="744.9" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (113 samples, 0.08%)</title><rect x="744.9" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="747.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (113 samples, 0.08%)</title><rect x="744.9" y="627.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (45 samples, 0.03%)</title><rect x="744.9" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="747.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (45 samples, 0.03%)</title><rect x="744.9" y="595.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="747.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (68 samples, 0.05%)</title><rect x="745.3" y="611.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="748.3" y="622.0"></text>
</g>
<g>
<title>java/util/HashSet.add (68 samples, 0.05%)</title><rect x="745.3" y="595.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="748.3" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap.put (68 samples, 0.05%)</title><rect x="745.3" y="579.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="748.3" y="590.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (68 samples, 0.05%)</title><rect x="745.3" y="563.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="748.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (68 samples, 0.05%)</title><rect x="745.3" y="547.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="748.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (68 samples, 0.05%)</title><rect x="745.3" y="531.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="748.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (57 samples, 0.04%)</title><rect x="745.9" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.9" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (57 samples, 0.04%)</title><rect x="745.9" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.9" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (57 samples, 0.04%)</title><rect x="745.9" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="748.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (57 samples, 0.04%)</title><rect x="745.9" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="748.9" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (49 samples, 0.03%)</title><rect x="745.9" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="748.9" y="622.0"></text>
</g>
<g>
<title>java.lang.Integer (49 samples, 0.03%)</title><rect x="745.9" y="595.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="748.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (51 samples, 0.04%)</title><rect x="746.3" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="749.3" y="686.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (51 samples, 0.04%)</title><rect x="746.3" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="749.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (51 samples, 0.04%)</title><rect x="746.3" y="643.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="749.3" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (51 samples, 0.04%)</title><rect x="746.3" y="627.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="749.3" y="638.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (52,702 samples, 37.56%)</title><rect x="746.8" y="691.0" width="443.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.8" y="702.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,518 samples, 1.79%)</title><rect x="746.8" y="675.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="749.8" y="686.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (2,518 samples, 1.79%)</title><rect x="746.8" y="659.0" width="21.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="749.8" y="670.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (50,184 samples, 35.77%)</title><rect x="767.9" y="675.0" width="422.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="770.9" y="686.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (50,184 samples, 35.77%)</title><rect x="767.9" y="659.0" width="422.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.9" y="670.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (50,184 samples, 35.77%)</title><rect x="767.9" y="643.0" width="422.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="770.9" y="654.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9,104 samples, 6.49%)</title><rect x="767.9" y="627.0" width="76.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.9" y="638.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9,104 samples, 6.49%)</title><rect x="767.9" y="611.0" width="76.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="770.9" y="622.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (4,958 samples, 3.53%)</title><rect x="767.9" y="595.0" width="41.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.9" y="606.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2,397 samples, 1.71%)</title><rect x="767.9" y="579.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.9" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,397 samples, 1.71%)</title><rect x="767.9" y="563.0" width="20.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.9" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,397 samples, 1.71%)</title><rect x="767.9" y="547.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="770.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,397 samples, 1.71%)</title><rect x="767.9" y="531.0" width="20.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.9" y="542.0"></text>
</g>
<g>
<title>java.lang.String (1,116 samples, 0.80%)</title><rect x="767.9" y="515.0" width="9.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="770.9" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,281 samples, 0.91%)</title><rect x="777.3" y="515.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="780.3" y="526.0"></text>
</g>
<g>
<title>byte[] (1,281 samples, 0.91%)</title><rect x="777.3" y="499.0" width="10.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="780.3" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (2,561 samples, 1.83%)</title><rect x="788.1" y="579.0" width="21.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="791.1" y="590.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (2,561 samples, 1.83%)</title><rect x="788.1" y="563.0" width="21.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.1" y="574.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2,545 samples, 1.81%)</title><rect x="788.1" y="547.0" width="21.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="791.1" y="558.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2,545 samples, 1.81%)</title><rect x="788.1" y="531.0" width="21.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.1" y="542.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1295475510.get$Lambda (2,545 samples, 1.81%)</title><rect x="788.1" y="515.0" width="21.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.1" y="526.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$126 (2,545 samples, 1.81%)</title><rect x="788.1" y="499.0" width="21.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="791.1" y="510.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (4,146 samples, 2.95%)</title><rect x="809.6" y="595.0" width="34.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.6" y="606.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (4,146 samples, 2.95%)</title><rect x="809.6" y="579.0" width="34.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="812.6" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4,146 samples, 2.95%)</title><rect x="809.6" y="563.0" width="34.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="812.6" y="574.0">ja..</text>
</g>
<g>
<title>java.lang.String (2,209 samples, 1.57%)</title><rect x="809.6" y="547.0" width="18.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="812.6" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,937 samples, 1.38%)</title><rect x="828.2" y="547.0" width="16.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="831.2" y="558.0"></text>
</g>
<g>
<title>byte[] (1,937 samples, 1.38%)</title><rect x="828.2" y="531.0" width="16.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="831.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15,169 samples, 10.81%)</title><rect x="844.5" y="627.0" width="127.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.5" y="638.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one.nio.http.Request (1,941 samples, 1.38%)</title><rect x="844.5" y="611.0" width="16.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="847.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4,710 samples, 3.36%)</title><rect x="860.8" y="611.0" width="39.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="863.8" y="622.0">one..</text>
</g>
<g>
<title>java.lang.String[] (3,379 samples, 2.41%)</title><rect x="860.8" y="595.0" width="28.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="863.8" y="606.0">ja..</text>
</g>
<g>
<title>java.lang.String[] (1,331 samples, 0.95%)</title><rect x="889.3" y="595.0" width="11.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="892.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,518 samples, 6.07%)</title><rect x="900.4" y="611.0" width="71.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.4" y="622.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (8,518 samples, 6.07%)</title><rect x="900.4" y="595.0" width="71.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="903.4" y="606.0">one/nio/..</text>
</g>
<g>
<title>char[] (3,332 samples, 2.37%)</title><rect x="900.4" y="579.0" width="28.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="903.4" y="590.0">ch..</text>
</g>
<g>
<title>char[] (415 samples, 0.30%)</title><rect x="928.5" y="579.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="931.5" y="590.0"></text>
</g>
<g>
<title>java.lang.String (1,313 samples, 0.94%)</title><rect x="932.0" y="579.0" width="11.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="935.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,458 samples, 2.46%)</title><rect x="943.0" y="579.0" width="29.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="946.0" y="590.0">ja..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3,458 samples, 2.46%)</title><rect x="943.0" y="563.0" width="29.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.0" y="574.0">ja..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3,458 samples, 2.46%)</title><rect x="943.0" y="547.0" width="29.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.0" y="558.0">ja..</text>
</g>
<g>
<title>byte[] (3,458 samples, 2.46%)</title><rect x="943.0" y="531.0" width="29.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="946.0" y="542.0">by..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (354 samples, 0.25%)</title><rect x="972.1" y="627.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="975.1" y="638.0"></text>
</g>
<g>
<title>byte[] (354 samples, 0.25%)</title><rect x="972.1" y="611.0" width="3.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="975.1" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,462 samples, 1.75%)</title><rect x="975.1" y="627.0" width="20.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="978.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (2,462 samples, 1.75%)</title><rect x="975.1" y="611.0" width="20.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="978.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,462 samples, 1.75%)</title><rect x="975.1" y="595.0" width="20.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="978.1" y="606.0"></text>
</g>
<g>
<title>java.lang.String (1,284 samples, 0.92%)</title><rect x="975.1" y="579.0" width="10.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="978.1" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,178 samples, 0.84%)</title><rect x="985.9" y="579.0" width="9.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="988.9" y="590.0"></text>
</g>
<g>
<title>byte[] (1,178 samples, 0.84%)</title><rect x="985.9" y="563.0" width="9.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="988.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,095 samples, 16.46%)</title><rect x="995.8" y="627.0" width="194.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="998.8" y="638.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (23,095 samples, 16.46%)</title><rect x="995.8" y="611.0" width="194.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="998.8" y="622.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (7,876 samples, 5.61%)</title><rect x="995.8" y="595.0" width="66.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="998.8" y="606.0">char[]</text>
</g>
<g>
<title>char[] (1,518 samples, 1.08%)</title><rect x="1062.0" y="595.0" width="12.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1065.0" y="606.0"></text>
</g>
<g>
<title>java.lang.String (6,028 samples, 4.30%)</title><rect x="1074.8" y="595.0" width="50.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1077.8" y="606.0">java...</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,673 samples, 5.47%)</title><rect x="1125.5" y="595.0" width="64.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1128.5" y="606.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,673 samples, 5.47%)</title><rect x="1125.5" y="579.0" width="64.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.5" y="590.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7,673 samples, 5.47%)</title><rect x="1125.5" y="563.0" width="64.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1128.5" y="574.0">java/la..</text>
</g>
<g>
<title>byte[] (7,552 samples, 5.38%)</title><rect x="1125.5" y="547.0" width="63.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1128.5" y="558.0">byte[]</text>
</g>
<g>
<title>byte[] (121 samples, 0.09%)</title><rect x="1189.0" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.0" y="558.0"></text>
</g>
</g>
</svg>
