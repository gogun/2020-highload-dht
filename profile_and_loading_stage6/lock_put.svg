<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="613"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="613"> </text>
<g id="frames">
<g>
<title>all (154,356 samples, 100.00%)</title><rect x="10.0" y="579.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="590.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (123,948 samples, 80.30%)</title><rect x="10.0" y="563.0" width="947.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="574.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (123,948 samples, 80.30%)</title><rect x="10.0" y="547.0" width="947.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="558.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (123,948 samples, 80.30%)</title><rect x="10.0" y="531.0" width="947.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="542.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (46,216 samples, 29.94%)</title><rect x="10.0" y="515.0" width="353.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="13.0" y="526.0">java/util/concurrent/CompletableFuture$AsyncSupp..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (46,216 samples, 29.94%)</title><rect x="10.0" y="499.0" width="353.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="510.0">java/util/concurrent/CompletableFuture.postCompl..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (46,216 samples, 29.94%)</title><rect x="10.0" y="483.0" width="353.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/util/concurrent/CompletableFuture$UniCompos..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1563358180.apply (46,216 samples, 29.94%)</title><rect x="10.0" y="467.0" width="353.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="478.0">jdk/internal/net/http/MultiExchange$$Lambda$178/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (46,216 samples, 29.94%)</title><rect x="10.0" y="451.0" width="353.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="462.0">jdk/internal/net/http/MultiExchange.lambda$respo..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (46,216 samples, 29.94%)</title><rect x="10.0" y="435.0" width="353.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="446.0">jdk/internal/net/http/MultiExchange.responseAsyn..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (39,930 samples, 25.87%)</title><rect x="10.0" y="419.0" width="305.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="430.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (39,930 samples, 25.87%)</title><rect x="10.0" y="403.0" width="305.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="414.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (39,930 samples, 25.87%)</title><rect x="10.0" y="387.0" width="305.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="13.0" y="398.0">jdk/internal/net/http/Exchange.responseAs..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (29,010 samples, 18.79%)</title><rect x="10.0" y="371.0" width="221.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="382.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (29,010 samples, 18.79%)</title><rect x="10.0" y="355.0" width="221.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="366.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (29,010 samples, 18.79%)</title><rect x="10.0" y="339.0" width="221.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="350.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/1583544498.apply (29,010 samples, 18.79%)</title><rect x="10.0" y="323.0" width="221.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="334.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (29,010 samples, 18.79%)</title><rect x="10.0" y="307.0" width="221.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="318.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (29,010 samples, 18.79%)</title><rect x="10.0" y="291.0" width="221.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="302.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.apply (29,010 samples, 18.79%)</title><rect x="10.0" y="275.0" width="221.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="13.0" y="286.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (29,010 samples, 18.79%)</title><rect x="10.0" y="259.0" width="221.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="270.0">jdk/internal/net/http/Exchang..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (29,010 samples, 18.79%)</title><rect x="10.0" y="243.0" width="221.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="254.0">jdk/internal/net/http/Http1Ex..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (29,010 samples, 18.79%)</title><rect x="10.0" y="227.0" width="221.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="238.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (29,010 samples, 18.79%)</title><rect x="10.0" y="211.0" width="221.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="222.0">java/util/concurrent/Completa..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1158701491.apply (29,010 samples, 18.79%)</title><rect x="10.0" y="195.0" width="221.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="206.0">jdk/internal/net/http/Http1Ex..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (29,010 samples, 18.79%)</title><rect x="10.0" y="179.0" width="221.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="190.0">jdk/internal/net/http/Http1Ex..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (29,010 samples, 18.79%)</title><rect x="10.0" y="163.0" width="221.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="174.0">jdk/internal/net/http/Http1Ex..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (29,010 samples, 18.79%)</title><rect x="10.0" y="147.0" width="221.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="158.0">jdk/internal/net/http/SocketT..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2,797 samples, 1.81%)</title><rect x="10.0" y="131.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="142.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2,797 samples, 1.81%)</title><rect x="10.0" y="115.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="126.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2,797 samples, 1.81%)</title><rect x="10.0" y="99.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="110.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,797 samples, 1.81%)</title><rect x="10.0" y="83.0" width="21.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="94.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,797 samples, 1.81%)</title><rect x="10.0" y="67.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="78.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,412 samples, 1.56%)</title><rect x="10.0" y="51.0" width="18.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="13.0" y="62.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (385 samples, 0.25%)</title><rect x="28.4" y="51.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="31.4" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (385 samples, 0.25%)</title><rect x="28.4" y="35.0" width="3.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="31.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (26,213 samples, 16.98%)</title><rect x="31.4" y="131.0" width="200.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.4" y="142.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (26,213 samples, 16.98%)</title><rect x="31.4" y="115.0" width="200.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.4" y="126.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (26,213 samples, 16.98%)</title><rect x="31.4" y="99.0" width="200.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.4" y="110.0">jdk/internal/net/http/Sock..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (26,213 samples, 16.98%)</title><rect x="31.4" y="83.0" width="200.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.4" y="94.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (26,213 samples, 16.98%)</title><rect x="31.4" y="67.0" width="200.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.4" y="78.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (25,167 samples, 16.30%)</title><rect x="31.4" y="51.0" width="192.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="34.4" y="62.0">jdk.internal.net.http.Htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,046 samples, 0.68%)</title><rect x="223.8" y="51.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.8" y="62.0"></text>
</g>
<g>
<title>java.lang.Object (1,046 samples, 0.68%)</title><rect x="223.8" y="35.0" width="8.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="226.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (10,920 samples, 7.07%)</title><rect x="231.8" y="371.0" width="83.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.8" y="382.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (10,920 samples, 7.07%)</title><rect x="231.8" y="355.0" width="83.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="234.8" y="366.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (10,920 samples, 7.07%)</title><rect x="231.8" y="339.0" width="83.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="234.8" y="350.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (10,920 samples, 7.07%)</title><rect x="231.8" y="323.0" width="83.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.8" y="334.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (10,920 samples, 7.07%)</title><rect x="231.8" y="307.0" width="83.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.8" y="318.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (10,920 samples, 7.07%)</title><rect x="231.8" y="291.0" width="83.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="234.8" y="302.0">jdk/inter..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (10,920 samples, 7.07%)</title><rect x="231.8" y="275.0" width="83.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="234.8" y="286.0">jdk.inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (6,134 samples, 3.97%)</title><rect x="315.3" y="419.0" width="46.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.3" y="430.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (4,529 samples, 2.93%)</title><rect x="315.3" y="403.0" width="34.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="318.3" y="414.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (1,605 samples, 1.04%)</title><rect x="349.9" y="403.0" width="12.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1,605 samples, 1.04%)</title><rect x="349.9" y="387.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object (1,605 samples, 1.04%)</title><rect x="349.9" y="371.0" width="12.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="352.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (152 samples, 0.10%)</title><rect x="362.1" y="419.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (152 samples, 0.10%)</title><rect x="362.1" y="403.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="365.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (146 samples, 0.09%)</title><rect x="362.2" y="387.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="365.2" y="398.0"></text>
</g>
<g>
<title>java.lang.Class (146 samples, 0.09%)</title><rect x="362.2" y="371.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="365.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (599 samples, 0.39%)</title><rect x="363.3" y="515.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (599 samples, 0.39%)</title><rect x="363.3" y="499.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.3" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (599 samples, 0.39%)</title><rect x="363.3" y="483.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (599 samples, 0.39%)</title><rect x="363.3" y="467.0" width="4.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="366.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (599 samples, 0.39%)</title><rect x="363.3" y="451.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (599 samples, 0.39%)</title><rect x="363.3" y="435.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (599 samples, 0.39%)</title><rect x="363.3" y="419.0" width="4.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (599 samples, 0.39%)</title><rect x="363.3" y="403.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="366.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (597 samples, 0.39%)</title><rect x="363.3" y="387.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.3" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (597 samples, 0.39%)</title><rect x="363.3" y="371.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.3" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (597 samples, 0.39%)</title><rect x="363.3" y="355.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="366.3" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (597 samples, 0.39%)</title><rect x="363.3" y="339.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.3" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (597 samples, 0.39%)</title><rect x="363.3" y="323.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="366.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (597 samples, 0.39%)</title><rect x="363.3" y="307.0" width="4.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="366.3" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (597 samples, 0.39%)</title><rect x="363.3" y="291.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="366.3" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (597 samples, 0.39%)</title><rect x="363.3" y="275.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="366.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (597 samples, 0.39%)</title><rect x="363.3" y="259.0" width="4.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.3" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (597 samples, 0.39%)</title><rect x="363.3" y="243.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="366.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (597 samples, 0.39%)</title><rect x="363.3" y="227.0" width="4.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="366.3" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (597 samples, 0.39%)</title><rect x="363.3" y="211.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.3" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (597 samples, 0.39%)</title><rect x="363.3" y="195.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="366.3" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (597 samples, 0.39%)</title><rect x="363.3" y="179.0" width="4.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="366.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13,602 samples, 8.81%)</title><rect x="367.9" y="515.0" width="104.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="370.9" y="526.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (7,122 samples, 4.61%)</title><rect x="367.9" y="499.0" width="54.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.9" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1,651 samples, 1.07%)</title><rect x="367.9" y="483.0" width="12.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="370.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,651 samples, 1.07%)</title><rect x="367.9" y="467.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="370.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,651 samples, 1.07%)</title><rect x="367.9" y="451.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="370.9" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,651 samples, 1.07%)</title><rect x="367.9" y="435.0" width="12.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="370.9" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,651 samples, 1.07%)</title><rect x="367.9" y="419.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="370.9" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,651 samples, 1.07%)</title><rect x="367.9" y="403.0" width="12.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="370.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5,471 samples, 3.54%)</title><rect x="380.5" y="483.0" width="41.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.5" y="494.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5,471 samples, 3.54%)</title><rect x="380.5" y="467.0" width="41.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.5" y="478.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5,471 samples, 3.54%)</title><rect x="380.5" y="451.0" width="41.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.5" y="462.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5,471 samples, 3.54%)</title><rect x="380.5" y="435.0" width="41.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.5" y="446.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5,471 samples, 3.54%)</title><rect x="380.5" y="419.0" width="41.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.5" y="430.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5,471 samples, 3.54%)</title><rect x="380.5" y="403.0" width="41.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.5" y="414.0">jdk..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5,471 samples, 3.54%)</title><rect x="380.5" y="387.0" width="41.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="383.5" y="398.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6,480 samples, 4.20%)</title><rect x="422.3" y="499.0" width="49.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.3" y="510.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (896 samples, 0.58%)</title><rect x="422.3" y="483.0" width="6.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (896 samples, 0.58%)</title><rect x="422.3" y="467.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="425.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (896 samples, 0.58%)</title><rect x="422.3" y="451.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="425.3" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (896 samples, 0.58%)</title><rect x="422.3" y="435.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (896 samples, 0.58%)</title><rect x="422.3" y="419.0" width="6.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.3" y="430.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (896 samples, 0.58%)</title><rect x="422.3" y="403.0" width="6.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="425.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5,584 samples, 3.62%)</title><rect x="429.2" y="483.0" width="42.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.2" y="494.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5,584 samples, 3.62%)</title><rect x="429.2" y="467.0" width="42.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.2" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5,584 samples, 3.62%)</title><rect x="429.2" y="451.0" width="42.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.2" y="462.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (5,584 samples, 3.62%)</title><rect x="429.2" y="435.0" width="42.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.2" y="446.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5,584 samples, 3.62%)</title><rect x="429.2" y="419.0" width="42.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="432.2" y="430.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5,584 samples, 3.62%)</title><rect x="429.2" y="403.0" width="42.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.2" y="414.0">jdk/..</text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (5,584 samples, 3.62%)</title><rect x="429.2" y="387.0" width="42.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="432.2" y="398.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (61,763 samples, 40.01%)</title><rect x="471.9" y="515.0" width="472.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="474.9" y="526.0">jdk/internal/net/http/common/SequentialScheduler$SchedulableTask...</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (61,763 samples, 40.01%)</title><rect x="471.9" y="499.0" width="472.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="474.9" y="510.0">jdk/internal/net/http/common/SequentialScheduler$CompleteRestarta..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (22,240 samples, 14.41%)</title><rect x="471.9" y="483.0" width="170.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.9" y="494.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (22,240 samples, 14.41%)</title><rect x="471.9" y="467.0" width="170.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.9" y="478.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (22,240 samples, 14.41%)</title><rect x="471.9" y="451.0" width="170.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.9" y="462.0">jdk/internal/net/http/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (20,618 samples, 13.36%)</title><rect x="471.9" y="435.0" width="157.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="474.9" y="446.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (20,618 samples, 13.36%)</title><rect x="471.9" y="419.0" width="157.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.9" y="430.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (20,618 samples, 13.36%)</title><rect x="471.9" y="403.0" width="157.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="474.9" y="414.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (20,618 samples, 13.36%)</title><rect x="471.9" y="387.0" width="157.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.9" y="398.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (20,618 samples, 13.36%)</title><rect x="471.9" y="371.0" width="157.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.9" y="382.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (20,618 samples, 13.36%)</title><rect x="471.9" y="355.0" width="157.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="474.9" y="366.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (20,618 samples, 13.36%)</title><rect x="471.9" y="339.0" width="157.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.9" y="350.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (20,618 samples, 13.36%)</title><rect x="471.9" y="323.0" width="157.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.9" y="334.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (20,618 samples, 13.36%)</title><rect x="471.9" y="307.0" width="157.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.9" y="318.0">jdk/internal/net/htt..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (20,174 samples, 13.07%)</title><rect x="471.9" y="291.0" width="154.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="474.9" y="302.0">jdk.internal.net.htt..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (444 samples, 0.29%)</title><rect x="626.1" y="291.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="629.1" y="302.0"></text>
</g>
<g>
<title>java.lang.Object (444 samples, 0.29%)</title><rect x="626.1" y="275.0" width="3.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="629.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1,622 samples, 1.05%)</title><rect x="629.5" y="435.0" width="12.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1,622 samples, 1.05%)</title><rect x="629.5" y="419.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,622 samples, 1.05%)</title><rect x="629.5" y="403.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="632.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1,622 samples, 1.05%)</title><rect x="629.5" y="387.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="632.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,622 samples, 1.05%)</title><rect x="629.5" y="371.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,622 samples, 1.05%)</title><rect x="629.5" y="355.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,622 samples, 1.05%)</title><rect x="629.5" y="339.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="632.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,622 samples, 1.05%)</title><rect x="629.5" y="323.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="632.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,622 samples, 1.05%)</title><rect x="629.5" y="307.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,622 samples, 1.05%)</title><rect x="629.5" y="291.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.5" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,622 samples, 1.05%)</title><rect x="629.5" y="275.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="632.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,622 samples, 1.05%)</title><rect x="629.5" y="259.0" width="12.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,622 samples, 1.05%)</title><rect x="629.5" y="243.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.5" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (229 samples, 0.15%)</title><rect x="629.5" y="227.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$359/1611607641.apply (229 samples, 0.15%)</title><rect x="629.5" y="211.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (229 samples, 0.15%)</title><rect x="629.5" y="195.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (229 samples, 0.15%)</title><rect x="629.5" y="179.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="632.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (229 samples, 0.15%)</title><rect x="629.5" y="163.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="632.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (229 samples, 0.15%)</title><rect x="629.5" y="147.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.5" y="158.0"></text>
</g>
<g>
<title>java.lang.Class (229 samples, 0.15%)</title><rect x="629.5" y="131.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="632.5" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (1,393 samples, 0.90%)</title><rect x="631.2" y="227.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="634.2" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1,393 samples, 0.90%)</title><rect x="631.2" y="211.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="634.2" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/2115167929.apply (1,393 samples, 0.90%)</title><rect x="631.2" y="195.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="634.2" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (1,393 samples, 0.90%)</title><rect x="631.2" y="179.0" width="10.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.2" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (1,393 samples, 0.90%)</title><rect x="631.2" y="163.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="634.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (1,393 samples, 0.90%)</title><rect x="631.2" y="147.0" width="10.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.2" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (1,393 samples, 0.90%)</title><rect x="631.2" y="131.0" width="10.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="634.2" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (39,523 samples, 25.61%)</title><rect x="641.9" y="483.0" width="302.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.9" y="494.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (39,523 samples, 25.61%)</title><rect x="641.9" y="467.0" width="302.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.9" y="478.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (39,523 samples, 25.61%)</title><rect x="641.9" y="451.0" width="302.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.9" y="462.0">jdk/internal/net/http/common/SequentialSc..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (39,523 samples, 25.61%)</title><rect x="641.9" y="435.0" width="302.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.9" y="446.0">jdk/internal/net/http/Http1AsyncReceiver$..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (39,523 samples, 25.61%)</title><rect x="641.9" y="419.0" width="302.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.9" y="430.0">jdk/internal/net/http/Http1AsyncReceiver...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (39,437 samples, 25.55%)</title><rect x="641.9" y="403.0" width="301.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.9" y="414.0">jdk/internal/net/http/Http1AsyncReceiver...</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (39,437 samples, 25.55%)</title><rect x="641.9" y="387.0" width="301.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.9" y="398.0">jdk/internal/net/http/Http1Response$BodyR..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (39,437 samples, 25.55%)</title><rect x="641.9" y="371.0" width="301.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.9" y="382.0">jdk/internal/net/http/ResponseContent$Fix..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/1804270592.run (39,437 samples, 25.55%)</title><rect x="641.9" y="355.0" width="301.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.9" y="366.0">jdk/internal/net/http/Http1Response$$Lamb..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (39,437 samples, 25.55%)</title><rect x="641.9" y="339.0" width="301.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.9" y="350.0">jdk/internal/net/http/Http1Response.onFin..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (39,437 samples, 25.55%)</title><rect x="641.9" y="323.0" width="301.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.9" y="334.0">jdk/internal/net/http/HttpConnection.clos..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (39,437 samples, 25.55%)</title><rect x="641.9" y="307.0" width="301.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="644.9" y="318.0">jdk/internal/net/http/ConnectionPool.retu..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (39,437 samples, 25.55%)</title><rect x="641.9" y="291.0" width="301.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.9" y="302.0">jdk/internal/net/http/ConnectionPool.retu..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (14,781 samples, 9.58%)</title><rect x="641.9" y="275.0" width="113.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="644.9" y="286.0">jdk.internal.n..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (24,656 samples, 15.97%)</title><rect x="754.9" y="275.0" width="188.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.9" y="286.0">jdk/internal/net/http/Co..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (24,656 samples, 15.97%)</title><rect x="754.9" y="259.0" width="188.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.9" y="270.0">jdk/internal/net/http/So..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2,776 samples, 1.80%)</title><rect x="754.9" y="243.0" width="21.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="757.9" y="254.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2,776 samples, 1.80%)</title><rect x="754.9" y="227.0" width="21.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.9" y="238.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2,776 samples, 1.80%)</title><rect x="754.9" y="211.0" width="21.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.9" y="222.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2,776 samples, 1.80%)</title><rect x="754.9" y="195.0" width="21.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="757.9" y="206.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2,776 samples, 1.80%)</title><rect x="754.9" y="179.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.9" y="190.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (2,584 samples, 1.67%)</title><rect x="754.9" y="163.0" width="19.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="757.9" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (192 samples, 0.12%)</title><rect x="774.6" y="163.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.6" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (192 samples, 0.12%)</title><rect x="774.6" y="147.0" width="1.5" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="777.6" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (21,880 samples, 14.18%)</title><rect x="776.1" y="243.0" width="167.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.1" y="254.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (21,880 samples, 14.18%)</title><rect x="776.1" y="227.0" width="167.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.1" y="238.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (21,880 samples, 14.18%)</title><rect x="776.1" y="211.0" width="167.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.1" y="222.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (21,880 samples, 14.18%)</title><rect x="776.1" y="195.0" width="167.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="779.1" y="206.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (21,880 samples, 14.18%)</title><rect x="776.1" y="179.0" width="167.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.1" y="190.0">jdk/internal/net/http..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (21,568 samples, 13.97%)</title><rect x="776.1" y="163.0" width="164.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="779.1" y="174.0">jdk.internal.net.http..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (312 samples, 0.20%)</title><rect x="941.0" y="163.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.0" y="174.0"></text>
</g>
<g>
<title>java.lang.Object (312 samples, 0.20%)</title><rect x="941.0" y="147.0" width="2.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="944.0" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (86 samples, 0.06%)</title><rect x="943.4" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (86 samples, 0.06%)</title><rect x="943.4" y="387.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (86 samples, 0.06%)</title><rect x="943.4" y="371.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="946.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (86 samples, 0.06%)</title><rect x="943.4" y="355.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.4" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (86 samples, 0.06%)</title><rect x="943.4" y="339.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.4" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (86 samples, 0.06%)</title><rect x="943.4" y="323.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.4" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (86 samples, 0.06%)</title><rect x="943.4" y="307.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.4" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (86 samples, 0.06%)</title><rect x="943.4" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (86 samples, 0.06%)</title><rect x="943.4" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.4" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (86 samples, 0.06%)</title><rect x="943.4" y="259.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="946.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (86 samples, 0.06%)</title><rect x="943.4" y="243.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.4" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (86 samples, 0.06%)</title><rect x="943.4" y="227.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.4" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (86 samples, 0.06%)</title><rect x="943.4" y="211.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.4" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (72 samples, 0.05%)</title><rect x="943.5" y="195.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.5" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (72 samples, 0.05%)</title><rect x="943.5" y="179.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="946.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/2115167929.apply (72 samples, 0.05%)</title><rect x="943.5" y="163.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (72 samples, 0.05%)</title><rect x="943.5" y="147.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="946.5" y="158.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (72 samples, 0.05%)</title><rect x="943.5" y="131.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (72 samples, 0.05%)</title><rect x="943.5" y="115.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.5" y="126.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (72 samples, 0.05%)</title><rect x="943.5" y="99.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="946.5" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1295475510.run (1,767 samples, 1.14%)</title><rect x="944.0" y="515.0" width="13.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (1,767 samples, 1.14%)</title><rect x="944.0" y="499.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (1,767 samples, 1.14%)</title><rect x="944.0" y="483.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="947.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (1,549 samples, 1.00%)</title><rect x="944.0" y="467.0" width="11.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.0" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (362 samples, 0.23%)</title><rect x="944.0" y="451.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (362 samples, 0.23%)</title><rect x="944.0" y="435.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (362 samples, 0.23%)</title><rect x="944.0" y="419.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (362 samples, 0.23%)</title><rect x="944.0" y="403.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="947.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (362 samples, 0.23%)</title><rect x="944.0" y="387.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (362 samples, 0.23%)</title><rect x="944.0" y="371.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="947.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (362 samples, 0.23%)</title><rect x="944.0" y="355.0" width="2.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (362 samples, 0.23%)</title><rect x="944.0" y="339.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (90 samples, 0.06%)</title><rect x="944.0" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.0" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (90 samples, 0.06%)</title><rect x="944.0" y="307.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="947.0" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (90 samples, 0.06%)</title><rect x="944.0" y="291.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.0" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (90 samples, 0.06%)</title><rect x="944.0" y="275.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.0" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (90 samples, 0.06%)</title><rect x="944.0" y="259.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.0" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (90 samples, 0.06%)</title><rect x="944.0" y="243.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.0" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (90 samples, 0.06%)</title><rect x="944.0" y="227.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="947.0" y="238.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (90 samples, 0.06%)</title><rect x="944.0" y="211.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="947.0" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (272 samples, 0.18%)</title><rect x="944.7" y="323.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.7" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (272 samples, 0.18%)</title><rect x="944.7" y="307.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="947.7" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (272 samples, 0.18%)</title><rect x="944.7" y="291.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.7" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (272 samples, 0.18%)</title><rect x="944.7" y="275.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="947.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (272 samples, 0.18%)</title><rect x="944.7" y="259.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="947.7" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (272 samples, 0.18%)</title><rect x="944.7" y="243.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.7" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (272 samples, 0.18%)</title><rect x="944.7" y="227.0" width="2.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="947.7" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (1,187 samples, 0.77%)</title><rect x="946.8" y="451.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (1,187 samples, 0.77%)</title><rect x="946.8" y="435.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (1,187 samples, 0.77%)</title><rect x="946.8" y="419.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,187 samples, 0.77%)</title><rect x="946.8" y="403.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,187 samples, 0.77%)</title><rect x="946.8" y="387.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="949.8" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,187 samples, 0.77%)</title><rect x="946.8" y="371.0" width="9.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.8" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,187 samples, 0.77%)</title><rect x="946.8" y="355.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,187 samples, 0.77%)</title><rect x="946.8" y="339.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="949.8" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,187 samples, 0.77%)</title><rect x="946.8" y="323.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="949.8" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,187 samples, 0.77%)</title><rect x="946.8" y="307.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="949.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,187 samples, 0.77%)</title><rect x="946.8" y="291.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.8" y="302.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,187 samples, 0.77%)</title><rect x="946.8" y="275.0" width="9.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="949.8" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (218 samples, 0.14%)</title><rect x="955.9" y="467.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="958.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (218 samples, 0.14%)</title><rect x="955.9" y="451.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="958.9" y="462.0"></text>
</g>
<g>
<title>one.nio.http.HttpSession (218 samples, 0.14%)</title><rect x="955.9" y="435.0" width="1.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="958.9" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (1,714 samples, 1.11%)</title><rect x="957.5" y="563.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (1,714 samples, 1.11%)</title><rect x="957.5" y="547.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (1,714 samples, 1.11%)</title><rect x="957.5" y="531.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (1,714 samples, 1.11%)</title><rect x="957.5" y="515.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (1,714 samples, 1.11%)</title><rect x="957.5" y="499.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (1,714 samples, 1.11%)</title><rect x="957.5" y="483.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1,714 samples, 1.11%)</title><rect x="957.5" y="467.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,714 samples, 1.11%)</title><rect x="957.5" y="451.0" width="13.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="960.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,714 samples, 1.11%)</title><rect x="957.5" y="435.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,714 samples, 1.11%)</title><rect x="957.5" y="419.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.5" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,714 samples, 1.11%)</title><rect x="957.5" y="403.0" width="13.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,714 samples, 1.11%)</title><rect x="957.5" y="387.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1,714 samples, 1.11%)</title><rect x="957.5" y="371.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1,714 samples, 1.11%)</title><rect x="957.5" y="355.0" width="13.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1,714 samples, 1.11%)</title><rect x="957.5" y="339.0" width="13.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1,714 samples, 1.11%)</title><rect x="957.5" y="323.0" width="13.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.5" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1,714 samples, 1.11%)</title><rect x="957.5" y="307.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="960.5" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,714 samples, 1.11%)</title><rect x="957.5" y="291.0" width="13.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="960.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,714 samples, 1.11%)</title><rect x="957.5" y="275.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.5" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (1,714 samples, 1.11%)</title><rect x="957.5" y="259.0" width="13.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="960.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (25,829 samples, 16.73%)</title><rect x="970.6" y="563.0" width="197.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.6" y="574.0">jdk/internal/net/http/Http..</text>
</g>
<g>
<title>java/util/ArrayList.forEach (162 samples, 0.10%)</title><rect x="970.6" y="547.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$365/1858085801.accept (162 samples, 0.10%)</title><rect x="970.6" y="531.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (162 samples, 0.10%)</title><rect x="970.6" y="515.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (162 samples, 0.10%)</title><rect x="970.6" y="499.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (162 samples, 0.10%)</title><rect x="970.6" y="483.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (162 samples, 0.10%)</title><rect x="970.6" y="467.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (162 samples, 0.10%)</title><rect x="970.6" y="451.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.10%)</title><rect x="970.6" y="435.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.10%)</title><rect x="970.6" y="419.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (162 samples, 0.10%)</title><rect x="970.6" y="403.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (162 samples, 0.10%)</title><rect x="970.6" y="387.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (162 samples, 0.10%)</title><rect x="970.6" y="371.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (162 samples, 0.10%)</title><rect x="970.6" y="355.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (162 samples, 0.10%)</title><rect x="970.6" y="339.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (162 samples, 0.10%)</title><rect x="970.6" y="323.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (162 samples, 0.10%)</title><rect x="970.6" y="307.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="973.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.10%)</title><rect x="970.6" y="291.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="973.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (162 samples, 0.10%)</title><rect x="970.6" y="275.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (162 samples, 0.10%)</title><rect x="970.6" y="259.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (162 samples, 0.10%)</title><rect x="970.6" y="243.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (162 samples, 0.10%)</title><rect x="970.6" y="227.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="973.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (154 samples, 0.10%)</title><rect x="970.6" y="211.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (154 samples, 0.10%)</title><rect x="970.6" y="195.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.6" y="206.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (154 samples, 0.10%)</title><rect x="970.6" y="179.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.6" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (154 samples, 0.10%)</title><rect x="970.6" y="163.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.6" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (154 samples, 0.10%)</title><rect x="970.6" y="147.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.6" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (154 samples, 0.10%)</title><rect x="970.6" y="131.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="973.6" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (154 samples, 0.10%)</title><rect x="970.6" y="115.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.6" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (154 samples, 0.10%)</title><rect x="970.6" y="99.0" width="1.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="973.6" y="110.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager (14,481 samples, 9.38%)</title><rect x="971.9" y="547.0" width="110.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="974.9" y="558.0">jdk.internal...</text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (337 samples, 0.22%)</title><rect x="1082.6" y="547.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1085.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$263/2089736233.run (130 samples, 0.08%)</title><rect x="1082.6" y="531.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (130 samples, 0.08%)</title><rect x="1082.6" y="515.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.08%)</title><rect x="1082.6" y="499.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1085.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.08%)</title><rect x="1082.6" y="483.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1085.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (130 samples, 0.08%)</title><rect x="1082.6" y="467.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (130 samples, 0.08%)</title><rect x="1082.6" y="451.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1085.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (130 samples, 0.08%)</title><rect x="1082.6" y="435.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1085.6" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (130 samples, 0.08%)</title><rect x="1082.6" y="419.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.6" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (130 samples, 0.08%)</title><rect x="1082.6" y="403.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (130 samples, 0.08%)</title><rect x="1082.6" y="387.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1085.6" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (130 samples, 0.08%)</title><rect x="1082.6" y="371.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1085.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.08%)</title><rect x="1082.6" y="355.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1085.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (130 samples, 0.08%)</title><rect x="1082.6" y="339.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1085.6" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (130 samples, 0.08%)</title><rect x="1082.6" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.6" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (130 samples, 0.08%)</title><rect x="1082.6" y="307.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1085.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (130 samples, 0.08%)</title><rect x="1082.6" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1085.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (103 samples, 0.07%)</title><rect x="1082.6" y="275.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.6" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (103 samples, 0.07%)</title><rect x="1082.6" y="259.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.6" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (103 samples, 0.07%)</title><rect x="1082.6" y="243.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1085.6" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (103 samples, 0.07%)</title><rect x="1082.6" y="227.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1085.6" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (103 samples, 0.07%)</title><rect x="1082.6" y="211.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1085.6" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (103 samples, 0.07%)</title><rect x="1082.6" y="195.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1085.6" y="206.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (103 samples, 0.07%)</title><rect x="1082.6" y="179.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1085.6" y="190.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (103 samples, 0.07%)</title><rect x="1082.6" y="163.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1085.6" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$277/266906696.run (207 samples, 0.13%)</title><rect x="1083.6" y="531.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1086.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (207 samples, 0.13%)</title><rect x="1083.6" y="515.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1086.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (207 samples, 0.13%)</title><rect x="1083.6" y="499.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (207 samples, 0.13%)</title><rect x="1083.6" y="483.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (207 samples, 0.13%)</title><rect x="1083.6" y="467.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1086.6" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (158 samples, 0.10%)</title><rect x="1083.6" y="451.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (158 samples, 0.10%)</title><rect x="1083.6" y="435.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (158 samples, 0.10%)</title><rect x="1083.6" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (158 samples, 0.10%)</title><rect x="1083.6" y="403.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1086.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (158 samples, 0.10%)</title><rect x="1083.6" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (158 samples, 0.10%)</title><rect x="1083.6" y="371.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1086.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (158 samples, 0.10%)</title><rect x="1083.6" y="355.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1086.6" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (158 samples, 0.10%)</title><rect x="1083.6" y="339.0" width="1.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1086.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (49 samples, 0.03%)</title><rect x="1084.8" y="451.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (49 samples, 0.03%)</title><rect x="1084.8" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1087.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (49 samples, 0.03%)</title><rect x="1084.8" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1087.8" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (49 samples, 0.03%)</title><rect x="1084.8" y="403.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.8" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (49 samples, 0.03%)</title><rect x="1084.8" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1087.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (49 samples, 0.03%)</title><rect x="1084.8" y="371.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1087.8" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (49 samples, 0.03%)</title><rect x="1084.8" y="355.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1087.8" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5,808 samples, 3.76%)</title><rect x="1085.2" y="547.0" width="44.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1088.2" y="558.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (5,808 samples, 3.76%)</title><rect x="1085.2" y="531.0" width="44.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1088.2" y="542.0">jdk/..</text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool (5,808 samples, 3.76%)</title><rect x="1085.2" y="515.0" width="44.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1088.2" y="526.0">jdk...</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (4,312 samples, 2.79%)</title><rect x="1129.6" y="547.0" width="32.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.6" y="558.0">jd..</text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl (4,312 samples, 2.79%)</title><rect x="1129.6" y="531.0" width="32.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1132.6" y="542.0">jd..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (665 samples, 0.43%)</title><rect x="1162.5" y="547.0" width="5.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1165.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (665 samples, 0.43%)</title><rect x="1162.5" y="531.0" width="5.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (665 samples, 0.43%)</title><rect x="1162.5" y="515.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1165.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (665 samples, 0.43%)</title><rect x="1162.5" y="499.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1165.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (665 samples, 0.43%)</title><rect x="1162.5" y="483.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1165.5" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (665 samples, 0.43%)</title><rect x="1162.5" y="467.0" width="5.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1165.5" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (64 samples, 0.04%)</title><rect x="1167.6" y="547.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1170.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (64 samples, 0.04%)</title><rect x="1167.6" y="531.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1170.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (64 samples, 0.04%)</title><rect x="1167.6" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1170.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (64 samples, 0.04%)</title><rect x="1167.6" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1170.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (64 samples, 0.04%)</title><rect x="1167.6" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1170.6" y="494.0"></text>
</g>
<g>
<title>java.lang.Object (64 samples, 0.04%)</title><rect x="1167.6" y="467.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1170.6" y="478.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,865 samples, 1.86%)</title><rect x="1168.1" y="563.0" width="21.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.1" y="574.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (2,865 samples, 1.86%)</title><rect x="1168.1" y="547.0" width="21.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1171.1" y="558.0">o..</text>
</g>
<g>
<title>one.nio.http.HttpSession (587 samples, 0.38%)</title><rect x="1168.1" y="531.0" width="4.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1171.1" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,278 samples, 1.48%)</title><rect x="1172.6" y="531.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1175.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,278 samples, 1.48%)</title><rect x="1172.6" y="515.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1175.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,278 samples, 1.48%)</title><rect x="1172.6" y="499.0" width="17.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1175.6" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,278 samples, 1.48%)</title><rect x="1172.6" y="483.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1175.6" y="494.0"></text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (2,278 samples, 1.48%)</title><rect x="1172.6" y="467.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1175.6" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (2,278 samples, 1.48%)</title><rect x="1172.6" y="451.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1175.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (2,278 samples, 1.48%)</title><rect x="1172.6" y="435.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1175.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2,278 samples, 1.48%)</title><rect x="1172.6" y="419.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2,278 samples, 1.48%)</title><rect x="1172.6" y="403.0" width="17.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1175.6" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2,278 samples, 1.48%)</title><rect x="1172.6" y="387.0" width="17.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1175.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2,278 samples, 1.48%)</title><rect x="1172.6" y="371.0" width="17.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1175.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2,278 samples, 1.48%)</title><rect x="1172.6" y="355.0" width="17.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1175.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2,278 samples, 1.48%)</title><rect x="1172.6" y="339.0" width="17.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1175.6" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2,278 samples, 1.48%)</title><rect x="1172.6" y="323.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2,278 samples, 1.48%)</title><rect x="1172.6" y="307.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1175.6" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantLock$NonfairSync (2,278 samples, 1.48%)</title><rect x="1172.6" y="291.0" width="17.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1175.6" y="302.0"></text>
</g>
</g>
</svg>
