<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1350" onload="init(evt)" viewBox="0 0 1200 1350"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1333"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1333"> </text>
<g id="frames">
<g>
<title>all (3,970 samples, 100.00%)</title><rect x="10.0" y="1299.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="1310.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (51 samples, 1.28%)</title><rect x="10.0" y="1283.0" width="15.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.0" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (50 samples, 1.26%)</title><rect x="10.0" y="1267.0" width="14.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1278.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="10.3" y="1251.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="13.3" y="1262.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.08%)</title><rect x="10.6" y="1251.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="13.6" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="10.9" y="1235.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="13.9" y="1246.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="11.2" y="1235.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="14.2" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (44 samples, 1.11%)</title><rect x="11.5" y="1251.0" width="13.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="14.5" y="1262.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="12.1" y="1235.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="15.1" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (29 samples, 0.73%)</title><rect x="12.4" y="1235.0" width="8.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.4" y="1246.0"></text>
</g>
<g>
<title>SpinPause (10 samples, 0.25%)</title><rect x="21.0" y="1235.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="24.0" y="1246.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="24.0" y="1235.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="27.0" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="24.0" y="1219.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.0" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="24.0" y="1203.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="27.0" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="24.0" y="1187.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.0" y="1198.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="24.0" y="1171.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="27.0" y="1182.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="24.0" y="1155.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.0" y="1166.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="24.0" y="1139.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="27.0" y="1150.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) [clone .part.0] (1 samples, 0.03%)</title><rect x="24.3" y="1235.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.3" y="1246.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="24.3" y="1219.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="27.3" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="24.6" y="1251.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="27.6" y="1262.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="24.9" y="1267.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="27.9" y="1278.0"></text>
</g>
<g>
<title>[no_Java_frame] (11 samples, 0.28%)</title><rect x="25.2" y="1283.0" width="3.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="28.2" y="1294.0"></text>
</g>
<g>
<title>[not_walkable_Java] (8 samples, 0.20%)</title><rect x="28.4" y="1283.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="31.4" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.03%)</title><rect x="28.4" y="1267.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.4" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.15%)</title><rect x="28.7" y="1267.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="31.7" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.15%)</title><rect x="28.7" y="1251.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="31.7" y="1262.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="28.7" y="1235.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="31.7" y="1246.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.08%)</title><rect x="29.0" y="1235.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="32.0" y="1246.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.05%)</title><rect x="29.0" y="1219.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="32.0" y="1230.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="29.6" y="1219.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="32.6" y="1230.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="29.9" y="1235.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="32.9" y="1246.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.03%)</title><rect x="29.9" y="1219.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="32.9" y="1230.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="30.2" y="1219.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="33.2" y="1230.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="30.2" y="1203.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="33.2" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="30.5" y="1267.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="33.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.35%)</title><rect x="30.8" y="1283.0" width="4.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="33.8" y="1294.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.03%)</title><rect x="30.8" y="1267.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="33.8" y="1278.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="31.1" y="1267.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="34.1" y="1278.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (1 samples, 0.03%)</title><rect x="31.4" y="1267.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="34.4" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="31.4" y="1251.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="34.4" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="31.4" y="1235.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.4" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="31.4" y="1219.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="34.4" y="1230.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="31.4" y="1203.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="34.4" y="1214.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="31.4" y="1187.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.4" y="1198.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="31.4" y="1171.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.4" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="31.4" y="1155.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.4" y="1166.0"></text>
</g>
<g>
<title>native_queued_spin_lock_slowpath (1 samples, 0.03%)</title><rect x="31.4" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="34.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (7 samples, 0.18%)</title><rect x="31.7" y="1267.0" width="2.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="34.7" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.18%)</title><rect x="31.7" y="1251.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.7" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.18%)</title><rect x="31.7" y="1235.0" width="2.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="34.7" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.15%)</title><rect x="32.0" y="1219.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="35.0" y="1230.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.10%)</title><rect x="32.6" y="1203.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.6" y="1214.0"></text>
</g>
<g>
<title>futex_wait (4 samples, 0.10%)</title><rect x="32.6" y="1187.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.6" y="1198.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.10%)</title><rect x="32.6" y="1171.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.6" y="1182.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="32.6" y="1155.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.6" y="1166.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="33.2" y="1155.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.2" y="1166.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="33.5" y="1155.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.5" y="1166.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="33.5" y="1139.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.5" y="1150.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="33.5" y="1123.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.5" y="1134.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="33.5" y="1107.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="36.5" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.10%)</title><rect x="33.8" y="1267.0" width="1.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="36.8" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="34.1" y="1251.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="37.1" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="34.1" y="1235.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.1" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="34.7" y="1219.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="37.7" y="1230.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="34.7" y="1203.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="37.7" y="1214.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="34.7" y="1187.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.7" y="1198.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="34.7" y="1171.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.7" y="1182.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="34.7" y="1155.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="37.7" y="1166.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="34.7" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.7" y="1150.0"></text>
</g>
<g>
<title>[unknown_Java] (12 samples, 0.30%)</title><rect x="35.0" y="1283.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="38.0" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="35.0" y="1267.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="38.0" y="1278.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.05%)</title><rect x="35.0" y="1251.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="38.0" y="1262.0"></text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.03%)</title><rect x="35.6" y="1267.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="38.6" y="1278.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="35.6" y="1251.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="38.6" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.23%)</title><rect x="35.9" y="1267.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="38.9" y="1278.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.20%)</title><rect x="36.2" y="1251.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.2" y="1262.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.20%)</title><rect x="36.2" y="1235.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="39.2" y="1246.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.20%)</title><rect x="36.2" y="1219.0" width="2.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="39.2" y="1230.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.20%)</title><rect x="36.2" y="1203.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="39.2" y="1214.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.20%)</title><rect x="36.2" y="1187.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.2" y="1198.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="36.5" y="1171.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="39.5" y="1182.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="36.5" y="1155.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="39.5" y="1166.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.15%)</title><rect x="36.8" y="1171.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="39.8" y="1182.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.15%)</title><rect x="36.8" y="1155.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="39.8" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="36.8" y="1139.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="39.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,769 samples, 69.75%)</title><rect x="38.5" y="1283.0" width="823.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="41.5" y="1294.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,769 samples, 69.75%)</title><rect x="38.5" y="1267.0" width="823.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.5" y="1278.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,769 samples, 69.75%)</title><rect x="38.5" y="1251.0" width="823.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="41.5" y="1262.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="43.9" y="1235.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.9" y="1246.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="43.9" y="1219.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.9" y="1230.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="43.9" y="1203.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="46.9" y="1214.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="43.9" y="1187.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="46.9" y="1198.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="43.9" y="1171.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="46.9" y="1182.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="43.9" y="1155.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.9" y="1166.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="43.9" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="46.9" y="1150.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="43.9" y="1123.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="46.9" y="1134.0"></text>
</g>
<g>
<title>itable stub (8 samples, 0.20%)</title><rect x="44.2" y="1235.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="47.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (396 samples, 9.97%)</title><rect x="46.6" y="1235.0" width="117.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.6" y="1246.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (363 samples, 9.14%)</title><rect x="47.2" y="1219.0" width="107.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.2" y="1230.0">java/util/con..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="47.7" y="1203.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="50.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (358 samples, 9.02%)</title><rect x="48.0" y="1203.0" width="106.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.0" y="1214.0">java/util/con..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1563358180.apply (356 samples, 8.97%)</title><rect x="48.6" y="1187.0" width="105.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.6" y="1198.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (355 samples, 8.94%)</title><rect x="48.9" y="1171.0" width="105.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.9" y="1182.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (355 samples, 8.94%)</title><rect x="48.9" y="1155.0" width="105.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.9" y="1166.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="49.2" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="49.2" y="1123.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="49.2" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="49.2" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (308 samples, 7.76%)</title><rect x="49.5" y="1139.0" width="91.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="52.5" y="1150.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (308 samples, 7.76%)</title><rect x="49.5" y="1123.0" width="91.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.5" y="1134.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (308 samples, 7.76%)</title><rect x="49.5" y="1107.0" width="91.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="52.5" y="1118.0">jdk/interna..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (152 samples, 3.83%)</title><rect x="49.5" y="1091.0" width="45.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.5" y="1102.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (152 samples, 3.83%)</title><rect x="49.5" y="1075.0" width="45.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.5" y="1086.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (150 samples, 3.78%)</title><rect x="50.1" y="1059.0" width="44.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.1" y="1070.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="50.1" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.1" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="50.1" y="1027.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="53.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/1583544498.apply (149 samples, 3.75%)</title><rect x="50.4" y="1043.0" width="44.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="1054.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (149 samples, 3.75%)</title><rect x="50.4" y="1027.0" width="44.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.4" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (149 samples, 3.75%)</title><rect x="50.4" y="1011.0" width="44.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.4" y="1022.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.apply (149 samples, 3.75%)</title><rect x="50.4" y="995.0" width="44.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.4" y="1006.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (149 samples, 3.75%)</title><rect x="50.4" y="979.0" width="44.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.4" y="990.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (1 samples, 0.03%)</title><rect x="50.4" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (1 samples, 0.03%)</title><rect x="50.4" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.03%)</title><rect x="50.4" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.apply (1 samples, 0.03%)</title><rect x="50.4" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (1 samples, 0.03%)</title><rect x="50.4" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="53.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (1 samples, 0.03%)</title><rect x="50.4" y="883.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="53.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/311098875.apply (1 samples, 0.03%)</title><rect x="50.4" y="867.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="53.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (1 samples, 0.03%)</title><rect x="50.4" y="851.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (1 samples, 0.03%)</title><rect x="50.4" y="835.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (1 samples, 0.03%)</title><rect x="50.4" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (1 samples, 0.03%)</title><rect x="50.4" y="803.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (1 samples, 0.03%)</title><rect x="50.4" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$397/1003985293.accept (1 samples, 0.03%)</title><rect x="50.4" y="771.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (1 samples, 0.03%)</title><rect x="50.4" y="755.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (1 samples, 0.03%)</title><rect x="50.4" y="739.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (1 samples, 0.03%)</title><rect x="50.4" y="723.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="53.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (1 samples, 0.03%)</title><rect x="50.4" y="707.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="53.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="50.4" y="691.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="50.4" y="675.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="50.4" y="659.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="50.4" y="643.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.03%)</title><rect x="50.4" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="50.4" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (1 samples, 0.03%)</title><rect x="50.4" y="595.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="50.4" y="579.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (1 samples, 0.03%)</title><rect x="50.4" y="563.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="50.4" y="547.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.4" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="50.4" y="531.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="50.4" y="515.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="50.4" y="499.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="53.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="50.4" y="483.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="53.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.03%)</title><rect x="50.4" y="467.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.03%)</title><rect x="50.4" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (1 samples, 0.03%)</title><rect x="50.4" y="435.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (1 samples, 0.03%)</title><rect x="50.4" y="419.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.4" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (1 samples, 0.03%)</title><rect x="50.4" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (1 samples, 0.03%)</title><rect x="50.4" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="53.4" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (1 samples, 0.03%)</title><rect x="50.4" y="371.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (1 samples, 0.03%)</title><rect x="50.4" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="50.4" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="53.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1 samples, 0.03%)</title><rect x="50.4" y="323.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (1 samples, 0.03%)</title><rect x="50.4" y="307.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (1 samples, 0.03%)</title><rect x="50.4" y="291.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.4" y="302.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.03%)</title><rect x="50.4" y="275.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="53.4" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="50.4" y="259.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="53.4" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="50.4" y="243.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="53.4" y="254.0"></text>
</g>
<g>
<title>do_writev (1 samples, 0.03%)</title><rect x="50.4" y="227.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.4" y="238.0"></text>
</g>
<g>
<title>vfs_writev (1 samples, 0.03%)</title><rect x="50.4" y="211.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="53.4" y="222.0"></text>
</g>
<g>
<title>do_iter_write (1 samples, 0.03%)</title><rect x="50.4" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.4" y="206.0"></text>
</g>
<g>
<title>do_iter_readv_writev (1 samples, 0.03%)</title><rect x="50.4" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.4" y="190.0"></text>
</g>
<g>
<title>sock_write_iter (1 samples, 0.03%)</title><rect x="50.4" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="53.4" y="174.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.03%)</title><rect x="50.4" y="147.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="53.4" y="158.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.03%)</title><rect x="50.4" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="53.4" y="142.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.03%)</title><rect x="50.4" y="115.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="53.4" y="126.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="50.4" y="99.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="53.4" y="110.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="50.4" y="83.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.4" y="94.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.03%)</title><rect x="50.4" y="67.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="53.4" y="78.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="50.4" y="51.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="53.4" y="62.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.03%)</title><rect x="50.4" y="35.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.4" y="46.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="50.7" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="50.7" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="51.0" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (146 samples, 3.68%)</title><rect x="51.3" y="963.0" width="43.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.3" y="974.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (134 samples, 3.38%)</title><rect x="51.6" y="947.0" width="39.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="54.6" y="958.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (134 samples, 3.38%)</title><rect x="51.6" y="931.0" width="39.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.6" y="942.0">jav..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="51.9" y="915.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="54.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1158701491.apply (126 samples, 3.17%)</title><rect x="52.2" y="915.0" width="37.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="55.2" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (126 samples, 3.17%)</title><rect x="52.2" y="899.0" width="37.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="55.2" y="910.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.03%)</title><rect x="53.4" y="883.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="56.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.03%)</title><rect x="53.4" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="56.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.05%)</title><rect x="53.7" y="883.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="56.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (7 samples, 0.18%)</title><rect x="54.3" y="883.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (7 samples, 0.18%)</title><rect x="54.3" y="867.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="57.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.18%)</title><rect x="54.3" y="851.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="57.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.18%)</title><rect x="54.3" y="835.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="57.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1 samples, 0.03%)</title><rect x="54.9" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.10%)</title><rect x="55.2" y="819.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="58.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.10%)</title><rect x="55.2" y="803.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.10%)</title><rect x="55.2" y="787.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="58.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (2 samples, 0.05%)</title><rect x="55.5" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="58.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.05%)</title><rect x="55.5" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (1 samples, 0.03%)</title><rect x="56.1" y="771.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.03%)</title><rect x="56.1" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.03%)</title><rect x="56.1" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="59.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.03%)</title><rect x="56.1" y="723.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="59.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (34 samples, 0.86%)</title><rect x="56.4" y="883.0" width="10.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (34 samples, 0.86%)</title><rect x="56.4" y="867.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="59.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (4 samples, 0.10%)</title><rect x="56.4" y="851.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4 samples, 0.10%)</title><rect x="56.4" y="835.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (4 samples, 0.10%)</title><rect x="56.4" y="819.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="59.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.10%)</title><rect x="56.4" y="803.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="59.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.10%)</title><rect x="56.4" y="787.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.10%)</title><rect x="56.4" y="771.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.4" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.03%)</title><rect x="57.3" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.3" y="766.0"></text>
</g>
<g>
<title>__write (1 samples, 0.03%)</title><rect x="57.3" y="739.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="60.3" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="57.3" y="723.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="60.3" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="57.3" y="707.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="60.3" y="718.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="57.3" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.3" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="57.3" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="60.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (30 samples, 0.76%)</title><rect x="57.6" y="851.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (30 samples, 0.76%)</title><rect x="57.6" y="835.0" width="8.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (25 samples, 0.63%)</title><rect x="57.6" y="819.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="60.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (24 samples, 0.60%)</title><rect x="57.6" y="803.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="60.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (24 samples, 0.60%)</title><rect x="57.6" y="787.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="60.6" y="798.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.10%)</title><rect x="58.7" y="771.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="61.7" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.10%)</title><rect x="58.7" y="755.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="61.7" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="59.0" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="62.0" y="750.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="59.3" y="739.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="62.3" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.40%)</title><rect x="59.9" y="771.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="62.9" y="782.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="60.5" y="755.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="63.5" y="766.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="60.8" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="63.8" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="60.8" y="739.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="63.8" y="750.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="60.8" y="723.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="63.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (12 samples, 0.30%)</title><rect x="61.1" y="755.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="64.1" y="766.0"></text>
</g>
<g>
<title>__write (12 samples, 0.30%)</title><rect x="61.1" y="739.0" width="3.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="64.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.25%)</title><rect x="61.7" y="723.0" width="3.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="64.7" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.25%)</title><rect x="61.7" y="707.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="64.7" y="718.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="61.7" y="691.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="64.7" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="61.7" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="64.7" y="686.0"></text>
</g>
<g>
<title>ksys_write (9 samples, 0.23%)</title><rect x="62.0" y="691.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.0" y="702.0"></text>
</g>
<g>
<title>vfs_write (9 samples, 0.23%)</title><rect x="62.0" y="675.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="65.0" y="686.0"></text>
</g>
<g>
<title>new_sync_write (9 samples, 0.23%)</title><rect x="62.0" y="659.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="65.0" y="670.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.18%)</title><rect x="62.6" y="643.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="65.6" y="654.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.03%)</title><rect x="62.9" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="65.9" y="638.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.08%)</title><rect x="63.2" y="627.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="66.2" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="63.2" y="611.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="66.2" y="622.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="64.1" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.1" y="638.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="64.4" y="627.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.isStopped (1 samples, 0.03%)</title><rect x="64.7" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (2 samples, 0.05%)</title><rect x="65.0" y="819.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (3 samples, 0.08%)</title><rect x="65.6" y="819.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.05%)</title><rect x="65.6" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="68.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1 samples, 0.03%)</title><rect x="66.2" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.03%)</title><rect x="66.2" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (78 samples, 1.96%)</title><rect x="66.5" y="883.0" width="23.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.5" y="894.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.08%)</title><rect x="66.5" y="867.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.08%)</title><rect x="66.5" y="851.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="69.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="66.5" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="69.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (2 samples, 0.05%)</title><rect x="66.8" y="835.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="69.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.10%)</title><rect x="67.4" y="867.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.4" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.03%)</title><rect x="68.3" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.3" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.03%)</title><rect x="68.3" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.3" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (1 samples, 0.03%)</title><rect x="68.3" y="819.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="68.3" y="803.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="71.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="68.6" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="68.6" y="851.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (50 samples, 1.26%)</title><rect x="68.9" y="867.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="71.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.03%)</title><rect x="68.9" y="851.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (7 samples, 0.18%)</title><rect x="69.1" y="851.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="72.1" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (7 samples, 0.18%)</title><rect x="69.1" y="835.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.1" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (7 samples, 0.18%)</title><rect x="69.1" y="819.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="72.1" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (7 samples, 0.18%)</title><rect x="69.1" y="803.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.1" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.15%)</title><rect x="69.4" y="787.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.15%)</title><rect x="69.4" y="771.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="70.9" y="755.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="70.9" y="739.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="70.9" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (25 samples, 0.63%)</title><rect x="71.2" y="851.0" width="7.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.2" y="862.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.20%)</title><rect x="71.8" y="835.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.8" y="846.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.20%)</title><rect x="71.8" y="819.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.8" y="830.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.03%)</title><rect x="72.4" y="803.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.4" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="72.4" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.4" y="798.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="72.4" y="771.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="75.4" y="782.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="72.4" y="755.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="75.4" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="72.4" y="739.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="75.4" y="750.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="72.4" y="723.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="75.4" y="734.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="72.4" y="707.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="75.4" y="718.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="72.4" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="75.4" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (5 samples, 0.13%)</title><rect x="72.7" y="803.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.7" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (5 samples, 0.13%)</title><rect x="72.7" y="787.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.7" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="73.9" y="771.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="76.9" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="74.2" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.2" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (1 samples, 0.03%)</title><rect x="74.2" y="819.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.2" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.03%)</title><rect x="74.2" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.03%)</title><rect x="74.2" y="787.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.2" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.03%)</title><rect x="74.2" y="771.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.2" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="74.2" y="755.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.2" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey (3 samples, 0.08%)</title><rect x="74.5" y="835.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.5" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.03%)</title><rect x="75.1" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="78.1" y="830.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.08%)</title><rect x="75.4" y="835.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.4" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (3 samples, 0.08%)</title><rect x="75.4" y="819.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.4" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.05%)</title><rect x="75.7" y="803.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.7" y="814.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="75.7" y="787.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="78.7" y="798.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="75.7" y="771.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="78.7" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.03%)</title><rect x="76.0" y="787.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.0" y="798.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.03%)</title><rect x="76.3" y="835.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="79.3" y="846.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.03%)</title><rect x="76.3" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.3" y="830.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="76.3" y="803.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="79.3" y="814.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$376/1989645083.test (7 samples, 0.18%)</title><rect x="76.6" y="835.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.6" y="846.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (6 samples, 0.15%)</title><rect x="76.9" y="819.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.getValue (1 samples, 0.03%)</title><rect x="77.5" y="803.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="80.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$285/993364229.test (1 samples, 0.03%)</title><rect x="77.8" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.lambda$static$0 (1 samples, 0.03%)</title><rect x="77.8" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="77.8" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="77.8" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="80.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="77.8" y="739.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1020154737.test (2 samples, 0.05%)</title><rect x="78.1" y="803.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (2 samples, 0.05%)</title><rect x="78.1" y="787.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="81.1" y="798.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$84/246273275.test (2 samples, 0.05%)</title><rect x="78.1" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.1" y="782.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (2 samples, 0.05%)</title><rect x="78.1" y="755.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/716487794.test (2 samples, 0.05%)</title><rect x="78.1" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (2 samples, 0.05%)</title><rect x="78.1" y="723.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="78.1" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.1" y="718.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="78.1" y="691.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="78.1" y="675.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (1 samples, 0.03%)</title><rect x="78.7" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (16 samples, 0.40%)</title><rect x="79.0" y="851.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.0" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (16 samples, 0.40%)</title><rect x="79.0" y="835.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="82.0" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (16 samples, 0.40%)</title><rect x="79.0" y="819.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.0" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="79.3" y="803.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="82.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.33%)</title><rect x="79.8" y="803.0" width="3.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="82.8" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (11 samples, 0.28%)</title><rect x="80.1" y="787.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.1" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.28%)</title><rect x="80.1" y="771.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="83.1" y="782.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="80.7" y="755.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="83.7" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="81.0" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.0" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (2 samples, 0.05%)</title><rect x="81.0" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="81.0" y="723.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.0" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.05%)</title><rect x="81.6" y="755.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1534694976.test (2 samples, 0.05%)</title><rect x="82.2" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="85.2" y="766.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="82.8" y="755.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="85.8" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.03%)</title><rect x="83.4" y="787.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.4" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.03%)</title><rect x="83.4" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="86.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (6 samples, 0.15%)</title><rect x="83.7" y="867.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="84.3" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (3 samples, 0.08%)</title><rect x="84.6" y="851.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="87.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (3 samples, 0.08%)</title><rect x="84.6" y="835.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="87.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (14 samples, 0.35%)</title><rect x="85.5" y="867.0" width="4.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="88.5" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.25%)</title><rect x="86.4" y="851.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="89.4" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="87.0" y="835.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="90.0" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="87.0" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="90.0" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="87.0" y="803.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="90.0" y="814.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="87.0" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="90.0" y="798.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="87.0" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="90.0" y="782.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.03%)</title><rect x="87.0" y="755.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="90.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.08%)</title><rect x="87.3" y="835.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.08%)</title><rect x="87.3" y="819.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="90.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.08%)</title><rect x="87.3" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="88.2" y="835.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.2" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.08%)</title><rect x="88.5" y="835.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.5" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="89.4" y="851.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="92.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.15%)</title><rect x="89.7" y="915.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="92.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (6 samples, 0.15%)</title><rect x="89.7" y="899.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.setRetryOnError (2 samples, 0.05%)</title><rect x="91.4" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (9 samples, 0.23%)</title><rect x="92.0" y="947.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="95.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.23%)</title><rect x="92.0" y="931.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.23%)</title><rect x="92.0" y="915.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.23%)</title><rect x="92.0" y="899.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (7 samples, 0.18%)</title><rect x="92.6" y="883.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.15%)</title><rect x="92.9" y="867.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.13%)</title><rect x="92.9" y="851.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (5 samples, 0.13%)</title><rect x="92.9" y="835.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (5 samples, 0.13%)</title><rect x="92.9" y="819.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (4 samples, 0.10%)</title><rect x="92.9" y="803.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (4 samples, 0.10%)</title><rect x="92.9" y="787.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.9" y="798.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="93.5" y="771.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="96.5" y="782.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="93.5" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="96.5" y="766.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="93.5" y="739.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="96.5" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="93.5" y="723.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="96.5" y="734.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="93.5" y="707.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="96.5" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="93.5" y="691.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="96.5" y="702.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="93.5" y="675.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="96.5" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="93.5" y="659.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="93.8" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="93.8" y="755.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="93.8" y="739.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="96.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.03%)</title><rect x="94.1" y="803.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.03%)</title><rect x="94.1" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.03%)</title><rect x="94.1" y="771.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.03%)</title><rect x="94.1" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="97.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="94.4" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.03%)</title><rect x="94.4" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="97.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (1 samples, 0.03%)</title><rect x="94.4" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.08%)</title><rect x="94.7" y="1091.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.08%)</title><rect x="94.7" y="1075.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="97.7" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="94.7" y="1059.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="97.7" y="1070.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$44/187472540.apply (1 samples, 0.03%)</title><rect x="95.0" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="95.3" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="95.3" y="1043.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="98.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (153 samples, 3.85%)</title><rect x="95.6" y="1091.0" width="45.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.6" y="1102.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="95.6" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="95.6" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="98.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/1126457052.get$Lambda (1 samples, 0.03%)</title><rect x="95.6" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.6" y="1054.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="95.6" y="1027.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="98.6" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="95.6" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="98.6" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="95.6" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="98.6" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="95.6" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="98.6" y="990.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="95.6" y="963.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="98.6" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="95.6" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="98.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="95.9" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="98.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="95.9" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$307/339638944.apply (1 samples, 0.03%)</title><rect x="95.9" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="98.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (6 samples, 0.15%)</title><rect x="96.2" y="1075.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.13%)</title><rect x="96.5" y="1059.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="96.5" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.10%)</title><rect x="96.8" y="1043.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (4 samples, 0.10%)</title><rect x="96.8" y="1027.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.8" y="1038.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="96.8" y="1011.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="99.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/1126457052.accept (2 samples, 0.05%)</title><rect x="97.4" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (145 samples, 3.65%)</title><rect x="98.0" y="1075.0" width="43.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.0" y="1086.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (145 samples, 3.65%)</title><rect x="98.0" y="1059.0" width="43.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.0" y="1070.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (145 samples, 3.65%)</title><rect x="98.0" y="1043.0" width="43.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.0" y="1054.0">jdk/..</text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="98.3" y="1027.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.3" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="98.3" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="98.3" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.3" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (1 samples, 0.03%)</title><rect x="98.6" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.6" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (1 samples, 0.03%)</title><rect x="98.6" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.6" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="98.6" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (6 samples, 0.15%)</title><rect x="98.9" y="1027.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.9" y="1038.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="100.4" y="1011.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="103.4" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="100.4" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="103.4" y="1006.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="100.4" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (8 samples, 0.20%)</title><rect x="100.7" y="1027.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (1 samples, 0.03%)</title><rect x="100.7" y="1011.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (1 samples, 0.03%)</title><rect x="100.7" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (6 samples, 0.15%)</title><rect x="101.0" y="1011.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (3 samples, 0.08%)</title><rect x="101.0" y="995.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.08%)</title><rect x="101.8" y="995.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="102.4" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="102.7" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.03%)</title><rect x="102.7" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (3 samples, 0.08%)</title><rect x="103.0" y="1027.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.08%)</title><rect x="103.0" y="1011.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.08%)</title><rect x="103.0" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.03%)</title><rect x="103.6" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.03%)</title><rect x="103.6" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.6" y="974.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.03%)</title><rect x="103.6" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.6" y="958.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (1 samples, 0.03%)</title><rect x="103.6" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (70 samples, 1.76%)</title><rect x="103.9" y="1027.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (69 samples, 1.74%)</title><rect x="103.9" y="1011.0" width="20.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.9" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (20 samples, 0.50%)</title><rect x="107.2" y="995.0" width="5.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="110.2" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (19 samples, 0.48%)</title><rect x="107.2" y="979.0" width="5.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.2" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (17 samples, 0.43%)</title><rect x="107.2" y="963.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="110.2" y="974.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.05%)</title><rect x="112.2" y="963.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="115.2" y="974.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="112.8" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="115.8" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="112.8" y="963.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="115.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (2 samples, 0.05%)</title><rect x="113.1" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="113.1" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.1" y="990.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="113.4" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (36 samples, 0.91%)</title><rect x="113.7" y="995.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.7" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.15%)</title><rect x="113.7" y="979.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="116.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.10%)</title><rect x="113.7" y="963.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="116.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.10%)</title><rect x="113.7" y="947.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.7" y="958.0"></text>
</g>
<g>
<title>java/util/Objects.equals (4 samples, 0.10%)</title><rect x="113.7" y="931.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="116.7" y="942.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (4 samples, 0.10%)</title><rect x="113.7" y="915.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.7" y="926.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (4 samples, 0.10%)</title><rect x="113.7" y="899.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="116.7" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="114.9" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.05%)</title><rect x="114.9" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="117.9" y="958.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.05%)</title><rect x="114.9" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="117.9" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.05%)</title><rect x="114.9" y="915.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (30 samples, 0.76%)</title><rect x="115.5" y="979.0" width="8.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="118.5" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.08%)</title><rect x="115.5" y="963.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.5" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.08%)</title><rect x="115.5" y="947.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.5" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.08%)</title><rect x="115.5" y="931.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.5" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (27 samples, 0.68%)</title><rect x="116.4" y="963.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (1 samples, 0.03%)</title><rect x="124.4" y="1011.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.4" y="1022.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.03%)</title><rect x="124.4" y="995.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="127.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (51 samples, 1.28%)</title><rect x="124.7" y="1027.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.7" y="1038.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (49 samples, 1.23%)</title><rect x="125.3" y="1011.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.3" y="1022.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (30 samples, 0.76%)</title><rect x="125.6" y="995.0" width="8.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="128.6" y="1006.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.05%)</title><rect x="126.8" y="979.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="129.8" y="990.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.03%)</title><rect x="127.4" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="130.4" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.05%)</title><rect x="127.7" y="979.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="130.7" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="127.7" y="963.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="130.7" y="974.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.18%)</title><rect x="128.3" y="979.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="131.3" y="990.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (2 samples, 0.05%)</title><rect x="128.6" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="131.6" y="974.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.03%)</title><rect x="129.2" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="132.2" y="974.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="129.5" y="963.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="132.5" y="974.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.03%)</title><rect x="129.5" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="132.5" y="958.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.05%)</title><rect x="129.8" y="963.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="132.8" y="974.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="130.4" y="979.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="133.4" y="990.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="131.0" y="979.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="134.0" y="990.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.08%)</title><rect x="131.3" y="979.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.3" y="990.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="131.3" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="134.3" y="974.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.05%)</title><rect x="131.6" y="963.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="134.6" y="974.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (8 samples, 0.20%)</title><rect x="132.2" y="979.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="135.2" y="990.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (4 samples, 0.10%)</title><rect x="132.2" y="963.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="135.2" y="974.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (1 samples, 0.03%)</title><rect x="133.4" y="963.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="136.4" y="974.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.08%)</title><rect x="133.6" y="963.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="136.6" y="974.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.03%)</title><rect x="133.6" y="947.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="136.6" y="958.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="133.9" y="947.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="136.9" y="958.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="134.2" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="137.2" y="942.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.03%)</title><rect x="134.5" y="995.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="137.5" y="1006.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.10%)</title><rect x="134.8" y="995.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="137.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$222/1637846157.run (13 samples, 0.33%)</title><rect x="136.0" y="995.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (11 samples, 0.28%)</title><rect x="136.6" y="979.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="139.6" y="990.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (1 samples, 0.03%)</title><rect x="136.6" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="139.6" y="974.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (10 samples, 0.25%)</title><rect x="136.9" y="963.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="139.9" y="974.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (10 samples, 0.25%)</title><rect x="136.9" y="947.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.9" y="958.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.25%)</title><rect x="136.9" y="931.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="139.9" y="942.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (10 samples, 0.25%)</title><rect x="136.9" y="915.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="139.9" y="926.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (8 samples, 0.20%)</title><rect x="137.5" y="899.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (7 samples, 0.18%)</title><rect x="137.8" y="883.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.8" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (7 samples, 0.18%)</title><rect x="137.8" y="867.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (7 samples, 0.18%)</title><rect x="137.8" y="851.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="140.8" y="862.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="139.6" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="142.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.10%)</title><rect x="139.9" y="1027.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (4 samples, 0.10%)</title><rect x="139.9" y="1011.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (4 samples, 0.10%)</title><rect x="139.9" y="995.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="142.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.05%)</title><rect x="140.5" y="979.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="143.5" y="990.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.05%)</title><rect x="140.5" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.5" y="974.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (2 samples, 0.05%)</title><rect x="140.5" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (26 samples, 0.65%)</title><rect x="141.1" y="1139.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.1" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.10%)</title><rect x="141.4" y="1123.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.4" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.10%)</title><rect x="141.4" y="1107.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="144.4" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.10%)</title><rect x="141.4" y="1091.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="144.4" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (8 samples, 0.20%)</title><rect x="142.6" y="1123.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.6" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.15%)</title><rect x="143.2" y="1107.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.2" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="143.8" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (1 samples, 0.03%)</title><rect x="144.1" y="1091.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.05%)</title><rect x="144.3" y="1091.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (13 samples, 0.33%)</title><rect x="144.9" y="1123.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="147.9" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.33%)</title><rect x="144.9" y="1107.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="147.9" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="145.2" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="148.2" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="145.2" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="148.2" y="1086.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (1 samples, 0.03%)</title><rect x="145.2" y="1059.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="148.2" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.28%)</title><rect x="145.5" y="1091.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="148.5" y="1102.0"></text>
</g>
<g>
<title>__write (11 samples, 0.28%)</title><rect x="145.5" y="1075.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="148.5" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.23%)</title><rect x="146.1" y="1059.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="149.1" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.23%)</title><rect x="146.1" y="1043.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="149.1" y="1054.0"></text>
</g>
<g>
<title>ksys_write (8 samples, 0.20%)</title><rect x="146.4" y="1027.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="149.4" y="1038.0"></text>
</g>
<g>
<title>vfs_write (7 samples, 0.18%)</title><rect x="146.7" y="1011.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="149.7" y="1022.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="147.0" y="995.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="150.0" y="1006.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.03%)</title><rect x="147.3" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="150.3" y="1006.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 0.10%)</title><rect x="147.6" y="995.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="150.6" y="1006.0"></text>
</g>
<g>
<title>pipe_write (4 samples, 0.10%)</title><rect x="147.6" y="979.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="150.6" y="990.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.10%)</title><rect x="147.6" y="963.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="150.6" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="147.6" y="947.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="150.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (1 samples, 0.03%)</title><rect x="148.8" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="151.8" y="1150.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.03%)</title><rect x="148.8" y="1123.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="151.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (9 samples, 0.23%)</title><rect x="149.1" y="1139.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="152.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.23%)</title><rect x="149.1" y="1123.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.13%)</title><rect x="150.3" y="1107.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.3" y="1118.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (1 samples, 0.03%)</title><rect x="151.5" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.5" y="1102.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.03%)</title><rect x="151.5" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.5" y="1086.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.03%)</title><rect x="151.5" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.03%)</title><rect x="151.5" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.03%)</title><rect x="151.5" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="154.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (9 samples, 0.23%)</title><rect x="151.8" y="1139.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (9 samples, 0.23%)</title><rect x="151.8" y="1123.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="154.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (9 samples, 0.23%)</title><rect x="151.8" y="1107.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.8" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.now (8 samples, 0.20%)</title><rect x="151.8" y="1091.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.8" y="1102.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (8 samples, 0.20%)</title><rect x="151.8" y="1075.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.10%)</title><rect x="153.0" y="1059.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.0" y="1070.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.08%)</title><rect x="153.3" y="1043.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="156.3" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (1 samples, 0.03%)</title><rect x="153.9" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="156.9" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="153.9" y="1011.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="156.9" y="1022.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.03%)</title><rect x="154.2" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="1102.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (1 samples, 0.03%)</title><rect x="154.2" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="157.2" y="1086.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.03%)</title><rect x="154.2" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="157.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="154.2" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.03%)</title><rect x="154.5" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="157.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="154.5" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.5" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (1 samples, 0.03%)</title><rect x="154.5" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (1 samples, 0.03%)</title><rect x="154.5" y="1155.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="157.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (1 samples, 0.03%)</title><rect x="154.5" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="157.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$129/576121827.get (1 samples, 0.03%)</title><rect x="154.8" y="1203.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.8" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$129/576121827.get (31 samples, 0.78%)</title><rect x="155.0" y="1219.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="158.0" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$proxy$7 (31 samples, 0.78%)</title><rect x="155.0" y="1203.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.0" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (31 samples, 0.78%)</title><rect x="155.0" y="1187.0" width="9.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.0" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (30 samples, 0.76%)</title><rect x="155.0" y="1171.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.05%)</title><rect x="155.0" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.05%)</title><rect x="155.0" y="1139.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="158.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.05%)</title><rect x="155.0" y="1123.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.03%)</title><rect x="155.0" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.03%)</title><rect x="155.0" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.03%)</title><rect x="155.0" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.03%)</title><rect x="155.3" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.getThreadId (1 samples, 0.03%)</title><rect x="155.3" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (28 samples, 0.71%)</title><rect x="155.6" y="1155.0" width="8.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="155.6" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (27 samples, 0.68%)</title><rect x="155.9" y="1139.0" width="8.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (26 samples, 0.65%)</title><rect x="155.9" y="1123.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="158.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.15%)</title><rect x="159.2" y="1107.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.15%)</title><rect x="159.2" y="1091.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.2" y="1102.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="160.7" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="163.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (1 samples, 0.03%)</title><rect x="161.0" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.20%)</title><rect x="161.3" y="1107.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.3" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.20%)</title><rect x="161.3" y="1091.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.3" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.20%)</title><rect x="161.3" y="1075.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.3" y="1086.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.10%)</title><rect x="161.3" y="1059.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.3" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.10%)</title><rect x="162.5" y="1059.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.5" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="163.7" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="166.7" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="163.7" y="1107.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="166.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (1 samples, 0.03%)</title><rect x="164.0" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.0" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="164.0" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.0" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="164.0" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="167.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (126 samples, 3.17%)</title><rect x="164.3" y="1235.0" width="37.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.3" y="1246.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (14 samples, 0.35%)</title><rect x="164.3" y="1219.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (12 samples, 0.30%)</title><rect x="164.9" y="1203.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="167.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.30%)</title><rect x="164.9" y="1187.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.28%)</title><rect x="164.9" y="1171.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="167.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.28%)</title><rect x="164.9" y="1155.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="164.9" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="164.9" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.9" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="164.9" y="1107.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="167.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (10 samples, 0.25%)</title><rect x="165.2" y="1139.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="168.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (10 samples, 0.25%)</title><rect x="165.2" y="1123.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.20%)</title><rect x="165.2" y="1107.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.20%)</title><rect x="165.2" y="1091.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="168.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.20%)</title><rect x="165.2" y="1075.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="168.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.20%)</title><rect x="165.2" y="1059.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.2" y="1070.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="165.2" y="1043.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="168.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.13%)</title><rect x="165.7" y="1043.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.13%)</title><rect x="165.7" y="1027.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="168.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.13%)</title><rect x="165.7" y="1011.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="165.7" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="165.7" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="168.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="165.7" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="168.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="165.7" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="168.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="165.7" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="168.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.10%)</title><rect x="166.0" y="995.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="169.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.10%)</title><rect x="166.0" y="979.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.10%)</title><rect x="166.0" y="963.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="169.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.10%)</title><rect x="166.0" y="947.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="169.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.10%)</title><rect x="166.0" y="931.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.08%)</title><rect x="166.0" y="915.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="169.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="166.3" y="899.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="169.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="166.3" y="883.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="169.3" y="894.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="166.3" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="169.3" y="878.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="166.3" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="169.3" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="166.6" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="169.6" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="166.6" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="169.6" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="166.6" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.6" y="846.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="166.6" y="819.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="169.6" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="166.6" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="169.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="166.6" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="169.6" y="798.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="166.9" y="915.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="169.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.03%)</title><rect x="167.2" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.05%)</title><rect x="167.5" y="1107.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.5" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="167.8" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.8" y="1102.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="168.1" y="1171.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="171.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (112 samples, 2.82%)</title><rect x="168.4" y="1219.0" width="33.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="171.4" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (111 samples, 2.80%)</title><rect x="168.7" y="1203.0" width="33.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.7" y="1214.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="168.7" y="1187.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.05%)</title><rect x="168.7" y="1171.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.7" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$209/236399593.accept (1 samples, 0.03%)</title><rect x="169.0" y="1155.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$209/236399593.accept (109 samples, 2.75%)</title><rect x="169.3" y="1187.0" width="32.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.3" y="1198.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$6 (109 samples, 2.75%)</title><rect x="169.3" y="1171.0" width="32.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="172.3" y="1182.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.removeIf (5 samples, 0.13%)</title><rect x="169.3" y="1155.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.bulkRemove (5 samples, 0.13%)</title><rect x="169.3" y="1139.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.bulkRemove (5 samples, 0.13%)</title><rect x="169.3" y="1123.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$453/472421636.test (4 samples, 0.10%)</title><rect x="169.6" y="1107.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$5 (3 samples, 0.08%)</title><rect x="169.9" y="1091.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="172.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (3 samples, 0.08%)</title><rect x="169.9" y="1075.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="172.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.08%)</title><rect x="169.9" y="1059.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="172.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="169.9" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="172.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (2 samples, 0.05%)</title><rect x="170.2" y="1043.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="173.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.05%)</title><rect x="170.8" y="1155.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="173.8" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$458/1624032042.get (1 samples, 0.03%)</title><rect x="171.1" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (102 samples, 2.57%)</title><rect x="171.4" y="1155.0" width="30.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.4" y="1166.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (100 samples, 2.52%)</title><rect x="171.4" y="1139.0" width="29.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.4" y="1150.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (97 samples, 2.44%)</title><rect x="171.4" y="1123.0" width="28.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="174.4" y="1134.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="171.4" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (96 samples, 2.42%)</title><rect x="171.7" y="1107.0" width="28.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.7" y="1118.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (96 samples, 2.42%)</title><rect x="171.7" y="1091.0" width="28.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="174.7" y="1102.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (94 samples, 2.37%)</title><rect x="172.3" y="1075.0" width="27.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.3" y="1086.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (94 samples, 2.37%)</title><rect x="172.3" y="1059.0" width="27.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.3" y="1070.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.13%)</title><rect x="172.6" y="1043.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="175.6" y="1054.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="173.2" y="1027.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="176.2" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="173.5" y="1027.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="176.5" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="173.5" y="1011.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="176.5" y="1022.0"></text>
</g>
<g>
<title>__libc_send (88 samples, 2.22%)</title><rect x="174.1" y="1043.0" width="26.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="177.1" y="1054.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (88 samples, 2.22%)</title><rect x="174.1" y="1027.0" width="26.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="177.1" y="1038.0">e..</text>
</g>
<g>
<title>do_syscall_64 (88 samples, 2.22%)</title><rect x="174.1" y="1011.0" width="26.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="177.1" y="1022.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="175.0" y="995.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="178.0" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_sendto (84 samples, 2.12%)</title><rect x="175.3" y="995.0" width="24.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="178.3" y="1006.0">_..</text>
</g>
<g>
<title>__sys_sendto (84 samples, 2.12%)</title><rect x="175.3" y="979.0" width="24.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="178.3" y="990.0">_..</text>
</g>
<g>
<title>sock_sendmsg (81 samples, 2.04%)</title><rect x="175.9" y="963.0" width="24.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="178.9" y="974.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="175.9" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="178.9" y="958.0"></text>
</g>
<g>
<title>tcp_sendmsg (80 samples, 2.02%)</title><rect x="176.2" y="947.0" width="23.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.2" y="958.0">t..</text>
</g>
<g>
<title>release_sock (6 samples, 0.15%)</title><rect x="176.2" y="931.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.2" y="942.0"></text>
</g>
<g>
<title>__release_sock (5 samples, 0.13%)</title><rect x="176.2" y="915.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.2" y="926.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 0.13%)</title><rect x="176.2" y="899.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="179.2" y="910.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 0.13%)</title><rect x="176.2" y="883.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="179.2" y="894.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="176.2" y="867.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="179.2" y="878.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.03%)</title><rect x="176.2" y="851.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="179.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="176.2" y="835.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="179.2" y="846.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.08%)</title><rect x="176.4" y="867.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="179.4" y="878.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.08%)</title><rect x="176.4" y="851.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="179.4" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="176.7" y="835.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="179.7" y="846.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="177.3" y="867.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="180.3" y="878.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="177.3" y="851.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="180.3" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="177.6" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="180.6" y="926.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="177.6" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="180.6" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (74 samples, 1.86%)</title><rect x="177.9" y="931.0" width="22.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="180.9" y="942.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (66 samples, 1.66%)</title><rect x="178.8" y="915.0" width="19.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="181.8" y="926.0"></text>
</g>
<g>
<title>tcp_write_xmit (66 samples, 1.66%)</title><rect x="178.8" y="899.0" width="19.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="181.8" y="910.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (64 samples, 1.61%)</title><rect x="179.1" y="883.0" width="19.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="182.1" y="894.0"></text>
</g>
<g>
<title>__ip_queue_xmit (55 samples, 1.39%)</title><rect x="180.6" y="867.0" width="16.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.6" y="878.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="180.9" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="183.9" y="862.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.03%)</title><rect x="180.9" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.9" y="846.0"></text>
</g>
<g>
<title>ip_output (53 samples, 1.34%)</title><rect x="181.2" y="851.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.2" y="862.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="181.2" y="835.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="184.2" y="846.0"></text>
</g>
<g>
<title>ip_finish_output2 (51 samples, 1.28%)</title><rect x="181.5" y="835.0" width="15.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="184.5" y="846.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.13%)</title><rect x="181.5" y="819.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="184.5" y="830.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.13%)</title><rect x="181.5" y="803.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="184.5" y="814.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="181.5" y="787.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="184.5" y="798.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.10%)</title><rect x="181.8" y="787.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.8" y="798.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="182.4" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="185.4" y="782.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="182.7" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.7" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (46 samples, 1.16%)</title><rect x="183.0" y="819.0" width="13.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="186.0" y="830.0"></text>
</g>
<g>
<title>do_softirq (43 samples, 1.08%)</title><rect x="183.3" y="803.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="186.3" y="814.0"></text>
</g>
<g>
<title>do_softirq_own_stack (42 samples, 1.06%)</title><rect x="183.6" y="787.0" width="12.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="186.6" y="798.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (42 samples, 1.06%)</title><rect x="183.6" y="771.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="186.6" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (42 samples, 1.06%)</title><rect x="183.6" y="755.0" width="12.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="186.6" y="766.0"></text>
</g>
<g>
<title>net_rx_action (41 samples, 1.03%)</title><rect x="183.9" y="739.0" width="12.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="186.9" y="750.0"></text>
</g>
<g>
<title>process_backlog (41 samples, 1.03%)</title><rect x="183.9" y="723.0" width="12.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="186.9" y="734.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (40 samples, 1.01%)</title><rect x="184.2" y="707.0" width="11.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="187.2" y="718.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="184.2" y="691.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="187.2" y="702.0"></text>
</g>
<g>
<title>ip_rcv (39 samples, 0.98%)</title><rect x="184.5" y="691.0" width="11.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="187.5" y="702.0"></text>
</g>
<g>
<title>ip_local_deliver (37 samples, 0.93%)</title><rect x="184.5" y="675.0" width="11.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="187.5" y="686.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (37 samples, 0.93%)</title><rect x="184.5" y="659.0" width="11.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.5" y="670.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (37 samples, 0.93%)</title><rect x="184.5" y="643.0" width="11.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="187.5" y="654.0"></text>
</g>
<g>
<title>tcp_v4_rcv (37 samples, 0.93%)</title><rect x="184.5" y="627.0" width="11.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="187.5" y="638.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="185.1" y="611.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="188.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="185.4" y="611.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="188.4" y="622.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="185.7" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="188.7" y="622.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.05%)</title><rect x="185.7" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.7" y="606.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 0.78%)</title><rect x="186.3" y="611.0" width="9.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="189.3" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_established (31 samples, 0.78%)</title><rect x="186.3" y="595.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="189.3" y="606.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="186.6" y="579.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="189.6" y="590.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.03%)</title><rect x="186.6" y="563.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="189.6" y="574.0"></text>
</g>
<g>
<title>sock_def_readable (19 samples, 0.48%)</title><rect x="186.9" y="579.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="189.9" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (19 samples, 0.48%)</title><rect x="186.9" y="563.0" width="5.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="189.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (19 samples, 0.48%)</title><rect x="186.9" y="547.0" width="5.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="189.9" y="558.0"></text>
</g>
<g>
<title>tcp_ack (6 samples, 0.15%)</title><rect x="192.5" y="579.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="195.5" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.08%)</title><rect x="192.5" y="563.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="195.5" y="574.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="192.5" y="547.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="195.5" y="558.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (1 samples, 0.03%)</title><rect x="192.5" y="531.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="195.5" y="542.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="192.8" y="547.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="195.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="193.4" y="563.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="196.4" y="574.0"></text>
</g>
<g>
<title>cache_from_obj (2 samples, 0.05%)</title><rect x="193.4" y="547.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="196.4" y="558.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (1 samples, 0.03%)</title><rect x="194.0" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="197.0" y="574.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.08%)</title><rect x="194.3" y="579.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="197.3" y="590.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="195.2" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="198.2" y="590.0"></text>
</g>
<g>
<title>ip_rcv_core (1 samples, 0.03%)</title><rect x="195.5" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="198.5" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="195.8" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="198.8" y="686.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.constprop.0 (1 samples, 0.03%)</title><rect x="195.8" y="659.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.8" y="670.0"></text>
</g>
<g>
<title>preempt_schedule_thunk (2 samples, 0.05%)</title><rect x="196.1" y="803.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="199.1" y="814.0"></text>
</g>
<g>
<title>preempt_schedule_common (2 samples, 0.05%)</title><rect x="196.1" y="787.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.1" y="798.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="196.1" y="771.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="199.1" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="196.1" y="755.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.1" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (2 samples, 0.05%)</title><rect x="196.1" y="739.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="199.1" y="750.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="196.7" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.7" y="846.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="196.7" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="199.7" y="830.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="197.0" y="867.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="200.0" y="878.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="197.6" y="867.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="200.6" y="878.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="198.1" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="201.1" y="894.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="198.1" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="201.1" y="878.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.03%)</title><rect x="198.1" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="201.1" y="862.0"></text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.03%)</title><rect x="198.4" y="915.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="201.4" y="926.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="198.4" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="201.4" y="910.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="198.7" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="201.7" y="926.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="198.7" y="899.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="201.7" y="910.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="198.7" y="883.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="201.7" y="894.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="199.0" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="202.0" y="926.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="199.3" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="202.3" y="926.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="199.3" y="899.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="202.3" y="910.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="199.3" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="202.3" y="894.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="199.6" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="202.6" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="199.9" y="963.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="202.9" y="974.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="199.9" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="202.9" y="958.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.03%)</title><rect x="199.9" y="931.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="202.9" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.08%)</title><rect x="200.2" y="1123.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.2" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="200.5" y="1107.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="203.5" y="1118.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="200.8" y="1091.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="203.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="201.1" y="1139.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="201.1" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="201.1" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$458/1624032042.get (1 samples, 0.03%)</title><rect x="201.4" y="1139.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/MergeResponses.mergePutResponses (1 samples, 0.03%)</title><rect x="201.4" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.4" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="201.4" y="1107.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="204.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (456 samples, 11.49%)</title><rect x="201.7" y="1235.0" width="135.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.7" y="1246.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (260 samples, 6.55%)</title><rect x="205.9" y="1219.0" width="77.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="208.9" y="1230.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (206 samples, 5.19%)</title><rect x="207.4" y="1203.0" width="61.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.4" y="1214.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (2 samples, 0.05%)</title><rect x="208.3" y="1187.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.3" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="208.3" y="1171.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="211.3" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="208.5" y="1171.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="211.5" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="208.5" y="1155.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="211.5" y="1166.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="208.5" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="211.5" y="1150.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="208.5" y="1123.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="211.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="208.8" y="1187.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="211.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="208.8" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="211.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="208.8" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (34 samples, 0.86%)</title><rect x="209.1" y="1187.0" width="10.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 0.86%)</title><rect x="209.1" y="1171.0" width="10.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="212.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (34 samples, 0.86%)</title><rect x="209.1" y="1155.0" width="10.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="212.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (34 samples, 0.86%)</title><rect x="209.1" y="1139.0" width="10.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="212.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (29 samples, 0.73%)</title><rect x="210.6" y="1123.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="213.6" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.13%)</title><rect x="210.6" y="1107.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="213.6" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="211.2" y="1091.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="214.2" y="1102.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="211.8" y="1091.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="214.8" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (24 samples, 0.60%)</title><rect x="212.1" y="1107.0" width="7.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="215.1" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.58%)</title><rect x="212.4" y="1091.0" width="6.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="215.4" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.58%)</title><rect x="212.4" y="1075.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="215.4" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (23 samples, 0.58%)</title><rect x="212.4" y="1059.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="215.4" y="1070.0"></text>
</g>
<g>
<title>do_futex (23 samples, 0.58%)</title><rect x="212.4" y="1043.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="215.4" y="1054.0"></text>
</g>
<g>
<title>futex_wake (23 samples, 0.58%)</title><rect x="212.4" y="1027.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="215.4" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="212.4" y="1011.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="215.4" y="1022.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="212.4" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="215.4" y="1006.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="212.4" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.4" y="990.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="212.7" y="1011.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="215.7" y="1022.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="212.7" y="995.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="215.7" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (21 samples, 0.53%)</title><rect x="213.0" y="1011.0" width="6.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="216.0" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (20 samples, 0.50%)</title><rect x="213.3" y="995.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.3" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (20 samples, 0.50%)</title><rect x="213.3" y="979.0" width="5.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="216.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.05%)</title><rect x="219.2" y="1187.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="222.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.05%)</title><rect x="219.2" y="1171.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="222.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (164 samples, 4.13%)</title><rect x="219.8" y="1187.0" width="48.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="222.8" y="1198.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (164 samples, 4.13%)</title><rect x="219.8" y="1171.0" width="48.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="222.8" y="1182.0">jdk/..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="220.4" y="1155.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="223.4" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (3 samples, 0.08%)</title><rect x="220.7" y="1155.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="223.7" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (58 samples, 1.46%)</title><rect x="221.6" y="1155.0" width="17.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="224.6" y="1166.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="224.3" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="227.3" y="1150.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="224.6" y="1139.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="227.6" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 0.38%)</title><rect x="224.9" y="1139.0" width="4.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="227.9" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (9 samples, 0.23%)</title><rect x="225.8" y="1123.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="228.8" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="228.2" y="1107.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="231.2" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="228.5" y="1123.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="231.5" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="229.4" y="1139.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="232.4" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="229.9" y="1139.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="232.9" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="230.2" y="1139.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="233.2" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.05%)</title><rect x="230.5" y="1139.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="233.5" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (19 samples, 0.48%)</title><rect x="231.1" y="1139.0" width="5.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="234.1" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.30%)</title><rect x="233.2" y="1123.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="236.2" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.30%)</title><rect x="233.2" y="1107.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="236.2" y="1118.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="233.5" y="1091.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="236.5" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="233.5" y="1075.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="236.5" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.18%)</title><rect x="233.8" y="1091.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="236.8" y="1102.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.13%)</title><rect x="234.4" y="1075.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="237.4" y="1086.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.10%)</title><rect x="234.7" y="1059.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="237.7" y="1070.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.08%)</title><rect x="235.9" y="1091.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="238.9" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="236.2" y="1075.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="239.2" y="1086.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="236.5" y="1075.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="239.5" y="1086.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="236.8" y="1139.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="239.8" y="1150.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.15%)</title><rect x="237.1" y="1139.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="240.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 2.47%)</title><rect x="238.9" y="1155.0" width="29.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="241.9" y="1166.0">[u..</text>
</g>
<g>
<title>__condvar_dec_grefs (5 samples, 0.13%)</title><rect x="238.9" y="1139.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="241.9" y="1150.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="240.1" y="1123.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="243.1" y="1134.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="240.1" y="1107.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.1" y="1118.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="240.1" y="1091.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="243.1" y="1102.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="240.1" y="1075.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="243.1" y="1086.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="240.1" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="243.1" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="240.1" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="243.1" y="1054.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="240.1" y="1027.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="243.1" y="1038.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="240.1" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="243.1" y="1022.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="240.1" y="995.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="243.1" y="1006.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="240.1" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="243.1" y="990.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="240.1" y="963.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="243.1" y="974.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="240.1" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="243.1" y="958.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="240.1" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="243.1" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.13%)</title><rect x="240.4" y="1139.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="243.4" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="241.8" y="1139.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="244.8" y="1150.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="242.1" y="1139.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="245.1" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (86 samples, 2.17%)</title><rect x="242.4" y="1139.0" width="25.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="245.4" y="1150.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 1.44%)</title><rect x="251.1" y="1123.0" width="16.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="254.1" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 1.44%)</title><rect x="251.1" y="1107.0" width="16.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="254.1" y="1118.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (10 samples, 0.25%)</title><rect x="254.0" y="1091.0" width="3.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="257.0" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_exit (9 samples, 0.23%)</title><rect x="254.3" y="1075.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="257.3" y="1086.0"></text>
</g>
<g>
<title>unroll_tree_refs (2 samples, 0.05%)</title><rect x="256.4" y="1059.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="259.4" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 0.93%)</title><rect x="257.0" y="1091.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="260.0" y="1102.0"></text>
</g>
<g>
<title>do_futex (34 samples, 0.86%)</title><rect x="257.9" y="1075.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="260.9" y="1086.0"></text>
</g>
<g>
<title>futex_wait (32 samples, 0.81%)</title><rect x="258.5" y="1059.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="261.5" y="1070.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="260.0" y="1043.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="263.0" y="1054.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="260.0" y="1027.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.0" y="1038.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="260.0" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="263.0" y="1022.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="260.0" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.0" y="1006.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="260.0" y="979.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="263.0" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="260.0" y="963.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.0" y="974.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="260.0" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="263.0" y="958.0"></text>
</g>
<g>
<title>__run_timers (1 samples, 0.03%)</title><rect x="260.0" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="263.0" y="942.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="260.0" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="263.0" y="926.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.03%)</title><rect x="260.0" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="263.0" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="260.0" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="263.0" y="894.0"></text>
</g>
<g>
<title>futex_wait_queue_me (20 samples, 0.50%)</title><rect x="260.3" y="1043.0" width="5.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.3" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock (3 samples, 0.08%)</title><rect x="260.6" y="1027.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="263.6" y="1038.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="261.2" y="1011.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="264.2" y="1022.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="261.5" y="1027.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="264.5" y="1038.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.38%)</title><rect x="261.8" y="1027.0" width="4.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.8" y="1038.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.35%)</title><rect x="261.8" y="1011.0" width="4.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="264.8" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (10 samples, 0.25%)</title><rect x="262.9" y="995.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="265.9" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (9 samples, 0.23%)</title><rect x="263.2" y="979.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="266.2" y="990.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="265.9" y="1011.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="268.9" y="1022.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.15%)</title><rect x="266.2" y="1043.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="269.2" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="267.1" y="1027.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.1" y="1038.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="267.4" y="1011.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="270.4" y="1022.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="267.4" y="995.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="270.4" y="1006.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="267.7" y="1027.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="270.7" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="268.0" y="1155.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="271.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.10%)</title><rect x="268.6" y="1203.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.10%)</title><rect x="268.6" y="1187.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.10%)</title><rect x="268.6" y="1171.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.10%)</title><rect x="268.6" y="1155.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="271.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.10%)</title><rect x="268.6" y="1139.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.10%)</title><rect x="268.6" y="1123.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="271.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.10%)</title><rect x="268.6" y="1107.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="271.6" y="1118.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="268.6" y="1091.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="271.6" y="1102.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="268.9" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="271.9" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="269.2" y="1091.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="272.2" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="269.2" y="1075.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.2" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="269.2" y="1059.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="272.2" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="269.2" y="1043.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.2" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="269.2" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="272.2" y="1038.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="269.2" y="1011.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="272.2" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="269.2" y="995.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.2" y="1006.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="269.2" y="979.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="272.2" y="990.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="269.2" y="963.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="272.2" y="974.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="269.5" y="1091.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="272.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (45 samples, 1.13%)</title><rect x="269.8" y="1203.0" width="13.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="272.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (45 samples, 1.13%)</title><rect x="269.8" y="1187.0" width="13.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (45 samples, 1.13%)</title><rect x="269.8" y="1171.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (45 samples, 1.13%)</title><rect x="269.8" y="1155.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.05%)</title><rect x="271.0" y="1139.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (39 samples, 0.98%)</title><rect x="271.6" y="1139.0" width="11.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.6" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.20%)</title><rect x="271.6" y="1123.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="274.6" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="271.9" y="1107.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="274.9" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="272.2" y="1107.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="275.2" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.05%)</title><rect x="272.5" y="1107.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="275.5" y="1118.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="273.0" y="1107.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="276.0" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.05%)</title><rect x="273.3" y="1107.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="276.3" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (31 samples, 0.78%)</title><rect x="273.9" y="1123.0" width="9.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="276.9" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 0.73%)</title><rect x="274.5" y="1107.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.5" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.73%)</title><rect x="274.5" y="1091.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.5" y="1102.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.05%)</title><rect x="274.5" y="1075.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="277.5" y="1086.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="274.8" y="1059.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="277.8" y="1070.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="274.8" y="1043.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="277.8" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (26 samples, 0.65%)</title><rect x="275.1" y="1075.0" width="7.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="278.1" y="1086.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.65%)</title><rect x="275.1" y="1059.0" width="7.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.1" y="1070.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.65%)</title><rect x="275.1" y="1043.0" width="7.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="278.1" y="1054.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="275.4" y="1027.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="278.4" y="1038.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.03%)</title><rect x="275.4" y="1011.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="278.4" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (24 samples, 0.60%)</title><rect x="275.7" y="1027.0" width="7.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="278.7" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (23 samples, 0.58%)</title><rect x="276.0" y="1011.0" width="6.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="279.0" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (23 samples, 0.58%)</title><rect x="276.0" y="995.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="279.0" y="1006.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="282.9" y="1075.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="285.9" y="1086.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="282.9" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="285.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (182 samples, 4.58%)</title><rect x="283.2" y="1219.0" width="54.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.2" y="1230.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (123 samples, 3.10%)</title><rect x="285.2" y="1203.0" width="36.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.2" y="1214.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="285.5" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="285.5" y="1171.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="285.5" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="285.5" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="285.5" y="1123.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="288.5" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="285.5" y="1107.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="288.5" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="285.5" y="1091.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="288.5" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="285.5" y="1075.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="288.5" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="285.5" y="1059.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="288.5" y="1070.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="285.5" y="1043.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="288.5" y="1054.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="285.5" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="288.5" y="1038.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="285.5" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="288.5" y="1022.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.03%)</title><rect x="285.5" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="288.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (24 samples, 0.60%)</title><rect x="285.8" y="1187.0" width="7.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="288.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.60%)</title><rect x="285.8" y="1171.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.60%)</title><rect x="285.8" y="1155.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.60%)</title><rect x="285.8" y="1139.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="288.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.50%)</title><rect x="287.0" y="1123.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="290.0" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="287.0" y="1107.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="290.0" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="287.3" y="1091.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="290.3" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.45%)</title><rect x="287.6" y="1107.0" width="5.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="290.6" y="1118.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.45%)</title><rect x="287.6" y="1091.0" width="5.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="290.6" y="1102.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.45%)</title><rect x="287.6" y="1075.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="290.6" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (17 samples, 0.43%)</title><rect x="287.9" y="1059.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="290.9" y="1070.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="287.9" y="1043.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="290.9" y="1054.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="287.9" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="290.9" y="1038.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="287.9" y="1011.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.9" y="1022.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="287.9" y="995.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="290.9" y="1006.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="287.9" y="979.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.9" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="287.9" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="290.9" y="974.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="287.9" y="947.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="290.9" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="287.9" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="290.9" y="942.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.40%)</title><rect x="288.2" y="1043.0" width="4.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.2" y="1054.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.40%)</title><rect x="288.2" y="1027.0" width="4.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="291.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="288.2" y="1011.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="291.2" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (15 samples, 0.38%)</title><rect x="288.5" y="1011.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="291.5" y="1022.0"></text>
</g>
<g>
<title>try_to_wake_up (15 samples, 0.38%)</title><rect x="288.5" y="995.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="291.5" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.38%)</title><rect x="288.5" y="979.0" width="4.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="291.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.03%)</title><rect x="293.0" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="296.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.03%)</title><rect x="293.0" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="296.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (96 samples, 2.42%)</title><rect x="293.3" y="1187.0" width="28.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="296.3" y="1198.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (95 samples, 2.39%)</title><rect x="293.6" y="1171.0" width="28.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="296.6" y="1182.0">jd..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="293.6" y="1155.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="296.6" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (32 samples, 0.81%)</title><rect x="293.9" y="1155.0" width="9.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="296.9" y="1166.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="294.7" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="297.7" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.30%)</title><rect x="295.0" y="1139.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="298.0" y="1150.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="295.6" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="298.6" y="1134.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.18%)</title><rect x="295.9" y="1123.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="298.9" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (2 samples, 0.05%)</title><rect x="297.4" y="1107.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="300.4" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="298.0" y="1123.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="301.0" y="1134.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="298.6" y="1139.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="301.6" y="1150.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="298.9" y="1139.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="301.9" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="299.2" y="1139.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="302.2" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="299.8" y="1139.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="302.8" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="300.1" y="1139.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="303.1" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="300.4" y="1139.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="303.4" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (8 samples, 0.20%)</title><rect x="300.7" y="1139.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="303.7" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.18%)</title><rect x="301.0" y="1123.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="304.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.18%)</title><rect x="301.0" y="1107.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="304.0" y="1118.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="301.9" y="1091.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="304.9" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="301.9" y="1075.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="304.9" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="302.2" y="1091.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.2" y="1102.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="302.2" y="1075.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="305.2" y="1086.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="302.5" y="1059.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="305.5" y="1070.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="302.8" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="305.8" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="302.8" y="1075.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.8" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="303.1" y="1139.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="306.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.51%)</title><rect x="303.4" y="1155.0" width="17.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="306.4" y="1166.0"></text>
</g>
<g>
<title>__condvar_confirm_wakeup (1 samples, 0.03%)</title><rect x="303.4" y="1139.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="306.4" y="1150.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.03%)</title><rect x="303.7" y="1139.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="306.7" y="1150.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.08%)</title><rect x="304.0" y="1139.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="307.0" y="1150.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.08%)</title><rect x="304.9" y="1139.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="307.9" y="1150.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="305.7" y="1139.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="308.7" y="1150.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.05%)</title><rect x="306.0" y="1139.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="309.0" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (49 samples, 1.23%)</title><rect x="306.6" y="1139.0" width="14.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="309.6" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.58%)</title><rect x="314.4" y="1123.0" width="6.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="317.4" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.58%)</title><rect x="314.4" y="1107.0" width="6.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.4" y="1118.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="315.0" y="1091.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="318.0" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="315.0" y="1075.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="318.0" y="1086.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.45%)</title><rect x="315.3" y="1091.0" width="5.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="318.3" y="1102.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.38%)</title><rect x="316.1" y="1075.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="319.1" y="1086.0"></text>
</g>
<g>
<title>futex_wait (13 samples, 0.33%)</title><rect x="316.7" y="1059.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="319.7" y="1070.0"></text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 0.15%)</title><rect x="317.3" y="1043.0" width="1.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="320.3" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="317.6" y="1027.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="320.6" y="1038.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="317.6" y="1011.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="320.6" y="1022.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.10%)</title><rect x="317.9" y="1027.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="320.9" y="1038.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.10%)</title><rect x="317.9" y="1011.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="320.9" y="1022.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="318.2" y="995.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="321.2" y="1006.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.05%)</title><rect x="318.5" y="995.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="321.5" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="318.8" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.8" y="990.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.13%)</title><rect x="319.1" y="1043.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="322.1" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="320.0" y="1027.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="323.0" y="1038.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="320.3" y="1027.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.3" y="1038.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="320.6" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="323.6" y="1102.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.05%)</title><rect x="320.6" y="1075.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="323.6" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="321.2" y="1155.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="324.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="321.8" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="324.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="321.8" y="1187.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.05%)</title><rect x="321.8" y="1171.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="324.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.05%)</title><rect x="321.8" y="1155.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="324.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (10 samples, 0.25%)</title><rect x="322.4" y="1203.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="325.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (10 samples, 0.25%)</title><rect x="322.4" y="1187.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (10 samples, 0.25%)</title><rect x="322.4" y="1171.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.25%)</title><rect x="322.4" y="1155.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="325.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.25%)</title><rect x="322.4" y="1139.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.25%)</title><rect x="322.4" y="1123.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.4" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="322.4" y="1107.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="325.4" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="322.4" y="1091.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="325.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.23%)</title><rect x="322.7" y="1107.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="325.7" y="1118.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="322.7" y="1091.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="325.7" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (8 samples, 0.20%)</title><rect x="323.0" y="1091.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="326.0" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="324.5" y="1075.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="327.5" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="324.5" y="1059.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="327.5" y="1070.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="324.5" y="1043.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="327.5" y="1054.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="324.5" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="327.5" y="1038.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="324.5" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="327.5" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="324.8" y="1043.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.8" y="1054.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="324.8" y="1027.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="327.8" y="1038.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.05%)</title><rect x="324.8" y="1011.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="327.8" y="1022.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.05%)</title><rect x="324.8" y="995.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="327.8" y="1006.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.05%)</title><rect x="324.8" y="979.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="327.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (40 samples, 1.01%)</title><rect x="325.4" y="1203.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="328.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (40 samples, 1.01%)</title><rect x="325.4" y="1187.0" width="11.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="328.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (40 samples, 1.01%)</title><rect x="325.4" y="1171.0" width="11.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="328.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (40 samples, 1.01%)</title><rect x="325.4" y="1155.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (39 samples, 0.98%)</title><rect x="325.7" y="1139.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.7" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.15%)</title><rect x="325.7" y="1123.0" width="1.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="328.7" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="325.7" y="1107.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="328.7" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="326.0" y="1107.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="329.0" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="326.5" y="1107.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="329.5" y="1118.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="326.8" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="329.8" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="327.1" y="1107.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="330.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_signal (33 samples, 0.83%)</title><rect x="327.4" y="1123.0" width="9.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="330.4" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.71%)</title><rect x="328.9" y="1107.0" width="8.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="331.9" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.71%)</title><rect x="328.9" y="1091.0" width="8.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="331.9" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_futex (27 samples, 0.68%)</title><rect x="329.2" y="1075.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.2" y="1086.0"></text>
</g>
<g>
<title>do_futex (26 samples, 0.65%)</title><rect x="329.5" y="1059.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.5" y="1070.0"></text>
</g>
<g>
<title>futex_wake (26 samples, 0.65%)</title><rect x="329.5" y="1043.0" width="7.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="332.5" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="329.8" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="332.8" y="1038.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="329.8" y="1011.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.8" y="1022.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="329.8" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.8" y="1006.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="330.1" y="1027.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.1" y="1038.0"></text>
</g>
<g>
<title>wake_up_q (23 samples, 0.58%)</title><rect x="330.4" y="1027.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.4" y="1038.0"></text>
</g>
<g>
<title>try_to_wake_up (22 samples, 0.55%)</title><rect x="330.7" y="1011.0" width="6.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="333.7" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (22 samples, 0.55%)</title><rect x="330.7" y="995.0" width="6.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="337.2" y="1235.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="340.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1348530906.run (405 samples, 10.20%)</title><rect x="337.5" y="1235.0" width="120.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="340.5" y="1246.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (403 samples, 10.15%)</title><rect x="338.1" y="1219.0" width="119.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="341.1" y="1230.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (403 samples, 10.15%)</title><rect x="338.1" y="1203.0" width="119.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="341.1" y="1214.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (403 samples, 10.15%)</title><rect x="338.1" y="1187.0" width="119.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.1" y="1198.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (403 samples, 10.15%)</title><rect x="338.1" y="1171.0" width="119.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="341.1" y="1182.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (403 samples, 10.15%)</title><rect x="338.1" y="1155.0" width="119.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.1" y="1166.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (403 samples, 10.15%)</title><rect x="338.1" y="1139.0" width="119.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="341.1" y="1150.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (403 samples, 10.15%)</title><rect x="338.1" y="1123.0" width="119.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.1" y="1134.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (403 samples, 10.15%)</title><rect x="338.1" y="1107.0" width="119.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="341.1" y="1118.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (402 samples, 10.13%)</title><rect x="338.4" y="1091.0" width="119.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.4" y="1102.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (402 samples, 10.13%)</title><rect x="338.4" y="1075.0" width="119.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="341.4" y="1086.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (62 samples, 1.56%)</title><rect x="338.4" y="1059.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="341.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (48 samples, 1.21%)</title><rect x="339.3" y="1043.0" width="14.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="342.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (48 samples, 1.21%)</title><rect x="339.3" y="1027.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (43 samples, 1.08%)</title><rect x="340.8" y="1011.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (43 samples, 1.08%)</title><rect x="340.8" y="995.0" width="12.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="343.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9 samples, 0.23%)</title><rect x="341.1" y="979.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="344.1" y="990.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="341.1" y="963.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="344.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.05%)</title><rect x="341.4" y="963.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="344.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="341.7" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="341.7" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.03%)</title><rect x="341.7" y="915.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="344.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.03%)</title><rect x="342.0" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.03%)</title><rect x="342.0" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="345.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="342.3" y="963.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.03%)</title><rect x="342.3" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="342.3" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$402/198896344.apply (4 samples, 0.10%)</title><rect x="342.6" y="963.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.08%)</title><rect x="342.9" y="947.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="345.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.08%)</title><rect x="342.9" y="931.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.05%)</title><rect x="342.9" y="915.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.05%)</title><rect x="342.9" y="899.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="345.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.05%)</title><rect x="342.9" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.wrapForDebug (1 samples, 0.03%)</title><rect x="343.5" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="346.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (31 samples, 0.78%)</title><rect x="343.8" y="979.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (31 samples, 0.78%)</title><rect x="343.8" y="963.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="346.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="343.8" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="346.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="343.8" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="346.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.05%)</title><rect x="344.1" y="947.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="347.1" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="344.1" y="931.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="347.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.apply (1 samples, 0.03%)</title><rect x="344.4" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="347.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.apply (28 samples, 0.71%)</title><rect x="344.7" y="947.0" width="8.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="347.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (28 samples, 0.71%)</title><rect x="344.7" y="931.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="347.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (28 samples, 0.71%)</title><rect x="344.7" y="915.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/311098875.apply (27 samples, 0.68%)</title><rect x="344.7" y="899.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="347.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (27 samples, 0.68%)</title><rect x="344.7" y="883.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.03%)</title><rect x="345.6" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.03%)</title><rect x="345.6" y="851.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="348.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="345.6" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (23 samples, 0.58%)</title><rect x="345.9" y="867.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (14 samples, 0.35%)</title><rect x="345.9" y="851.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="348.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (14 samples, 0.35%)</title><rect x="345.9" y="835.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="348.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (14 samples, 0.35%)</title><rect x="345.9" y="819.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$389/366008206.accept (5 samples, 0.13%)</title><rect x="345.9" y="803.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="348.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (2 samples, 0.05%)</title><rect x="346.5" y="787.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (2 samples, 0.05%)</title><rect x="346.5" y="771.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="349.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.05%)</title><rect x="346.5" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="346.5" y="739.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="346.5" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="349.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (1 samples, 0.03%)</title><rect x="347.1" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$397/1003985293.accept (9 samples, 0.23%)</title><rect x="347.4" y="803.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (9 samples, 0.23%)</title><rect x="347.4" y="787.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (9 samples, 0.23%)</title><rect x="347.4" y="771.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (9 samples, 0.23%)</title><rect x="347.4" y="755.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="350.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (9 samples, 0.23%)</title><rect x="347.4" y="739.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.23%)</title><rect x="347.4" y="723.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="350.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.23%)</title><rect x="347.4" y="707.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="350.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.20%)</title><rect x="347.7" y="691.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="350.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.20%)</title><rect x="347.7" y="675.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (7 samples, 0.18%)</title><rect x="347.7" y="659.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="350.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (4 samples, 0.10%)</title><rect x="347.7" y="643.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.10%)</title><rect x="347.7" y="627.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="350.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (3 samples, 0.08%)</title><rect x="347.9" y="611.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.08%)</title><rect x="347.9" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.08%)</title><rect x="347.9" y="579.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (3 samples, 0.08%)</title><rect x="348.8" y="643.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="351.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (2 samples, 0.05%)</title><rect x="349.1" y="627.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="352.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="349.1" y="611.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.05%)</title><rect x="349.1" y="595.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="349.1" y="579.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="349.1" y="563.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.03%)</title><rect x="349.7" y="659.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (9 samples, 0.23%)</title><rect x="350.0" y="851.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="353.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (7 samples, 0.18%)</title><rect x="350.6" y="835.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="353.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (4 samples, 0.10%)</title><rect x="350.6" y="819.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="353.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="351.2" y="803.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.05%)</title><rect x="351.2" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (2 samples, 0.05%)</title><rect x="351.2" y="771.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (3 samples, 0.08%)</title><rect x="351.8" y="819.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="354.8" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="352.1" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="355.1" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="352.1" y="787.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="355.1" y="798.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="352.1" y="771.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.1" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.05%)</title><rect x="352.1" y="755.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="355.1" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="352.1" y="739.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="355.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.apply (1 samples, 0.03%)</title><rect x="352.7" y="899.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (1 samples, 0.03%)</title><rect x="352.7" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="355.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="353.0" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="353.0" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="356.0" y="974.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="353.3" y="979.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="356.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (9 samples, 0.23%)</title><rect x="353.6" y="1043.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="356.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (6 samples, 0.15%)</title><rect x="354.5" y="1027.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors (5 samples, 0.13%)</title><rect x="354.8" y="1011.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="357.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.05%)</title><rect x="356.3" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.05%)</title><rect x="356.9" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="359.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.05%)</title><rect x="356.9" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="359.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.05%)</title><rect x="356.9" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (338 samples, 8.51%)</title><rect x="357.5" y="1059.0" width="100.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="360.5" y="1070.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (338 samples, 8.51%)</title><rect x="357.5" y="1043.0" width="100.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.5" y="1054.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (2 samples, 0.05%)</title><rect x="357.5" y="1027.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (336 samples, 8.46%)</title><rect x="358.1" y="1027.0" width="99.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="361.1" y="1038.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (334 samples, 8.41%)</title><rect x="358.6" y="1011.0" width="99.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="361.6" y="1022.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$407/1138618774.run (5 samples, 0.13%)</title><rect x="358.6" y="995.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (5 samples, 0.13%)</title><rect x="358.6" y="979.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="361.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (329 samples, 8.29%)</title><rect x="360.1" y="995.0" width="97.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.1" y="1006.0">jdk/interna..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (325 samples, 8.19%)</title><rect x="360.4" y="979.0" width="96.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.4" y="990.0">java/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (325 samples, 8.19%)</title><rect x="360.4" y="963.0" width="96.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.4" y="974.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (323 samples, 8.14%)</title><rect x="361.0" y="947.0" width="96.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="364.0" y="958.0">sun/nio/ch/..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (323 samples, 8.14%)</title><rect x="361.0" y="931.0" width="96.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="364.0" y="942.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.08%)</title><rect x="361.3" y="915.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.3" y="926.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.08%)</title><rect x="361.3" y="899.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.3" y="910.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="361.6" y="883.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="364.6" y="894.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="361.9" y="883.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="364.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (10 samples, 0.25%)</title><rect x="362.2" y="915.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="365.2" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (10 samples, 0.25%)</title><rect x="362.2" y="899.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.2" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="362.2" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="365.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.23%)</title><rect x="362.5" y="883.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="365.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.10%)</title><rect x="363.4" y="867.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="366.4" y="878.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="364.6" y="867.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="367.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (301 samples, 7.58%)</title><rect x="365.2" y="915.0" width="89.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="368.2" y="926.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (300 samples, 7.56%)</title><rect x="365.5" y="899.0" width="89.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="368.5" y="910.0">sun/nio/ch..</text>
</g>
<g>
<title>__GI___writev (297 samples, 7.48%)</title><rect x="365.8" y="883.0" width="88.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="368.8" y="894.0">__GI___wri..</text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="366.7" y="867.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="369.7" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="366.7" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="369.7" y="862.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="366.7" y="835.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="369.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (293 samples, 7.38%)</title><rect x="367.0" y="867.0" width="87.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="370.0" y="878.0">entry_SYSC..</text>
</g>
<g>
<title>do_syscall_64 (293 samples, 7.38%)</title><rect x="367.0" y="851.0" width="87.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="370.0" y="862.0">do_syscall..</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="369.1" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.1" y="846.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="369.1" y="819.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="372.1" y="830.0"></text>
</g>
<g>
<title>__x64_sys_writev (1 samples, 0.03%)</title><rect x="369.4" y="835.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.4" y="846.0"></text>
</g>
<g>
<title>do_writev (283 samples, 7.13%)</title><rect x="369.6" y="835.0" width="84.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="372.6" y="846.0">do_writev</text>
</g>
<g>
<title>__fdget_pos (9 samples, 0.23%)</title><rect x="370.8" y="819.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="373.8" y="830.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.23%)</title><rect x="370.8" y="803.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="373.8" y="814.0"></text>
</g>
<g>
<title>__fget_files (9 samples, 0.23%)</title><rect x="370.8" y="787.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="373.8" y="798.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="373.5" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="376.5" y="830.0"></text>
</g>
<g>
<title>vfs_writev (269 samples, 6.78%)</title><rect x="373.8" y="819.0" width="80.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="376.8" y="830.0">vfs_writev</text>
</g>
<g>
<title>do_iter_write (265 samples, 6.68%)</title><rect x="373.8" y="803.0" width="78.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="376.8" y="814.0">do_iter_w..</text>
</g>
<g>
<title>do_iter_readv_writev (261 samples, 6.57%)</title><rect x="373.8" y="787.0" width="77.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="376.8" y="798.0">do_iter_r..</text>
</g>
<g>
<title>sock_write_iter (256 samples, 6.45%)</title><rect x="375.3" y="771.0" width="76.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="378.3" y="782.0">sock_wri..</text>
</g>
<g>
<title>sock_sendmsg (253 samples, 6.37%)</title><rect x="376.2" y="755.0" width="75.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="379.2" y="766.0">sock_sen..</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="377.1" y="739.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="380.1" y="750.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.03%)</title><rect x="377.1" y="723.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.1" y="734.0"></text>
</g>
<g>
<title>tcp_sendmsg (249 samples, 6.27%)</title><rect x="377.4" y="739.0" width="74.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.4" y="750.0">tcp_send..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="377.4" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="380.4" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="377.7" y="723.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="380.7" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="377.7" y="707.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="380.7" y="718.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.08%)</title><rect x="378.0" y="723.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="378.0" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.0" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.05%)</title><rect x="378.3" y="707.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.3" y="718.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (244 samples, 6.15%)</title><rect x="378.9" y="723.0" width="72.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="381.9" y="734.0">tcp_send..</text>
</g>
<g>
<title>__tcp_push_pending_frames (211 samples, 5.31%)</title><rect x="380.1" y="707.0" width="62.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="383.1" y="718.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (211 samples, 5.31%)</title><rect x="380.1" y="691.0" width="62.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="383.1" y="702.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (193 samples, 4.86%)</title><rect x="381.2" y="675.0" width="57.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="384.2" y="686.0">__tcp_..</text>
</g>
<g>
<title>__ip_queue_xmit (182 samples, 4.58%)</title><rect x="382.7" y="659.0" width="54.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="385.7" y="670.0">__ip_..</text>
</g>
<g>
<title>__ip_local_out (4 samples, 0.10%)</title><rect x="383.9" y="643.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="386.9" y="654.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.08%)</title><rect x="384.2" y="627.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.2" y="638.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="385.1" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="388.1" y="654.0"></text>
</g>
<g>
<title>__sk_dst_check (6 samples, 0.15%)</title><rect x="385.4" y="643.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="388.4" y="654.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.03%)</title><rect x="386.0" y="627.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="389.0" y="638.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.08%)</title><rect x="386.3" y="627.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="389.3" y="638.0"></text>
</g>
<g>
<title>ip_output (166 samples, 4.18%)</title><rect x="387.2" y="643.0" width="49.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.2" y="654.0">ip_ou..</text>
</g>
<g>
<title>ip_finish_output2 (160 samples, 4.03%)</title><rect x="387.8" y="627.0" width="47.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="390.8" y="638.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.48%)</title><rect x="390.2" y="611.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="393.2" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="391.0" y="595.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="394.0" y="606.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="391.0" y="579.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.0" y="590.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (15 samples, 0.38%)</title><rect x="391.3" y="595.0" width="4.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="394.3" y="606.0"></text>
</g>
<g>
<title>loopback_xmit (15 samples, 0.38%)</title><rect x="391.3" y="579.0" width="4.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="394.3" y="590.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="391.6" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="394.6" y="574.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 0.18%)</title><rect x="392.2" y="563.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="395.2" y="574.0"></text>
</g>
<g>
<title>netif_rx_internal (6 samples, 0.15%)</title><rect x="392.5" y="547.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="395.5" y="558.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 0.15%)</title><rect x="392.5" y="531.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="395.5" y="542.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.05%)</title><rect x="394.3" y="563.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="397.3" y="574.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.05%)</title><rect x="394.9" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="397.9" y="574.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="395.5" y="563.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="398.5" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (133 samples, 3.35%)</title><rect x="395.8" y="611.0" width="39.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.8" y="622.0">__l..</text>
</g>
<g>
<title>do_softirq (129 samples, 3.25%)</title><rect x="396.1" y="595.0" width="38.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="399.1" y="606.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (126 samples, 3.17%)</title><rect x="397.0" y="579.0" width="37.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="400.0" y="590.0">do_..</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (126 samples, 3.17%)</title><rect x="397.0" y="563.0" width="37.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="400.0" y="574.0">asm..</text>
</g>
<g>
<title>__softirqentry_text_start (126 samples, 3.17%)</title><rect x="397.0" y="547.0" width="37.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.0" y="558.0">__s..</text>
</g>
<g>
<title>net_rx_action (118 samples, 2.97%)</title><rect x="399.4" y="531.0" width="35.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="402.4" y="542.0">net..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="399.7" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="402.7" y="526.0"></text>
</g>
<g>
<title>process_backlog (116 samples, 2.92%)</title><rect x="400.0" y="515.0" width="34.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="403.0" y="526.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (110 samples, 2.77%)</title><rect x="401.7" y="499.0" width="32.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="404.7" y="510.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.03%)</title><rect x="402.3" y="483.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="405.3" y="494.0"></text>
</g>
<g>
<title>ip_rcv (107 samples, 2.70%)</title><rect x="402.6" y="483.0" width="31.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="405.6" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (102 samples, 2.57%)</title><rect x="402.9" y="467.0" width="30.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="405.9" y="478.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (100 samples, 2.52%)</title><rect x="403.5" y="451.0" width="29.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.5" y="462.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (100 samples, 2.52%)</title><rect x="403.5" y="435.0" width="29.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="406.5" y="446.0">ip..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="403.5" y="419.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="406.5" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (99 samples, 2.49%)</title><rect x="403.8" y="419.0" width="29.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="406.8" y="430.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.25%)</title><rect x="405.3" y="403.0" width="3.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="408.3" y="414.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="408.0" y="387.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="411.0" y="398.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.05%)</title><rect x="408.3" y="403.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="411.3" y="414.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.05%)</title><rect x="408.3" y="387.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="411.3" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (82 samples, 2.07%)</title><rect x="408.9" y="403.0" width="24.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.9" y="414.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (82 samples, 2.07%)</title><rect x="408.9" y="387.0" width="24.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="411.9" y="398.0">t..</text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.15%)</title><rect x="409.5" y="371.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="412.5" y="382.0"></text>
</g>
<g>
<title>__mod_timer (6 samples, 0.15%)</title><rect x="409.5" y="355.0" width="1.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="412.5" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.13%)</title><rect x="409.8" y="339.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="412.8" y="350.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="411.0" y="323.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="414.0" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (59 samples, 1.49%)</title><rect x="411.3" y="371.0" width="17.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="414.3" y="382.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="412.4" y="355.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="415.4" y="366.0"></text>
</g>
<g>
<title>__wake_up_common_lock (54 samples, 1.36%)</title><rect x="412.7" y="355.0" width="16.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="415.7" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (54 samples, 1.36%)</title><rect x="412.7" y="339.0" width="16.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="415.7" y="350.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.23%)</title><rect x="428.8" y="371.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="431.8" y="382.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.10%)</title><rect x="429.4" y="355.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="432.4" y="366.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="429.4" y="339.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.4" y="350.0"></text>
</g>
<g>
<title>put_cpu_partial (1 samples, 0.03%)</title><rect x="429.4" y="323.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="432.4" y="334.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="429.7" y="339.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="432.7" y="350.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="430.3" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="433.3" y="350.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="430.6" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="433.6" y="366.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="430.9" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="433.9" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (1 samples, 0.03%)</title><rect x="431.2" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="434.2" y="366.0"></text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.10%)</title><rect x="431.5" y="371.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="434.5" y="382.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="432.7" y="371.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="435.7" y="382.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="433.0" y="355.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="436.0" y="366.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="433.0" y="339.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="436.0" y="350.0"></text>
</g>
<g>
<title>ip_rcv_core (3 samples, 0.08%)</title><rect x="433.3" y="467.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="436.3" y="478.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="433.8" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="436.8" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="434.1" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="437.1" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.constprop.0 (1 samples, 0.03%)</title><rect x="434.1" y="451.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="437.1" y="462.0"></text>
</g>
<g>
<title>preempt_schedule_thunk (3 samples, 0.08%)</title><rect x="434.4" y="595.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="437.4" y="606.0"></text>
</g>
<g>
<title>preempt_schedule_common (3 samples, 0.08%)</title><rect x="434.4" y="579.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="437.4" y="590.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.08%)</title><rect x="434.4" y="563.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.4" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.08%)</title><rect x="434.4" y="547.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="437.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (3 samples, 0.08%)</title><rect x="434.4" y="531.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="437.4" y="542.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.10%)</title><rect x="435.3" y="627.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="438.3" y="638.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.10%)</title><rect x="435.3" y="611.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="438.3" y="622.0"></text>
</g>
<g>
<title>rcu_preempt_deferred_qs_irqrestore (1 samples, 0.03%)</title><rect x="436.5" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="439.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="436.5" y="627.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="439.5" y="638.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="436.5" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="439.5" y="622.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="436.8" y="659.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.8" y="670.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="437.4" y="659.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="440.4" y="670.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="437.7" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="440.7" y="670.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.03%)</title><rect x="437.7" y="643.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="440.7" y="654.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="438.0" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="441.0" y="670.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="438.3" y="659.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="441.3" y="670.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="438.6" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="441.6" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="438.6" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="441.6" y="670.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.10%)</title><rect x="438.9" y="675.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="441.9" y="686.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.08%)</title><rect x="439.2" y="659.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.2" y="670.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.05%)</title><rect x="439.5" y="643.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="442.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="439.5" y="627.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="442.5" y="638.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (8 samples, 0.20%)</title><rect x="440.1" y="675.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="443.1" y="686.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="440.4" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="443.4" y="670.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="440.7" y="659.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="443.7" y="670.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.13%)</title><rect x="441.0" y="659.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="444.0" y="670.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.08%)</title><rect x="441.3" y="643.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="444.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="441.3" y="627.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="444.3" y="638.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="442.2" y="643.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="445.2" y="654.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.03%)</title><rect x="442.5" y="675.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="445.5" y="686.0"></text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.05%)</title><rect x="442.8" y="707.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.8" y="718.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.03%)</title><rect x="443.1" y="691.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="446.1" y="702.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (18 samples, 0.45%)</title><rect x="443.4" y="707.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="446.4" y="718.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.33%)</title><rect x="444.0" y="691.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="447.0" y="702.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.08%)</title><rect x="444.0" y="675.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="447.0" y="686.0"></text>
</g>
<g>
<title>__ksize (6 samples, 0.15%)</title><rect x="444.8" y="675.0" width="1.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="447.8" y="686.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.10%)</title><rect x="446.6" y="675.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="449.6" y="686.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="447.5" y="659.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="450.5" y="670.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (3 samples, 0.08%)</title><rect x="447.8" y="691.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="450.8" y="702.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (4 samples, 0.10%)</title><rect x="448.7" y="707.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.7" y="718.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="448.7" y="691.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.7" y="702.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="448.7" y="675.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="451.7" y="686.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.08%)</title><rect x="449.0" y="691.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="452.0" y="702.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="449.6" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="452.6" y="686.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="449.9" y="707.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="452.9" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.08%)</title><rect x="450.2" y="707.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="453.2" y="718.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="450.5" y="691.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="453.5" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="450.8" y="675.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="453.8" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="451.1" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="454.1" y="718.0"></text>
</g>
<g>
<title>fsnotify_parent (3 samples, 0.08%)</title><rect x="451.4" y="787.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="454.4" y="798.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="452.3" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.3" y="798.0"></text>
</g>
<g>
<title>import_iovec (4 samples, 0.10%)</title><rect x="452.6" y="803.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="455.6" y="814.0"></text>
</g>
<g>
<title>rw_copy_check_uvector (3 samples, 0.08%)</title><rect x="452.9" y="787.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.9" y="798.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.08%)</title><rect x="452.9" y="771.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="455.9" y="782.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="453.5" y="755.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="456.5" y="766.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="453.8" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="456.8" y="846.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="454.1" y="883.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="457.1" y="894.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="454.4" y="883.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="457.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.10%)</title><rect x="454.7" y="915.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.7" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.03%)</title><rect x="455.2" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="458.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerLast (1 samples, 0.03%)</title><rect x="455.5" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="458.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (4 samples, 0.10%)</title><rect x="455.8" y="915.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.8" y="926.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="456.1" y="899.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.1" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.05%)</title><rect x="456.1" y="883.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="459.1" y="894.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.05%)</title><rect x="456.1" y="867.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="459.1" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerLast (1 samples, 0.03%)</title><rect x="456.7" y="899.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.7" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.08%)</title><rect x="457.0" y="979.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (619 samples, 15.59%)</title><rect x="457.9" y="1235.0" width="184.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="460.9" y="1246.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (618 samples, 15.57%)</title><rect x="458.2" y="1219.0" width="183.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="461.2" y="1230.0">jdk/internal/net/http/co..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (218 samples, 5.49%)</title><rect x="458.2" y="1203.0" width="64.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="461.2" y="1214.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (216 samples, 5.44%)</title><rect x="458.8" y="1187.0" width="64.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.8" y="1198.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (216 samples, 5.44%)</title><rect x="458.8" y="1171.0" width="64.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.8" y="1182.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.remove (1 samples, 0.03%)</title><rect x="459.1" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="462.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (25 samples, 0.63%)</title><rect x="459.4" y="1155.0" width="7.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (25 samples, 0.63%)</title><rect x="459.4" y="1139.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (25 samples, 0.63%)</title><rect x="459.4" y="1123.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (25 samples, 0.63%)</title><rect x="459.4" y="1107.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (3 samples, 0.08%)</title><rect x="459.4" y="1091.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="462.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/201719260.invoke (3 samples, 0.08%)</title><rect x="459.4" y="1075.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="462.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.08%)</title><rect x="459.4" y="1059.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="462.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.08%)</title><rect x="459.4" y="1043.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.08%)</title><rect x="459.4" y="1027.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="462.4" y="1038.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.08%)</title><rect x="459.4" y="1011.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="462.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (22 samples, 0.55%)</title><rect x="460.3" y="1091.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (22 samples, 0.55%)</title><rect x="460.3" y="1075.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="463.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (22 samples, 0.55%)</title><rect x="460.3" y="1059.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="463.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (22 samples, 0.55%)</title><rect x="460.3" y="1043.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="463.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (21 samples, 0.53%)</title><rect x="460.6" y="1027.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.6" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="460.9" y="1011.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="463.9" y="1022.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="460.9" y="995.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="463.9" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.05%)</title><rect x="460.9" y="979.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="463.9" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (18 samples, 0.45%)</title><rect x="461.5" y="1011.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.5" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (18 samples, 0.45%)</title><rect x="461.5" y="995.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="464.5" y="1006.0"></text>
</g>
<g>
<title>__write (17 samples, 0.43%)</title><rect x="461.8" y="979.0" width="5.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="464.8" y="990.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.43%)</title><rect x="461.8" y="963.0" width="5.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="464.8" y="974.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.43%)</title><rect x="461.8" y="947.0" width="5.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="464.8" y="958.0"></text>
</g>
<g>
<title>ksys_write (16 samples, 0.40%)</title><rect x="461.8" y="931.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="464.8" y="942.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="461.8" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="464.8" y="926.0"></text>
</g>
<g>
<title>vfs_write (15 samples, 0.38%)</title><rect x="462.1" y="915.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="465.1" y="926.0"></text>
</g>
<g>
<title>new_sync_write (15 samples, 0.38%)</title><rect x="462.1" y="899.0" width="4.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.1" y="910.0"></text>
</g>
<g>
<title>pipe_write (15 samples, 0.38%)</title><rect x="462.1" y="883.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="465.1" y="894.0"></text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.05%)</title><rect x="462.1" y="867.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.1" y="878.0"></text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 0.25%)</title><rect x="462.7" y="867.0" width="3.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="465.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="462.7" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="465.7" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.23%)</title><rect x="463.0" y="851.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="466.0" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="465.7" y="867.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="468.7" y="878.0"></text>
</g>
<g>
<title>copy_page_from_iter (1 samples, 0.03%)</title><rect x="465.9" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.9" y="878.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="465.9" y="851.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="468.9" y="862.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="466.2" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.2" y="878.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="466.5" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="469.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.05%)</title><rect x="466.8" y="1155.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.05%)</title><rect x="466.8" y="1139.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="469.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (187 samples, 4.71%)</title><rect x="467.4" y="1155.0" width="55.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.4" y="1166.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.05%)</title><rect x="467.4" y="1139.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="467.7" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="467.7" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (185 samples, 4.66%)</title><rect x="468.0" y="1139.0" width="55.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.0" y="1150.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (185 samples, 4.66%)</title><rect x="468.0" y="1123.0" width="55.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.0" y="1134.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (185 samples, 4.66%)</title><rect x="468.0" y="1107.0" width="55.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.0" y="1118.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (132 samples, 3.32%)</title><rect x="468.0" y="1091.0" width="39.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.0" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (132 samples, 3.32%)</title><rect x="468.0" y="1075.0" width="39.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="471.0" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (130 samples, 3.27%)</title><rect x="468.6" y="1059.0" width="38.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.6" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (125 samples, 3.15%)</title><rect x="468.6" y="1043.0" width="37.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="471.6" y="1054.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="468.6" y="1027.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (124 samples, 3.12%)</title><rect x="468.9" y="1027.0" width="36.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="471.9" y="1038.0">jdk..</text>
</g>
<g>
<title>java/util/HashMap.forEach (1 samples, 0.03%)</title><rect x="469.2" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.2" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (1 samples, 0.03%)</title><rect x="469.2" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="472.2" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.03%)</title><rect x="469.2" y="979.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (1 samples, 0.03%)</title><rect x="469.2" y="963.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (122 samples, 3.07%)</title><rect x="469.5" y="1011.0" width="36.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.5" y="1022.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (121 samples, 3.05%)</title><rect x="469.5" y="995.0" width="36.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.5" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.05%)</title><rect x="469.5" y="979.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="469.5" y="963.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="472.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="469.5" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.08%)</title><rect x="470.1" y="979.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.1" y="990.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.08%)</title><rect x="470.1" y="963.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="473.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (110 samples, 2.77%)</title><rect x="471.0" y="979.0" width="32.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.0" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (110 samples, 2.77%)</title><rect x="471.0" y="963.0" width="32.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="474.0" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (90 samples, 2.27%)</title><rect x="471.3" y="947.0" width="26.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.3" y="958.0">j..</text>
</g>
<g>
<title>itable stub (4 samples, 0.10%)</title><rect x="471.6" y="931.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="474.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.10%)</title><rect x="472.8" y="931.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.08%)</title><rect x="473.1" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="476.1" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.08%)</title><rect x="473.1" y="899.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="476.1" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (3 samples, 0.08%)</title><rect x="473.1" y="883.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.05%)</title><rect x="474.0" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="477.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.05%)</title><rect x="474.0" y="915.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.0" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="474.0" y="899.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="477.0" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.03%)</title><rect x="474.3" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.3" y="894.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$44/187472540.apply (1 samples, 0.03%)</title><rect x="474.6" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="477.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/699148914.apply (62 samples, 1.56%)</title><rect x="474.9" y="931.0" width="18.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (62 samples, 1.56%)</title><rect x="474.9" y="915.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (1 samples, 0.03%)</title><rect x="474.9" y="899.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.03%)</title><rect x="474.9" y="883.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="477.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (61 samples, 1.54%)</title><rect x="475.2" y="899.0" width="18.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.08%)</title><rect x="475.2" y="883.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="475.5" y="867.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="475.5" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="478.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (58 samples, 1.46%)</title><rect x="476.1" y="883.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (54 samples, 1.36%)</title><rect x="476.1" y="867.0" width="16.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.1" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (16 samples, 0.40%)</title><rect x="476.6" y="851.0" width="4.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.05%)</title><rect x="476.6" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.6" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.05%)</title><rect x="476.6" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.6" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="476.9" y="803.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="476.9" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.9" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.03%)</title><rect x="476.9" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="479.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (14 samples, 0.35%)</title><rect x="477.2" y="835.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="480.2" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.30%)</title><rect x="477.8" y="819.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.8" y="830.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (10 samples, 0.25%)</title><rect x="477.8" y="803.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="480.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.18%)</title><rect x="478.7" y="787.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="481.7" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (5 samples, 0.13%)</title><rect x="478.7" y="771.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.7" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (5 samples, 0.13%)</title><rect x="478.7" y="755.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="481.7" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (5 samples, 0.13%)</title><rect x="478.7" y="739.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="481.7" y="750.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.10%)</title><rect x="478.7" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="481.7" y="734.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (3 samples, 0.08%)</title><rect x="479.0" y="707.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.0" y="718.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.cancellationRequested (1 samples, 0.03%)</title><rect x="479.9" y="723.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.9" y="734.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (1 samples, 0.03%)</title><rect x="479.9" y="707.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="480.2" y="771.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="483.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.05%)</title><rect x="480.8" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="483.8" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.05%)</title><rect x="480.8" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.8" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="480.8" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="483.8" y="782.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.05%)</title><rect x="480.8" y="755.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 0.18%)</title><rect x="481.4" y="851.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="482.3" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="482.3" y="819.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.08%)</title><rect x="482.6" y="835.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="485.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.08%)</title><rect x="482.6" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="485.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="482.9" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.03%)</title><rect x="483.5" y="851.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (28 samples, 0.71%)</title><rect x="483.8" y="851.0" width="8.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="486.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.03%)</title><rect x="484.1" y="835.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="487.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1058928207.run (26 samples, 0.65%)</title><rect x="484.4" y="835.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (26 samples, 0.65%)</title><rect x="484.4" y="819.0" width="7.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="487.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.08%)</title><rect x="484.4" y="803.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.08%)</title><rect x="484.4" y="787.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.08%)</title><rect x="484.4" y="771.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.08%)</title><rect x="485.3" y="803.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="485.9" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="485.9" y="771.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (13 samples, 0.33%)</title><rect x="486.2" y="803.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (13 samples, 0.33%)</title><rect x="486.2" y="787.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.2" y="798.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (13 samples, 0.33%)</title><rect x="486.2" y="771.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="489.2" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (13 samples, 0.33%)</title><rect x="486.2" y="755.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="489.2" y="766.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (12 samples, 0.30%)</title><rect x="486.5" y="739.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="489.5" y="750.0"></text>
</g>
<g>
<title>JVM_IHashCode (9 samples, 0.23%)</title><rect x="486.5" y="723.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="489.5" y="734.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="487.1" y="707.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="490.1" y="718.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.05%)</title><rect x="487.4" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="490.4" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.08%)</title><rect x="487.9" y="707.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="490.9" y="718.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.03%)</title><rect x="488.5" y="691.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="491.5" y="702.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="488.8" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="491.8" y="718.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (1 samples, 0.03%)</title><rect x="489.1" y="723.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="492.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="489.4" y="723.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="492.4" y="734.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.05%)</title><rect x="489.4" y="707.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="492.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.05%)</title><rect x="490.0" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="493.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (2 samples, 0.05%)</title><rect x="490.0" y="787.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.0" y="798.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.05%)</title><rect x="490.0" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (5 samples, 0.13%)</title><rect x="490.6" y="803.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="493.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (5 samples, 0.13%)</title><rect x="490.6" y="787.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="493.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.13%)</title><rect x="490.6" y="771.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (5 samples, 0.13%)</title><rect x="490.6" y="755.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (5 samples, 0.13%)</title><rect x="490.6" y="739.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (5 samples, 0.13%)</title><rect x="490.6" y="723.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="493.6" y="734.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (3 samples, 0.08%)</title><rect x="491.2" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.2" y="718.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (3 samples, 0.08%)</title><rect x="491.2" y="691.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="494.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/PutDeleteBodyHandler.apply (4 samples, 0.10%)</title><rect x="492.1" y="867.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.1" y="878.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="492.7" y="851.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="495.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$359/1611607641.apply (16 samples, 0.40%)</title><rect x="493.3" y="931.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (13 samples, 0.33%)</title><rect x="494.2" y="915.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="497.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (13 samples, 0.33%)</title><rect x="494.2" y="899.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="497.2" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.03%)</title><rect x="494.2" y="883.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="497.2" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.03%)</title><rect x="494.2" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.2" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (4 samples, 0.10%)</title><rect x="494.5" y="883.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="497.5" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (4 samples, 0.10%)</title><rect x="494.5" y="867.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.5" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.10%)</title><rect x="494.5" y="851.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (6 samples, 0.15%)</title><rect x="495.7" y="883.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="498.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.15%)</title><rect x="495.7" y="867.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.7" y="878.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (5 samples, 0.13%)</title><rect x="496.0" y="851.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="499.0" y="862.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (1 samples, 0.03%)</title><rect x="496.0" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.0" y="846.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (1 samples, 0.03%)</title><rect x="496.0" y="819.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.0" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (1 samples, 0.03%)</title><rect x="496.0" y="803.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="499.0" y="814.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.03%)</title><rect x="496.0" y="787.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.0" y="798.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (4 samples, 0.10%)</title><rect x="496.3" y="835.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (4 samples, 0.10%)</title><rect x="496.3" y="819.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.3" y="830.0"></text>
</g>
<g>
<title>JVM_IHashCode (3 samples, 0.08%)</title><rect x="496.3" y="803.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="499.3" y="814.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="496.3" y="787.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="499.3" y="798.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="496.6" y="787.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="499.6" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="496.9" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="499.9" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="497.2" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="500.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (2 samples, 0.05%)</title><rect x="497.5" y="883.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (15 samples, 0.38%)</title><rect x="498.1" y="947.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (14 samples, 0.35%)</title><rect x="498.3" y="931.0" width="4.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="498.3" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="501.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="498.3" y="899.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.03%)</title><rect x="498.6" y="915.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.6" y="926.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="498.6" y="899.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="501.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/2115167929.apply (12 samples, 0.30%)</title><rect x="498.9" y="915.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (12 samples, 0.30%)</title><rect x="498.9" y="899.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="501.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (8 samples, 0.20%)</title><rect x="498.9" y="883.0" width="2.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (8 samples, 0.20%)</title><rect x="498.9" y="867.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.9" y="878.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="498.9" y="851.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="501.9" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="498.9" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="501.9" y="846.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.05%)</title><rect x="498.9" y="819.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="501.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (6 samples, 0.15%)</title><rect x="499.5" y="851.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.5" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (6 samples, 0.15%)</title><rect x="499.5" y="835.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.5" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (3 samples, 0.08%)</title><rect x="499.5" y="819.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (3 samples, 0.08%)</title><rect x="499.5" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="502.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.08%)</title><rect x="500.4" y="819.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (2 samples, 0.05%)</title><rect x="500.7" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.10%)</title><rect x="501.3" y="883.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.10%)</title><rect x="502.5" y="947.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="505.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (1 samples, 0.03%)</title><rect x="503.4" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (1 samples, 0.03%)</title><rect x="503.4" y="915.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="506.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AltResult.&lt;init&gt; (1 samples, 0.03%)</title><rect x="503.4" y="899.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$410/679706780.apply (6 samples, 0.15%)</title><rect x="503.7" y="979.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (6 samples, 0.15%)</title><rect x="503.7" y="963.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.responseCode (1 samples, 0.03%)</title><rect x="504.3" y="947.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="507.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.08%)</title><rect x="504.6" y="947.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="504.6" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.05%)</title><rect x="504.9" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="507.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.03%)</title><rect x="505.5" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="505.5" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="505.5" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="505.5" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.weakCompareAndSet (1 samples, 0.03%)</title><rect x="505.5" y="931.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="508.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (5 samples, 0.13%)</title><rect x="505.8" y="1043.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.13%)</title><rect x="505.8" y="1027.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.13%)</title><rect x="505.8" y="1011.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="508.8" y="1022.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="506.1" y="995.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="509.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.08%)</title><rect x="506.4" y="995.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (49 samples, 1.23%)</title><rect x="507.3" y="1091.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.03%)</title><rect x="509.0" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.0" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.03%)</title><rect x="509.3" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="512.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.canContinueParsing (1 samples, 0.03%)</title><rect x="509.6" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (1 samples, 0.03%)</title><rect x="509.9" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.05%)</title><rect x="510.2" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="513.2" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="510.2" y="1059.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.05%)</title><rect x="510.2" y="1043.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (6 samples, 0.15%)</title><rect x="510.8" y="1075.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (6 samples, 0.15%)</title><rect x="510.8" y="1059.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="513.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (6 samples, 0.15%)</title><rect x="510.8" y="1043.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.15%)</title><rect x="510.8" y="1027.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.8" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.15%)</title><rect x="510.8" y="1011.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.8" y="1022.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="512.0" y="995.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="515.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (6 samples, 0.15%)</title><rect x="512.6" y="1075.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.10%)</title><rect x="512.6" y="1059.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="515.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.10%)</title><rect x="512.6" y="1043.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="513.5" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="516.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="513.8" y="1059.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="514.1" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="517.1" y="1054.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="514.1" y="1027.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="517.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (10 samples, 0.25%)</title><rect x="514.4" y="1075.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="517.4" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (9 samples, 0.23%)</title><rect x="514.7" y="1059.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="517.7" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.20%)</title><rect x="514.7" y="1043.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="517.7" y="1054.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="514.7" y="1027.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="517.7" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (7 samples, 0.18%)</title><rect x="515.0" y="1027.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.0" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (6 samples, 0.15%)</title><rect x="515.3" y="1011.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.3" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.15%)</title><rect x="515.3" y="995.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="518.3" y="1006.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="515.3" y="979.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="518.3" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (1 samples, 0.03%)</title><rect x="515.6" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="518.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="515.6" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.6" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.05%)</title><rect x="515.9" y="979.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="518.9" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (2 samples, 0.05%)</title><rect x="515.9" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.9" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.05%)</title><rect x="515.9" y="947.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="518.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$80/1534694976.test (1 samples, 0.03%)</title><rect x="516.5" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.5" y="990.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="516.8" y="979.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="519.8" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="517.1" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrLF (1 samples, 0.03%)</title><rect x="517.4" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (14 samples, 0.35%)</title><rect x="517.7" y="1075.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.03%)</title><rect x="518.9" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="518.9" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (9 samples, 0.23%)</title><rect x="519.2" y="1059.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.10%)</title><rect x="519.2" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.10%)</title><rect x="519.2" y="1027.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.2" y="1038.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="520.0" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="523.0" y="1022.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="520.0" y="995.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="523.0" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="520.0" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="523.0" y="990.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="520.0" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="523.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.05%)</title><rect x="520.3" y="1043.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.05%)</title><rect x="520.3" y="1027.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (1 samples, 0.03%)</title><rect x="520.6" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.6" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.08%)</title><rect x="520.9" y="1043.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="521.2" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="524.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="521.5" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="524.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$324/648888335.accept (4 samples, 0.10%)</title><rect x="521.8" y="1091.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.10%)</title><rect x="521.8" y="1075.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="524.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.05%)</title><rect x="522.4" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (400 samples, 10.08%)</title><rect x="523.0" y="1203.0" width="118.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.0" y="1214.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (399 samples, 10.05%)</title><rect x="523.3" y="1187.0" width="118.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.3" y="1198.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (399 samples, 10.05%)</title><rect x="523.3" y="1171.0" width="118.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.3" y="1182.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (398 samples, 10.03%)</title><rect x="523.6" y="1155.0" width="118.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.6" y="1166.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (397 samples, 10.00%)</title><rect x="523.9" y="1139.0" width="118.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="526.9" y="1150.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (393 samples, 9.90%)</title><rect x="524.2" y="1123.0" width="116.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.2" y="1134.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (393 samples, 9.90%)</title><rect x="524.2" y="1107.0" width="116.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="527.2" y="1118.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (393 samples, 9.90%)</title><rect x="524.2" y="1091.0" width="116.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="527.2" y="1102.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/1804270592.run (289 samples, 7.28%)</title><rect x="524.2" y="1075.0" width="85.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.2" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (289 samples, 7.28%)</title><rect x="524.2" y="1059.0" width="85.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.2" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (283 samples, 7.13%)</title><rect x="525.7" y="1043.0" width="84.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="528.7" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (8 samples, 0.20%)</title><rect x="525.7" y="1027.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="528.7" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.08%)</title><rect x="525.7" y="1011.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.7" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.08%)</title><rect x="525.7" y="995.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.08%)</title><rect x="525.7" y="979.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.08%)</title><rect x="525.7" y="963.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="528.7" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.05%)</title><rect x="526.0" y="947.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="529.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="526.3" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="526.3" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.3" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="526.3" y="899.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.3" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.05%)</title><rect x="526.6" y="1011.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.6" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.05%)</title><rect x="526.6" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.6" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="526.9" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="526.9" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="526.9" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.9" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.08%)</title><rect x="527.2" y="1011.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="530.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.08%)</title><rect x="527.2" y="995.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.2" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.05%)</title><rect x="527.2" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="530.2" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.05%)</title><rect x="527.2" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.2" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="527.2" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="530.2" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="527.2" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="530.2" y="942.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.03%)</title><rect x="527.2" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="530.2" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="527.5" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (1 samples, 0.03%)</title><rect x="527.8" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="530.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (1 samples, 0.03%)</title><rect x="527.8" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="530.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.03%)</title><rect x="527.8" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="530.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="527.8" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="530.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (275 samples, 6.93%)</title><rect x="528.1" y="1027.0" width="81.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="531.1" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>java/time/Instant.now (6 samples, 0.15%)</title><rect x="528.1" y="1011.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.1" y="1022.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (6 samples, 0.15%)</title><rect x="528.1" y="995.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="531.1" y="1006.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.03%)</title><rect x="528.1" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.1" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.03%)</title><rect x="528.1" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.1" y="974.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="528.1" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="531.1" y="958.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="528.1" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="531.1" y="942.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="528.1" y="915.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="531.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (4 samples, 0.10%)</title><rect x="528.4" y="979.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.4" y="990.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="528.7" y="963.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="531.7" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="529.0" y="947.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="532.0" y="958.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="529.3" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="532.3" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="529.3" y="947.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="532.3" y="958.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="529.3" y="931.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="532.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.03%)</title><rect x="529.6" y="979.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (269 samples, 6.78%)</title><rect x="529.9" y="1011.0" width="79.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.9" y="1022.0">jdk/inter..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (49 samples, 1.23%)</title><rect x="536.1" y="995.0" width="14.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="539.1" y="1006.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (49 samples, 1.23%)</title><rect x="536.1" y="979.0" width="14.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="539.1" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (41 samples, 1.03%)</title><rect x="536.1" y="963.0" width="12.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="539.1" y="974.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.20%)</title><rect x="548.3" y="963.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="551.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (162 samples, 4.08%)</title><rect x="550.7" y="995.0" width="48.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="553.7" y="1006.0">jdk/..</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="593.8" y="979.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="596.8" y="990.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="593.8" y="963.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="596.8" y="974.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="593.8" y="947.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="596.8" y="958.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="593.8" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="596.8" y="942.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="593.8" y="915.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="596.8" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="593.8" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="596.8" y="910.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="593.8" y="883.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="596.8" y="894.0"></text>
</g>
<g>
<title>__run_timers (1 samples, 0.03%)</title><rect x="593.8" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="596.8" y="878.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.03%)</title><rect x="593.8" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.8" y="862.0"></text>
</g>
<g>
<title>tcp_write_timer (1 samples, 0.03%)</title><rect x="593.8" y="835.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="596.8" y="846.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="594.1" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.1" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (2 samples, 0.05%)</title><rect x="594.1" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.1" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="594.1" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="597.1" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.05%)</title><rect x="594.1" y="931.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="597.1" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.05%)</title><rect x="594.1" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.1" y="926.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (3 samples, 0.08%)</title><rect x="594.6" y="979.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="597.6" y="990.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (2 samples, 0.05%)</title><rect x="594.9" y="963.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="597.9" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.05%)</title><rect x="594.9" y="947.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.9" y="958.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.05%)</title><rect x="594.9" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="597.9" y="942.0"></text>
</g>
<g>
<title>java/time/Instant.create (1 samples, 0.03%)</title><rect x="595.2" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="598.2" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.03%)</title><rect x="595.5" y="979.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.5" y="990.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.03%)</title><rect x="595.5" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="598.5" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (10 samples, 0.25%)</title><rect x="595.8" y="979.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="598.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (9 samples, 0.23%)</title><rect x="598.8" y="995.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="601.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.18%)</title><rect x="599.4" y="979.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="602.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.18%)</title><rect x="599.4" y="963.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="602.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (7 samples, 0.18%)</title><rect x="599.4" y="947.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.4" y="958.0"></text>
</g>
<g>
<title>java/util/Objects.hash (4 samples, 0.10%)</title><rect x="600.3" y="931.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.3" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (4 samples, 0.10%)</title><rect x="600.3" y="915.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.3" y="926.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (4 samples, 0.10%)</title><rect x="600.3" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="603.3" y="910.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (4 samples, 0.10%)</title><rect x="600.3" y="883.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="603.3" y="894.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (4 samples, 0.10%)</title><rect x="600.3" y="867.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (28 samples, 0.71%)</title><rect x="601.5" y="995.0" width="8.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="604.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.&lt;init&gt; (2 samples, 0.05%)</title><rect x="601.5" y="979.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="604.5" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="601.5" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="604.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.03%)</title><rect x="601.8" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="604.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.getConnectionFlow (1 samples, 0.03%)</title><rect x="602.1" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (25 samples, 0.63%)</title><rect x="602.4" y="979.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.18%)</title><rect x="602.4" y="963.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.18%)</title><rect x="602.4" y="947.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="605.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.18%)</title><rect x="602.4" y="931.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.10%)</title><rect x="602.4" y="915.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="605.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.10%)</title><rect x="602.4" y="899.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.08%)</title><rect x="602.7" y="883.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="605.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (3 samples, 0.08%)</title><rect x="603.6" y="915.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (18 samples, 0.45%)</title><rect x="604.5" y="963.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="607.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (18 samples, 0.45%)</title><rect x="604.5" y="947.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17 samples, 0.43%)</title><rect x="604.5" y="931.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (17 samples, 0.43%)</title><rect x="604.5" y="915.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="607.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (17 samples, 0.43%)</title><rect x="604.5" y="899.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="607.5" y="910.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.13%)</title><rect x="605.1" y="883.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="608.1" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.13%)</title><rect x="605.1" y="867.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="608.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.10%)</title><rect x="605.4" y="851.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="608.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (10 samples, 0.25%)</title><rect x="606.5" y="883.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (9 samples, 0.23%)</title><rect x="606.8" y="867.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="609.8" y="878.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.03%)</title><rect x="606.8" y="851.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="609.8" y="862.0"></text>
</g>
<g>
<title>__write (8 samples, 0.20%)</title><rect x="607.1" y="851.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="610.1" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.18%)</title><rect x="607.4" y="835.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="610.4" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.18%)</title><rect x="607.4" y="819.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="610.4" y="830.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.15%)</title><rect x="607.7" y="803.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.7" y="814.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="607.7" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="610.7" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="607.7" y="771.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="610.7" y="782.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.13%)</title><rect x="608.0" y="787.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.0" y="798.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.13%)</title><rect x="608.0" y="771.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.0" y="782.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.13%)</title><rect x="608.0" y="755.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="611.0" y="766.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.10%)</title><rect x="608.0" y="739.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="611.0" y="750.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.10%)</title><rect x="608.0" y="723.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="611.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="609.2" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="612.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (1 samples, 0.03%)</title><rect x="609.5" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.03%)</title><rect x="609.8" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/148987113.accept (15 samples, 0.38%)</title><rect x="610.1" y="1075.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="613.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (15 samples, 0.38%)</title><rect x="610.1" y="1059.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (15 samples, 0.38%)</title><rect x="610.1" y="1043.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.30%)</title><rect x="610.7" y="1027.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.30%)</title><rect x="610.7" y="1011.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.30%)</title><rect x="610.7" y="995.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.25%)</title><rect x="611.3" y="979.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.18%)</title><rect x="611.3" y="963.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="614.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (7 samples, 0.18%)</title><rect x="611.3" y="947.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.3" y="958.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.08%)</title><rect x="611.6" y="931.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="614.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/1845201983.accept (1 samples, 0.03%)</title><rect x="612.5" y="931.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$438/275199194.accept (2 samples, 0.05%)</title><rect x="612.8" y="931.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/1845201983.accept (1 samples, 0.03%)</title><rect x="613.4" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="616.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.03%)</title><rect x="613.4" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="616.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.03%)</title><rect x="613.4" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.03%)</title><rect x="613.4" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.03%)</title><rect x="613.4" y="899.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="616.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$438/275199194.accept (2 samples, 0.05%)</title><rect x="613.7" y="963.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.05%)</title><rect x="613.7" y="947.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="616.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.05%)</title><rect x="613.7" y="931.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="616.7" y="942.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.05%)</title><rect x="613.7" y="915.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/689855706.accept (1 samples, 0.03%)</title><rect x="614.3" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.03%)</title><rect x="614.3" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="617.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (89 samples, 2.24%)</title><rect x="614.6" y="1075.0" width="26.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.6" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (89 samples, 2.24%)</title><rect x="614.6" y="1059.0" width="26.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="617.6" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (89 samples, 2.24%)</title><rect x="614.6" y="1043.0" width="26.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="617.6" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (89 samples, 2.24%)</title><rect x="614.6" y="1027.0" width="26.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.6" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (89 samples, 2.24%)</title><rect x="614.6" y="1011.0" width="26.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="617.6" y="1022.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (89 samples, 2.24%)</title><rect x="614.6" y="995.0" width="26.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.6" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.03%)</title><rect x="615.2" y="979.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (86 samples, 2.17%)</title><rect x="615.5" y="979.0" width="25.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.5" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.03%)</title><rect x="615.5" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.03%)</title><rect x="615.5" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.5" y="958.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="615.5" y="931.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="618.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/270619590.accept (85 samples, 2.14%)</title><rect x="615.8" y="963.0" width="25.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="618.8" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (85 samples, 2.14%)</title><rect x="615.8" y="947.0" width="25.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="618.8" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (85 samples, 2.14%)</title><rect x="615.8" y="931.0" width="25.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.8" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (85 samples, 2.14%)</title><rect x="615.8" y="915.0" width="25.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.8" y="926.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.05%)</title><rect x="615.8" y="899.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (1 samples, 0.03%)</title><rect x="616.1" y="883.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="619.1" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="616.1" y="867.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.1" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="616.1" y="851.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="619.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.03%)</title><rect x="616.3" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (82 samples, 2.07%)</title><rect x="616.6" y="899.0" width="24.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="619.6" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (80 samples, 2.02%)</title><rect x="617.2" y="883.0" width="23.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.2" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (80 samples, 2.02%)</title><rect x="617.2" y="867.0" width="23.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.2" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (72 samples, 1.81%)</title><rect x="617.2" y="851.0" width="21.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.2" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (72 samples, 1.81%)</title><rect x="617.2" y="835.0" width="21.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.2" y="846.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (72 samples, 1.81%)</title><rect x="617.2" y="819.0" width="21.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="620.2" y="830.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (72 samples, 1.81%)</title><rect x="617.2" y="803.0" width="21.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="620.2" y="814.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (72 samples, 1.81%)</title><rect x="617.2" y="787.0" width="21.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="620.2" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (70 samples, 1.76%)</title><rect x="617.8" y="771.0" width="20.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.8" y="782.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.35%)</title><rect x="617.8" y="755.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="620.8" y="766.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="618.4" y="739.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="621.4" y="750.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="618.7" y="739.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="621.7" y="750.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="619.3" y="739.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="622.3" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_lock (8 samples, 0.20%)</title><rect x="619.6" y="739.0" width="2.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="622.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="622.0" y="755.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="625.0" y="766.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="622.0" y="739.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="625.0" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (55 samples, 1.39%)</title><rect x="622.3" y="755.0" width="16.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="625.3" y="766.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.28%)</title><rect x="623.5" y="739.0" width="15.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="626.5" y="750.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.28%)</title><rect x="623.5" y="723.0" width="15.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="626.5" y="734.0"></text>
</g>
<g>
<title>__x64_sys_futex (47 samples, 1.18%)</title><rect x="624.1" y="707.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="627.1" y="718.0"></text>
</g>
<g>
<title>do_futex (46 samples, 1.16%)</title><rect x="624.4" y="691.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="627.4" y="702.0"></text>
</g>
<g>
<title>futex_wake (46 samples, 1.16%)</title><rect x="624.4" y="675.0" width="13.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="627.4" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="625.6" y="659.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="628.6" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="625.9" y="659.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="628.9" y="670.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="626.2" y="659.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="629.2" y="670.0"></text>
</g>
<g>
<title>wake_up_q (39 samples, 0.98%)</title><rect x="626.5" y="659.0" width="11.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.5" y="670.0"></text>
</g>
<g>
<title>try_to_wake_up (39 samples, 0.98%)</title><rect x="626.5" y="643.0" width="11.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.5" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (38 samples, 0.96%)</title><rect x="626.5" y="627.0" width="11.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.5" y="638.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="637.5" y="611.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="640.5" y="622.0"></text>
</g>
<g>
<title>preempt_schedule_thunk (1 samples, 0.03%)</title><rect x="637.7" y="627.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="640.7" y="638.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.03%)</title><rect x="637.7" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="640.7" y="622.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="637.7" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="640.7" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="637.7" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="640.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="637.7" y="563.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="640.7" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="638.0" y="707.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.0" y="718.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.05%)</title><rect x="638.0" y="691.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="641.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (8 samples, 0.20%)</title><rect x="638.6" y="851.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="641.6" y="862.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.08%)</title><rect x="638.9" y="835.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="641.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$449/1029797973.accept (1 samples, 0.03%)</title><rect x="639.8" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$446/1616700890.accept (1 samples, 0.03%)</title><rect x="640.1" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$195/1536212598.accept (2 samples, 0.05%)</title><rect x="640.4" y="835.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="643.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (3 samples, 0.08%)</title><rect x="641.0" y="1123.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="644.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.03%)</title><rect x="641.0" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="644.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="641.0" y="1091.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.03%)</title><rect x="641.0" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.03%)</title><rect x="641.0" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.03%)</title><rect x="641.3" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="644.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.03%)</title><rect x="641.3" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.03%)</title><rect x="641.3" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.03%)</title><rect x="641.6" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.03%)</title><rect x="641.6" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1295475510.run (739 samples, 18.61%)</title><rect x="641.9" y="1235.0" width="219.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.9" y="1246.0">ru/mail/polis/service/gogun/A..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (738 samples, 18.59%)</title><rect x="642.2" y="1219.0" width="219.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.2" y="1230.0">ru/mail/polis/service/gogun/A..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (738 samples, 18.59%)</title><rect x="642.2" y="1203.0" width="219.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.2" y="1214.0">ru/mail/polis/service/gogun/A..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (5 samples, 0.13%)</title><rect x="642.2" y="1187.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="645.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.10%)</title><rect x="643.7" y="1187.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.10%)</title><rect x="643.7" y="1171.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="646.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (4 samples, 0.10%)</title><rect x="643.7" y="1155.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="646.7" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="644.3" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.3" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="644.3" y="1123.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="647.3" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="644.3" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="647.3" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="644.3" y="1091.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="647.3" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="644.3" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="647.3" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="644.3" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="647.3" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.03%)</title><rect x="644.3" y="1043.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="647.3" y="1054.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="644.6" y="1139.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="647.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="644.9" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="644.9" y="1171.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="647.9" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$413/748337080.get$Lambda (1 samples, 0.03%)</title><rect x="644.9" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="647.9" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="644.9" y="1139.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="647.9" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="644.9" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="647.9" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="644.9" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="647.9" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="644.9" y="1091.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="647.9" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="644.9" y="1075.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="647.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.30%)</title><rect x="645.2" y="1187.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="646.7" y="1171.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="646.7" y="1155.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="649.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.10%)</title><rect x="647.6" y="1171.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="650.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.10%)</title><rect x="647.6" y="1155.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="650.6" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="647.6" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="650.6" y="1150.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="647.6" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="650.6" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.08%)</title><rect x="647.9" y="1139.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="650.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (187 samples, 4.71%)</title><rect x="648.7" y="1187.0" width="55.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.7" y="1198.0">ru/ma..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.05%)</title><rect x="649.3" y="1171.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="652.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.05%)</title><rect x="649.3" y="1155.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.05%)</title><rect x="649.3" y="1139.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="652.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="649.9" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="652.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.05%)</title><rect x="650.2" y="1171.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="653.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (1 samples, 0.03%)</title><rect x="650.5" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (111 samples, 2.80%)</title><rect x="650.8" y="1171.0" width="33.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="653.8" y="1182.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (111 samples, 2.80%)</title><rect x="650.8" y="1155.0" width="33.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.8" y="1166.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (111 samples, 2.80%)</title><rect x="650.8" y="1139.0" width="33.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.8" y="1150.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (111 samples, 2.80%)</title><rect x="650.8" y="1123.0" width="33.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="653.8" y="1134.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.03%)</title><rect x="651.7" y="1107.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.03%)</title><rect x="651.7" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.03%)</title><rect x="651.7" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="654.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (4 samples, 0.10%)</title><rect x="652.0" y="1107.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="655.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.10%)</title><rect x="652.0" y="1091.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="655.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (3 samples, 0.08%)</title><rect x="652.3" y="1075.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (74 samples, 1.86%)</title><rect x="653.2" y="1107.0" width="22.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="656.2" y="1118.0">j..</text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.08%)</title><rect x="653.2" y="1091.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="656.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.05%)</title><rect x="653.5" y="1075.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.5" y="1086.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="653.8" y="1059.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.8" y="1070.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="653.8" y="1043.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="656.8" y="1054.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="653.8" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="656.8" y="1038.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="653.8" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="656.8" y="1022.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="653.8" y="995.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="656.8" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="653.8" y="979.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="656.8" y="990.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="653.8" y="963.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="656.8" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="653.8" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="656.8" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.15%)</title><rect x="654.1" y="1091.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.1" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.08%)</title><rect x="654.1" y="1075.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="657.1" y="1086.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.08%)</title><rect x="654.1" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="657.1" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="654.7" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.7" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.08%)</title><rect x="655.0" y="1075.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.0" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.08%)</title><rect x="655.0" y="1059.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.0" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.08%)</title><rect x="655.0" y="1043.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.0" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.08%)</title><rect x="655.0" y="1027.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.0" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.05%)</title><rect x="655.3" y="1011.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.3" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.05%)</title><rect x="655.3" y="995.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (2 samples, 0.05%)</title><rect x="655.3" y="979.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.3" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (2 samples, 0.05%)</title><rect x="655.3" y="963.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="658.3" y="974.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.get (1 samples, 0.03%)</title><rect x="655.3" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="658.3" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (1 samples, 0.03%)</title><rect x="655.3" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="658.3" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.getFence (1 samples, 0.03%)</title><rect x="655.6" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="658.6" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.15%)</title><rect x="655.9" y="1091.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.9" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.15%)</title><rect x="655.9" y="1075.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="658.9" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="655.9" y="1059.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="658.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (5 samples, 0.13%)</title><rect x="656.2" y="1059.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.10%)</title><rect x="656.5" y="1043.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.5" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (4 samples, 0.10%)</title><rect x="656.5" y="1027.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.5" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.08%)</title><rect x="656.8" y="1011.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="657.1" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="660.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="657.1" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.1" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="657.4" y="995.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (54 samples, 1.36%)</title><rect x="657.7" y="1091.0" width="16.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="660.7" y="1102.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (54 samples, 1.36%)</title><rect x="657.7" y="1075.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="660.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="658.0" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="661.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="658.0" y="1043.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="658.0" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="658.3" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="661.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="658.3" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="661.3" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (50 samples, 1.26%)</title><rect x="658.6" y="1059.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.6" y="1070.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="658.6" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="661.6" y="1054.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.03%)</title><rect x="658.9" y="1043.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="661.9" y="1054.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="659.1" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="662.1" y="1054.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (30 samples, 0.76%)</title><rect x="659.4" y="1043.0" width="9.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="662.4" y="1054.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) [clone .isra.0] (1 samples, 0.03%)</title><rect x="660.0" y="1027.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="663.0" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.05%)</title><rect x="660.3" y="1027.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="663.3" y="1038.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="660.3" y="1011.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="663.3" y="1022.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.03%)</title><rect x="660.9" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="663.9" y="1038.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.18%)</title><rect x="661.2" y="1027.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="664.2" y="1038.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.03%)</title><rect x="661.8" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="664.8" y="1022.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.08%)</title><rect x="662.1" y="1011.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="665.1" y="1022.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.03%)</title><rect x="662.4" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="665.4" y="1006.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.03%)</title><rect x="662.7" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="665.7" y="1006.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="663.0" y="1011.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="666.0" y="1022.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.05%)</title><rect x="663.3" y="1027.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="666.3" y="1038.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="663.9" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="666.9" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="664.2" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="667.2" y="1038.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.03%)</title><rect x="664.5" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="667.5" y="1038.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.08%)</title><rect x="664.8" y="1027.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="667.8" y="1038.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.08%)</title><rect x="664.8" y="1011.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="667.8" y="1022.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="664.8" y="995.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="667.8" y="1006.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.05%)</title><rect x="665.1" y="995.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="668.1" y="1006.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (9 samples, 0.23%)</title><rect x="665.7" y="1027.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="668.7" y="1038.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.05%)</title><rect x="665.7" y="1011.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="668.7" y="1022.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.10%)</title><rect x="666.3" y="1011.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="669.3" y="1022.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="667.2" y="995.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="670.2" y="1006.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="667.2" y="979.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="670.2" y="990.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="667.2" y="963.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="670.2" y="974.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.03%)</title><rect x="667.5" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="670.5" y="1022.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.05%)</title><rect x="667.8" y="1011.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="670.8" y="1022.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.05%)</title><rect x="667.8" y="995.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="670.8" y="1006.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="667.8" y="979.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="670.8" y="990.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="668.1" y="979.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="671.1" y="990.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.05%)</title><rect x="668.4" y="1043.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="671.4" y="1054.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (15 samples, 0.38%)</title><rect x="669.0" y="1043.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.0" y="1054.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (13 samples, 0.33%)</title><rect x="669.6" y="1027.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.08%)</title><rect x="670.1" y="1011.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.08%)</title><rect x="670.1" y="995.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="673.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.08%)</title><rect x="670.1" y="979.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="673.1" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (3 samples, 0.08%)</title><rect x="670.1" y="963.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="673.1" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="670.7" y="947.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="673.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.05%)</title><rect x="671.0" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="671.0" y="995.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="674.0" y="1006.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="671.3" y="979.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="674.3" y="990.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (6 samples, 0.15%)</title><rect x="671.6" y="1011.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="674.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (3 samples, 0.08%)</title><rect x="672.2" y="995.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="675.2" y="1006.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.08%)</title><rect x="672.2" y="979.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="675.2" y="990.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="672.8" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="675.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="672.8" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="675.8" y="958.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.03%)</title><rect x="673.1" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.03%)</title><rect x="673.1" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="676.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="673.1" y="963.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="676.1" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="673.1" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.1" y="958.0"></text>
</g>
<g>
<title>java/util/stream/Stream.of (1 samples, 0.03%)</title><rect x="673.4" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="676.4" y="1070.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (1 samples, 0.03%)</title><rect x="673.4" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="676.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.10%)</title><rect x="673.7" y="1091.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="676.7" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="673.7" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="676.7" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.08%)</title><rect x="674.0" y="1075.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.03%)</title><rect x="674.9" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.03%)</title><rect x="674.9" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="677.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (16 samples, 0.40%)</title><rect x="675.2" y="1107.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (1 samples, 0.03%)</title><rect x="676.1" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="679.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (12 samples, 0.30%)</title><rect x="676.4" y="1091.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (11 samples, 0.28%)</title><rect x="676.7" y="1075.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="679.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.08%)</title><rect x="677.0" y="1059.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (2 samples, 0.05%)</title><rect x="677.3" y="1043.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="680.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/Class.arrayContentsEq (1 samples, 0.03%)</title><rect x="677.3" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="680.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (1 samples, 0.03%)</title><rect x="677.6" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (1 samples, 0.03%)</title><rect x="677.6" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="680.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (6 samples, 0.15%)</title><rect x="677.9" y="1059.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="680.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (3 samples, 0.08%)</title><rect x="678.2" y="1043.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (3 samples, 0.08%)</title><rect x="678.2" y="1027.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (3 samples, 0.08%)</title><rect x="678.2" y="1011.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="681.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (3 samples, 0.08%)</title><rect x="678.2" y="995.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="681.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (2 samples, 0.05%)</title><rect x="679.1" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (1 samples, 0.03%)</title><rect x="679.4" y="1027.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.4" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.03%)</title><rect x="679.7" y="1059.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="682.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (13 samples, 0.33%)</title><rect x="680.0" y="1107.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (11 samples, 0.28%)</title><rect x="680.0" y="1091.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="683.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.28%)</title><rect x="680.0" y="1075.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.15%)</title><rect x="680.0" y="1059.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="683.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.13%)</title><rect x="681.7" y="1059.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="684.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.13%)</title><rect x="681.7" y="1043.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="684.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.13%)</title><rect x="681.7" y="1027.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.13%)</title><rect x="681.7" y="1011.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="684.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.13%)</title><rect x="681.7" y="995.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="684.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.13%)</title><rect x="681.7" y="979.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="684.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.13%)</title><rect x="681.7" y="963.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.7" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="681.7" y="947.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="684.7" y="958.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="681.7" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="684.7" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="682.0" y="931.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="685.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.08%)</title><rect x="682.3" y="947.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="685.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="682.3" y="931.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="685.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="682.3" y="915.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="685.3" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="682.6" y="899.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="685.6" y="910.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="682.9" y="883.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="685.9" y="894.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="682.9" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.9" y="878.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="682.9" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="685.9" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="682.9" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="682.9" y="819.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="685.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.05%)</title><rect x="683.2" y="1091.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.05%)</title><rect x="683.2" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="686.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.05%)</title><rect x="683.2" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.03%)</title><rect x="683.2" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="683.5" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.03%)</title><rect x="683.5" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="686.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.PUT (1 samples, 0.03%)</title><rect x="683.8" y="1171.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (15 samples, 0.38%)</title><rect x="684.1" y="1171.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (12 samples, 0.30%)</title><rect x="685.0" y="1155.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.0" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.30%)</title><rect x="685.0" y="1139.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.0" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.30%)</title><rect x="685.0" y="1123.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.0" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.23%)</title><rect x="685.9" y="1107.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="688.9" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (8 samples, 0.20%)</title><rect x="686.2" y="1091.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="689.2" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.20%)</title><rect x="686.2" y="1075.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="689.2" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="686.5" y="1059.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="689.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.03%)</title><rect x="686.8" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.8" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (1 samples, 0.03%)</title><rect x="686.8" y="1043.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.8" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="686.8" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.03%)</title><rect x="686.8" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.03%)</title><rect x="686.8" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="689.8" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.03%)</title><rect x="687.1" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.1" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (1 samples, 0.03%)</title><rect x="687.1" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.1" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (1 samples, 0.03%)</title><rect x="687.1" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="690.1" y="1038.0"></text>
</g>
<g>
<title>java/util/List.copyOf (1 samples, 0.03%)</title><rect x="687.4" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="690.4" y="1070.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (1 samples, 0.03%)</title><rect x="687.4" y="1043.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="690.4" y="1054.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.03%)</title><rect x="687.4" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.4" y="1038.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="687.4" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="690.4" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="687.7" y="1059.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/1823541245.test (2 samples, 0.05%)</title><rect x="688.0" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="691.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.10%)</title><rect x="688.6" y="1171.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="691.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="688.6" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="691.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="688.6" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="688.9" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="691.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="689.2" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="689.5" y="1155.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="692.5" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.isMe (1 samples, 0.03%)</title><rect x="689.8" y="1171.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="692.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.requestForRepl (42 samples, 1.06%)</title><rect x="690.1" y="1171.0" width="12.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.1" y="1182.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (33 samples, 0.83%)</title><rect x="690.1" y="1155.0" width="9.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.1" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (33 samples, 0.83%)</title><rect x="690.1" y="1139.0" width="9.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.1" y="1150.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (3 samples, 0.08%)</title><rect x="690.7" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="693.7" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (1 samples, 0.03%)</title><rect x="691.2" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.2" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="691.2" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.2" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="691.5" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="694.5" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="691.5" y="1107.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.5" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="691.5" y="1091.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="694.5" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (24 samples, 0.60%)</title><rect x="692.1" y="1123.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="692.7" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="692.7" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="695.7" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="693.0" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.0" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="693.3" y="1091.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="696.3" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (12 samples, 0.30%)</title><rect x="693.6" y="1107.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.6" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (8 samples, 0.20%)</title><rect x="694.2" y="1091.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="694.2" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.2" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.05%)</title><rect x="694.5" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="697.5" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="694.5" y="1059.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="697.5" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.03%)</title><rect x="694.8" y="1043.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="697.8" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.03%)</title><rect x="695.1" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.1" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="695.1" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="698.1" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseIPv4Address (2 samples, 0.05%)</title><rect x="695.4" y="1075.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.4" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scanIPv4Address (2 samples, 0.05%)</title><rect x="695.4" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.4" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="695.4" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="698.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.05%)</title><rect x="695.4" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.4" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="696.0" y="1075.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="696.0" y="1059.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="696.0" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="696.0" y="1027.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.0" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.05%)</title><rect x="696.6" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="699.6" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.18%)</title><rect x="697.2" y="1107.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="700.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="698.7" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="701.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="698.7" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="698.7" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.7" y="1070.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (1 samples, 0.03%)</title><rect x="699.3" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="702.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="699.3" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="699.3" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="699.3" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="702.3" y="1086.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="699.6" y="1123.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="702.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (8 samples, 0.20%)</title><rect x="699.9" y="1155.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (8 samples, 0.20%)</title><rect x="699.9" y="1139.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="702.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (5 samples, 0.13%)</title><rect x="699.9" y="1123.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$81/1823541245.test (2 samples, 0.05%)</title><rect x="700.5" y="1107.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="703.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.05%)</title><rect x="700.5" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.5" y="1102.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.05%)</title><rect x="700.5" y="1075.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.5" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.05%)</title><rect x="700.5" y="1059.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.5" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (2 samples, 0.05%)</title><rect x="700.5" y="1043.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="703.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.03%)</title><rect x="700.8" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="703.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (1 samples, 0.03%)</title><rect x="701.1" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (3 samples, 0.08%)</title><rect x="701.4" y="1123.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.4" y="1134.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (3 samples, 0.08%)</title><rect x="701.4" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.4" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.03%)</title><rect x="701.9" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.03%)</title><rect x="702.2" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.uri (1 samples, 0.03%)</title><rect x="702.2" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.03%)</title><rect x="702.2" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.03%)</title><rect x="702.2" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (6 samples, 0.15%)</title><rect x="702.5" y="1171.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (6 samples, 0.15%)</title><rect x="702.5" y="1155.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (6 samples, 0.15%)</title><rect x="702.5" y="1139.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="705.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.15%)</title><rect x="702.5" y="1123.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.13%)</title><rect x="702.5" y="1107.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="705.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="703.1" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="703.1" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="703.1" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="703.1" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="703.1" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="703.1" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.1" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="703.1" y="995.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="706.1" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="703.1" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="706.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="703.4" y="1091.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="706.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="703.4" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="703.4" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="706.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="703.4" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="706.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="703.4" y="1027.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="703.4" y="1011.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="706.4" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="703.7" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="706.7" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="703.7" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="706.7" y="990.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="703.7" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="706.7" y="974.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="703.7" y="947.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.7" y="958.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="703.7" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="706.7" y="942.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="703.7" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="706.7" y="926.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="703.7" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="706.7" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="703.7" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="706.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="704.0" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="707.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (159 samples, 4.01%)</title><rect x="704.3" y="1187.0" width="47.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="707.3" y="1198.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (159 samples, 4.01%)</title><rect x="704.3" y="1171.0" width="47.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.3" y="1182.0">ru/m..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.23%)</title><rect x="704.3" y="1155.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="707.3" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.05%)</title><rect x="704.9" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="707.9" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="705.2" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="708.2" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.size (5 samples, 0.13%)</title><rect x="705.5" y="1139.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="708.5" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.10%)</title><rect x="705.8" y="1123.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.8" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (150 samples, 3.78%)</title><rect x="707.0" y="1155.0" width="44.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="710.0" y="1166.0">java..</text>
</g>
<g>
<title>java/util/TreeSet.addAll (150 samples, 3.78%)</title><rect x="707.0" y="1139.0" width="44.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="710.0" y="1150.0">java..</text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (150 samples, 3.78%)</title><rect x="707.0" y="1123.0" width="44.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.0" y="1134.0">java..</text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (5 samples, 0.13%)</title><rect x="707.9" y="1107.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.9" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (45 samples, 1.13%)</title><rect x="709.4" y="1107.0" width="13.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="712.4" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (45 samples, 1.13%)</title><rect x="709.4" y="1091.0" width="13.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="712.4" y="1102.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (3 samples, 0.08%)</title><rect x="709.7" y="1075.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="712.7" y="1086.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (3 samples, 0.08%)</title><rect x="709.7" y="1059.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="712.7" y="1070.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (3 samples, 0.08%)</title><rect x="709.7" y="1043.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="712.7" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (41 samples, 1.03%)</title><rect x="710.6" y="1075.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.6" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (1 samples, 0.03%)</title><rect x="722.8" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="725.8" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.03%)</title><rect x="722.8" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="725.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (96 samples, 2.42%)</title><rect x="723.1" y="1107.0" width="28.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.1" y="1118.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (3 samples, 0.08%)</title><rect x="723.9" y="1091.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="726.9" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (90 samples, 2.27%)</title><rect x="724.8" y="1091.0" width="26.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.8" y="1102.0">j..</text>
</g>
<g>
<title>itable stub (29 samples, 0.73%)</title><rect x="732.6" y="1075.0" width="8.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="735.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="741.2" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="744.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="741.2" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="741.2" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.2" y="1054.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.03%)</title><rect x="741.2" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="744.2" y="1038.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (1 samples, 0.03%)</title><rect x="741.2" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="744.2" y="1022.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (1 samples, 0.03%)</title><rect x="741.2" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="744.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (30 samples, 0.76%)</title><rect x="741.5" y="1075.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="744.5" y="1086.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="746.2" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="749.2" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="746.2" y="1043.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="749.2" y="1054.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="746.2" y="1027.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="749.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (13 samples, 0.33%)</title><rect x="746.5" y="1059.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="749.5" y="1070.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="750.1" y="1043.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="753.1" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="750.1" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="753.1" y="1038.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="750.1" y="1011.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.1" y="1022.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="750.1" y="995.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.1" y="1006.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="750.1" y="979.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.1" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="750.1" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="753.1" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="750.1" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="753.1" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="750.4" y="1075.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.4" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.05%)</title><rect x="751.0" y="1075.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (6 samples, 0.15%)</title><rect x="751.6" y="1187.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.6" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (6 samples, 0.15%)</title><rect x="751.6" y="1171.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.6" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (2 samples, 0.05%)</title><rect x="751.6" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.6" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.05%)</title><rect x="751.6" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="754.6" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.05%)</title><rect x="751.6" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.6" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.08%)</title><rect x="752.2" y="1155.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.2" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.08%)</title><rect x="752.2" y="1139.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.2" y="1150.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="752.5" y="1123.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="755.5" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.03%)</title><rect x="753.1" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="756.1" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.03%)</title><rect x="753.1" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.1" y="1150.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="753.1" y="1123.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="756.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (169 samples, 4.26%)</title><rect x="753.4" y="1187.0" width="50.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.4" y="1198.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (169 samples, 4.26%)</title><rect x="753.4" y="1171.0" width="50.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="756.4" y="1182.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (168 samples, 4.23%)</title><rect x="753.7" y="1155.0" width="49.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="756.7" y="1166.0">ru/ma..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (14 samples, 0.35%)</title><rect x="753.7" y="1139.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="756.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.25%)</title><rect x="754.3" y="1123.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.3" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.05%)</title><rect x="757.2" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="760.2" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.03%)</title><rect x="757.2" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="760.2" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="757.5" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (154 samples, 3.88%)</title><rect x="757.8" y="1139.0" width="45.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="760.8" y="1150.0">java..</text>
</g>
<g>
<title>java/util/TreeSet.addAll (154 samples, 3.88%)</title><rect x="757.8" y="1123.0" width="45.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="760.8" y="1134.0">java..</text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (154 samples, 3.88%)</title><rect x="757.8" y="1107.0" width="45.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="760.8" y="1118.0">java..</text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (5 samples, 0.13%)</title><rect x="759.3" y="1091.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.3" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (38 samples, 0.96%)</title><rect x="760.8" y="1091.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="763.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (38 samples, 0.96%)</title><rect x="760.8" y="1075.0" width="11.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="763.8" y="1086.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (4 samples, 0.10%)</title><rect x="761.1" y="1059.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="764.1" y="1070.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (4 samples, 0.10%)</title><rect x="761.1" y="1043.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="764.1" y="1054.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (4 samples, 0.10%)</title><rect x="761.1" y="1027.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="764.1" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (33 samples, 0.83%)</title><rect x="762.3" y="1059.0" width="9.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="765.3" y="1070.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (2 samples, 0.05%)</title><rect x="771.5" y="1043.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="774.5" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="771.5" y="1027.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="774.5" y="1038.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (2 samples, 0.05%)</title><rect x="771.5" y="1011.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="774.5" y="1022.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="771.8" y="995.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="774.8" y="1006.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="771.8" y="979.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="774.8" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (1 samples, 0.03%)</title><rect x="772.1" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.1" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.03%)</title><rect x="772.1" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.1" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (105 samples, 2.64%)</title><rect x="772.4" y="1091.0" width="31.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="775.4" y="1102.0">ja..</text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (9 samples, 0.23%)</title><rect x="773.3" y="1075.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="776.3" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (93 samples, 2.34%)</title><rect x="776.0" y="1075.0" width="27.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.0" y="1086.0">j..</text>
</g>
<g>
<title>itable stub (23 samples, 0.58%)</title><rect x="785.2" y="1059.0" width="6.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="788.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="792.0" y="1059.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="795.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.03%)</title><rect x="792.0" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.03%)</title><rect x="792.0" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.0" y="1038.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.03%)</title><rect x="792.0" y="1011.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="795.0" y="1022.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (1 samples, 0.03%)</title><rect x="792.0" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="795.0" y="1006.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (1 samples, 0.03%)</title><rect x="792.0" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="795.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (38 samples, 0.96%)</title><rect x="792.3" y="1059.0" width="11.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="795.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (25 samples, 0.63%)</title><rect x="796.2" y="1043.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.atLeastAsync (5 samples, 0.13%)</title><rect x="803.6" y="1187.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.6" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.13%)</title><rect x="803.6" y="1171.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="806.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.isMe (2 samples, 0.05%)</title><rect x="803.6" y="1155.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="806.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$204/1505551486.accept (3 samples, 0.08%)</title><rect x="804.2" y="1155.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="807.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$1 (3 samples, 0.08%)</title><rect x="804.2" y="1139.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.08%)</title><rect x="804.2" y="1123.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="807.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.05%)</title><rect x="804.5" y="1107.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="807.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.05%)</title><rect x="804.5" y="1091.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="807.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (190 samples, 4.79%)</title><rect x="805.1" y="1187.0" width="56.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.1" y="1198.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (132 samples, 3.32%)</title><rect x="805.1" y="1171.0" width="39.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="808.1" y="1182.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (126 samples, 3.17%)</title><rect x="805.1" y="1155.0" width="37.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="808.1" y="1166.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.30%)</title><rect x="805.1" y="1139.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (3 samples, 0.08%)</title><rect x="805.7" y="1123.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.7" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.08%)</title><rect x="805.7" y="1107.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="808.7" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="806.0" y="1091.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="809.0" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="806.0" y="1075.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="809.0" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="806.0" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="809.0" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="806.0" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="809.0" y="1054.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="806.0" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="809.0" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="806.0" y="1011.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="809.0" y="1022.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="806.0" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="809.0" y="1006.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="806.0" y="979.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="809.0" y="990.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="806.0" y="963.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="809.0" y="974.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="806.0" y="947.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="809.0" y="958.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.03%)</title><rect x="806.0" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="809.0" y="942.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="806.3" y="1091.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="809.3" y="1102.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="806.3" y="1075.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="809.3" y="1086.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="806.3" y="1059.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="809.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.18%)</title><rect x="806.6" y="1123.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="809.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.08%)</title><rect x="806.6" y="1107.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="809.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="807.5" y="1107.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="810.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="807.5" y="1091.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="810.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.10%)</title><rect x="807.5" y="1075.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (114 samples, 2.87%)</title><rect x="808.7" y="1139.0" width="33.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.7" y="1150.0">on..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="808.7" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="811.7" y="1134.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="808.7" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="811.7" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="808.7" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="811.7" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="808.7" y="1075.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="811.7" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="808.7" y="1059.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="811.7" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="808.7" y="1043.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="811.7" y="1054.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="808.7" y="1027.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="811.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (113 samples, 2.85%)</title><rect x="809.0" y="1123.0" width="33.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="812.0" y="1134.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (112 samples, 2.82%)</title><rect x="809.2" y="1107.0" width="33.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="812.2" y="1118.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (111 samples, 2.80%)</title><rect x="809.5" y="1091.0" width="33.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="812.5" y="1102.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.18%)</title><rect x="810.4" y="1075.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="813.4" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="811.3" y="1059.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="814.3" y="1070.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="811.9" y="1059.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="814.9" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="812.2" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="815.2" y="1054.0"></text>
</g>
<g>
<title>__libc_send (101 samples, 2.54%)</title><rect x="812.5" y="1075.0" width="30.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="815.5" y="1086.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (100 samples, 2.52%)</title><rect x="812.8" y="1059.0" width="29.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="815.8" y="1070.0">en..</text>
</g>
<g>
<title>do_syscall_64 (100 samples, 2.52%)</title><rect x="812.8" y="1043.0" width="29.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="815.8" y="1054.0">do..</text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.05%)</title><rect x="814.0" y="1027.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.0" y="1038.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.05%)</title><rect x="814.0" y="1011.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.0" y="1022.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="814.3" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="817.3" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_sendto (93 samples, 2.34%)</title><rect x="814.6" y="1027.0" width="27.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.6" y="1038.0">_..</text>
</g>
<g>
<title>__sys_sendto (93 samples, 2.34%)</title><rect x="814.6" y="1011.0" width="27.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="817.6" y="1022.0">_..</text>
</g>
<g>
<title>sock_sendmsg (87 samples, 2.19%)</title><rect x="814.9" y="995.0" width="25.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.9" y="1006.0">s..</text>
</g>
<g>
<title>tcp_sendmsg (87 samples, 2.19%)</title><rect x="814.9" y="979.0" width="25.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.9" y="990.0">t..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="814.9" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.9" y="974.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="814.9" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="817.9" y="958.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="814.9" y="931.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="817.9" y="942.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="815.2" y="963.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="818.2" y="974.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="815.2" y="947.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="818.2" y="958.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (85 samples, 2.14%)</title><rect x="815.5" y="963.0" width="25.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="818.5" y="974.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (73 samples, 1.84%)</title><rect x="816.1" y="947.0" width="21.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="819.1" y="958.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (73 samples, 1.84%)</title><rect x="816.1" y="931.0" width="21.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="819.1" y="942.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (63 samples, 1.59%)</title><rect x="816.1" y="915.0" width="18.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="819.1" y="926.0"></text>
</g>
<g>
<title>__ip_queue_xmit (60 samples, 1.51%)</title><rect x="816.7" y="899.0" width="17.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="819.7" y="910.0"></text>
</g>
<g>
<title>ip_output (59 samples, 1.49%)</title><rect x="817.0" y="883.0" width="17.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="820.0" y="894.0"></text>
</g>
<g>
<title>ip_finish_output2 (59 samples, 1.49%)</title><rect x="817.0" y="867.0" width="17.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="820.0" y="878.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.18%)</title><rect x="817.3" y="851.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="820.3" y="862.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.10%)</title><rect x="817.6" y="835.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="820.6" y="846.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.10%)</title><rect x="817.6" y="819.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="820.6" y="830.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="817.6" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="820.6" y="814.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="817.9" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="820.9" y="814.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="817.9" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="820.9" y="798.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="818.2" y="803.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="821.2" y="814.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="818.5" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="821.5" y="814.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="818.8" y="835.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="821.8" y="846.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="819.1" y="819.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="822.1" y="830.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (51 samples, 1.28%)</title><rect x="819.4" y="851.0" width="15.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.4" y="862.0"></text>
</g>
<g>
<title>do_softirq (51 samples, 1.28%)</title><rect x="819.4" y="835.0" width="15.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="822.4" y="846.0"></text>
</g>
<g>
<title>do_softirq_own_stack (47 samples, 1.18%)</title><rect x="820.5" y="819.0" width="14.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="823.5" y="830.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (47 samples, 1.18%)</title><rect x="820.5" y="803.0" width="14.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="823.5" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (47 samples, 1.18%)</title><rect x="820.5" y="787.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="823.5" y="798.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="821.4" y="771.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="824.4" y="782.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="821.7" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="824.7" y="782.0"></text>
</g>
<g>
<title>net_rx_action (42 samples, 1.06%)</title><rect x="822.0" y="771.0" width="12.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="825.0" y="782.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="822.6" y="755.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="825.6" y="766.0"></text>
</g>
<g>
<title>process_backlog (39 samples, 0.98%)</title><rect x="822.9" y="755.0" width="11.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="825.9" y="766.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (39 samples, 0.98%)</title><rect x="822.9" y="739.0" width="11.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="825.9" y="750.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.08%)</title><rect x="823.2" y="723.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="826.2" y="734.0"></text>
</g>
<g>
<title>ip_rcv (35 samples, 0.88%)</title><rect x="824.1" y="723.0" width="10.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.1" y="734.0"></text>
</g>
<g>
<title>ip_local_deliver (33 samples, 0.83%)</title><rect x="824.1" y="707.0" width="9.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.1" y="718.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 0.81%)</title><rect x="824.4" y="691.0" width="9.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.4" y="702.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 0.81%)</title><rect x="824.4" y="675.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="827.4" y="686.0"></text>
</g>
<g>
<title>tcp_v4_rcv (31 samples, 0.78%)</title><rect x="824.7" y="659.0" width="9.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="827.7" y="670.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="825.3" y="643.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="828.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="825.9" y="643.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="828.9" y="654.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="825.9" y="627.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="828.9" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="826.2" y="643.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="829.2" y="654.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="826.2" y="627.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="829.2" y="638.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="826.5" y="643.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="829.5" y="654.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="826.5" y="627.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="829.5" y="638.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="826.8" y="643.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="829.8" y="654.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (23 samples, 0.58%)</title><rect x="827.1" y="643.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="830.1" y="654.0"></text>
</g>
<g>
<title>tcp_rcv_established (23 samples, 0.58%)</title><rect x="827.1" y="627.0" width="6.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.1" y="638.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.05%)</title><rect x="827.7" y="611.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="830.7" y="622.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.05%)</title><rect x="828.3" y="611.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="831.3" y="622.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 0.40%)</title><rect x="828.9" y="611.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="831.9" y="622.0"></text>
</g>
<g>
<title>__wake_up_common_lock (14 samples, 0.35%)</title><rect x="829.5" y="595.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="832.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.33%)</title><rect x="829.8" y="579.0" width="3.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="832.8" y="590.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="833.6" y="611.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="836.6" y="622.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="833.6" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="836.6" y="606.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="833.6" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.6" y="590.0"></text>
</g>
<g>
<title>ip_rcv_core (2 samples, 0.05%)</title><rect x="833.9" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.9" y="718.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="834.5" y="899.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.5" y="910.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.10%)</title><rect x="834.8" y="915.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="837.8" y="926.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.10%)</title><rect x="834.8" y="899.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="837.8" y="910.0"></text>
</g>
<g>
<title>__mod_timer (4 samples, 0.10%)</title><rect x="834.8" y="883.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="837.8" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="835.1" y="867.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="838.1" y="878.0"></text>
</g>
<g>
<title>lock_timer_base.constprop.0 (1 samples, 0.03%)</title><rect x="835.7" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="835.7" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.7" y="862.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (5 samples, 0.13%)</title><rect x="836.0" y="915.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="839.0" y="926.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="836.9" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="839.9" y="910.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="837.2" y="899.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="840.2" y="910.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.03%)</title><rect x="837.5" y="915.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="840.5" y="926.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.15%)</title><rect x="837.8" y="947.0" width="1.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="840.8" y="958.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.10%)</title><rect x="838.4" y="931.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="841.4" y="942.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="838.4" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="841.4" y="926.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="838.4" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="841.4" y="910.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.08%)</title><rect x="838.7" y="915.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="841.7" y="926.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="839.3" y="899.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="842.3" y="910.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (2 samples, 0.05%)</title><rect x="839.6" y="947.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="842.6" y="958.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="839.6" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="842.6" y="942.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="839.6" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="842.6" y="926.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="839.9" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="842.9" y="942.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="839.9" y="915.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="842.9" y="926.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="840.2" y="947.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="843.2" y="958.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="840.5" y="947.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="843.5" y="958.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="840.5" y="931.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="843.5" y="942.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.13%)</title><rect x="840.8" y="995.0" width="1.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="843.8" y="1006.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.13%)</title><rect x="840.8" y="979.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="843.8" y="990.0"></text>
</g>
<g>
<title>__fget_files (5 samples, 0.13%)</title><rect x="840.8" y="963.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.8" y="974.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="842.2" y="1027.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="845.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.15%)</title><rect x="842.5" y="1155.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="845.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="843.4" y="1139.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="843.4" y="1123.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="846.4" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="844.0" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="847.0" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="844.0" y="1123.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="847.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$411/644013256.get (58 samples, 1.46%)</title><rect x="844.3" y="1171.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="847.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (2 samples, 0.05%)</title><rect x="844.3" y="1155.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="847.3" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$2 (56 samples, 1.41%)</title><rect x="844.9" y="1155.0" width="16.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.9" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (56 samples, 1.41%)</title><rect x="844.9" y="1139.0" width="16.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="847.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (52 samples, 1.31%)</title><rect x="845.5" y="1123.0" width="15.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.05%)</title><rect x="845.8" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="848.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.05%)</title><rect x="845.8" y="1091.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.05%)</title><rect x="845.8" y="1075.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.8" y="1086.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="846.1" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="849.1" y="1070.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="846.1" y="1043.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="849.1" y="1054.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="846.1" y="1027.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="849.1" y="1038.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="846.1" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="849.1" y="1022.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="846.1" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="849.1" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="846.1" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="849.1" y="990.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.03%)</title><rect x="846.1" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.1" y="974.0"></text>
</g>
<g>
<title>__run_timers (1 samples, 0.03%)</title><rect x="846.1" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="849.1" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="846.1" y="931.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="849.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.05%)</title><rect x="846.4" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="849.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.05%)</title><rect x="846.4" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.05%)</title><rect x="846.4" y="1075.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="846.7" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="849.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="846.7" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="846.7" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="849.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (47 samples, 1.18%)</title><rect x="847.0" y="1107.0" width="14.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="850.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.08%)</title><rect x="847.0" y="1091.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.05%)</title><rect x="847.3" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (44 samples, 1.11%)</title><rect x="847.9" y="1091.0" width="13.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (40 samples, 1.01%)</title><rect x="849.1" y="1075.0" width="11.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="852.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="855.3" y="1059.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="855.3" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (2 samples, 0.05%)</title><rect x="855.9" y="1059.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (15 samples, 0.38%)</title><rect x="856.5" y="1059.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="859.5" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.28%)</title><rect x="857.7" y="1043.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="860.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.28%)</title><rect x="857.7" y="1027.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.10%)</title><rect x="857.7" y="1011.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.18%)</title><rect x="858.9" y="1011.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.9" y="1022.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="860.7" y="995.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="863.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (2 samples, 0.05%)</title><rect x="861.0" y="1123.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="864.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="861.0" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="861.0" y="1091.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="864.0" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (1 samples, 0.03%)</title><rect x="861.3" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (123 samples, 3.10%)</title><rect x="861.6" y="1283.0" width="36.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="864.6" y="1294.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (123 samples, 3.10%)</title><rect x="861.6" y="1267.0" width="36.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.6" y="1278.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (43 samples, 1.08%)</title><rect x="862.5" y="1251.0" width="12.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="865.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (42 samples, 1.06%)</title><rect x="862.5" y="1235.0" width="12.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (41 samples, 1.03%)</title><rect x="862.8" y="1219.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="865.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (30 samples, 0.76%)</title><rect x="866.0" y="1203.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="869.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (30 samples, 0.76%)</title><rect x="866.0" y="1187.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="869.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (24 samples, 0.60%)</title><rect x="866.6" y="1171.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="869.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (23 samples, 0.58%)</title><rect x="866.9" y="1155.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="869.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (23 samples, 0.58%)</title><rect x="866.9" y="1139.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="869.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (20 samples, 0.50%)</title><rect x="867.2" y="1123.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="870.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.50%)</title><rect x="867.2" y="1107.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="870.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (19 samples, 0.48%)</title><rect x="867.2" y="1091.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="870.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (2 samples, 0.05%)</title><rect x="867.2" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.05%)</title><rect x="867.2" y="1059.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="870.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.05%)</title><rect x="867.2" y="1043.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="870.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.05%)</title><rect x="867.2" y="1027.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="867.2" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="870.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="867.8" y="1075.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="870.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="867.8" y="1059.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="870.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="867.8" y="1043.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="870.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="867.8" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="867.8" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="870.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="867.8" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="870.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="867.8" y="979.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="870.8" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="867.8" y="963.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="870.8" y="974.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="868.1" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="871.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="868.1" y="947.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="871.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="868.1" y="931.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.1" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="868.1" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="871.1" y="926.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="868.1" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="871.1" y="910.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="868.1" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="871.1" y="894.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="868.1" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.38%)</title><rect x="868.4" y="1075.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="871.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.35%)</title><rect x="868.7" y="1059.0" width="4.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="871.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.35%)</title><rect x="868.7" y="1043.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="871.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.35%)</title><rect x="868.7" y="1027.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="871.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.33%)</title><rect x="869.0" y="1011.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="872.0" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.08%)</title><rect x="869.0" y="995.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="872.0" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="869.3" y="979.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="872.3" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="869.6" y="979.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="872.6" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 0.25%)</title><rect x="869.9" y="995.0" width="3.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="872.9" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.25%)</title><rect x="869.9" y="979.0" width="3.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="872.9" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.25%)</title><rect x="869.9" y="963.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="872.9" y="974.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.23%)</title><rect x="870.2" y="947.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="873.2" y="958.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.23%)</title><rect x="870.2" y="931.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="873.2" y="942.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.23%)</title><rect x="870.2" y="915.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="873.2" y="926.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="870.5" y="899.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="873.5" y="910.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="870.5" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.5" y="894.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.18%)</title><rect x="870.8" y="899.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="873.8" y="910.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.18%)</title><rect x="870.8" y="883.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="873.8" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.15%)</title><rect x="870.8" y="867.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="873.8" y="878.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="872.6" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="875.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="872.9" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="875.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.05%)</title><rect x="873.2" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="876.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="873.2" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="873.2" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="876.2" y="1102.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="873.2" y="1075.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="876.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.10%)</title><rect x="873.7" y="1171.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.10%)</title><rect x="873.7" y="1155.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="876.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.10%)</title><rect x="873.7" y="1139.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.7" y="1150.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="874.3" y="1123.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="877.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.03%)</title><rect x="874.9" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="877.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="874.9" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="877.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="874.9" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="877.9" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="874.9" y="1187.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="877.9" y="1198.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="874.9" y="1171.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="877.9" y="1182.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="874.9" y="1155.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="877.9" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="874.9" y="1139.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.9" y="1150.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="874.9" y="1123.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="877.9" y="1134.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="874.9" y="1107.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="877.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="875.2" y="1251.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="878.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="875.5" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="878.5" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="875.5" y="1219.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="878.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (75 samples, 1.89%)</title><rect x="875.8" y="1251.0" width="22.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="878.8" y="1262.0">j..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="876.7" y="1235.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="879.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2 samples, 0.05%)</title><rect x="877.3" y="1235.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="880.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (68 samples, 1.71%)</title><rect x="877.9" y="1235.0" width="20.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="880.9" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Park (27 samples, 0.68%)</title><rect x="878.2" y="1219.0" width="8.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="881.2" y="1230.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="878.2" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="881.2" y="1214.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="878.5" y="1203.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="881.5" y="1214.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.23%)</title><rect x="878.8" y="1203.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="881.8" y="1214.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (4 samples, 0.10%)</title><rect x="880.0" y="1187.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="883.0" y="1198.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="881.2" y="1187.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="884.2" y="1198.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="881.5" y="1203.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="884.5" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="881.8" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="884.8" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="882.1" y="1203.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="885.1" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (12 samples, 0.30%)</title><rect x="882.4" y="1203.0" width="3.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="885.4" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.18%)</title><rect x="883.9" y="1187.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="886.9" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.18%)</title><rect x="883.9" y="1171.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="886.9" y="1182.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.05%)</title><rect x="884.4" y="1155.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="887.4" y="1166.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.05%)</title><rect x="884.4" y="1139.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.4" y="1150.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.03%)</title><rect x="884.7" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.7" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="885.0" y="1155.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.0" y="1166.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="885.3" y="1139.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="888.3" y="1150.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="885.3" y="1123.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="888.3" y="1134.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="885.6" y="1155.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.6" y="1166.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="885.9" y="1203.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="888.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.98%)</title><rect x="886.2" y="1219.0" width="11.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="889.2" y="1230.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.03%)</title><rect x="886.2" y="1203.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="889.2" y="1214.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (4 samples, 0.10%)</title><rect x="886.5" y="1203.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="889.5" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="887.7" y="1203.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="890.7" y="1214.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="888.0" y="1203.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="891.0" y="1214.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (32 samples, 0.81%)</title><rect x="888.3" y="1203.0" width="9.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="891.3" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.58%)</title><rect x="891.0" y="1187.0" width="6.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="894.0" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.58%)</title><rect x="891.0" y="1171.0" width="6.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="894.0" y="1182.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.08%)</title><rect x="891.3" y="1155.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="894.3" y="1166.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.08%)</title><rect x="891.3" y="1139.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="894.3" y="1150.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="891.9" y="1123.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="894.9" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.45%)</title><rect x="892.2" y="1155.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="895.2" y="1166.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.38%)</title><rect x="892.5" y="1139.0" width="4.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="895.5" y="1150.0"></text>
</g>
<g>
<title>futex_wait (14 samples, 0.35%)</title><rect x="892.8" y="1123.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="895.8" y="1134.0"></text>
</g>
<g>
<title>futex_wait_queue_me (10 samples, 0.25%)</title><rect x="892.8" y="1107.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="895.8" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="893.1" y="1091.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="896.1" y="1102.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="893.7" y="1091.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="896.7" y="1102.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.15%)</title><rect x="894.0" y="1091.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.0" y="1102.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.15%)</title><rect x="894.0" y="1075.0" width="1.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="897.0" y="1086.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.15%)</title><rect x="894.0" y="1059.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.0" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (5 samples, 0.13%)</title><rect x="894.3" y="1043.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="897.3" y="1054.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.08%)</title><rect x="895.7" y="1107.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="898.7" y="1118.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="896.0" y="1091.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="899.0" y="1102.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.03%)</title><rect x="896.6" y="1107.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="899.6" y="1118.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.03%)</title><rect x="896.6" y="1091.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="899.6" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="896.6" y="1075.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="899.6" y="1086.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.05%)</title><rect x="896.9" y="1139.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="899.9" y="1150.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="897.2" y="1123.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="900.2" y="1134.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="897.2" y="1107.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="900.2" y="1118.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="897.5" y="1155.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="900.5" y="1166.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="897.8" y="1219.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (379 samples, 9.55%)</title><rect x="898.1" y="1283.0" width="112.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="901.1" y="1294.0">jdk/internal/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="901.4" y="1267.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="904.4" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="901.4" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="904.4" y="1262.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.05%)</title><rect x="901.7" y="1267.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="904.7" y="1278.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.05%)</title><rect x="901.7" y="1251.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.7" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (6 samples, 0.15%)</title><rect x="902.3" y="1267.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.3" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.13%)</title><rect x="902.6" y="1251.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="905.6" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.08%)</title><rect x="903.2" y="1235.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.2" y="1246.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.08%)</title><rect x="903.2" y="1219.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.2" y="1230.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.05%)</title><rect x="903.5" y="1203.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="906.5" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (12 samples, 0.30%)</title><rect x="904.1" y="1267.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.1" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (117 samples, 2.95%)</title><rect x="907.6" y="1267.0" width="34.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="910.6" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.05%)</title><rect x="908.5" y="1251.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="911.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$365/1858085801.accept (109 samples, 2.75%)</title><rect x="909.1" y="1251.0" width="32.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="912.1" y="1262.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (108 samples, 2.72%)</title><rect x="909.4" y="1235.0" width="32.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="912.4" y="1246.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (108 samples, 2.72%)</title><rect x="909.4" y="1219.0" width="32.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.4" y="1230.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (108 samples, 2.72%)</title><rect x="909.4" y="1203.0" width="32.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="912.4" y="1214.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (108 samples, 2.72%)</title><rect x="909.4" y="1187.0" width="32.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="912.4" y="1198.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.05%)</title><rect x="909.4" y="1171.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.4" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.05%)</title><rect x="909.4" y="1155.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="912.4" y="1166.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="909.4" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="912.4" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="909.4" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="912.4" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.selector (1 samples, 0.03%)</title><rect x="909.4" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="912.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="909.7" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="912.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="909.7" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="912.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="909.7" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="912.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="909.7" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="912.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (106 samples, 2.67%)</title><rect x="910.0" y="1171.0" width="31.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="913.0" y="1182.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (106 samples, 2.67%)</title><rect x="910.0" y="1155.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.0" y="1166.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (106 samples, 2.67%)</title><rect x="910.0" y="1139.0" width="31.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.0" y="1150.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (106 samples, 2.67%)</title><rect x="910.0" y="1123.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.0" y="1134.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (105 samples, 2.64%)</title><rect x="910.3" y="1107.0" width="31.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.3" y="1118.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (101 samples, 2.54%)</title><rect x="910.6" y="1091.0" width="30.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="913.6" y="1102.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (101 samples, 2.54%)</title><rect x="910.6" y="1075.0" width="30.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="913.6" y="1086.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.23%)</title><rect x="910.6" y="1059.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (9 samples, 0.23%)</title><rect x="910.6" y="1043.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="913.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (9 samples, 0.23%)</title><rect x="910.6" y="1027.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.23%)</title><rect x="910.6" y="1011.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.23%)</title><rect x="910.6" y="995.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.23%)</title><rect x="910.6" y="979.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.23%)</title><rect x="910.6" y="963.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="913.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (6 samples, 0.15%)</title><rect x="910.6" y="947.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.08%)</title><rect x="912.4" y="947.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.08%)</title><rect x="912.4" y="931.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="912.4" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="915.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="912.4" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="912.4" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="912.4" y="867.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="915.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="912.4" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="915.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="912.4" y="835.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="915.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="912.4" y="819.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="915.4" y="830.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="912.4" y="803.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="915.4" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="912.4" y="787.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="915.4" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="912.4" y="771.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="915.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="912.7" y="915.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="912.7" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="912.7" y="883.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="912.7" y="867.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="912.7" y="851.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="915.7" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="912.7" y="835.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="915.7" y="846.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="912.7" y="819.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="915.7" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="913.0" y="835.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="916.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="913.0" y="819.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="913.0" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="913.0" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.0" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="913.0" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="916.0" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="913.0" y="755.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.0" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="913.0" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="916.0" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="913.0" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.0" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="913.0" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="913.3" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.03%)</title><rect x="913.3" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.05%)</title><rect x="913.6" y="1059.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (1 samples, 0.03%)</title><rect x="913.9" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (1 samples, 0.03%)</title><rect x="913.9" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (1 samples, 0.03%)</title><rect x="913.9" y="1011.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="913.9" y="995.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.9" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="913.9" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="916.9" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="913.9" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="913.9" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (89 samples, 2.24%)</title><rect x="914.2" y="1059.0" width="26.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.2" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (1 samples, 0.03%)</title><rect x="915.7" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.slice (1 samples, 0.03%)</title><rect x="915.7" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="918.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="915.7" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="915.7" y="995.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.7" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="915.7" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (1 samples, 0.03%)</title><rect x="916.0" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="919.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$241/1017891750.get (1 samples, 0.03%)</title><rect x="916.0" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="919.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (1 samples, 0.03%)</title><rect x="916.0" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="916.0" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="919.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="916.0" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="919.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="916.0" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.0" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (82 samples, 2.07%)</title><rect x="916.3" y="1043.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.3" y="1054.0">s..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="916.3" y="1027.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="919.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="916.3" y="1011.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="916.3" y="995.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="919.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="916.3" y="979.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="916.3" y="963.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="916.3" y="947.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="919.3" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="916.3" y="931.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="919.3" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (81 samples, 2.04%)</title><rect x="916.5" y="1027.0" width="24.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="919.5" y="1038.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (81 samples, 2.04%)</title><rect x="916.5" y="1011.0" width="24.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="919.5" y="1022.0">s..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (76 samples, 1.91%)</title><rect x="916.5" y="995.0" width="22.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.5" y="1006.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (76 samples, 1.91%)</title><rect x="916.5" y="979.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="919.5" y="990.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (76 samples, 1.91%)</title><rect x="916.5" y="963.0" width="22.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="919.5" y="974.0">s..</text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="916.8" y="947.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="919.8" y="958.0"></text>
</g>
<g>
<title>__read (73 samples, 1.84%)</title><rect x="917.1" y="947.0" width="21.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="920.1" y="958.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (69 samples, 1.74%)</title><rect x="918.3" y="931.0" width="20.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.3" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (69 samples, 1.74%)</title><rect x="918.3" y="915.0" width="20.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="921.3" y="926.0"></text>
</g>
<g>
<title>ksys_read (67 samples, 1.69%)</title><rect x="918.6" y="899.0" width="19.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.6" y="910.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="918.6" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.6" y="894.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="918.6" y="867.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="921.6" y="878.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.03%)</title><rect x="918.6" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="921.6" y="862.0"></text>
</g>
<g>
<title>vfs_read (66 samples, 1.66%)</title><rect x="918.9" y="883.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="921.9" y="894.0"></text>
</g>
<g>
<title>new_sync_read (66 samples, 1.66%)</title><rect x="918.9" y="867.0" width="19.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="921.9" y="878.0"></text>
</g>
<g>
<title>sock_read_iter (62 samples, 1.56%)</title><rect x="920.1" y="851.0" width="18.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="923.1" y="862.0"></text>
</g>
<g>
<title>inet6_recvmsg (61 samples, 1.54%)</title><rect x="920.1" y="835.0" width="18.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="923.1" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (60 samples, 1.51%)</title><rect x="920.4" y="819.0" width="17.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="923.4" y="830.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (3 samples, 0.08%)</title><rect x="922.5" y="803.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="925.5" y="814.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.08%)</title><rect x="922.5" y="787.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="925.5" y="798.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="922.5" y="771.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="925.5" y="782.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="923.1" y="771.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="926.1" y="782.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="923.1" y="755.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="926.1" y="766.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (43 samples, 1.08%)</title><rect x="923.4" y="803.0" width="12.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="926.4" y="814.0"></text>
</g>
<g>
<title>__ip_queue_xmit (41 samples, 1.03%)</title><rect x="924.0" y="787.0" width="12.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="927.0" y="798.0"></text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="924.0" y="771.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.0" y="782.0"></text>
</g>
<g>
<title>ip_output (40 samples, 1.01%)</title><rect x="924.3" y="771.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.3" y="782.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="924.3" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="927.3" y="766.0"></text>
</g>
<g>
<title>ip_finish_output2 (39 samples, 0.98%)</title><rect x="924.6" y="755.0" width="11.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.6" y="766.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.20%)</title><rect x="924.6" y="739.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="927.6" y="750.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.15%)</title><rect x="924.9" y="723.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.9" y="734.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.15%)</title><rect x="924.9" y="707.0" width="1.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="927.9" y="718.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="924.9" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="927.9" y="702.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.10%)</title><rect x="925.2" y="691.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.2" y="702.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.10%)</title><rect x="925.2" y="675.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.2" y="686.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="925.8" y="659.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.8" y="670.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="926.4" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="929.4" y="702.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="926.7" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="929.7" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (31 samples, 0.78%)</title><rect x="927.0" y="739.0" width="9.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="930.0" y="750.0"></text>
</g>
<g>
<title>do_softirq (31 samples, 0.78%)</title><rect x="927.0" y="723.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.0" y="734.0"></text>
</g>
<g>
<title>do_softirq_own_stack (31 samples, 0.78%)</title><rect x="927.0" y="707.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.0" y="718.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (31 samples, 0.78%)</title><rect x="927.0" y="691.0" width="9.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="930.0" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (31 samples, 0.78%)</title><rect x="927.0" y="675.0" width="9.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.0" y="686.0"></text>
</g>
<g>
<title>net_rx_action (29 samples, 0.73%)</title><rect x="927.5" y="659.0" width="8.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="930.5" y="670.0"></text>
</g>
<g>
<title>process_backlog (29 samples, 0.73%)</title><rect x="927.5" y="643.0" width="8.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="930.5" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (28 samples, 0.71%)</title><rect x="927.8" y="627.0" width="8.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="930.8" y="638.0"></text>
</g>
<g>
<title>ip_rcv (28 samples, 0.71%)</title><rect x="927.8" y="611.0" width="8.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="930.8" y="622.0"></text>
</g>
<g>
<title>ip_local_deliver (28 samples, 0.71%)</title><rect x="927.8" y="595.0" width="8.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="930.8" y="606.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (27 samples, 0.68%)</title><rect x="928.1" y="579.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.1" y="590.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (27 samples, 0.68%)</title><rect x="928.1" y="563.0" width="8.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="931.1" y="574.0"></text>
</g>
<g>
<title>tcp_v4_rcv (27 samples, 0.68%)</title><rect x="928.1" y="547.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.1" y="558.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.10%)</title><rect x="929.0" y="531.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="932.0" y="542.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="929.9" y="515.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.9" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 0.45%)</title><rect x="930.2" y="531.0" width="5.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="933.2" y="542.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="930.2" y="515.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.2" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (17 samples, 0.43%)</title><rect x="930.5" y="515.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="933.5" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="930.5" y="499.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="933.5" y="510.0"></text>
</g>
<g>
<title>cache_from_obj (1 samples, 0.03%)</title><rect x="930.5" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="933.5" y="494.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.38%)</title><rect x="930.8" y="499.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="933.8" y="510.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="932.0" y="483.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="935.0" y="494.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="932.0" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.0" y="478.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="932.3" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.3" y="462.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="932.6" y="483.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.6" y="494.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="932.9" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="935.9" y="494.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.08%)</title><rect x="933.2" y="483.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.2" y="494.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="933.2" y="467.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="936.2" y="478.0"></text>
</g>
<g>
<title>cache_from_obj (1 samples, 0.03%)</title><rect x="933.8" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.8" y="478.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (2 samples, 0.05%)</title><rect x="934.1" y="483.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="937.1" y="494.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="934.7" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="937.7" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="935.0" y="483.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="938.0" y="494.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="935.3" y="499.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.3" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="935.3" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="938.3" y="494.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="935.6" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="938.6" y="542.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="935.9" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="938.9" y="542.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="936.2" y="803.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="939.2" y="814.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.03%)</title><rect x="936.2" y="787.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="939.2" y="798.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="936.5" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="939.5" y="798.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.10%)</title><rect x="936.8" y="803.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.8" y="814.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.10%)</title><rect x="936.8" y="787.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="939.8" y="798.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="937.4" y="771.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.4" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="937.7" y="755.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.7" y="766.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="937.9" y="803.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.9" y="814.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="937.9" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.9" y="798.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="937.9" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="940.9" y="782.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.03%)</title><rect x="937.9" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.9" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.03%)</title><rect x="938.2" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="941.2" y="846.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="938.5" y="899.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="941.5" y="910.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="938.5" y="883.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="941.5" y="894.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.03%)</title><rect x="938.8" y="947.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="941.8" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.13%)</title><rect x="939.1" y="995.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.08%)</title><rect x="939.1" y="979.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.1" y="990.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.03%)</title><rect x="939.4" y="963.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.4" y="974.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="939.7" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.05%)</title><rect x="940.0" y="979.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.0" y="990.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.05%)</title><rect x="940.0" y="963.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="943.0" y="974.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.05%)</title><rect x="940.0" y="947.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="943.0" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (2 samples, 0.05%)</title><rect x="940.0" y="931.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="943.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (3 samples, 0.08%)</title><rect x="940.6" y="1091.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="943.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$368/1161710876.accept (3 samples, 0.08%)</title><rect x="941.5" y="1251.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.08%)</title><rect x="941.5" y="1235.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="944.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$364/1313401388.run (3 samples, 0.08%)</title><rect x="941.5" y="1219.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.08%)</title><rect x="941.5" y="1203.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.08%)</title><rect x="941.5" y="1187.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.5" y="1198.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.03%)</title><rect x="942.1" y="1171.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="945.1" y="1182.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="942.1" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="945.1" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (2 samples, 0.05%)</title><rect x="942.4" y="1267.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="945.4" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="943.0" y="1267.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="946.0" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (4 samples, 0.10%)</title><rect x="943.3" y="1267.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.3" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.10%)</title><rect x="943.3" y="1251.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.3" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.10%)</title><rect x="943.3" y="1235.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.3" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.10%)</title><rect x="943.3" y="1219.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.3" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.10%)</title><rect x="943.3" y="1203.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.3" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.10%)</title><rect x="943.3" y="1187.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.3" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (3 samples, 0.08%)</title><rect x="943.3" y="1171.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.3" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.05%)</title><rect x="943.6" y="1155.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="946.6" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.03%)</title><rect x="943.6" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="946.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.interestOps (1 samples, 0.03%)</title><rect x="943.6" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="946.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$363/1544661142.accept (1 samples, 0.03%)</title><rect x="943.9" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.9" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (1 samples, 0.03%)</title><rect x="944.2" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.2" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.03%)</title><rect x="944.2" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.2" y="1166.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.03%)</title><rect x="944.2" y="1139.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="947.2" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (1 samples, 0.03%)</title><rect x="944.2" y="1123.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (50 samples, 1.26%)</title><rect x="944.5" y="1267.0" width="14.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$263/2089736233.run (37 samples, 0.93%)</title><rect x="944.5" y="1251.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (37 samples, 0.93%)</title><rect x="944.5" y="1235.0" width="11.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.88%)</title><rect x="945.1" y="1219.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.88%)</title><rect x="945.1" y="1203.0" width="10.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="948.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (2 samples, 0.05%)</title><rect x="945.1" y="1187.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (33 samples, 0.83%)</title><rect x="945.7" y="1187.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="948.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (33 samples, 0.83%)</title><rect x="945.7" y="1171.0" width="9.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="948.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (32 samples, 0.81%)</title><rect x="946.0" y="1155.0" width="9.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="949.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (32 samples, 0.81%)</title><rect x="946.0" y="1139.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="949.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.05%)</title><rect x="946.3" y="1123.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="949.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.05%)</title><rect x="946.3" y="1107.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (2 samples, 0.05%)</title><rect x="946.3" y="1091.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="949.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (2 samples, 0.05%)</title><rect x="946.3" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="949.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.05%)</title><rect x="946.3" y="1059.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="949.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.05%)</title><rect x="946.3" y="1043.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="946.3" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="949.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.03%)</title><rect x="946.3" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="949.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="946.6" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="949.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="946.6" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="949.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (29 samples, 0.73%)</title><rect x="946.9" y="1123.0" width="8.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="949.9" y="1134.0"></text>
</g>
<g>
<title>asm_sysvec_call_function_single (1 samples, 0.03%)</title><rect x="946.9" y="1107.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="949.9" y="1118.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="946.9" y="1091.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="949.9" y="1102.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="946.9" y="1075.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (8 samples, 0.20%)</title><rect x="947.2" y="1107.0" width="2.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (8 samples, 0.20%)</title><rect x="947.2" y="1091.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (4 samples, 0.10%)</title><rect x="947.2" y="1075.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="950.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (4 samples, 0.10%)</title><rect x="948.4" y="1075.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="951.4" y="1086.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="949.2" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="952.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (20 samples, 0.50%)</title><rect x="949.5" y="1107.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (14 samples, 0.35%)</title><rect x="949.8" y="1091.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="952.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.35%)</title><rect x="949.8" y="1075.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="952.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (14 samples, 0.35%)</title><rect x="949.8" y="1059.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="952.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (3 samples, 0.08%)</title><rect x="950.4" y="1043.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/201719260.invoke (3 samples, 0.08%)</title><rect x="950.4" y="1027.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="953.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.08%)</title><rect x="950.4" y="1011.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (3 samples, 0.08%)</title><rect x="950.4" y="995.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="953.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (3 samples, 0.08%)</title><rect x="950.4" y="979.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.4" y="990.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="950.4" y="963.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="953.4" y="974.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="950.7" y="963.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="953.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (9 samples, 0.23%)</title><rect x="951.3" y="1043.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (9 samples, 0.23%)</title><rect x="951.3" y="1027.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="954.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (8 samples, 0.20%)</title><rect x="951.6" y="1011.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="954.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (6 samples, 0.15%)</title><rect x="952.2" y="995.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="955.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.05%)</title><rect x="952.2" y="979.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.2" y="990.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (1 samples, 0.03%)</title><rect x="952.5" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.08%)</title><rect x="952.8" y="979.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="955.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.08%)</title><rect x="952.8" y="963.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.08%)</title><rect x="952.8" y="947.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.08%)</title><rect x="952.8" y="931.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="955.8" y="942.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.03%)</title><rect x="953.4" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="956.4" y="926.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (1 samples, 0.03%)</title><rect x="953.4" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="956.4" y="910.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (1 samples, 0.03%)</title><rect x="953.4" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="956.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.channel (1 samples, 0.03%)</title><rect x="953.7" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (5 samples, 0.13%)</title><rect x="954.0" y="1091.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.08%)</title><rect x="954.6" y="1075.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.08%)</title><rect x="954.6" y="1059.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="957.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.08%)</title><rect x="954.6" y="1043.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="957.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.03%)</title><rect x="954.9" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="957.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="954.9" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="954.9" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="954.9" y="979.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="957.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="954.9" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="957.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (1 samples, 0.03%)</title><rect x="955.2" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="958.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$277/266906696.run (13 samples, 0.33%)</title><rect x="955.5" y="1251.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="958.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (13 samples, 0.33%)</title><rect x="955.5" y="1235.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="958.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.25%)</title><rect x="955.8" y="1219.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="958.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.23%)</title><rect x="955.8" y="1203.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="958.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.13%)</title><rect x="955.8" y="1187.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="958.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.10%)</title><rect x="957.3" y="1187.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="960.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.08%)</title><rect x="957.3" y="1171.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="960.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="957.3" y="1155.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="957.3" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="957.3" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="960.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="957.3" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="957.3" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="957.3" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.3" y="1059.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="960.3" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="957.3" y="1043.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="960.3" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="957.3" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="960.3" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="957.3" y="1011.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="960.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.05%)</title><rect x="957.6" y="1155.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="957.6" y="1139.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.05%)</title><rect x="957.6" y="1123.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.05%)</title><rect x="957.6" y="1107.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="960.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.05%)</title><rect x="957.6" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.6" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.05%)</title><rect x="957.6" y="1075.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="960.6" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="957.6" y="1059.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="960.6" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="957.6" y="1043.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="960.6" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.05%)</title><rect x="957.6" y="1027.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="960.6" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="957.6" y="1011.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="960.6" y="1022.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.05%)</title><rect x="957.6" y="995.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="960.6" y="1006.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.05%)</title><rect x="957.6" y="979.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="960.6" y="990.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.05%)</title><rect x="957.6" y="963.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="960.6" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="957.6" y="947.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="960.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="958.2" y="1171.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="961.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="958.2" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="958.2" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.03%)</title><rect x="958.2" y="1123.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="961.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.03%)</title><rect x="958.2" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="961.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.03%)</title><rect x="958.5" y="1203.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.05%)</title><rect x="958.8" y="1219.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="961.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.03%)</title><rect x="959.1" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="962.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (1 samples, 0.03%)</title><rect x="959.1" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="962.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.getAndSet (1 samples, 0.03%)</title><rect x="959.1" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="962.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (33 samples, 0.83%)</title><rect x="959.4" y="1267.0" width="9.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="962.4" y="1278.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.05%)</title><rect x="959.4" y="1251.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="962.4" y="1262.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.05%)</title><rect x="959.4" y="1235.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="962.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.05%)</title><rect x="959.4" y="1219.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.4" y="1230.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.03%)</title><rect x="959.6" y="1203.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="962.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (31 samples, 0.78%)</title><rect x="959.9" y="1251.0" width="9.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="962.9" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (23 samples, 0.58%)</title><rect x="961.7" y="1235.0" width="6.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="964.7" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (23 samples, 0.58%)</title><rect x="961.7" y="1219.0" width="6.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="964.7" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (16 samples, 0.40%)</title><rect x="961.7" y="1203.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="964.7" y="1214.0"></text>
</g>
<g>
<title>SpinPause (7 samples, 0.18%)</title><rect x="966.5" y="1203.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="969.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="968.6" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="971.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="968.6" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$452/56536574.get$Lambda (1 samples, 0.03%)</title><rect x="968.6" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (1 samples, 0.03%)</title><rect x="968.9" y="1235.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="971.9" y="1246.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.03%)</title><rect x="968.9" y="1219.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.9" y="1230.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.03%)</title><rect x="968.9" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="971.9" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="968.9" y="1187.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="971.9" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.0] (1 samples, 0.03%)</title><rect x="968.9" y="1171.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="971.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (1 samples, 0.03%)</title><rect x="969.2" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (1 samples, 0.03%)</title><rect x="969.5" y="1267.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.5" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="969.5" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.5" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="969.5" y="1235.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="972.5" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="969.5" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (14 samples, 0.35%)</title><rect x="969.8" y="1267.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.8" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="970.1" y="1251.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="973.1" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="970.1" y="1235.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="973.1" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.05%)</title><rect x="970.1" y="1219.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="973.1" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="970.6" y="1235.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="973.6" y="1246.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.13%)</title><rect x="970.9" y="1251.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="973.9" y="1262.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.13%)</title><rect x="970.9" y="1235.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (5 samples, 0.13%)</title><rect x="970.9" y="1219.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.9" y="1230.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (5 samples, 0.13%)</title><rect x="970.9" y="1203.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="973.9" y="1214.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (4 samples, 0.10%)</title><rect x="971.2" y="1187.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="974.2" y="1198.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="972.1" y="1171.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="975.1" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="972.4" y="1251.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.4" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.05%)</title><rect x="972.4" y="1235.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="975.4" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (3 samples, 0.08%)</title><rect x="973.0" y="1251.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="976.0" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (3 samples, 0.08%)</title><rect x="973.0" y="1235.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="976.0" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (3 samples, 0.08%)</title><rect x="973.0" y="1219.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.0" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.&lt;init&gt; (3 samples, 0.08%)</title><rect x="973.0" y="1203.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="976.0" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (3 samples, 0.08%)</title><rect x="973.0" y="1187.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="976.0" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="973.6" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="976.6" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (101 samples, 2.54%)</title><rect x="973.9" y="1267.0" width="30.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="976.9" y="1278.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (101 samples, 2.54%)</title><rect x="973.9" y="1251.0" width="30.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="976.9" y="1262.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (100 samples, 2.52%)</title><rect x="973.9" y="1235.0" width="29.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="976.9" y="1246.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (52 samples, 1.31%)</title><rect x="974.2" y="1219.0" width="15.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="977.2" y="1230.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="974.2" y="1203.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="977.2" y="1214.0"></text>
</g>
<g>
<title>epoll_wait (51 samples, 1.28%)</title><rect x="974.5" y="1203.0" width="15.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="977.5" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 1.06%)</title><rect x="977.2" y="1187.0" width="12.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="980.2" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 1.06%)</title><rect x="977.2" y="1171.0" width="12.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="980.2" y="1182.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (5 samples, 0.13%)</title><rect x="978.4" y="1155.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="981.4" y="1166.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.05%)</title><rect x="979.3" y="1139.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="982.3" y="1150.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.03%)</title><rect x="979.6" y="1123.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="982.6" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (33 samples, 0.83%)</title><rect x="979.9" y="1155.0" width="9.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="982.9" y="1166.0"></text>
</g>
<g>
<title>do_epoll_wait (33 samples, 0.83%)</title><rect x="979.9" y="1139.0" width="9.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="982.9" y="1150.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="981.0" y="1123.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="984.0" y="1134.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="981.3" y="1123.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="984.3" y="1134.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.05%)</title><rect x="981.3" y="1107.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="984.3" y="1118.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.03%)</title><rect x="981.9" y="1123.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="984.9" y="1134.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (21 samples, 0.53%)</title><rect x="982.2" y="1123.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="985.2" y="1134.0"></text>
</g>
<g>
<title>ep_send_events_proc (20 samples, 0.50%)</title><rect x="982.5" y="1107.0" width="6.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="985.5" y="1118.0"></text>
</g>
<g>
<title>ep_item_poll (18 samples, 0.45%)</title><rect x="983.1" y="1091.0" width="5.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="986.1" y="1102.0"></text>
</g>
<g>
<title>pipe_poll (5 samples, 0.13%)</title><rect x="983.4" y="1075.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="986.4" y="1086.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.30%)</title><rect x="984.9" y="1075.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="987.9" y="1086.0"></text>
</g>
<g>
<title>tcp_poll (5 samples, 0.13%)</title><rect x="987.0" y="1059.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="990.0" y="1070.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.08%)</title><rect x="987.6" y="1043.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="990.6" y="1054.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="988.5" y="1123.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="991.5" y="1134.0"></text>
</g>
<g>
<title>ktime_get_ts64 (1 samples, 0.03%)</title><rect x="989.1" y="1123.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="992.1" y="1134.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.03%)</title><rect x="989.4" y="1123.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.4" y="1134.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="989.4" y="1107.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="992.4" y="1118.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="989.4" y="1091.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="992.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (40 samples, 1.01%)</title><rect x="989.7" y="1219.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="992.7" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="989.7" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.7" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="989.7" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (1 samples, 0.03%)</title><rect x="989.7" y="1171.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="992.7" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (29 samples, 0.73%)</title><rect x="990.0" y="1203.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="993.0" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="990.0" y="1187.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="993.0" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="990.0" y="1171.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="993.0" y="1182.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="990.0" y="1155.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="993.0" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (28 samples, 0.71%)</title><rect x="990.3" y="1187.0" width="8.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="993.3" y="1198.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="990.6" y="1171.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="993.6" y="1182.0"></text>
</g>
<g>
<title>__read (26 samples, 0.65%)</title><rect x="990.9" y="1171.0" width="7.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="993.9" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.58%)</title><rect x="991.7" y="1155.0" width="6.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="994.7" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.58%)</title><rect x="991.7" y="1139.0" width="6.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.7" y="1150.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="992.0" y="1123.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="995.0" y="1134.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="992.0" y="1107.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="995.0" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_read (1 samples, 0.03%)</title><rect x="992.3" y="1123.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.3" y="1134.0"></text>
</g>
<g>
<title>ksys_read (20 samples, 0.50%)</title><rect x="992.6" y="1123.0" width="6.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="995.6" y="1134.0"></text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.13%)</title><rect x="992.6" y="1107.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.6" y="1118.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.10%)</title><rect x="992.9" y="1091.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="995.9" y="1102.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.05%)</title><rect x="993.5" y="1075.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="996.5" y="1086.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="993.8" y="1059.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="996.8" y="1070.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.38%)</title><rect x="994.1" y="1107.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="997.1" y="1118.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.03%)</title><rect x="994.1" y="1091.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="997.1" y="1102.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.03%)</title><rect x="994.4" y="1091.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="997.4" y="1102.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.30%)</title><rect x="994.7" y="1091.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="997.7" y="1102.0"></text>
</g>
<g>
<title>pipe_read (10 samples, 0.25%)</title><rect x="995.3" y="1075.0" width="3.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="998.3" y="1086.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.05%)</title><rect x="995.6" y="1059.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="998.6" y="1070.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.08%)</title><rect x="996.2" y="1059.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.2" y="1070.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.08%)</title><rect x="996.2" y="1043.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="999.2" y="1054.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="997.1" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1000.1" y="1070.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.05%)</title><rect x="997.7" y="1059.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.7" y="1070.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.05%)</title><rect x="997.7" y="1043.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1000.7" y="1054.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.03%)</title><rect x="998.3" y="1091.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1001.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (10 samples, 0.25%)</title><rect x="998.6" y="1203.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1001.6" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="1000.4" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1003.4" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="1000.4" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.4" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="1000.4" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.4" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="1000.7" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1003.7" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="1000.7" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1003.7" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1000.7" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.7" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.05%)</title><rect x="1001.0" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.0" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.05%)</title><rect x="1001.0" y="1171.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1004.0" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (2 samples, 0.05%)</title><rect x="1001.0" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1004.0" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.03%)</title><rect x="1001.6" y="1219.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1004.6" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (2 samples, 0.05%)</title><rect x="1001.9" y="1219.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.9" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.03%)</title><rect x="1001.9" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1004.9" y="1214.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1001.9" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1004.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="1001.9" y="1171.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1004.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="1001.9" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1004.9" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.03%)</title><rect x="1002.2" y="1203.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1005.2" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (1 samples, 0.03%)</title><rect x="1002.4" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1005.4" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (1 samples, 0.03%)</title><rect x="1002.4" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1005.4" y="1214.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.03%)</title><rect x="1002.4" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1005.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.03%)</title><rect x="1002.4" y="1171.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1005.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.03%)</title><rect x="1002.4" y="1155.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1005.4" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (3 samples, 0.08%)</title><rect x="1002.7" y="1219.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.7" y="1230.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (1 samples, 0.03%)</title><rect x="1003.0" y="1203.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1006.0" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="1003.3" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1006.3" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="1003.3" y="1187.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1006.3" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (1 samples, 0.03%)</title><rect x="1003.3" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1006.3" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (1 samples, 0.03%)</title><rect x="1003.6" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1006.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (15 samples, 0.38%)</title><rect x="1003.9" y="1267.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1006.9" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (15 samples, 0.38%)</title><rect x="1003.9" y="1251.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.9" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (15 samples, 0.38%)</title><rect x="1003.9" y="1235.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1006.9" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (7 samples, 0.18%)</title><rect x="1004.2" y="1219.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1007.2" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.18%)</title><rect x="1004.2" y="1203.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1007.2" y="1214.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.13%)</title><rect x="1004.8" y="1187.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1007.8" y="1198.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.13%)</title><rect x="1004.8" y="1171.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.8" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 0.13%)</title><rect x="1004.8" y="1155.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1007.8" y="1166.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 0.13%)</title><rect x="1004.8" y="1139.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1007.8" y="1150.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="1004.8" y="1123.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1007.8" y="1134.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.03%)</title><rect x="1004.8" y="1107.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1007.8" y="1118.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.03%)</title><rect x="1005.1" y="1123.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1008.1" y="1134.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (3 samples, 0.08%)</title><rect x="1005.4" y="1123.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1008.4" y="1134.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.05%)</title><rect x="1005.7" y="1107.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1008.7" y="1118.0"></text>
</g>
<g>
<title>ep_item_poll (2 samples, 0.05%)</title><rect x="1005.7" y="1091.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1008.7" y="1102.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.05%)</title><rect x="1005.7" y="1075.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1008.7" y="1086.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.05%)</title><rect x="1005.7" y="1059.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1008.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (7 samples, 0.18%)</title><rect x="1006.3" y="1219.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1009.3" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (3 samples, 0.08%)</title><rect x="1006.3" y="1203.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.3" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (3 samples, 0.08%)</title><rect x="1006.3" y="1187.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.3" y="1198.0"></text>
</g>
<g>
<title>__read (3 samples, 0.08%)</title><rect x="1006.3" y="1171.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1009.3" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1006.9" y="1155.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1009.9" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1006.9" y="1139.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1009.9" y="1150.0"></text>
</g>
<g>
<title>ksys_read (1 samples, 0.03%)</title><rect x="1006.9" y="1123.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1009.9" y="1134.0"></text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.03%)</title><rect x="1006.9" y="1107.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1009.9" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (4 samples, 0.10%)</title><rect x="1007.2" y="1203.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.2" y="1214.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (1 samples, 0.03%)</title><rect x="1007.8" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1010.8" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (1 samples, 0.03%)</title><rect x="1007.8" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1010.8" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="1007.8" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.8" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (1 samples, 0.03%)</title><rect x="1008.1" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1011.1" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (6 samples, 0.15%)</title><rect x="1008.4" y="1267.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1011.4" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (6 samples, 0.15%)</title><rect x="1008.4" y="1251.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.4" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (6 samples, 0.15%)</title><rect x="1008.4" y="1235.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.4" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (2 samples, 0.05%)</title><rect x="1010.2" y="1267.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.2" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.05%)</title><rect x="1010.2" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1013.2" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="1010.2" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.2" y="1246.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1010.2" y="1219.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.2" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1010.2" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1013.2" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.03%)</title><rect x="1010.5" y="1235.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1013.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (445 samples, 11.21%)</title><rect x="1010.8" y="1283.0" width="132.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1013.8" y="1294.0">one/nio/server/S..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1012.0" y="1267.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1015.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1012.0" y="1251.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1015.0" y="1262.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1012.0" y="1235.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1015.0" y="1246.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1012.6" y="1267.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1015.6" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.13%)</title><rect x="1012.9" y="1267.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.9" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (5 samples, 0.13%)</title><rect x="1012.9" y="1251.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1015.9" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (107 samples, 2.70%)</title><rect x="1014.3" y="1267.0" width="31.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.3" y="1278.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (3 samples, 0.08%)</title><rect x="1014.6" y="1251.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.15%)</title><rect x="1015.5" y="1251.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1018.5" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (6 samples, 0.15%)</title><rect x="1015.5" y="1235.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.13%)</title><rect x="1015.8" y="1219.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1018.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (97 samples, 2.44%)</title><rect x="1017.3" y="1251.0" width="28.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1020.3" y="1262.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.10%)</title><rect x="1020.9" y="1235.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1023.9" y="1246.0"></text>
</g>
<g>
<title>__clock_gettime (3 samples, 0.08%)</title><rect x="1022.1" y="1235.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1025.1" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="1022.4" y="1219.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1025.4" y="1230.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.05%)</title><rect x="1023.0" y="1235.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1026.0" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="1023.6" y="1235.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1026.6" y="1246.0"></text>
</g>
<g>
<title>epoll_wait (74 samples, 1.86%)</title><rect x="1024.1" y="1235.0" width="22.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1027.1" y="1246.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 1.51%)</title><rect x="1028.3" y="1219.0" width="17.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1031.3" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 1.51%)</title><rect x="1028.3" y="1203.0" width="17.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1031.3" y="1214.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="1028.9" y="1187.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1031.9" y="1198.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="1028.9" y="1171.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1031.9" y="1182.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (56 samples, 1.41%)</title><rect x="1029.2" y="1187.0" width="16.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1032.2" y="1198.0"></text>
</g>
<g>
<title>do_epoll_wait (55 samples, 1.39%)</title><rect x="1029.5" y="1171.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1032.5" y="1182.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1031.3" y="1155.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1034.3" y="1166.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.03%)</title><rect x="1031.6" y="1139.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1034.6" y="1150.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.03%)</title><rect x="1031.9" y="1155.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1034.9" y="1166.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (31 samples, 0.78%)</title><rect x="1032.2" y="1155.0" width="9.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1035.2" y="1166.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (3 samples, 0.08%)</title><rect x="1032.5" y="1139.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1035.5" y="1150.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="1033.1" y="1123.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1036.1" y="1134.0"></text>
</g>
<g>
<title>ep_send_events_proc (25 samples, 0.63%)</title><rect x="1033.4" y="1139.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1036.4" y="1150.0"></text>
</g>
<g>
<title>ep_item_poll (16 samples, 0.40%)</title><rect x="1036.0" y="1123.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1039.0" y="1134.0"></text>
</g>
<g>
<title>sock_poll (12 samples, 0.30%)</title><rect x="1037.2" y="1107.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1040.2" y="1118.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.15%)</title><rect x="1039.0" y="1091.0" width="1.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1042.0" y="1102.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.08%)</title><rect x="1039.9" y="1075.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1042.9" y="1086.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.05%)</title><rect x="1040.8" y="1139.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1043.8" y="1150.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="1041.4" y="1155.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1044.4" y="1166.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (14 samples, 0.35%)</title><rect x="1041.7" y="1155.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1044.7" y="1166.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.33%)</title><rect x="1042.0" y="1139.0" width="3.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1045.0" y="1150.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.25%)</title><rect x="1042.6" y="1123.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1045.6" y="1134.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.15%)</title><rect x="1043.8" y="1107.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1046.8" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (5 samples, 0.13%)</title><rect x="1044.1" y="1091.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1047.1" y="1102.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1045.0" y="1075.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1048.0" y="1086.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1045.0" y="1059.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1048.0" y="1070.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="1045.0" y="1043.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1048.0" y="1054.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1045.0" y="1027.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1048.0" y="1038.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1045.0" y="1011.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1048.0" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1045.0" y="995.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.0" y="1006.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1045.0" y="979.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1048.0" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1045.0" y="963.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1048.0" y="974.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="1045.2" y="1075.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1048.2" y="1086.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="1045.5" y="1123.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1048.5" y="1134.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="1045.8" y="1187.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1048.8" y="1198.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="1045.8" y="1171.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1048.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (324 samples, 8.16%)</title><rect x="1046.1" y="1267.0" width="96.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.1" y="1278.0">one/nio/net..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="1047.3" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.3" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="1047.3" y="1235.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1050.3" y="1246.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1047.3" y="1219.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1050.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (319 samples, 8.04%)</title><rect x="1047.6" y="1251.0" width="94.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1050.6" y="1262.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (152 samples, 3.83%)</title><rect x="1047.6" y="1235.0" width="45.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.6" y="1246.0">one/..</text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (4 samples, 0.10%)</title><rect x="1048.5" y="1219.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.5" y="1230.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="1049.7" y="1219.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1052.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (90 samples, 2.27%)</title><rect x="1050.0" y="1219.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.0" y="1230.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (90 samples, 2.27%)</title><rect x="1050.0" y="1203.0" width="26.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.0" y="1214.0">o..</text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (70 samples, 1.76%)</title><rect x="1050.6" y="1187.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1053.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.10%)</title><rect x="1050.6" y="1171.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.10%)</title><rect x="1050.6" y="1155.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1053.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.08%)</title><rect x="1050.6" y="1139.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1053.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="1050.9" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.9" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="1051.2" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.2" y="1118.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1051.2" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.2" y="1102.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1051.2" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1054.2" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1051.2" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1054.2" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1051.2" y="1043.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1054.2" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1051.2" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1054.2" y="1038.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1051.2" y="1011.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1054.2" y="1022.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="1051.2" y="995.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1054.2" y="1006.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="1051.2" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1054.2" y="990.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.03%)</title><rect x="1051.2" y="963.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1054.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="1051.5" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1054.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (66 samples, 1.66%)</title><rect x="1051.8" y="1171.0" width="19.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1054.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (66 samples, 1.66%)</title><rect x="1051.8" y="1155.0" width="19.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1054.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (63 samples, 1.59%)</title><rect x="1052.4" y="1139.0" width="18.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1055.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (63 samples, 1.59%)</title><rect x="1052.4" y="1123.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1055.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (3 samples, 0.08%)</title><rect x="1053.6" y="1107.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1056.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.08%)</title><rect x="1053.6" y="1091.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1056.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.08%)</title><rect x="1053.6" y="1075.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1056.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.08%)</title><rect x="1053.6" y="1059.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1056.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.08%)</title><rect x="1053.6" y="1043.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1056.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.05%)</title><rect x="1054.5" y="1107.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.05%)</title><rect x="1054.5" y="1091.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.05%)</title><rect x="1054.5" y="1075.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1057.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.05%)</title><rect x="1054.5" y="1059.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1057.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.05%)</title><rect x="1054.5" y="1043.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1057.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.05%)</title><rect x="1054.5" y="1027.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="1054.5" y="1011.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1057.5" y="1022.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (1 samples, 0.03%)</title><rect x="1054.5" y="995.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1057.5" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="1054.8" y="995.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1057.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (54 samples, 1.36%)</title><rect x="1055.1" y="1107.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1058.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (53 samples, 1.34%)</title><rect x="1055.4" y="1091.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1058.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (53 samples, 1.34%)</title><rect x="1055.4" y="1075.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (53 samples, 1.34%)</title><rect x="1055.4" y="1059.0" width="15.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1058.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (53 samples, 1.34%)</title><rect x="1055.4" y="1043.0" width="15.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1058.4" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.08%)</title><rect x="1055.4" y="1027.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1058.4" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="1055.7" y="1011.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1058.7" y="1022.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="1055.9" y="1011.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1058.9" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (49 samples, 1.23%)</title><rect x="1056.2" y="1027.0" width="14.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1059.2" y="1038.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.11%)</title><rect x="1057.7" y="1011.0" width="13.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1060.7" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.11%)</title><rect x="1057.7" y="995.0" width="13.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1060.7" y="1006.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="1058.9" y="979.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1061.9" y="990.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="1058.9" y="963.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1061.9" y="974.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.03%)</title><rect x="1058.9" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.9" y="958.0"></text>
</g>
<g>
<title>__x64_sys_futex (37 samples, 0.93%)</title><rect x="1059.2" y="979.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1062.2" y="990.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.91%)</title><rect x="1059.5" y="963.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1062.5" y="974.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 0.91%)</title><rect x="1059.5" y="947.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1062.5" y="958.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1060.1" y="931.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1063.1" y="942.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="1060.1" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1063.1" y="926.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="1060.4" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.4" y="942.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="1060.7" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1063.7" y="942.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.03%)</title><rect x="1061.0" y="931.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1064.0" y="942.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.76%)</title><rect x="1061.3" y="931.0" width="8.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1064.3" y="942.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.76%)</title><rect x="1061.3" y="915.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1064.3" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.76%)</title><rect x="1061.3" y="899.0" width="8.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1064.3" y="910.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="1070.2" y="979.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1073.2" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1070.8" y="1027.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1073.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="1071.1" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1074.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1071.4" y="1187.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1074.4" y="1198.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1071.7" y="1171.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1074.7" y="1182.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1071.7" y="1155.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1074.7" y="1166.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="1071.7" y="1139.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1074.7" y="1150.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1071.7" y="1123.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1074.7" y="1134.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1071.7" y="1107.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1074.7" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1071.7" y="1091.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1074.7" y="1102.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1071.7" y="1075.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.7" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1071.7" y="1059.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1074.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="1072.0" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1075.0" y="1198.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="1072.3" y="1187.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1075.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (4 samples, 0.10%)</title><rect x="1072.6" y="1187.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1075.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.15%)</title><rect x="1073.8" y="1187.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1076.8" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.15%)</title><rect x="1073.8" y="1171.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1076.8" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.10%)</title><rect x="1073.8" y="1155.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1076.8" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.05%)</title><rect x="1075.0" y="1155.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1078.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="1075.0" y="1139.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1078.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="1075.0" y="1123.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.10%)</title><rect x="1075.6" y="1187.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.10%)</title><rect x="1075.6" y="1171.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1078.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.10%)</title><rect x="1075.6" y="1155.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1078.6" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="1075.9" y="1139.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1078.9" y="1150.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="1075.9" y="1123.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1078.9" y="1134.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="1075.9" y="1107.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.9" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1075.9" y="1091.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1078.9" y="1102.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="1075.9" y="1075.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.9" y="1086.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1075.9" y="1059.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1078.9" y="1070.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="1075.9" y="1043.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1078.9" y="1054.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="1075.9" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.9" y="1038.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="1076.2" y="1059.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1079.2" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1076.5" y="1139.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1079.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.28%)</title><rect x="1076.8" y="1219.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1079.8" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1077.1" y="1203.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.1" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1077.1" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1080.1" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1077.1" y="1171.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.1" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1077.1" y="1155.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.1" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1077.1" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1080.1" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1077.1" y="1123.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.1" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1077.1" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.1" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="1077.1" y="1091.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1080.1" y="1102.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="1077.1" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1080.1" y="1086.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="1077.1" y="1059.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.1" y="1070.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.03%)</title><rect x="1077.1" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1080.1" y="1054.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.03%)</title><rect x="1077.1" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1080.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1077.4" y="1203.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1080.4" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="1077.4" y="1187.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1080.4" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="1077.4" y="1171.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1080.4" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1077.4" y="1155.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.4" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1077.4" y="1139.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1080.4" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1077.4" y="1123.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1080.4" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1077.4" y="1107.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.4" y="1118.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="1077.4" y="1091.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1080.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="1077.6" y="1187.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.15%)</title><rect x="1077.9" y="1203.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1080.9" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.15%)</title><rect x="1077.9" y="1187.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1080.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="1079.7" y="1203.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1082.7" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.15%)</title><rect x="1080.0" y="1219.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1083.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.15%)</title><rect x="1080.0" y="1203.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1083.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (6 samples, 0.15%)</title><rect x="1080.0" y="1187.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1083.0" y="1198.0"></text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (3 samples, 0.08%)</title><rect x="1080.3" y="1171.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1083.3" y="1182.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.05%)</title><rect x="1081.2" y="1171.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1084.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.30%)</title><rect x="1081.8" y="1219.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1084.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="1082.4" y="1203.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1085.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="1082.4" y="1187.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1085.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.18%)</title><rect x="1083.3" y="1203.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1086.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.15%)</title><rect x="1083.6" y="1187.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1086.6" y="1198.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="1084.2" y="1171.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1087.2" y="1182.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="1084.8" y="1171.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1087.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (25 samples, 0.63%)</title><rect x="1085.4" y="1219.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1088.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (15 samples, 0.38%)</title><rect x="1088.3" y="1203.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1091.3" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.05%)</title><rect x="1091.6" y="1187.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1094.6" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="1091.6" y="1171.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1094.6" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="1091.6" y="1155.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1094.6" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.05%)</title><rect x="1091.6" y="1139.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1094.6" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1091.6" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1094.6" y="1134.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="1091.6" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1094.6" y="1118.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="1091.9" y="1123.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1094.9" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="1092.2" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1095.2" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="1092.2" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1095.2" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="1092.2" y="1155.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1095.2" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1092.2" y="1139.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1095.2" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="1092.2" y="1123.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1095.2" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="1092.2" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1095.2" y="1118.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="1092.5" y="1187.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1095.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="1092.8" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1095.8" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (166 samples, 4.18%)</title><rect x="1093.1" y="1235.0" width="49.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1096.1" y="1246.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (164 samples, 4.13%)</title><rect x="1093.7" y="1219.0" width="48.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.7" y="1230.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.33%)</title><rect x="1094.0" y="1203.0" width="3.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1097.0" y="1214.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="1094.9" y="1187.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1097.9" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.05%)</title><rect x="1095.5" y="1187.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1098.5" y="1198.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1096.1" y="1187.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1099.1" y="1198.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.13%)</title><rect x="1096.4" y="1187.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1099.4" y="1198.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="1097.0" y="1171.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1100.0" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.05%)</title><rect x="1097.3" y="1171.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1100.3" y="1182.0"></text>
</g>
<g>
<title>__libc_recv (148 samples, 3.73%)</title><rect x="1097.9" y="1203.0" width="43.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1100.9" y="1214.0">__li..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (142 samples, 3.58%)</title><rect x="1099.6" y="1187.0" width="42.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1102.6" y="1198.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (142 samples, 3.58%)</title><rect x="1099.6" y="1171.0" width="42.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1102.6" y="1182.0">do_s..</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="1100.5" y="1155.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1103.5" y="1166.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (134 samples, 3.38%)</title><rect x="1100.8" y="1155.0" width="39.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1103.8" y="1166.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (133 samples, 3.35%)</title><rect x="1101.1" y="1139.0" width="39.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1104.1" y="1150.0">__s..</text>
</g>
<g>
<title>inet6_recvmsg (126 samples, 3.17%)</title><rect x="1101.4" y="1123.0" width="37.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1104.4" y="1134.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (125 samples, 3.15%)</title><rect x="1101.7" y="1107.0" width="37.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1104.7" y="1118.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.15%)</title><rect x="1105.3" y="1091.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.3" y="1102.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.15%)</title><rect x="1105.3" y="1075.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1108.3" y="1086.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.03%)</title><rect x="1105.3" y="1059.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1108.3" y="1070.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.05%)</title><rect x="1105.6" y="1059.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1108.6" y="1070.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.08%)</title><rect x="1106.2" y="1059.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1109.2" y="1070.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="1107.1" y="1091.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1110.1" y="1102.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.03%)</title><rect x="1107.1" y="1075.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1110.1" y="1086.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="1107.4" y="1075.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1110.4" y="1086.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (4 samples, 0.10%)</title><rect x="1107.7" y="1091.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1110.7" y="1102.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.08%)</title><rect x="1108.0" y="1075.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.0" y="1086.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="1108.0" y="1059.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1111.0" y="1070.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="1108.0" y="1043.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1111.0" y="1054.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="1108.3" y="1059.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1111.3" y="1070.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.03%)</title><rect x="1108.6" y="1059.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1111.6" y="1070.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (82 samples, 2.07%)</title><rect x="1108.9" y="1091.0" width="24.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.9" y="1102.0">_..</text>
</g>
<g>
<title>__ip_queue_xmit (76 samples, 1.91%)</title><rect x="1110.3" y="1075.0" width="22.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1113.3" y="1086.0">_..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.05%)</title><rect x="1110.3" y="1059.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1113.3" y="1070.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.10%)</title><rect x="1110.9" y="1059.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1113.9" y="1070.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.05%)</title><rect x="1111.5" y="1043.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1114.5" y="1054.0"></text>
</g>
<g>
<title>ip_output (70 samples, 1.76%)</title><rect x="1112.1" y="1059.0" width="20.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1115.1" y="1070.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.03%)</title><rect x="1112.7" y="1043.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1115.7" y="1054.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="1112.7" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1115.7" y="1038.0"></text>
</g>
<g>
<title>ip_finish_output2 (66 samples, 1.66%)</title><rect x="1113.0" y="1043.0" width="19.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1116.0" y="1054.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.15%)</title><rect x="1113.3" y="1027.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1116.3" y="1038.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.13%)</title><rect x="1113.6" y="1011.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1116.6" y="1022.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.10%)</title><rect x="1113.9" y="995.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1116.9" y="1006.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.08%)</title><rect x="1114.2" y="979.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.2" y="990.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.08%)</title><rect x="1114.2" y="963.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1117.2" y="974.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.08%)</title><rect x="1114.2" y="947.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1117.2" y="958.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (58 samples, 1.46%)</title><rect x="1115.1" y="1027.0" width="17.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1118.1" y="1038.0"></text>
</g>
<g>
<title>do_softirq (57 samples, 1.44%)</title><rect x="1115.4" y="1011.0" width="16.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1118.4" y="1022.0"></text>
</g>
<g>
<title>do_softirq_own_stack (55 samples, 1.39%)</title><rect x="1116.0" y="995.0" width="16.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.0" y="1006.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (55 samples, 1.39%)</title><rect x="1116.0" y="979.0" width="16.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1119.0" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (55 samples, 1.39%)</title><rect x="1116.0" y="963.0" width="16.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1119.0" y="974.0"></text>
</g>
<g>
<title>net_rx_action (47 samples, 1.18%)</title><rect x="1118.4" y="947.0" width="13.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1121.4" y="958.0"></text>
</g>
<g>
<title>process_backlog (47 samples, 1.18%)</title><rect x="1118.4" y="931.0" width="13.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1121.4" y="942.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (46 samples, 1.16%)</title><rect x="1118.4" y="915.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1121.4" y="926.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.05%)</title><rect x="1118.7" y="899.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1121.7" y="910.0"></text>
</g>
<g>
<title>ip_rcv (43 samples, 1.08%)</title><rect x="1119.3" y="899.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1122.3" y="910.0"></text>
</g>
<g>
<title>ip_local_deliver (41 samples, 1.03%)</title><rect x="1119.6" y="883.0" width="12.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1122.6" y="894.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (39 samples, 0.98%)</title><rect x="1120.2" y="867.0" width="11.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1123.2" y="878.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (39 samples, 0.98%)</title><rect x="1120.2" y="851.0" width="11.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1123.2" y="862.0"></text>
</g>
<g>
<title>tcp_v4_rcv (37 samples, 0.93%)</title><rect x="1120.7" y="835.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1123.7" y="846.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.10%)</title><rect x="1120.7" y="819.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1123.7" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1121.9" y="819.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1124.9" y="830.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="1121.9" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1124.9" y="814.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="1122.2" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1125.2" y="830.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.05%)</title><rect x="1122.5" y="819.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1125.5" y="830.0"></text>
</g>
<g>
<title>tcp_add_backlog (2 samples, 0.05%)</title><rect x="1123.1" y="819.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.1" y="830.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 0.68%)</title><rect x="1123.7" y="819.0" width="8.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1126.7" y="830.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.68%)</title><rect x="1123.7" y="803.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1126.7" y="814.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.08%)</title><rect x="1124.0" y="787.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1127.0" y="798.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="1124.0" y="771.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1127.0" y="782.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="1124.3" y="771.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1127.3" y="782.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="1124.6" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1127.6" y="782.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.03%)</title><rect x="1124.6" y="755.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1127.6" y="766.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1124.9" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1127.9" y="798.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1125.2" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1128.2" y="798.0"></text>
</g>
<g>
<title>cache_from_obj (1 samples, 0.03%)</title><rect x="1125.2" y="771.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1128.2" y="782.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.50%)</title><rect x="1125.5" y="787.0" width="5.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1128.5" y="798.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.15%)</title><rect x="1126.7" y="771.0" width="1.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1129.7" y="782.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.08%)</title><rect x="1126.7" y="755.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1129.7" y="766.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (2 samples, 0.05%)</title><rect x="1127.0" y="739.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1130.0" y="750.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.08%)</title><rect x="1127.6" y="755.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1130.6" y="766.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.08%)</title><rect x="1128.5" y="771.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1131.5" y="782.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="1129.4" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1132.4" y="782.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1129.7" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1132.7" y="782.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.05%)</title><rect x="1130.0" y="771.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.0" y="782.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (1 samples, 0.03%)</title><rect x="1130.6" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1133.6" y="782.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="1130.9" y="771.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1133.9" y="782.0"></text>
</g>
<g>
<title>tcp_xmit_recovery (1 samples, 0.03%)</title><rect x="1131.1" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1134.1" y="782.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="1131.4" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1134.4" y="798.0"></text>
</g>
<g>
<title>ip_rcv_core (1 samples, 0.03%)</title><rect x="1131.7" y="883.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.7" y="894.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="1132.0" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1135.0" y="926.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="1132.3" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1135.3" y="1038.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="1132.6" y="1043.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1135.6" y="1054.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="1132.9" y="1075.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1135.9" y="1086.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.08%)</title><rect x="1133.2" y="1091.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1136.2" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.08%)</title><rect x="1133.2" y="1075.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1136.2" y="1086.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="1134.1" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1137.1" y="1102.0"></text>
</g>
<g>
<title>__release_sock (1 samples, 0.03%)</title><rect x="1134.1" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1137.1" y="1086.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="1134.1" y="1059.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1137.1" y="1070.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="1134.1" y="1043.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1137.1" y="1054.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.03%)</title><rect x="1134.1" y="1027.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1137.1" y="1038.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="1134.4" y="1075.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1137.4" y="1086.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.28%)</title><rect x="1134.7" y="1091.0" width="3.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1137.7" y="1102.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.28%)</title><rect x="1134.7" y="1075.0" width="3.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1137.7" y="1086.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.10%)</title><rect x="1135.6" y="1059.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1138.6" y="1070.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="1135.6" y="1043.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1138.6" y="1054.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.08%)</title><rect x="1135.9" y="1043.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1138.9" y="1054.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.10%)</title><rect x="1136.8" y="1059.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1139.8" y="1070.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.10%)</title><rect x="1136.8" y="1043.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1139.8" y="1054.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.08%)</title><rect x="1137.1" y="1027.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1140.1" y="1038.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="1138.0" y="1091.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.0" y="1102.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="1138.0" y="1075.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1141.0" y="1086.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="1138.3" y="1091.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1141.3" y="1102.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="1138.3" y="1075.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1141.3" y="1086.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.05%)</title><rect x="1138.3" y="1059.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1141.3" y="1070.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="1138.3" y="1043.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1141.3" y="1054.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.15%)</title><rect x="1138.9" y="1123.0" width="1.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1141.9" y="1134.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.13%)</title><rect x="1139.2" y="1107.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.2" y="1118.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.05%)</title><rect x="1140.1" y="1091.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1143.1" y="1102.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="1140.7" y="1155.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1143.7" y="1166.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.03%)</title><rect x="1141.0" y="1155.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1144.0" y="1166.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="1141.3" y="1155.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1144.3" y="1166.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.05%)</title><rect x="1141.3" y="1139.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1144.3" y="1150.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="1141.8" y="1203.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1144.8" y="1214.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1142.4" y="1267.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.4" y="1278.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1142.7" y="1251.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1145.7" y="1262.0"></text>
</g>
<g>
<title>start_thread (158 samples, 3.98%)</title><rect x="1143.0" y="1283.0" width="47.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1146.0" y="1294.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (158 samples, 3.98%)</title><rect x="1143.0" y="1267.0" width="47.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1146.0" y="1278.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (158 samples, 3.98%)</title><rect x="1143.0" y="1251.0" width="47.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1146.0" y="1262.0">Thre..</text>
</g>
<g>
<title>GangWorker::loop() (157 samples, 3.95%)</title><rect x="1143.0" y="1235.0" width="46.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1146.0" y="1246.0">Gang..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (65 samples, 1.64%)</title><rect x="1143.0" y="1219.0" width="19.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.0" y="1230.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (64 samples, 1.61%)</title><rect x="1143.0" y="1203.0" width="19.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.0" y="1214.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="1143.6" y="1187.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1146.6" y="1198.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.0] (4 samples, 0.10%)</title><rect x="1143.9" y="1187.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.9" y="1198.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (4 samples, 0.10%)</title><rect x="1143.9" y="1171.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.9" y="1182.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (4 samples, 0.10%)</title><rect x="1143.9" y="1155.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1146.9" y="1166.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1] (35 samples, 0.88%)</title><rect x="1145.1" y="1187.0" width="10.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.1" y="1198.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (3 samples, 0.08%)</title><rect x="1146.6" y="1171.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.6" y="1182.0"></text>
</g>
<g>
<title>getrusage (3 samples, 0.08%)</title><rect x="1146.6" y="1155.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1149.6" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.08%)</title><rect x="1146.6" y="1139.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.6" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.08%)</title><rect x="1146.6" y="1123.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1149.6" y="1134.0"></text>
</g>
<g>
<title>__do_sys_getrusage (1 samples, 0.03%)</title><rect x="1146.9" y="1107.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1149.9" y="1118.0"></text>
</g>
<g>
<title>getrusage (1 samples, 0.03%)</title><rect x="1146.9" y="1091.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1149.9" y="1102.0"></text>
</g>
<g>
<title>get_task_mm (1 samples, 0.03%)</title><rect x="1146.9" y="1075.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1149.9" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1146.9" y="1059.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1149.9" y="1070.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="1147.2" y="1107.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.2" y="1118.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="1147.2" y="1091.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1150.2" y="1102.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="1147.2" y="1075.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1150.2" y="1086.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.05%)</title><rect x="1147.5" y="1171.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1150.5" y="1182.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (25 samples, 0.63%)</title><rect x="1148.1" y="1171.0" width="7.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.1" y="1182.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.03%)</title><rect x="1148.4" y="1155.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.4" y="1166.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (22 samples, 0.55%)</title><rect x="1148.7" y="1155.0" width="6.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.7" y="1166.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1155.2" y="1155.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.2" y="1166.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (2 samples, 0.05%)</title><rect x="1155.5" y="1187.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.5" y="1198.0"></text>
</g>
<g>
<title>getrusage (2 samples, 0.05%)</title><rect x="1155.5" y="1171.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1158.5" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.05%)</title><rect x="1155.5" y="1155.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1158.5" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.05%)</title><rect x="1155.5" y="1139.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1158.5" y="1150.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="1155.8" y="1123.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.8" y="1134.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;G1TaskQueueEntry, (MemoryType)5, 131072u&gt;::pop_local(G1TaskQueueEntry volatile&amp;, unsigned int) [clone .constprop.0] (7 samples, 0.18%)</title><rect x="1156.1" y="1187.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.1" y="1198.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (13 samples, 0.33%)</title><rect x="1158.2" y="1187.0" width="3.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.2" y="1198.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (6 samples, 0.15%)</title><rect x="1160.0" y="1171.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.0" y="1182.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1161.8" y="1171.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.8" y="1182.0"></text>
</g>
<g>
<title>bool InstanceRefKlass::try_discover&lt;unsigned int, G1CMOopClosure&gt;(oopDesc*, ReferenceType, G1CMOopClosure*) (1 samples, 0.03%)</title><rect x="1161.8" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.8" y="1166.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (1 samples, 0.03%)</title><rect x="1162.1" y="1203.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.1" y="1214.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (63 samples, 1.59%)</title><rect x="1162.4" y="1219.0" width="18.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.4" y="1230.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (16 samples, 0.40%)</title><rect x="1162.4" y="1203.0" width="4.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.4" y="1214.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.03%)</title><rect x="1162.4" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.4" y="1198.0"></text>
</g>
<g>
<title>SpinPause (15 samples, 0.38%)</title><rect x="1162.7" y="1187.0" width="4.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1165.7" y="1198.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (26 samples, 0.65%)</title><rect x="1167.1" y="1203.0" width="7.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.1" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (26 samples, 0.65%)</title><rect x="1167.1" y="1187.0" width="7.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.1" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (26 samples, 0.65%)</title><rect x="1167.1" y="1171.0" width="7.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.1" y="1182.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (26 samples, 0.65%)</title><rect x="1167.1" y="1155.0" width="7.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.1" y="1166.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (26 samples, 0.65%)</title><rect x="1167.1" y="1139.0" width="7.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.1" y="1150.0"></text>
</g>
<g>
<title>G1CardTable::mark_card_deferred(unsigned long) (2 samples, 0.05%)</title><rect x="1167.1" y="1123.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.1" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (10 samples, 0.25%)</title><rect x="1167.7" y="1123.0" width="3.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.7" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.10%)</title><rect x="1168.9" y="1107.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.9" y="1118.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1169.5" y="1091.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.5" y="1102.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1170.1" y="1107.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1173.1" y="1118.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1170.4" y="1107.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.4" y="1118.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1170.4" y="1091.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1173.4" y="1102.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="1170.4" y="1075.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1173.4" y="1086.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1170.4" y="1059.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1173.4" y="1070.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1170.4" y="1043.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1173.4" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1170.4" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1173.4" y="1038.0"></text>
</g>
<g>
<title>rcu_core (1 samples, 0.03%)</title><rect x="1170.4" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1173.4" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1170.4" y="995.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1173.4" y="1006.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (12 samples, 0.30%)</title><rect x="1170.7" y="1123.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.7" y="1134.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.05%)</title><rect x="1171.6" y="1107.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.6" y="1118.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.03%)</title><rect x="1171.9" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.9" y="1102.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (3 samples, 0.08%)</title><rect x="1172.2" y="1107.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.2" y="1118.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1173.1" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.1" y="1118.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (2 samples, 0.05%)</title><rect x="1173.4" y="1107.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.4" y="1118.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.05%)</title><rect x="1173.4" y="1091.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.4" y="1102.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1173.9" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.9" y="1118.0"></text>
</g>
<g>
<title>oopDesc::size() (2 samples, 0.05%)</title><rect x="1174.2" y="1123.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.2" y="1134.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (20 samples, 0.50%)</title><rect x="1174.8" y="1203.0" width="6.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.8" y="1214.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (20 samples, 0.50%)</title><rect x="1174.8" y="1187.0" width="6.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.8" y="1198.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (20 samples, 0.50%)</title><rect x="1174.8" y="1171.0" width="6.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.8" y="1182.0"></text>
</g>
<g>
<title>G1EvacPhaseWithTrimTimeTracker::~G1EvacPhaseWithTrimTimeTracker() (1 samples, 0.03%)</title><rect x="1174.8" y="1155.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.8" y="1166.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (19 samples, 0.48%)</title><rect x="1175.1" y="1155.0" width="5.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.1" y="1166.0"></text>
</g>
<g>
<title>G1CMBitMap::get_next_marked_addr(HeapWord const*, HeapWord const*) const (1 samples, 0.03%)</title><rect x="1175.7" y="1139.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.7" y="1150.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (12 samples, 0.30%)</title><rect x="1176.0" y="1139.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.0" y="1150.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.03%)</title><rect x="1176.3" y="1123.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.3" y="1134.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.03%)</title><rect x="1176.3" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.3" y="1118.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (1 samples, 0.03%)</title><rect x="1176.6" y="1123.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.6" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (5 samples, 0.13%)</title><rect x="1176.9" y="1123.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.9" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (5 samples, 0.13%)</title><rect x="1176.9" y="1107.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.9" y="1118.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.03%)</title><rect x="1177.2" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.2" y="1102.0"></text>
</g>
<g>
<title>G1Allocator::old_attempt_allocation(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="1177.2" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.2" y="1086.0"></text>
</g>
<g>
<title>Monitor::lock(Thread*) (1 samples, 0.03%)</title><rect x="1177.2" y="1059.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.2" y="1070.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.03%)</title><rect x="1177.5" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.5" y="1102.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.05%)</title><rect x="1177.8" y="1091.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.8" y="1102.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (4 samples, 0.10%)</title><rect x="1178.4" y="1123.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.4" y="1134.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (4 samples, 0.10%)</title><rect x="1179.6" y="1139.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.6" y="1150.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::fine_has_next(unsigned long&amp;) (4 samples, 0.10%)</title><rect x="1179.6" y="1123.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.6" y="1134.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="1180.8" y="1203.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.8" y="1214.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1180.8" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="1198.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1180.8" y="1171.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="1182.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1180.8" y="1155.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.8" y="1166.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1181.1" y="1219.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.1" y="1230.0"></text>
</g>
<g>
<title>G1CodeCacheUnloadingTask::work_first_pass(unsigned int) (1 samples, 0.03%)</title><rect x="1181.1" y="1203.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.1" y="1214.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (1 samples, 0.03%)</title><rect x="1181.1" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.1" y="1198.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (1 samples, 0.03%)</title><rect x="1181.1" y="1171.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.1" y="1182.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (27 samples, 0.68%)</title><rect x="1181.4" y="1219.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.4" y="1230.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (27 samples, 0.68%)</title><rect x="1181.4" y="1203.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.4" y="1214.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (27 samples, 0.68%)</title><rect x="1181.4" y="1187.0" width="8.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.4" y="1198.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (1 samples, 0.03%)</title><rect x="1184.9" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.9" y="1182.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.03%)</title><rect x="1184.9" y="1155.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.9" y="1166.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (13 samples, 0.33%)</title><rect x="1185.2" y="1171.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.2" y="1182.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (4 samples, 0.10%)</title><rect x="1187.9" y="1155.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.9" y="1166.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1189.1" y="1171.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.1" y="1182.0"></text>
</g>
<g>
<title>BitMap::par_at_put(unsigned long, bool) (1 samples, 0.03%)</title><rect x="1189.1" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.1" y="1166.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1189.4" y="1219.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="1230.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.03%)</title><rect x="1189.4" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="1214.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.03%)</title><rect x="1189.7" y="1235.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.7" y="1246.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.03%)</title><rect x="1189.7" y="1219.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.7" y="1230.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.03%)</title><rect x="1189.7" y="1203.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.7" y="1214.0"></text>
</g>
</g>
</svg>
