<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="853"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="853"> </text>
<g id="frames">
<g>
<title>all (48,109 samples, 100.00%)</title><rect x="10.0" y="819.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="830.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (28,428 samples, 59.09%)</title><rect x="10.0" y="803.0" width="697.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="814.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (28,428 samples, 59.09%)</title><rect x="10.0" y="787.0" width="697.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="798.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (28,428 samples, 59.09%)</title><rect x="10.0" y="771.0" width="697.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="13.0" y="782.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (4,099 samples, 8.52%)</title><rect x="10.0" y="755.0" width="100.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="766.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3,844 samples, 7.99%)</title><rect x="10.0" y="739.0" width="94.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="750.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3,831 samples, 7.96%)</title><rect x="10.0" y="723.0" width="94.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="734.0">java/util/c..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (22 samples, 0.05%)</title><rect x="10.0" y="707.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1563358180.apply (3,807 samples, 7.91%)</title><rect x="10.5" y="707.0" width="93.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.5" y="718.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (3,807 samples, 7.91%)</title><rect x="10.5" y="691.0" width="93.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.5" y="702.0">jdk/interna..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (3,807 samples, 7.91%)</title><rect x="10.5" y="675.0" width="93.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="13.5" y="686.0">jdk/interna..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (24 samples, 0.05%)</title><rect x="10.5" y="659.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.05%)</title><rect x="10.5" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="13.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$359/1611607641.get$Lambda (11 samples, 0.02%)</title><rect x="10.5" y="627.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.5" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$359 (11 samples, 0.02%)</title><rect x="10.5" y="611.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="13.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/2115167929.get$Lambda (13 samples, 0.03%)</title><rect x="10.8" y="627.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.8" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$361 (13 samples, 0.03%)</title><rect x="10.8" y="611.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="13.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (60 samples, 0.12%)</title><rect x="11.1" y="659.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (60 samples, 0.12%)</title><rect x="11.1" y="643.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="14.1" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (35 samples, 0.07%)</title><rect x="11.1" y="627.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="14.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="12.0" y="627.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="12.0" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.0" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.05%)</title><rect x="12.0" y="595.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="15.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (123 samples, 0.26%)</title><rect x="12.6" y="659.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (123 samples, 0.26%)</title><rect x="12.6" y="643.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.6" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (65 samples, 0.14%)</title><rect x="12.6" y="627.0" width="1.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="15.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.12%)</title><rect x="14.2" y="627.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (58 samples, 0.12%)</title><rect x="14.2" y="611.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.2" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (58 samples, 0.12%)</title><rect x="14.2" y="595.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="17.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (3,450 samples, 7.17%)</title><rect x="15.6" y="659.0" width="84.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.6" y="670.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (3,450 samples, 7.17%)</title><rect x="15.6" y="643.0" width="84.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="18.6" y="654.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (3,450 samples, 7.17%)</title><rect x="15.6" y="627.0" width="84.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.6" y="638.0">jdk/intern..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.13%)</title><rect x="15.6" y="611.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="18.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.13%)</title><rect x="15.6" y="595.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/311098875.get$Lambda (19 samples, 0.04%)</title><rect x="15.6" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$212 (19 samples, 0.04%)</title><rect x="15.6" y="563.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="18.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.get$Lambda (20 samples, 0.04%)</title><rect x="16.1" y="579.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.1" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$213 (20 samples, 0.04%)</title><rect x="16.1" y="563.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="19.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/1583544498.get$Lambda (22 samples, 0.05%)</title><rect x="16.6" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.6" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$312 (22 samples, 0.05%)</title><rect x="16.6" y="563.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="19.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2,336 samples, 4.86%)</title><rect x="17.1" y="611.0" width="57.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="20.1" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2,336 samples, 4.86%)</title><rect x="17.1" y="595.0" width="57.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.1" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2,313 samples, 4.81%)</title><rect x="17.1" y="579.0" width="56.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.1" y="590.0">java/u..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/1583544498.apply (2,313 samples, 4.81%)</title><rect x="17.1" y="563.0" width="56.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.1" y="574.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (2,313 samples, 4.81%)</title><rect x="17.1" y="547.0" width="56.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.1" y="558.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2,313 samples, 4.81%)</title><rect x="17.1" y="531.0" width="56.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.1" y="542.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.apply (2,313 samples, 4.81%)</title><rect x="17.1" y="515.0" width="56.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.1" y="526.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2,313 samples, 4.81%)</title><rect x="17.1" y="499.0" width="56.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.1" y="510.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.04%)</title><rect x="17.1" y="483.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.04%)</title><rect x="17.1" y="467.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.get$Lambda (17 samples, 0.04%)</title><rect x="17.1" y="451.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$357 (17 samples, 0.04%)</title><rect x="17.1" y="435.0" width="0.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="20.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (56 samples, 0.12%)</title><rect x="17.5" y="483.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (56 samples, 0.12%)</title><rect x="17.5" y="467.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.5" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniHandle (29 samples, 0.06%)</title><rect x="17.5" y="451.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="20.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.04%)</title><rect x="18.4" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="21.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.04%)</title><rect x="18.4" y="435.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.4" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.04%)</title><rect x="18.4" y="419.0" width="0.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="21.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (44 samples, 0.09%)</title><rect x="18.9" y="483.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="21.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (44 samples, 0.09%)</title><rect x="18.9" y="467.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.9" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (25 samples, 0.05%)</title><rect x="18.9" y="451.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="21.9" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.04%)</title><rect x="19.5" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="22.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (19 samples, 0.04%)</title><rect x="19.5" y="435.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.5" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (19 samples, 0.04%)</title><rect x="19.5" y="419.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="22.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2,196 samples, 4.56%)</title><rect x="20.0" y="483.0" width="53.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.0" y="494.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.05%)</title><rect x="20.0" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.0" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.05%)</title><rect x="20.0" y="451.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1158701491.get$Lambda (15 samples, 0.03%)</title><rect x="20.0" y="435.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.0" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$351 (15 samples, 0.03%)</title><rect x="20.0" y="419.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="23.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1,811 samples, 3.76%)</title><rect x="20.5" y="467.0" width="44.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.5" y="478.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1,811 samples, 3.76%)</title><rect x="20.5" y="451.0" width="44.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.5" y="462.0">java..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (24 samples, 0.05%)</title><rect x="20.5" y="435.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="23.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1158701491.apply (1,730 samples, 3.60%)</title><rect x="21.1" y="435.0" width="42.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.1" y="446.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (1,730 samples, 3.60%)</title><rect x="21.1" y="419.0" width="42.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.1" y="430.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (52 samples, 0.11%)</title><rect x="21.3" y="403.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="24.3" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (52 samples, 0.11%)</title><rect x="21.3" y="387.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.3" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (26 samples, 0.05%)</title><rect x="21.3" y="371.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="24.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="21.9" y="371.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="21.9" y="355.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.9" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.05%)</title><rect x="21.9" y="339.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="24.9" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.05%)</title><rect x="22.6" y="403.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="25.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (37 samples, 0.08%)</title><rect x="23.1" y="403.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="26.1" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (17 samples, 0.04%)</title><rect x="23.1" y="387.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="26.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (20 samples, 0.04%)</title><rect x="23.5" y="387.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (17 samples, 0.04%)</title><rect x="23.5" y="371.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.5" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (17 samples, 0.04%)</title><rect x="23.5" y="355.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (17 samples, 0.04%)</title><rect x="23.5" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.5" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (17 samples, 0.04%)</title><rect x="23.5" y="323.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.5" y="334.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (17 samples, 0.04%)</title><rect x="23.5" y="307.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="26.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (62 samples, 0.13%)</title><rect x="24.0" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="27.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (62 samples, 0.13%)</title><rect x="24.0" y="387.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (19 samples, 0.04%)</title><rect x="24.0" y="371.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (19 samples, 0.04%)</title><rect x="24.0" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (19 samples, 0.04%)</title><rect x="24.0" y="339.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="27.0" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (19 samples, 0.04%)</title><rect x="24.0" y="323.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="27.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (43 samples, 0.09%)</title><rect x="24.5" y="371.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (43 samples, 0.09%)</title><rect x="24.5" y="355.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="27.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (30 samples, 0.06%)</title><rect x="24.5" y="339.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="27.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (13 samples, 0.03%)</title><rect x="25.2" y="339.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.2" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (13 samples, 0.03%)</title><rect x="25.2" y="323.0" width="0.4" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="28.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (1,549 samples, 3.22%)</title><rect x="25.6" y="403.0" width="37.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="28.6" y="414.0">jdk..</text>
</g>
<g>
<title>java.lang.StringBuilder (19 samples, 0.04%)</title><rect x="25.6" y="387.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="28.6" y="398.0"></text>
</g>
<g>
<title>java/lang/Long.toString (28 samples, 0.06%)</title><rect x="26.0" y="387.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="29.0" y="398.0"></text>
</g>
<g>
<title>byte[] (16 samples, 0.03%)</title><rect x="26.0" y="371.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.0" y="382.0"></text>
</g>
<g>
<title>java.lang.String (12 samples, 0.02%)</title><rect x="26.4" y="371.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="29.4" y="382.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (130 samples, 0.27%)</title><rect x="26.7" y="387.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="29.7" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (130 samples, 0.27%)</title><rect x="26.7" y="371.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (130 samples, 0.27%)</title><rect x="26.7" y="355.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="29.7" y="366.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.27%)</title><rect x="26.7" y="339.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="29.7" y="350.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (59 samples, 0.12%)</title><rect x="29.9" y="387.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="32.9" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (59 samples, 0.12%)</title><rect x="29.9" y="371.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.9" y="382.0"></text>
</g>
<g>
<title>byte[] (59 samples, 0.12%)</title><rect x="29.9" y="355.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="32.9" y="366.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (148 samples, 0.31%)</title><rect x="31.3" y="387.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="34.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (148 samples, 0.31%)</title><rect x="31.3" y="371.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="34.3" y="382.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="31.3" y="355.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="34.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (135 samples, 0.28%)</title><rect x="31.7" y="355.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.7" y="366.0"></text>
</g>
<g>
<title>byte[] (135 samples, 0.28%)</title><rect x="31.7" y="339.0" width="3.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="34.7" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.09%)</title><rect x="35.0" y="387.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="38.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (41 samples, 0.09%)</title><rect x="35.0" y="371.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.0" y="382.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (41 samples, 0.09%)</title><rect x="35.0" y="355.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="38.0" y="366.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.04%)</title><rect x="36.0" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.0" y="398.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.04%)</title><rect x="36.0" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="39.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (871 samples, 1.81%)</title><rect x="36.4" y="387.0" width="21.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.4" y="398.0">j..</text>
</g>
<g>
<title>java/util/function/BiPredicate.and (12 samples, 0.02%)</title><rect x="36.4" y="371.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.4" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.02%)</title><rect x="36.4" y="355.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.4" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.02%)</title><rect x="36.4" y="339.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.4" y="350.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$376/1989645083.get$Lambda (12 samples, 0.02%)</title><rect x="36.4" y="323.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.4" y="334.0"></text>
</g>
<g>
<title>java.util.function.BiPredicate$$Lambda$376 (12 samples, 0.02%)</title><rect x="36.4" y="307.0" width="0.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="39.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (507 samples, 1.05%)</title><rect x="36.7" y="371.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.7" y="382.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (303 samples, 0.63%)</title><rect x="36.7" y="355.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.7" y="366.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (303 samples, 0.63%)</title><rect x="36.7" y="339.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="39.7" y="350.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (303 samples, 0.63%)</title><rect x="36.7" y="323.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="39.7" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (303 samples, 0.63%)</title><rect x="36.7" y="307.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.7" y="318.0"></text>
</g>
<g>
<title>byte[] (285 samples, 0.59%)</title><rect x="36.7" y="291.0" width="7.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="39.7" y="302.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.04%)</title><rect x="43.7" y="291.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="46.7" y="302.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (44 samples, 0.09%)</title><rect x="44.1" y="355.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.1" y="366.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (44 samples, 0.09%)</title><rect x="44.1" y="339.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (44 samples, 0.09%)</title><rect x="44.1" y="323.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntryIterator (44 samples, 0.09%)</title><rect x="44.1" y="307.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="47.1" y="318.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (40 samples, 0.08%)</title><rect x="45.2" y="355.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.2" y="366.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet (21 samples, 0.04%)</title><rect x="45.2" y="339.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="48.2" y="350.0"></text>
</g>
<g>
<title>java/util/TreeMap.entrySet (19 samples, 0.04%)</title><rect x="45.7" y="339.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="48.7" y="350.0"></text>
</g>
<g>
<title>java.util.TreeMap$EntrySet (19 samples, 0.04%)</title><rect x="45.7" y="323.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="48.7" y="334.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$376/1989645083.test (120 samples, 0.25%)</title><rect x="46.2" y="355.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.2" y="366.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (120 samples, 0.25%)</title><rect x="46.2" y="339.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.2" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$95/1020154737.test (120 samples, 0.25%)</title><rect x="46.2" y="323.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.2" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (120 samples, 0.25%)</title><rect x="46.2" y="307.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.2" y="318.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$84/246273275.test (120 samples, 0.25%)</title><rect x="46.2" y="291.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.2" y="302.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (120 samples, 0.25%)</title><rect x="46.2" y="275.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="49.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$83/716487794.test (120 samples, 0.25%)</title><rect x="46.2" y="259.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.2" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (120 samples, 0.25%)</title><rect x="46.2" y="243.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.2" y="254.0"></text>
</g>
<g>
<title>java/lang/String.substring (120 samples, 0.25%)</title><rect x="46.2" y="227.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.2" y="238.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (120 samples, 0.25%)</title><rect x="46.2" y="211.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.2" y="222.0"></text>
</g>
<g>
<title>java.lang.String (63 samples, 0.13%)</title><rect x="46.2" y="195.0" width="1.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="49.2" y="206.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (57 samples, 0.12%)</title><rect x="47.7" y="195.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.7" y="206.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.12%)</title><rect x="47.7" y="179.0" width="1.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="50.7" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (352 samples, 0.73%)</title><rect x="49.1" y="371.0" width="8.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.1" y="382.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (352 samples, 0.73%)</title><rect x="49.1" y="355.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.1" y="366.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (352 samples, 0.73%)</title><rect x="49.1" y="339.0" width="8.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.1" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (18 samples, 0.04%)</title><rect x="49.2" y="323.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="52.2" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (33 samples, 0.07%)</title><rect x="49.7" y="323.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="52.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (26 samples, 0.05%)</title><rect x="50.5" y="323.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="53.5" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (26 samples, 0.05%)</title><rect x="50.5" y="307.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.5" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (26 samples, 0.05%)</title><rect x="50.5" y="291.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="53.5" y="302.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (26 samples, 0.05%)</title><rect x="50.5" y="275.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="53.5" y="286.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (24 samples, 0.05%)</title><rect x="51.2" y="323.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.2" y="334.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (24 samples, 0.05%)</title><rect x="51.2" y="307.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="54.2" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (217 samples, 0.45%)</title><rect x="51.8" y="323.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.8" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (217 samples, 0.45%)</title><rect x="51.8" y="307.0" width="5.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.8" y="318.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (217 samples, 0.45%)</title><rect x="51.8" y="291.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.8" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (36 samples, 0.07%)</title><rect x="51.8" y="275.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="54.8" y="286.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (36 samples, 0.07%)</title><rect x="51.8" y="259.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="54.8" y="270.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (36 samples, 0.07%)</title><rect x="51.8" y="243.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="54.8" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.07%)</title><rect x="51.8" y="227.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.8" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (36 samples, 0.07%)</title><rect x="51.8" y="211.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.8" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.07%)</title><rect x="51.8" y="195.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="54.8" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (36 samples, 0.07%)</title><rect x="51.8" y="179.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (36 samples, 0.07%)</title><rect x="51.8" y="163.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="54.8" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (36 samples, 0.07%)</title><rect x="51.8" y="147.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="54.8" y="158.0"></text>
</g>
<g>
<title>java/util/List.copyOf (98 samples, 0.20%)</title><rect x="52.7" y="275.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="55.7" y="286.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (98 samples, 0.20%)</title><rect x="52.7" y="259.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="55.7" y="270.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (44 samples, 0.09%)</title><rect x="52.7" y="243.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="55.7" y="254.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.09%)</title><rect x="52.7" y="227.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="55.7" y="238.0"></text>
</g>
<g>
<title>java.lang.Object[] (44 samples, 0.09%)</title><rect x="52.7" y="211.0" width="1.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="55.7" y="222.0"></text>
</g>
<g>
<title>java/util/List.of (54 samples, 0.11%)</title><rect x="53.7" y="243.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="56.7" y="254.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (54 samples, 0.11%)</title><rect x="53.7" y="227.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="56.7" y="238.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (83 samples, 0.17%)</title><rect x="55.1" y="275.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="58.1" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (83 samples, 0.17%)</title><rect x="55.1" y="259.0" width="2.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="58.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (28 samples, 0.06%)</title><rect x="57.1" y="323.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.1" y="334.0"></text>
</g>
<g>
<title>java.util.TreeMap (28 samples, 0.06%)</title><rect x="57.1" y="307.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="60.1" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (61 samples, 0.13%)</title><rect x="57.8" y="387.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.8" y="398.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (18 samples, 0.04%)</title><rect x="57.8" y="371.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="60.8" y="382.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.04%)</title><rect x="57.8" y="355.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="60.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.09%)</title><rect x="58.2" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.2" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (43 samples, 0.09%)</title><rect x="58.2" y="355.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.2" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1954471782.invoke (43 samples, 0.09%)</title><rect x="58.2" y="339.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.2" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.09%)</title><rect x="58.2" y="323.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.2" y="334.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (16 samples, 0.03%)</title><rect x="58.2" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.2" y="318.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.03%)</title><rect x="58.2" y="291.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="61.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (27 samples, 0.06%)</title><rect x="58.6" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="61.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (27 samples, 0.06%)</title><rect x="58.6" y="291.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="61.6" y="302.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.06%)</title><rect x="58.6" y="275.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="61.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (40 samples, 0.08%)</title><rect x="59.3" y="387.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (40 samples, 0.08%)</title><rect x="59.3" y="371.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.08%)</title><rect x="59.3" y="355.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="62.3" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (40 samples, 0.08%)</title><rect x="59.3" y="339.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="62.3" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1954471782.invoke (40 samples, 0.08%)</title><rect x="59.3" y="323.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.08%)</title><rect x="59.3" y="307.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.3" y="318.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (15 samples, 0.03%)</title><rect x="59.3" y="291.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.3" y="302.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.03%)</title><rect x="59.3" y="275.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="62.3" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.05%)</title><rect x="59.6" y="291.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.05%)</title><rect x="59.6" y="275.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.6" y="286.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.05%)</title><rect x="59.6" y="259.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="62.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (134 samples, 0.28%)</title><rect x="60.3" y="387.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.3" y="398.0"></text>
</g>
<g>
<title>java.util.ArrayList (44 samples, 0.09%)</title><rect x="60.3" y="371.0" width="1.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="63.3" y="382.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (39 samples, 0.08%)</title><rect x="61.3" y="371.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="64.3" y="382.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.08%)</title><rect x="61.3" y="355.0" width="1.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="64.3" y="366.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (51 samples, 0.11%)</title><rect x="62.3" y="371.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="65.3" y="382.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (51 samples, 0.11%)</title><rect x="62.3" y="355.0" width="1.2" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="65.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.12%)</title><rect x="63.5" y="435.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.12%)</title><rect x="63.5" y="419.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.5" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.12%)</title><rect x="63.5" y="403.0" width="1.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="66.5" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response (60 samples, 0.12%)</title><rect x="64.9" y="467.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="67.9" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="66.4" y="467.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="69.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (285 samples, 0.59%)</title><rect x="66.9" y="467.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.9" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.04%)</title><rect x="66.9" y="451.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.9" y="462.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.04%)</title><rect x="66.9" y="435.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="69.9" y="446.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1HeaderParser (24 samples, 0.05%)</title><rect x="67.3" y="451.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="70.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$BodyReader (17 samples, 0.04%)</title><rect x="67.9" y="451.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="70.9" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$HeadersReader (30 samples, 0.06%)</title><rect x="68.3" y="451.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="71.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (93 samples, 0.19%)</title><rect x="69.0" y="451.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="72.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (93 samples, 0.19%)</title><rect x="69.0" y="435.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="72.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (93 samples, 0.19%)</title><rect x="69.0" y="419.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.0" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (93 samples, 0.19%)</title><rect x="69.0" y="403.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="72.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (93 samples, 0.19%)</title><rect x="69.0" y="387.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (93 samples, 0.19%)</title><rect x="69.0" y="371.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (93 samples, 0.19%)</title><rect x="69.0" y="355.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (93 samples, 0.19%)</title><rect x="69.0" y="339.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (93 samples, 0.19%)</title><rect x="69.0" y="323.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (40 samples, 0.08%)</title><rect x="69.0" y="307.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (40 samples, 0.08%)</title><rect x="69.0" y="291.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.0" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$335/500555321.get$Lambda (30 samples, 0.06%)</title><rect x="69.3" y="275.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="72.3" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$335 (30 samples, 0.06%)</title><rect x="69.3" y="259.0" width="0.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="72.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (24 samples, 0.05%)</title><rect x="70.0" y="307.0" width="0.6" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="73.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (29 samples, 0.06%)</title><rect x="70.6" y="307.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="73.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (29 samples, 0.06%)</title><rect x="70.6" y="291.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="73.6" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (12 samples, 0.02%)</title><rect x="70.6" y="275.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="73.6" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (17 samples, 0.04%)</title><rect x="70.9" y="275.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (17 samples, 0.04%)</title><rect x="70.9" y="259.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="73.9" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (75 samples, 0.16%)</title><rect x="71.3" y="451.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.3" y="462.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (18 samples, 0.04%)</title><rect x="71.3" y="435.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="74.3" y="446.0"></text>
</g>
<g>
<title>java.util.HashMap (34 samples, 0.07%)</title><rect x="71.7" y="435.0" width="0.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="74.7" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (23 samples, 0.05%)</title><rect x="72.6" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (23 samples, 0.05%)</title><rect x="72.6" y="419.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.6" y="430.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.05%)</title><rect x="72.6" y="403.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="75.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.start (29 samples, 0.06%)</title><rect x="73.1" y="451.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.1" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (29 samples, 0.06%)</title><rect x="73.1" y="435.0" width="0.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="76.1" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.05%)</title><rect x="73.8" y="579.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="76.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.05%)</title><rect x="73.8" y="563.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.05%)</title><rect x="73.8" y="547.0" width="0.6" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="76.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (49 samples, 0.10%)</title><rect x="74.4" y="611.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="77.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (49 samples, 0.10%)</title><rect x="74.4" y="595.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.4" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (23 samples, 0.05%)</title><rect x="74.4" y="579.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="77.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="75.0" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="75.0" y="563.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="78.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.05%)</title><rect x="75.0" y="547.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="78.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (1,004 samples, 2.09%)</title><rect x="75.6" y="611.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.6" y="622.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (39 samples, 0.08%)</title><rect x="75.6" y="595.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (39 samples, 0.08%)</title><rect x="75.6" y="579.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$304/1126457052.get$Lambda (27 samples, 0.06%)</title><rect x="75.6" y="563.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="78.6" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$304 (27 samples, 0.06%)</title><rect x="75.6" y="547.0" width="0.7" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="78.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$307/339638944.get$Lambda (12 samples, 0.02%)</title><rect x="76.3" y="563.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="79.3" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$307 (12 samples, 0.02%)</title><rect x="76.3" y="547.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="79.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (62 samples, 0.13%)</title><rect x="76.6" y="595.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (62 samples, 0.13%)</title><rect x="76.6" y="579.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="79.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$307/339638944.apply (34 samples, 0.07%)</title><rect x="76.6" y="563.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (34 samples, 0.07%)</title><rect x="76.6" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (34 samples, 0.07%)</title><rect x="76.6" y="531.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (34 samples, 0.07%)</title><rect x="76.6" y="515.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="79.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.06%)</title><rect x="77.4" y="563.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (28 samples, 0.06%)</title><rect x="77.4" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.4" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.06%)</title><rect x="77.4" y="531.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="80.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (20 samples, 0.04%)</title><rect x="78.1" y="595.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="81.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (20 samples, 0.04%)</title><rect x="78.1" y="579.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.04%)</title><rect x="78.1" y="563.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="81.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (20 samples, 0.04%)</title><rect x="78.1" y="547.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (20 samples, 0.04%)</title><rect x="78.1" y="531.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="81.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (883 samples, 1.84%)</title><rect x="78.6" y="595.0" width="21.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.6" y="606.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (883 samples, 1.84%)</title><rect x="78.6" y="579.0" width="21.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="81.6" y="590.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange (68 samples, 0.14%)</title><rect x="78.6" y="563.0" width="1.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="81.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (793 samples, 1.65%)</title><rect x="80.2" y="563.0" width="19.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.2" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList (24 samples, 0.05%)</title><rect x="80.4" y="547.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="83.4" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (24 samples, 0.05%)</title><rect x="81.0" y="547.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="84.0" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (37 samples, 0.08%)</title><rect x="81.6" y="547.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.6" y="558.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (37 samples, 0.08%)</title><rect x="81.6" y="531.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.6" y="542.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (37 samples, 0.08%)</title><rect x="81.6" y="515.0" width="0.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="84.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (19 samples, 0.04%)</title><rect x="82.5" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.5" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (19 samples, 0.04%)</title><rect x="82.5" y="531.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="85.5" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver (56 samples, 0.12%)</title><rect x="82.9" y="547.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="85.9" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher (26 samples, 0.05%)</title><rect x="84.3" y="547.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="87.3" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request (45 samples, 0.09%)</title><rect x="85.0" y="547.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="88.0" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (40 samples, 0.08%)</title><rect x="86.1" y="547.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="89.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (224 samples, 0.47%)</title><rect x="87.0" y="547.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.0" y="558.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque (12 samples, 0.02%)</title><rect x="87.0" y="531.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="90.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (15 samples, 0.03%)</title><rect x="87.5" y="531.0" width="0.4" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="90.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.04%)</title><rect x="88.1" y="531.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.1" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.04%)</title><rect x="88.1" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.get$Lambda (17 samples, 0.04%)</title><rect x="88.1" y="499.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.1" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$299 (17 samples, 0.04%)</title><rect x="88.1" y="483.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="91.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (27 samples, 0.06%)</title><rect x="88.5" y="531.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.5" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (27 samples, 0.06%)</title><rect x="88.5" y="515.0" width="0.7" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="91.5" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber (21 samples, 0.04%)</title><rect x="89.2" y="531.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="92.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (21 samples, 0.04%)</title><rect x="89.7" y="531.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="92.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (96 samples, 0.20%)</title><rect x="90.2" y="531.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (31 samples, 0.06%)</title><rect x="90.4" y="515.0" width="0.8" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="93.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (17 samples, 0.04%)</title><rect x="91.2" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.2" y="526.0"></text>
</g>
<g>
<title>java.lang.Object (17 samples, 0.04%)</title><rect x="91.2" y="499.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="94.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (39 samples, 0.08%)</title><rect x="91.6" y="515.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="94.6" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (13 samples, 0.03%)</title><rect x="91.6" y="499.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="94.6" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (11 samples, 0.02%)</title><rect x="91.9" y="499.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="94.9" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter (15 samples, 0.03%)</title><rect x="92.2" y="499.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="95.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (154 samples, 0.32%)</title><rect x="92.5" y="547.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="95.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.03%)</title><rect x="92.5" y="531.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.5" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.03%)</title><rect x="92.5" y="515.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$$Lambda$218/1006706451.get$Lambda (13 samples, 0.03%)</title><rect x="92.5" y="499.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="95.5" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$$Lambda$218 (13 samples, 0.03%)</title><rect x="92.5" y="483.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="95.5" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription (12 samples, 0.02%)</title><rect x="92.9" y="531.0" width="0.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="95.9" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask (12 samples, 0.02%)</title><rect x="93.1" y="531.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="96.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.Demand (11 samples, 0.02%)</title><rect x="93.4" y="531.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="96.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (21 samples, 0.04%)</title><rect x="93.7" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.7" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (21 samples, 0.04%)</title><rect x="93.7" y="515.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="96.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (85 samples, 0.18%)</title><rect x="94.2" y="531.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="97.2" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SynchronizedRestartableTask (16 samples, 0.03%)</title><rect x="94.2" y="515.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="97.2" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (18 samples, 0.04%)</title><rect x="94.6" y="515.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="97.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (42 samples, 0.09%)</title><rect x="95.3" y="515.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="98.3" y="526.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (13 samples, 0.03%)</title><rect x="95.3" y="499.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="98.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (19 samples, 0.04%)</title><rect x="95.6" y="499.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="98.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (12 samples, 0.02%)</title><rect x="96.3" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.3" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.02%)</title><rect x="96.3" y="531.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.3" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.02%)</title><rect x="96.3" y="515.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="99.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$$Lambda$287/1911941319.get$Lambda (12 samples, 0.02%)</title><rect x="96.3" y="499.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.3" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$$Lambda$287 (12 samples, 0.02%)</title><rect x="96.3" y="483.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="99.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (45 samples, 0.09%)</title><rect x="96.6" y="547.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="99.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (45 samples, 0.09%)</title><rect x="96.6" y="531.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.6" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CacheKey (21 samples, 0.04%)</title><rect x="96.6" y="515.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="99.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (24 samples, 0.05%)</title><rect x="97.1" y="515.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.1" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (24 samples, 0.05%)</title><rect x="97.1" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="100.1" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (24 samples, 0.05%)</title><rect x="97.1" y="483.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (24 samples, 0.05%)</title><rect x="97.1" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.1" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (24 samples, 0.05%)</title><rect x="97.1" y="451.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="100.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (81 samples, 0.17%)</title><rect x="97.7" y="547.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/310623126.linkToTargetMethod (22 samples, 0.05%)</title><rect x="97.7" y="531.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.05%)</title><rect x="97.7" y="515.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$222/1637846157.get$Lambda (22 samples, 0.05%)</title><rect x="97.7" y="499.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.7" y="510.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl$$Lambda$222 (22 samples, 0.05%)</title><rect x="97.7" y="483.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="100.7" y="494.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (59 samples, 0.12%)</title><rect x="98.3" y="531.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="101.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$222/1637846157.run (59 samples, 0.12%)</title><rect x="98.3" y="515.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="101.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (59 samples, 0.12%)</title><rect x="98.3" y="499.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.3" y="510.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress (21 samples, 0.04%)</title><rect x="98.3" y="483.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="101.3" y="494.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (38 samples, 0.08%)</title><rect x="98.8" y="483.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.8" y="494.0"></text>
</g>
<g>
<title>java.net.InetSocketAddress$InetSocketAddressHolder (15 samples, 0.03%)</title><rect x="98.8" y="467.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="101.8" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (23 samples, 0.05%)</title><rect x="99.1" y="467.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.1" y="478.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (23 samples, 0.05%)</title><rect x="99.1" y="451.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.1" y="462.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (23 samples, 0.05%)</title><rect x="99.1" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.1" y="446.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (23 samples, 0.05%)</title><rect x="99.1" y="419.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.1" y="430.0"></text>
</g>
<g>
<title>java.net.InetAddress[] (23 samples, 0.05%)</title><rect x="99.1" y="403.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="102.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (22 samples, 0.05%)</title><rect x="99.7" y="563.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="102.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (22 samples, 0.05%)</title><rect x="99.7" y="547.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="102.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (26 samples, 0.05%)</title><rect x="100.2" y="659.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (26 samples, 0.05%)</title><rect x="100.2" y="643.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="103.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (26 samples, 0.05%)</title><rect x="100.2" y="627.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="103.2" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (26 samples, 0.05%)</title><rect x="100.2" y="611.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="103.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (124 samples, 0.26%)</title><rect x="100.9" y="659.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="103.9" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseTimerEvent (86 samples, 0.18%)</title><rect x="100.9" y="643.0" width="2.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="103.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (38 samples, 0.08%)</title><rect x="103.0" y="643.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="106.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (38 samples, 0.08%)</title><rect x="103.0" y="627.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.0" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.now (23 samples, 0.05%)</title><rect x="103.0" y="611.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.0" y="622.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (23 samples, 0.05%)</title><rect x="103.0" y="595.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.0" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (23 samples, 0.05%)</title><rect x="103.0" y="579.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.0" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.create (23 samples, 0.05%)</title><rect x="103.0" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.0" y="574.0"></text>
</g>
<g>
<title>java.time.Instant (23 samples, 0.05%)</title><rect x="103.0" y="547.0" width="0.5" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="106.0" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.03%)</title><rect x="103.5" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.5" y="622.0"></text>
</g>
<g>
<title>java/time/Duration.addTo (15 samples, 0.03%)</title><rect x="103.5" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="106.5" y="606.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.03%)</title><rect x="103.5" y="579.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.5" y="590.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.03%)</title><rect x="103.5" y="563.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.5" y="574.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (15 samples, 0.03%)</title><rect x="103.5" y="547.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.5" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.plus (15 samples, 0.03%)</title><rect x="103.5" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.5" y="542.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (15 samples, 0.03%)</title><rect x="103.5" y="515.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.5" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.create (15 samples, 0.03%)</title><rect x="103.5" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.5" y="510.0"></text>
</g>
<g>
<title>java.time.Instant (15 samples, 0.03%)</title><rect x="103.5" y="483.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="106.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 0.03%)</title><rect x="104.0" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 0.03%)</title><rect x="104.0" y="707.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (13 samples, 0.03%)</title><rect x="104.0" y="691.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (13 samples, 0.03%)</title><rect x="104.0" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (13 samples, 0.03%)</title><rect x="104.0" y="659.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="107.0" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (13 samples, 0.03%)</title><rect x="104.0" y="643.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.0" y="654.0"></text>
</g>
<g>
<title>java.lang.Object[] (13 samples, 0.03%)</title><rect x="104.0" y="627.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="107.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$129/576121827.get (255 samples, 0.53%)</title><rect x="104.3" y="739.0" width="6.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$proxy$7 (255 samples, 0.53%)</title><rect x="104.3" y="723.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (255 samples, 0.53%)</title><rect x="104.3" y="707.0" width="6.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.3" y="718.0"></text>
</g>
<g>
<title>one.nio.http.Response (22 samples, 0.05%)</title><rect x="104.3" y="691.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="107.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (75 samples, 0.16%)</title><rect x="104.8" y="691.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.8" y="702.0"></text>
</g>
<g>
<title>byte[] (30 samples, 0.06%)</title><rect x="104.8" y="675.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="107.8" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (28 samples, 0.06%)</title><rect x="105.6" y="675.0" width="0.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="108.6" y="686.0"></text>
</g>
<g>
<title>java.lang.String (17 samples, 0.04%)</title><rect x="106.2" y="675.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="109.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (112 samples, 0.23%)</title><rect x="106.7" y="691.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (106 samples, 0.22%)</title><rect x="106.8" y="675.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="109.8" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (81 samples, 0.17%)</title><rect x="106.8" y="659.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.8" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (81 samples, 0.17%)</title><rect x="106.8" y="643.0" width="2.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="109.8" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (13 samples, 0.03%)</title><rect x="108.8" y="659.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="111.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (12 samples, 0.02%)</title><rect x="109.1" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.1" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (12 samples, 0.02%)</title><rect x="109.1" y="643.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.1" y="654.0"></text>
</g>
<g>
<title>java.util.Optional (12 samples, 0.02%)</title><rect x="109.1" y="627.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="112.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (46 samples, 0.10%)</title><rect x="109.4" y="691.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="112.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (46 samples, 0.10%)</title><rect x="109.4" y="675.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="112.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (46 samples, 0.10%)</title><rect x="109.4" y="659.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.4" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (46 samples, 0.10%)</title><rect x="109.4" y="643.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="112.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (341 samples, 0.71%)</title><rect x="110.5" y="755.0" width="8.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (75 samples, 0.16%)</title><rect x="110.5" y="739.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="113.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (75 samples, 0.16%)</title><rect x="110.5" y="723.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (75 samples, 0.16%)</title><rect x="110.5" y="707.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (75 samples, 0.16%)</title><rect x="110.5" y="691.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (75 samples, 0.16%)</title><rect x="110.5" y="675.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (75 samples, 0.16%)</title><rect x="110.5" y="659.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (75 samples, 0.16%)</title><rect x="110.5" y="643.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (74 samples, 0.15%)</title><rect x="110.6" y="627.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="113.6" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (74 samples, 0.15%)</title><rect x="110.6" y="611.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="113.6" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (74 samples, 0.15%)</title><rect x="110.6" y="595.0" width="1.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="113.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (266 samples, 0.55%)</title><rect x="112.4" y="739.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (266 samples, 0.55%)</title><rect x="112.4" y="723.0" width="6.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.4" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$209/236399593.accept (266 samples, 0.55%)</title><rect x="112.4" y="707.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="115.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$6 (266 samples, 0.55%)</title><rect x="112.4" y="691.0" width="6.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.4" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (42 samples, 0.09%)</title><rect x="112.4" y="675.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="115.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (42 samples, 0.09%)</title><rect x="112.4" y="659.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$458/1624032042.get$Lambda (15 samples, 0.03%)</title><rect x="112.4" y="643.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="115.4" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$458 (15 samples, 0.03%)</title><rect x="112.4" y="627.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="115.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$459/714641870.get$Lambda (11 samples, 0.02%)</title><rect x="112.7" y="643.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="115.7" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$459 (11 samples, 0.02%)</title><rect x="112.7" y="627.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="115.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$463/325801814.get$Lambda (16 samples, 0.03%)</title><rect x="113.0" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.0" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$463 (16 samples, 0.03%)</title><rect x="113.0" y="627.0" width="0.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="116.0" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.MergeResponses (38 samples, 0.08%)</title><rect x="113.4" y="675.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="116.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (186 samples, 0.39%)</title><rect x="114.3" y="675.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.3" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (91 samples, 0.19%)</title><rect x="114.3" y="659.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.3" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (91 samples, 0.19%)</title><rect x="114.3" y="643.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (59 samples, 0.12%)</title><rect x="114.3" y="627.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.3" y="638.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (59 samples, 0.12%)</title><rect x="114.3" y="611.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.3" y="622.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.12%)</title><rect x="114.3" y="595.0" width="1.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="117.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 0.07%)</title><rect x="115.8" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="118.8" y="638.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (32 samples, 0.07%)</title><rect x="115.8" y="611.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="118.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$458/1624032042.get (95 samples, 0.20%)</title><rect x="116.6" y="659.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/MergeResponses.mergePutResponses (95 samples, 0.20%)</title><rect x="116.6" y="643.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="119.6" y="654.0"></text>
</g>
<g>
<title>one.nio.http.Response (17 samples, 0.04%)</title><rect x="116.6" y="627.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="119.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (78 samples, 0.16%)</title><rect x="117.0" y="627.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.0" y="638.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.09%)</title><rect x="117.0" y="611.0" width="1.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="120.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.05%)</title><rect x="118.0" y="611.0" width="0.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="121.0" y="622.0"></text>
</g>
<g>
<title>java.lang.String (13 samples, 0.03%)</title><rect x="118.6" y="611.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="121.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (864 samples, 1.80%)</title><rect x="118.9" y="755.0" width="21.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.9" y="766.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (821 samples, 1.71%)</title><rect x="118.9" y="739.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (812 samples, 1.69%)</title><rect x="118.9" y="723.0" width="19.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (812 samples, 1.69%)</title><rect x="118.9" y="707.0" width="19.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.9" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (812 samples, 1.69%)</title><rect x="118.9" y="691.0" width="19.9" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="121.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (43 samples, 0.09%)</title><rect x="139.0" y="739.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="142.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (39 samples, 0.08%)</title><rect x="139.0" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="142.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (39 samples, 0.08%)</title><rect x="139.0" y="707.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.0" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (39 samples, 0.08%)</title><rect x="139.0" y="691.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="142.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1348530906.run (819 samples, 1.70%)</title><rect x="140.1" y="755.0" width="20.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (819 samples, 1.70%)</title><rect x="140.1" y="739.0" width="20.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (819 samples, 1.70%)</title><rect x="140.1" y="723.0" width="20.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (819 samples, 1.70%)</title><rect x="140.1" y="707.0" width="20.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="143.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (819 samples, 1.70%)</title><rect x="140.1" y="691.0" width="20.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="143.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (819 samples, 1.70%)</title><rect x="140.1" y="675.0" width="20.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (819 samples, 1.70%)</title><rect x="140.1" y="659.0" width="20.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (819 samples, 1.70%)</title><rect x="140.1" y="643.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="143.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (819 samples, 1.70%)</title><rect x="140.1" y="627.0" width="20.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (819 samples, 1.70%)</title><rect x="140.1" y="611.0" width="20.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (819 samples, 1.70%)</title><rect x="140.1" y="595.0" width="20.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="143.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (740 samples, 1.54%)</title><rect x="140.1" y="579.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.1" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (51 samples, 0.11%)</title><rect x="140.1" y="563.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="143.1" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (51 samples, 0.11%)</title><rect x="140.1" y="547.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="143.1" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$387/1884261112.get$Lambda (14 samples, 0.03%)</title><rect x="140.1" y="531.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="143.1" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$387 (14 samples, 0.03%)</title><rect x="140.1" y="515.0" width="0.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="143.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$408/866172772.get$Lambda (24 samples, 0.05%)</title><rect x="140.4" y="531.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.4" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$408 (24 samples, 0.05%)</title><rect x="140.4" y="515.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="143.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$409/137632694.get$Lambda (13 samples, 0.03%)</title><rect x="141.0" y="531.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.0" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$409 (13 samples, 0.03%)</title><rect x="141.0" y="515.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="144.0" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (689 samples, 1.43%)</title><rect x="141.3" y="563.0" width="16.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (30 samples, 0.06%)</title><rect x="141.3" y="547.0" width="0.8" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="144.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (659 samples, 1.37%)</title><rect x="142.1" y="547.0" width="16.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="145.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (659 samples, 1.37%)</title><rect x="142.1" y="531.0" width="16.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (659 samples, 1.37%)</title><rect x="142.1" y="515.0" width="16.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="145.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (128 samples, 0.27%)</title><rect x="142.1" y="499.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="145.1" y="510.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (41 samples, 0.09%)</title><rect x="142.1" y="483.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="145.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$402/198896344.apply (86 samples, 0.18%)</title><rect x="143.1" y="483.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (86 samples, 0.18%)</title><rect x="143.1" y="467.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (86 samples, 0.18%)</title><rect x="143.1" y="451.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.1" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (22 samples, 0.05%)</title><rect x="143.1" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.1" y="446.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (22 samples, 0.05%)</title><rect x="143.1" y="419.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.1" y="430.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (22 samples, 0.05%)</title><rect x="143.1" y="403.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="146.1" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (64 samples, 0.13%)</title><rect x="143.6" y="435.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.6" y="446.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.03%)</title><rect x="143.6" y="419.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.6" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.03%)</title><rect x="143.6" y="403.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.6" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$410/679706780.get$Lambda (15 samples, 0.03%)</title><rect x="143.6" y="387.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.6" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$410 (15 samples, 0.03%)</title><rect x="143.6" y="371.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="146.6" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (49 samples, 0.10%)</title><rect x="144.0" y="419.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (49 samples, 0.10%)</title><rect x="144.0" y="403.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.0" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (31 samples, 0.06%)</title><rect x="144.0" y="387.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="147.0" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="144.8" y="387.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="144.8" y="371.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.8" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="144.8" y="355.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="147.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (531 samples, 1.10%)</title><rect x="145.2" y="499.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (531 samples, 1.10%)</title><rect x="145.2" y="483.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.apply (531 samples, 1.10%)</title><rect x="145.2" y="467.0" width="13.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (531 samples, 1.10%)</title><rect x="145.2" y="451.0" width="13.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (531 samples, 1.10%)</title><rect x="145.2" y="435.0" width="13.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="148.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/311098875.apply (531 samples, 1.10%)</title><rect x="145.2" y="419.0" width="13.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (531 samples, 1.10%)</title><rect x="145.2" y="403.0" width="13.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.2" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (17 samples, 0.04%)</title><rect x="145.2" y="387.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.2" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (17 samples, 0.04%)</title><rect x="145.2" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$402/198896344.get$Lambda (17 samples, 0.04%)</title><rect x="145.2" y="355.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.2" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$402 (17 samples, 0.04%)</title><rect x="145.2" y="339.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="148.2" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (55 samples, 0.11%)</title><rect x="145.6" y="387.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.6" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (55 samples, 0.11%)</title><rect x="145.6" y="371.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (29 samples, 0.06%)</title><rect x="145.6" y="355.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="148.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="146.3" y="355.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="149.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="146.3" y="339.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="149.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.05%)</title><rect x="146.3" y="323.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="149.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (459 samples, 0.95%)</title><rect x="147.0" y="387.0" width="11.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (139 samples, 0.29%)</title><rect x="147.0" y="371.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (139 samples, 0.29%)</title><rect x="147.0" y="355.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.0" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (139 samples, 0.29%)</title><rect x="147.0" y="339.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$389/366008206.accept (63 samples, 0.13%)</title><rect x="147.0" y="323.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.0" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (63 samples, 0.13%)</title><rect x="147.0" y="307.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (63 samples, 0.13%)</title><rect x="147.0" y="291.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="150.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.03%)</title><rect x="147.0" y="275.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.0" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.03%)</title><rect x="147.0" y="259.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.0" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$391/399698725.get$Lambda (13 samples, 0.03%)</title><rect x="147.0" y="243.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.0" y="254.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$$Lambda$391 (13 samples, 0.03%)</title><rect x="147.0" y="227.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="150.0" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (50 samples, 0.10%)</title><rect x="147.3" y="275.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.3" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (50 samples, 0.10%)</title><rect x="147.3" y="259.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.3" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.05%)</title><rect x="147.3" y="243.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="150.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="147.9" y="243.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.9" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (25 samples, 0.05%)</title><rect x="147.9" y="227.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.9" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.05%)</title><rect x="147.9" y="211.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="150.9" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$397/1003985293.accept (76 samples, 0.16%)</title><rect x="148.5" y="323.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (76 samples, 0.16%)</title><rect x="148.5" y="307.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (76 samples, 0.16%)</title><rect x="148.5" y="291.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.5" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (76 samples, 0.16%)</title><rect x="148.5" y="275.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (76 samples, 0.16%)</title><rect x="148.5" y="259.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.5" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (76 samples, 0.16%)</title><rect x="148.5" y="243.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.5" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (76 samples, 0.16%)</title><rect x="148.5" y="227.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.5" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (76 samples, 0.16%)</title><rect x="148.5" y="211.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.5" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (76 samples, 0.16%)</title><rect x="148.5" y="195.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.5" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (76 samples, 0.16%)</title><rect x="148.5" y="179.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.5" y="190.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (29 samples, 0.06%)</title><rect x="148.5" y="163.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.5" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (29 samples, 0.06%)</title><rect x="148.5" y="147.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.5" y="158.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (14 samples, 0.03%)</title><rect x="148.5" y="131.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="151.5" y="142.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (15 samples, 0.03%)</title><rect x="148.9" y="131.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.9" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (15 samples, 0.03%)</title><rect x="148.9" y="115.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.9" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (15 samples, 0.03%)</title><rect x="148.9" y="99.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.9" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (15 samples, 0.03%)</title><rect x="148.9" y="83.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.9" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (15 samples, 0.03%)</title><rect x="148.9" y="67.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="151.9" y="78.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (15 samples, 0.03%)</title><rect x="148.9" y="51.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="151.9" y="62.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (47 samples, 0.10%)</title><rect x="149.2" y="163.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.2" y="174.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (47 samples, 0.10%)</title><rect x="149.2" y="147.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.2" y="158.0"></text>
</g>
<g>
<title>java/util/List.of (18 samples, 0.04%)</title><rect x="149.2" y="131.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="152.2" y="142.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (18 samples, 0.04%)</title><rect x="149.2" y="115.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="152.2" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (29 samples, 0.06%)</title><rect x="149.7" y="131.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.7" y="142.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Exchange$DataPair (15 samples, 0.03%)</title><rect x="149.7" y="115.0" width="0.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="152.7" y="126.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (14 samples, 0.03%)</title><rect x="150.1" y="115.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.1" y="126.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (14 samples, 0.03%)</title><rect x="150.1" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.1" y="110.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (14 samples, 0.03%)</title><rect x="150.1" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.1" y="94.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (14 samples, 0.03%)</title><rect x="150.1" y="67.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="153.1" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (14 samples, 0.03%)</title><rect x="150.1" y="51.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.1" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (14 samples, 0.03%)</title><rect x="150.1" y="35.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="153.1" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (320 samples, 0.67%)</title><rect x="150.4" y="371.0" width="7.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.4" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Request$FixedContentSubscriber (30 samples, 0.06%)</title><rect x="150.4" y="355.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="153.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (15 samples, 0.03%)</title><rect x="151.1" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (15 samples, 0.03%)</title><rect x="151.1" y="339.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="154.1" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (15 samples, 0.03%)</title><rect x="151.1" y="323.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="154.1" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (275 samples, 0.57%)</title><rect x="151.5" y="355.0" width="6.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.5" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher (11 samples, 0.02%)</title><rect x="151.5" y="339.0" width="0.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="154.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (162 samples, 0.34%)</title><rect x="151.8" y="339.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.8" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (31 samples, 0.06%)</title><rect x="151.8" y="323.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.8" y="334.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (31 samples, 0.06%)</title><rect x="151.8" y="307.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="154.8" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription (30 samples, 0.06%)</title><rect x="152.5" y="323.0" width="0.8" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="155.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (101 samples, 0.21%)</title><rect x="153.3" y="323.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="156.3" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.PullPublisher$Subscription$PullTask (15 samples, 0.03%)</title><rect x="153.3" y="307.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="156.3" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler (22 samples, 0.05%)</title><rect x="153.8" y="307.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="156.8" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (17 samples, 0.04%)</title><rect x="154.3" y="307.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="157.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (17 samples, 0.04%)</title><rect x="154.3" y="291.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="157.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (40 samples, 0.08%)</title><rect x="154.8" y="307.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="157.8" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (15 samples, 0.03%)</title><rect x="154.8" y="291.0" width="0.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="157.8" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.SequentialScheduler$SchedulableTask (15 samples, 0.03%)</title><rect x="155.1" y="291.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="158.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (102 samples, 0.21%)</title><rect x="155.7" y="339.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.7" y="350.0"></text>
</g>
<g>
<title>java.util.ArrayList (17 samples, 0.04%)</title><rect x="155.7" y="323.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="158.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (46 samples, 0.10%)</title><rect x="156.2" y="323.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.2" y="334.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (32 samples, 0.07%)</title><rect x="156.2" y="307.0" width="0.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="159.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.03%)</title><rect x="156.9" y="307.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.9" y="318.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.03%)</title><rect x="156.9" y="291.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="159.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (39 samples, 0.08%)</title><rect x="157.3" y="323.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.3" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (39 samples, 0.08%)</title><rect x="157.3" y="307.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="160.3" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (39 samples, 0.08%)</title><rect x="157.3" y="291.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.3" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (39 samples, 0.08%)</title><rect x="157.3" y="275.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="160.3" y="286.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (39 samples, 0.08%)</title><rect x="157.3" y="259.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="160.3" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (39 samples, 0.08%)</title><rect x="157.3" y="243.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="160.3" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (79 samples, 0.16%)</title><rect x="158.2" y="579.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (79 samples, 0.16%)</title><rect x="158.2" y="563.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (79 samples, 0.16%)</title><rect x="158.2" y="547.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="161.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (79 samples, 0.16%)</title><rect x="158.2" y="531.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="161.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (79 samples, 0.16%)</title><rect x="158.2" y="515.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="161.2" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (79 samples, 0.16%)</title><rect x="158.2" y="499.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.2" y="510.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (38 samples, 0.08%)</title><rect x="158.2" y="483.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="161.2" y="494.0"></text>
</g>
<g>
<title>java.nio.ByteBuffer[] (38 samples, 0.08%)</title><rect x="158.2" y="467.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="161.2" y="478.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (41 samples, 0.09%)</title><rect x="159.2" y="483.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.2" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$ListItr (41 samples, 0.09%)</title><rect x="159.2" y="467.0" width="1.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="162.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3,096 samples, 6.44%)</title><rect x="160.2" y="755.0" width="75.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="163.2" y="766.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3,096 samples, 6.44%)</title><rect x="160.2" y="739.0" width="75.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.2" y="750.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2,620 samples, 5.45%)</title><rect x="160.2" y="723.0" width="64.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.2" y="734.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (2,620 samples, 5.45%)</title><rect x="160.2" y="707.0" width="64.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.2" y="718.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2,620 samples, 5.45%)</title><rect x="160.2" y="691.0" width="64.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.2" y="702.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (51 samples, 0.11%)</title><rect x="160.2" y="675.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (51 samples, 0.11%)</title><rect x="160.2" y="659.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (51 samples, 0.11%)</title><rect x="160.2" y="643.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (51 samples, 0.11%)</title><rect x="160.2" y="627.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.2" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (24 samples, 0.05%)</title><rect x="160.2" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.2" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/201719260.invoke (24 samples, 0.05%)</title><rect x="160.2" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.2" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (24 samples, 0.05%)</title><rect x="160.2" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.2" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (24 samples, 0.05%)</title><rect x="160.2" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (24 samples, 0.05%)</title><rect x="160.2" y="547.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.2" y="558.0"></text>
</g>
<g>
<title>byte[] (24 samples, 0.05%)</title><rect x="160.2" y="531.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="163.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (27 samples, 0.06%)</title><rect x="160.8" y="611.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.8" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (27 samples, 0.06%)</title><rect x="160.8" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.8" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (27 samples, 0.06%)</title><rect x="160.8" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383/1051865462.get$Lambda (27 samples, 0.06%)</title><rect x="160.8" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383 (27 samples, 0.06%)</title><rect x="160.8" y="547.0" width="0.6" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="163.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2,569 samples, 5.34%)</title><rect x="161.4" y="675.0" width="63.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.4" y="686.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (2,569 samples, 5.34%)</title><rect x="161.4" y="659.0" width="63.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="164.4" y="670.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,569 samples, 5.34%)</title><rect x="161.4" y="643.0" width="63.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="164.4" y="654.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (2,569 samples, 5.34%)</title><rect x="161.4" y="627.0" width="63.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="164.4" y="638.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1,293 samples, 2.69%)</title><rect x="161.4" y="611.0" width="31.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.4" y="622.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,293 samples, 2.69%)</title><rect x="161.4" y="595.0" width="31.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.4" y="606.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,293 samples, 2.69%)</title><rect x="161.4" y="579.0" width="31.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="164.4" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1,293 samples, 2.69%)</title><rect x="161.4" y="563.0" width="31.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.4" y="574.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1,293 samples, 2.69%)</title><rect x="161.4" y="547.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="164.4" y="558.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1,293 samples, 2.69%)</title><rect x="161.4" y="531.0" width="31.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="164.4" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1,293 samples, 2.69%)</title><rect x="161.4" y="515.0" width="31.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.4" y="526.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1,262 samples, 2.62%)</title><rect x="161.4" y="499.0" width="31.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.4" y="510.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1,262 samples, 2.62%)</title><rect x="161.4" y="483.0" width="31.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="164.4" y="494.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1,238 samples, 2.57%)</title><rect x="161.4" y="467.0" width="30.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.4" y="478.0">ja..</text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniRelay (17 samples, 0.04%)</title><rect x="161.4" y="451.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="164.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/699148914.apply (1,168 samples, 2.43%)</title><rect x="161.9" y="451.0" width="28.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="164.9" y="462.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1,168 samples, 2.43%)</title><rect x="161.9" y="435.0" width="28.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="164.9" y="446.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.03%)</title><rect x="161.9" y="419.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="164.9" y="430.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.03%)</title><rect x="161.9" y="403.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="164.9" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$450/1883991773.get$Lambda (16 samples, 0.03%)</title><rect x="161.9" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="164.9" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$450 (16 samples, 0.03%)</title><rect x="161.9" y="371.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="164.9" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (50 samples, 0.10%)</title><rect x="162.2" y="419.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.2" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (50 samples, 0.10%)</title><rect x="162.2" y="403.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.2" y="414.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (33 samples, 0.07%)</title><rect x="162.2" y="387.0" width="0.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="165.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.04%)</title><rect x="163.1" y="387.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="166.1" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (17 samples, 0.04%)</title><rect x="163.1" y="371.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="166.1" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (17 samples, 0.04%)</title><rect x="163.1" y="355.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="166.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1,102 samples, 2.29%)</title><rect x="163.5" y="419.0" width="27.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="166.5" y="430.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (16 samples, 0.03%)</title><rect x="163.5" y="403.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.5" y="414.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (16 samples, 0.03%)</title><rect x="163.5" y="387.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="166.5" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$449/1029797973.get$Lambda (16 samples, 0.03%)</title><rect x="163.5" y="371.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="166.5" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$$Lambda$449 (16 samples, 0.03%)</title><rect x="163.5" y="355.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="166.5" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (63 samples, 0.13%)</title><rect x="163.9" y="403.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="166.9" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (63 samples, 0.13%)</title><rect x="163.9" y="387.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.9" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (40 samples, 0.08%)</title><rect x="163.9" y="371.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="166.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.05%)</title><rect x="164.8" y="371.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="167.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (23 samples, 0.05%)</title><rect x="164.8" y="355.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.8" y="366.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (23 samples, 0.05%)</title><rect x="164.8" y="339.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="167.8" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1,023 samples, 2.13%)</title><rect x="165.4" y="403.0" width="25.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="168.4" y="414.0">j..</text>
</g>
<g>
<title>jdk.internal.net.http.ResponseInfoImpl (18 samples, 0.04%)</title><rect x="165.4" y="387.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="168.4" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (860 samples, 1.79%)</title><rect x="165.8" y="387.0" width="21.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="168.8" y="398.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (19 samples, 0.04%)</title><rect x="165.8" y="371.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="168.8" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (19 samples, 0.04%)</title><rect x="165.8" y="355.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/740613335.linkToTargetMethod (35 samples, 0.07%)</title><rect x="166.3" y="371.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="169.3" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1957461316.invokeStatic (35 samples, 0.07%)</title><rect x="166.3" y="355.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1058928207.get$Lambda (35 samples, 0.07%)</title><rect x="166.3" y="339.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.3" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$420 (35 samples, 0.07%)</title><rect x="166.3" y="323.0" width="0.9" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="169.3" y="334.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (158 samples, 0.33%)</title><rect x="167.2" y="371.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.2" y="382.0"></text>
</g>
<g>
<title>java/util/Collection.stream (75 samples, 0.16%)</title><rect x="167.2" y="355.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.2" y="366.0"></text>
</g>
<g>
<title>java/util/List.spliterator (34 samples, 0.07%)</title><rect x="167.2" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.2" y="350.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (34 samples, 0.07%)</title><rect x="167.2" y="323.0" width="0.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="170.2" y="334.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (41 samples, 0.09%)</title><rect x="168.0" y="339.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (41 samples, 0.09%)</title><rect x="168.0" y="323.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="171.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (39 samples, 0.08%)</title><rect x="169.0" y="355.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.0" y="366.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (39 samples, 0.08%)</title><rect x="169.0" y="339.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="172.0" y="350.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (39 samples, 0.08%)</title><rect x="169.0" y="323.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="172.0" y="334.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.03%)</title><rect x="169.0" y="307.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.0" y="318.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (13 samples, 0.03%)</title><rect x="169.0" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.0" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (13 samples, 0.03%)</title><rect x="169.0" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.0" y="286.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5$1 (13 samples, 0.03%)</title><rect x="169.0" y="259.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="172.0" y="270.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$417/407033564.get (17 samples, 0.04%)</title><rect x="169.3" y="307.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="172.3" y="318.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfLong (17 samples, 0.04%)</title><rect x="169.3" y="291.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="172.3" y="302.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (44 samples, 0.09%)</title><rect x="170.0" y="355.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="173.0" y="366.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$5 (44 samples, 0.09%)</title><rect x="170.0" y="339.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="173.0" y="350.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (116 samples, 0.24%)</title><rect x="171.0" y="371.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="174.0" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (62 samples, 0.13%)</title><rect x="171.0" y="355.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.0" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.07%)</title><rect x="171.0" y="339.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="174.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="171.9" y="339.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (26 samples, 0.05%)</title><rect x="171.9" y="323.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.9" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (26 samples, 0.05%)</title><rect x="171.9" y="307.0" width="0.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="174.9" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (54 samples, 0.11%)</title><rect x="172.6" y="355.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.6" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (54 samples, 0.11%)</title><rect x="172.6" y="339.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="175.6" y="350.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (36 samples, 0.07%)</title><rect x="172.6" y="323.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="175.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="173.5" y="323.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (18 samples, 0.04%)</title><rect x="173.5" y="307.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="176.5" y="318.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (18 samples, 0.04%)</title><rect x="173.5" y="291.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="176.5" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$ClientRefCountTracker (18 samples, 0.04%)</title><rect x="173.9" y="371.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="176.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$Http1BodySubscriber (26 samples, 0.05%)</title><rect x="174.3" y="371.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="177.3" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (25 samples, 0.05%)</title><rect x="175.0" y="371.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="178.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (15 samples, 0.03%)</title><rect x="175.6" y="371.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="178.6" y="382.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (15 samples, 0.03%)</title><rect x="175.6" y="355.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="178.6" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (448 samples, 0.93%)</title><rect x="176.0" y="371.0" width="10.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.0" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1058928207.run (448 samples, 0.93%)</title><rect x="176.0" y="355.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (448 samples, 0.93%)</title><rect x="176.0" y="339.0" width="10.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="179.0" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (55 samples, 0.11%)</title><rect x="176.0" y="323.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="179.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (55 samples, 0.11%)</title><rect x="176.0" y="307.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="179.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/148987113.get$Lambda (20 samples, 0.04%)</title><rect x="176.2" y="291.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.2" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$422 (20 samples, 0.04%)</title><rect x="176.2" y="275.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="179.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$435/1845201983.get$Lambda (25 samples, 0.05%)</title><rect x="176.7" y="291.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.7" y="302.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1Response$$Lambda$435 (25 samples, 0.05%)</title><rect x="176.7" y="275.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="179.7" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (60 samples, 0.12%)</title><rect x="177.3" y="323.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.3" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (60 samples, 0.12%)</title><rect x="177.3" y="307.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.3" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (33 samples, 0.07%)</title><rect x="177.3" y="291.0" width="0.8" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="180.3" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.06%)</title><rect x="178.1" y="291.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (27 samples, 0.06%)</title><rect x="178.1" y="275.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.1" y="286.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (27 samples, 0.06%)</title><rect x="178.1" y="259.0" width="0.7" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="181.1" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent (33 samples, 0.07%)</title><rect x="178.8" y="323.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="181.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (28 samples, 0.06%)</title><rect x="179.6" y="323.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (28 samples, 0.06%)</title><rect x="179.6" y="307.0" width="0.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="182.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (61 samples, 0.13%)</title><rect x="180.3" y="323.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.3" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (61 samples, 0.13%)</title><rect x="180.3" y="307.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="183.3" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (22 samples, 0.05%)</title><rect x="180.3" y="291.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.3" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (22 samples, 0.05%)</title><rect x="180.3" y="275.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="183.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$438/275199194.get$Lambda (22 samples, 0.05%)</title><rect x="180.3" y="259.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.3" y="270.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$438 (22 samples, 0.05%)</title><rect x="180.3" y="243.0" width="0.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="183.3" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (39 samples, 0.08%)</title><rect x="180.8" y="291.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.8" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (39 samples, 0.08%)</title><rect x="180.8" y="275.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.8" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (39 samples, 0.08%)</title><rect x="180.8" y="259.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.8" y="270.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (25 samples, 0.05%)</title><rect x="180.8" y="243.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="183.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.03%)</title><rect x="181.4" y="243.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (14 samples, 0.03%)</title><rect x="181.4" y="227.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="184.4" y="238.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.03%)</title><rect x="181.4" y="211.0" width="0.4" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="184.4" y="222.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (73 samples, 0.15%)</title><rect x="181.8" y="323.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="184.8" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (73 samples, 0.15%)</title><rect x="181.8" y="307.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="184.8" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/797814020.invoke (73 samples, 0.15%)</title><rect x="181.8" y="291.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.8" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (73 samples, 0.15%)</title><rect x="181.8" y="275.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.8" y="286.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (20 samples, 0.04%)</title><rect x="181.8" y="259.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="184.8" y="270.0"></text>
</g>
<g>
<title>java.lang.String (20 samples, 0.04%)</title><rect x="181.8" y="243.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="184.8" y="254.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (53 samples, 0.11%)</title><rect x="182.3" y="259.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.3" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (53 samples, 0.11%)</title><rect x="182.3" y="243.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.3" y="254.0"></text>
</g>
<g>
<title>byte[] (53 samples, 0.11%)</title><rect x="182.3" y="227.0" width="1.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="185.3" y="238.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (138 samples, 0.29%)</title><rect x="183.6" y="323.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.6" y="334.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseContent$FixedLengthBodyParser (45 samples, 0.09%)</title><rect x="183.6" y="307.0" width="1.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="186.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (93 samples, 0.19%)</title><rect x="184.7" y="307.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (93 samples, 0.19%)</title><rect x="184.7" y="291.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="187.7" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/797814020.invoke (93 samples, 0.19%)</title><rect x="184.7" y="275.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="187.7" y="286.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (93 samples, 0.19%)</title><rect x="184.7" y="259.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="187.7" y="270.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (19 samples, 0.04%)</title><rect x="184.7" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="187.7" y="254.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.04%)</title><rect x="184.7" y="227.0" width="0.4" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="187.7" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (74 samples, 0.15%)</title><rect x="185.1" y="243.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.1" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (74 samples, 0.15%)</title><rect x="185.1" y="227.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="188.1" y="238.0"></text>
</g>
<g>
<title>byte[] (74 samples, 0.15%)</title><rect x="185.1" y="211.0" width="1.8" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="188.1" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/PutDeleteBodyHandler.apply (145 samples, 0.30%)</title><rect x="186.9" y="387.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.9" y="398.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.replacing (60 samples, 0.12%)</title><rect x="186.9" y="371.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.9" y="382.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ResponseSubscribers$NullSubscriber (27 samples, 0.06%)</title><rect x="187.1" y="355.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="190.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.&lt;init&gt; (27 samples, 0.06%)</title><rect x="187.8" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="190.8" y="366.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicBoolean (13 samples, 0.03%)</title><rect x="187.8" y="339.0" width="0.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="190.8" y="350.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (14 samples, 0.03%)</title><rect x="188.1" y="339.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="191.1" y="350.0"></text>
</g>
<g>
<title>one.nio.http.Response (16 samples, 0.03%)</title><rect x="188.4" y="371.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="191.4" y="382.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (69 samples, 0.14%)</title><rect x="188.8" y="371.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.8" y="382.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.05%)</title><rect x="188.8" y="355.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="191.8" y="366.0"></text>
</g>
<g>
<title>java.lang.String[] (26 samples, 0.05%)</title><rect x="189.4" y="355.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="192.4" y="366.0"></text>
</g>
<g>
<title>java.lang.String (18 samples, 0.04%)</title><rect x="190.1" y="355.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="193.1" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$359/1611607641.apply (53 samples, 0.11%)</title><rect x="190.5" y="451.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (53 samples, 0.11%)</title><rect x="190.5" y="435.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (21 samples, 0.04%)</title><rect x="190.5" y="419.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.5" y="430.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (21 samples, 0.04%)</title><rect x="190.5" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.5" y="414.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (21 samples, 0.04%)</title><rect x="190.5" y="387.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.5" y="398.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (21 samples, 0.04%)</title><rect x="190.5" y="371.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="193.5" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (32 samples, 0.07%)</title><rect x="191.0" y="419.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="194.0" y="430.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (32 samples, 0.07%)</title><rect x="191.0" y="403.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="194.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (24 samples, 0.05%)</title><rect x="191.8" y="467.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (24 samples, 0.05%)</title><rect x="191.8" y="451.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.8" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/2115167929.apply (24 samples, 0.05%)</title><rect x="191.8" y="435.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="194.8" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (24 samples, 0.05%)</title><rect x="191.8" y="419.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="194.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (24 samples, 0.05%)</title><rect x="191.8" y="403.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="194.8" y="414.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (24 samples, 0.05%)</title><rect x="191.8" y="387.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="194.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$410/679706780.apply (31 samples, 0.06%)</title><rect x="192.4" y="499.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="195.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (31 samples, 0.06%)</title><rect x="192.4" y="483.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.4" y="494.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Response (31 samples, 0.06%)</title><rect x="192.4" y="467.0" width="0.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="195.4" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (1,276 samples, 2.65%)</title><rect x="193.1" y="611.0" width="31.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.1" y="622.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (90 samples, 0.19%)</title><rect x="193.1" y="595.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (90 samples, 0.19%)</title><rect x="193.1" y="579.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.1" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (90 samples, 0.19%)</title><rect x="193.1" y="563.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.1" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (90 samples, 0.19%)</title><rect x="193.1" y="547.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="196.1" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (90 samples, 0.19%)</title><rect x="193.1" y="531.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="196.1" y="542.0"></text>
</g>
<g>
<title>byte[] (90 samples, 0.19%)</title><rect x="193.1" y="515.0" width="2.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="196.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (44 samples, 0.09%)</title><rect x="195.4" y="595.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (44 samples, 0.09%)</title><rect x="195.4" y="579.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.4" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (44 samples, 0.09%)</title><rect x="195.4" y="563.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.4" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (44 samples, 0.09%)</title><rect x="195.4" y="547.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (44 samples, 0.09%)</title><rect x="195.4" y="531.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="198.4" y="542.0"></text>
</g>
<g>
<title>byte[] (44 samples, 0.09%)</title><rect x="195.4" y="515.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="198.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (129 samples, 0.27%)</title><rect x="196.4" y="595.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="199.4" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (17 samples, 0.04%)</title><rect x="196.4" y="579.0" width="0.5" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="199.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (42 samples, 0.09%)</title><rect x="196.9" y="579.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (42 samples, 0.09%)</title><rect x="196.9" y="563.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (16 samples, 0.03%)</title><rect x="196.9" y="547.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="199.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (26 samples, 0.05%)</title><rect x="197.2" y="547.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="200.2" y="558.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.05%)</title><rect x="197.2" y="531.0" width="0.7" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="200.2" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (26 samples, 0.05%)</title><rect x="197.9" y="579.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="200.9" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (26 samples, 0.05%)</title><rect x="197.9" y="563.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.9" y="574.0"></text>
</g>
<g>
<title>byte[] (26 samples, 0.05%)</title><rect x="197.9" y="547.0" width="0.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="200.9" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (44 samples, 0.09%)</title><rect x="198.5" y="579.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (44 samples, 0.09%)</title><rect x="198.5" y="563.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="201.5" y="574.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.03%)</title><rect x="198.5" y="547.0" width="0.4" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="201.5" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (29 samples, 0.06%)</title><rect x="198.9" y="547.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="201.9" y="558.0"></text>
</g>
<g>
<title>byte[] (29 samples, 0.06%)</title><rect x="198.9" y="531.0" width="0.7" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="201.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (344 samples, 0.72%)</title><rect x="199.6" y="595.0" width="8.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="202.6" y="606.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (344 samples, 0.72%)</title><rect x="199.6" y="579.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.6" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (344 samples, 0.72%)</title><rect x="199.6" y="563.0" width="8.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="202.6" y="574.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (12 samples, 0.02%)</title><rect x="199.6" y="547.0" width="0.3" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="202.6" y="558.0"></text>
</g>
<g>
<title>java.util.ArrayList (24 samples, 0.05%)</title><rect x="199.9" y="547.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="202.9" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (40 samples, 0.08%)</title><rect x="200.5" y="547.0" width="1.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="203.5" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.04%)</title><rect x="201.6" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.6" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.04%)</title><rect x="201.6" y="531.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.6" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (21 samples, 0.04%)</title><rect x="201.6" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.6" y="526.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (21 samples, 0.04%)</title><rect x="201.6" y="499.0" width="0.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="204.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (32 samples, 0.07%)</title><rect x="202.1" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.1" y="558.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (32 samples, 0.07%)</title><rect x="202.1" y="531.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="205.1" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (173 samples, 0.36%)</title><rect x="202.9" y="547.0" width="4.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="205.9" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (173 samples, 0.36%)</title><rect x="202.9" y="531.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (173 samples, 0.36%)</title><rect x="202.9" y="515.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (42 samples, 0.09%)</title><rect x="202.9" y="499.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="205.9" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (42 samples, 0.09%)</title><rect x="202.9" y="483.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="205.9" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (42 samples, 0.09%)</title><rect x="202.9" y="467.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="205.9" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (42 samples, 0.09%)</title><rect x="202.9" y="451.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="205.9" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (42 samples, 0.09%)</title><rect x="202.9" y="435.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="205.9" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (42 samples, 0.09%)</title><rect x="202.9" y="419.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.9" y="430.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (42 samples, 0.09%)</title><rect x="202.9" y="403.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="205.9" y="414.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.09%)</title><rect x="202.9" y="387.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="205.9" y="398.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.09%)</title><rect x="202.9" y="371.0" width="1.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="205.9" y="382.0"></text>
</g>
<g>
<title>java/util/List.copyOf (69 samples, 0.14%)</title><rect x="204.0" y="499.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="207.0" y="510.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (69 samples, 0.14%)</title><rect x="204.0" y="483.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.0" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (33 samples, 0.07%)</title><rect x="204.0" y="467.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="207.0" y="478.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.07%)</title><rect x="204.0" y="451.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="207.0" y="462.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.07%)</title><rect x="204.0" y="435.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="207.0" y="446.0"></text>
</g>
<g>
<title>java/util/List.of (36 samples, 0.07%)</title><rect x="204.8" y="467.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.8" y="478.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (36 samples, 0.07%)</title><rect x="204.8" y="451.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="207.8" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (62 samples, 0.13%)</title><rect x="205.7" y="499.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="208.7" y="510.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (62 samples, 0.13%)</title><rect x="205.7" y="483.0" width="1.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="208.7" y="494.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (35 samples, 0.07%)</title><rect x="207.2" y="547.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.2" y="558.0"></text>
</g>
<g>
<title>java.util.TreeMap (35 samples, 0.07%)</title><rect x="207.2" y="531.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="210.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (669 samples, 1.39%)</title><rect x="208.0" y="595.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.0" y="606.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (29 samples, 0.06%)</title><rect x="208.0" y="579.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="211.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (46 samples, 0.10%)</title><rect x="208.7" y="579.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.7" y="590.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (46 samples, 0.10%)</title><rect x="208.7" y="563.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="211.7" y="574.0"></text>
</g>
<g>
<title>byte[] (46 samples, 0.10%)</title><rect x="208.7" y="547.0" width="1.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="211.7" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (86 samples, 0.18%)</title><rect x="209.9" y="579.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="212.9" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (86 samples, 0.18%)</title><rect x="209.9" y="563.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="212.9" y="574.0"></text>
</g>
<g>
<title>java.lang.String (28 samples, 0.06%)</title><rect x="209.9" y="547.0" width="0.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="212.9" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.12%)</title><rect x="210.6" y="547.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="213.6" y="558.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.12%)</title><rect x="210.6" y="531.0" width="1.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="213.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (508 samples, 1.06%)</title><rect x="212.0" y="579.0" width="12.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="215.0" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (150 samples, 0.31%)</title><rect x="212.0" y="563.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="215.0" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (150 samples, 0.31%)</title><rect x="212.0" y="547.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.0" y="558.0"></text>
</g>
<g>
<title>java.lang.String (75 samples, 0.16%)</title><rect x="212.0" y="531.0" width="1.8" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="215.0" y="542.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (75 samples, 0.16%)</title><rect x="213.8" y="531.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.8" y="542.0"></text>
</g>
<g>
<title>byte[] (75 samples, 0.16%)</title><rect x="213.8" y="515.0" width="1.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="216.8" y="526.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (79 samples, 0.16%)</title><rect x="215.7" y="563.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="218.7" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (79 samples, 0.16%)</title><rect x="215.7" y="547.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.7" y="558.0"></text>
</g>
<g>
<title>byte[] (47 samples, 0.10%)</title><rect x="215.7" y="531.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="218.7" y="542.0"></text>
</g>
<g>
<title>java.lang.String (32 samples, 0.07%)</title><rect x="216.8" y="531.0" width="0.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="219.8" y="542.0"></text>
</g>
<g>
<title>java/lang/String.trim (74 samples, 0.15%)</title><rect x="217.6" y="563.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.6" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (74 samples, 0.15%)</title><rect x="217.6" y="547.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (74 samples, 0.15%)</title><rect x="217.6" y="531.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.6" y="542.0"></text>
</g>
<g>
<title>java.lang.String (39 samples, 0.08%)</title><rect x="217.6" y="515.0" width="1.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="220.6" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (35 samples, 0.07%)</title><rect x="218.6" y="515.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.6" y="526.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.07%)</title><rect x="218.6" y="499.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="221.6" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (76 samples, 0.16%)</title><rect x="219.4" y="563.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="222.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (76 samples, 0.16%)</title><rect x="219.4" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (76 samples, 0.16%)</title><rect x="219.4" y="531.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.4" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (76 samples, 0.16%)</title><rect x="219.4" y="515.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.4" y="526.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (76 samples, 0.16%)</title><rect x="219.4" y="499.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="222.4" y="510.0"></text>
</g>
<g>
<title>java.lang.Object[] (76 samples, 0.16%)</title><rect x="219.4" y="483.0" width="1.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="222.4" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (129 samples, 0.27%)</title><rect x="221.3" y="563.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.3" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (44 samples, 0.09%)</title><rect x="221.3" y="547.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="224.3" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (44 samples, 0.09%)</title><rect x="221.3" y="531.0" width="1.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="224.3" y="542.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (37 samples, 0.08%)</title><rect x="222.4" y="547.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="225.4" y="558.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (37 samples, 0.08%)</title><rect x="222.4" y="531.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="225.4" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$414/1135712284.apply (48 samples, 0.10%)</title><rect x="223.3" y="547.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (48 samples, 0.10%)</title><rect x="223.3" y="531.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="226.3" y="542.0"></text>
</g>
<g>
<title>java.util.ArrayList (48 samples, 0.10%)</title><rect x="223.3" y="515.0" width="1.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="226.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (476 samples, 0.99%)</title><rect x="224.4" y="723.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (476 samples, 0.99%)</title><rect x="224.4" y="707.0" width="11.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (476 samples, 0.99%)</title><rect x="224.4" y="691.0" width="11.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (476 samples, 0.99%)</title><rect x="224.4" y="675.0" width="11.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (476 samples, 0.99%)</title><rect x="224.4" y="659.0" width="11.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="227.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (467 samples, 0.97%)</title><rect x="224.4" y="643.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="227.4" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.07%)</title><rect x="224.4" y="627.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.07%)</title><rect x="224.4" y="611.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$329/1270823062.get$Lambda (17 samples, 0.04%)</title><rect x="224.4" y="595.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.4" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$329 (17 samples, 0.04%)</title><rect x="224.4" y="579.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="227.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$335/500555321.get$Lambda (17 samples, 0.04%)</title><rect x="224.9" y="595.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.9" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$$Lambda$335 (17 samples, 0.04%)</title><rect x="224.9" y="579.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="227.9" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription (21 samples, 0.04%)</title><rect x="225.3" y="627.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="228.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (24 samples, 0.05%)</title><rect x="225.8" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="228.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (24 samples, 0.05%)</title><rect x="225.8" y="611.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="228.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (16 samples, 0.03%)</title><rect x="226.0" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.0" y="606.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (16 samples, 0.03%)</title><rect x="226.0" y="579.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="229.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (388 samples, 0.81%)</title><rect x="226.4" y="627.0" width="9.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="229.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (388 samples, 0.81%)</title><rect x="226.4" y="611.0" width="9.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/1804270592.run (338 samples, 0.70%)</title><rect x="226.4" y="595.0" width="8.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (338 samples, 0.70%)</title><rect x="226.4" y="579.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (338 samples, 0.70%)</title><rect x="226.4" y="563.0" width="8.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="229.4" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (93 samples, 0.19%)</title><rect x="226.4" y="547.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="229.4" y="558.0"></text>
</g>
<g>
<title>java/util/Collection.stream (57 samples, 0.12%)</title><rect x="226.4" y="531.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.4" y="542.0"></text>
</g>
<g>
<title>java/util/List.spliterator (14 samples, 0.03%)</title><rect x="226.4" y="515.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="229.4" y="526.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (14 samples, 0.03%)</title><rect x="226.4" y="499.0" width="0.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="229.4" y="510.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (43 samples, 0.09%)</title><rect x="226.7" y="515.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.7" y="526.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (43 samples, 0.09%)</title><rect x="226.7" y="499.0" width="1.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="229.7" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (36 samples, 0.07%)</title><rect x="227.8" y="531.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="230.8" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (36 samples, 0.07%)</title><rect x="227.8" y="515.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="230.8" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (36 samples, 0.07%)</title><rect x="227.8" y="499.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="230.8" y="510.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$63/1029472813.get (25 samples, 0.05%)</title><rect x="227.8" y="483.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="230.8" y="494.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (25 samples, 0.05%)</title><rect x="227.8" y="467.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="230.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (11 samples, 0.02%)</title><rect x="228.4" y="483.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.4" y="494.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (11 samples, 0.02%)</title><rect x="228.4" y="467.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.4" y="478.0"></text>
</g>
<g>
<title>java/util/Optional.of (11 samples, 0.02%)</title><rect x="228.4" y="451.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="231.4" y="462.0"></text>
</g>
<g>
<title>java.util.Optional (11 samples, 0.02%)</title><rect x="228.4" y="435.0" width="0.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="231.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (245 samples, 0.51%)</title><rect x="228.7" y="547.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="231.7" y="558.0"></text>
</g>
<g>
<title>java/time/Instant.now (21 samples, 0.04%)</title><rect x="228.7" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.7" y="542.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (21 samples, 0.04%)</title><rect x="228.7" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="231.7" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (21 samples, 0.04%)</title><rect x="228.7" y="499.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="231.7" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.create (21 samples, 0.04%)</title><rect x="228.7" y="483.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.7" y="494.0"></text>
</g>
<g>
<title>java.time.Instant (21 samples, 0.04%)</title><rect x="228.7" y="467.0" width="0.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="231.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (224 samples, 0.47%)</title><rect x="229.2" y="531.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (99 samples, 0.21%)</title><rect x="229.2" y="515.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.2" y="526.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.02%)</title><rect x="229.2" y="499.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="232.2" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (12 samples, 0.02%)</title><rect x="229.2" y="483.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.2" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (12 samples, 0.02%)</title><rect x="229.2" y="467.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="232.2" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (12 samples, 0.02%)</title><rect x="229.2" y="451.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.2" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (12 samples, 0.02%)</title><rect x="229.2" y="435.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.2" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (12 samples, 0.02%)</title><rect x="229.2" y="419.0" width="0.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="232.2" y="430.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (24 samples, 0.05%)</title><rect x="229.5" y="499.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="232.5" y="510.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (24 samples, 0.05%)</title><rect x="229.5" y="483.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.5" y="494.0"></text>
</g>
<g>
<title>java/time/Instant.plus (24 samples, 0.05%)</title><rect x="229.5" y="467.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="232.5" y="478.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (24 samples, 0.05%)</title><rect x="229.5" y="451.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.5" y="462.0"></text>
</g>
<g>
<title>java/time/Instant.create (24 samples, 0.05%)</title><rect x="229.5" y="435.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.5" y="446.0"></text>
</g>
<g>
<title>java.time.Instant (24 samples, 0.05%)</title><rect x="229.5" y="419.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="232.5" y="430.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (27 samples, 0.06%)</title><rect x="230.1" y="499.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.1" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (27 samples, 0.06%)</title><rect x="230.1" y="483.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.1" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (27 samples, 0.06%)</title><rect x="230.1" y="467.0" width="0.6" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="233.1" y="478.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (17 samples, 0.04%)</title><rect x="230.7" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.7" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (17 samples, 0.04%)</title><rect x="230.7" y="483.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.7" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (17 samples, 0.04%)</title><rect x="230.7" y="467.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="233.7" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$ExpiryEntry (18 samples, 0.04%)</title><rect x="231.2" y="499.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="234.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (57 samples, 0.12%)</title><rect x="231.6" y="515.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="234.6" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap.get (37 samples, 0.08%)</title><rect x="231.6" y="499.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.6" y="510.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (37 samples, 0.08%)</title><rect x="231.6" y="483.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (37 samples, 0.08%)</title><rect x="231.6" y="467.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="234.6" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (37 samples, 0.08%)</title><rect x="231.6" y="451.0" width="0.9" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="234.6" y="462.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (20 samples, 0.04%)</title><rect x="232.5" y="499.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="235.5" y="510.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (20 samples, 0.04%)</title><rect x="232.5" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="235.5" y="494.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (20 samples, 0.04%)</title><rect x="232.5" y="467.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="235.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (68 samples, 0.14%)</title><rect x="233.0" y="515.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="236.0" y="526.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$CleanupTrigger (11 samples, 0.02%)</title><rect x="233.0" y="499.0" width="0.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="236.0" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (57 samples, 0.12%)</title><rect x="233.3" y="499.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="236.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (11 samples, 0.02%)</title><rect x="233.3" y="483.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.3" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (11 samples, 0.02%)</title><rect x="233.3" y="467.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="236.3" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (11 samples, 0.02%)</title><rect x="233.3" y="451.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.3" y="462.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription (11 samples, 0.02%)</title><rect x="233.3" y="435.0" width="0.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="236.3" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (46 samples, 0.10%)</title><rect x="233.5" y="483.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (46 samples, 0.10%)</title><rect x="233.5" y="467.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.5" y="478.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription (33 samples, 0.07%)</title><rect x="233.5" y="451.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="236.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (13 samples, 0.03%)</title><rect x="234.4" y="451.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.4" y="462.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicReference (13 samples, 0.03%)</title><rect x="234.4" y="435.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="237.4" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (50 samples, 0.10%)</title><rect x="234.7" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (50 samples, 0.10%)</title><rect x="234.7" y="579.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$NullSubscriber.onComplete (50 samples, 0.10%)</title><rect x="234.7" y="563.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (50 samples, 0.10%)</title><rect x="234.7" y="547.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (50 samples, 0.10%)</title><rect x="234.7" y="531.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="237.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (50 samples, 0.10%)</title><rect x="234.7" y="515.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (50 samples, 0.10%)</title><rect x="234.7" y="499.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.7" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/270619590.accept (50 samples, 0.10%)</title><rect x="234.7" y="483.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (50 samples, 0.10%)</title><rect x="234.7" y="467.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (50 samples, 0.10%)</title><rect x="234.7" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="237.7" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (50 samples, 0.10%)</title><rect x="234.7" y="435.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.7" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (50 samples, 0.10%)</title><rect x="234.7" y="419.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$450/1883991773.apply (50 samples, 0.10%)</title><rect x="234.7" y="403.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.7" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (50 samples, 0.10%)</title><rect x="234.7" y="387.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.7" y="398.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpResponseImpl (50 samples, 0.10%)</title><rect x="234.7" y="371.0" width="1.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="237.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1295475510.run (19,209 samples, 39.93%)</title><rect x="236.1" y="755.0" width="471.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="239.1" y="766.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/12954755..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (19,209 samples, 39.93%)</title><rect x="236.1" y="739.0" width="471.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.1" y="750.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (19,209 samples, 39.93%)</title><rect x="236.1" y="723.0" width="471.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="239.1" y="734.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>java/lang/String.getBytes (769 samples, 1.60%)</title><rect x="236.1" y="707.0" width="18.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="239.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (769 samples, 1.60%)</title><rect x="236.1" y="691.0" width="18.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="239.1" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (769 samples, 1.60%)</title><rect x="236.1" y="675.0" width="18.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="239.1" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (769 samples, 1.60%)</title><rect x="236.1" y="659.0" width="18.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="239.1" y="670.0"></text>
</g>
<g>
<title>byte[] (769 samples, 1.60%)</title><rect x="236.1" y="643.0" width="18.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="239.1" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,498 samples, 3.11%)</title><rect x="255.0" y="707.0" width="36.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.0" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,498 samples, 3.11%)</title><rect x="255.0" y="691.0" width="36.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.0" y="702.0">jav..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$209/236399593.get$Lambda (18 samples, 0.04%)</title><rect x="255.0" y="675.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="258.0" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$209 (18 samples, 0.04%)</title><rect x="255.0" y="659.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="258.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$411/644013256.get$Lambda (512 samples, 1.06%)</title><rect x="255.4" y="675.0" width="12.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="258.4" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$411 (512 samples, 1.06%)</title><rect x="255.4" y="659.0" width="12.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="258.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$412/681916020.get$Lambda (470 samples, 0.98%)</title><rect x="268.0" y="675.0" width="11.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.0" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$412 (470 samples, 0.98%)</title><rect x="268.0" y="659.0" width="11.5" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="271.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$413/748337080.get$Lambda (498 samples, 1.04%)</title><rect x="279.5" y="675.0" width="12.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="282.5" y="686.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$413 (498 samples, 1.04%)</title><rect x="279.5" y="659.0" width="12.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="282.5" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (26 samples, 0.05%)</title><rect x="291.7" y="707.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.7" y="718.0"></text>
</g>
<g>
<title>java.lang.Object[] (26 samples, 0.05%)</title><rect x="291.7" y="691.0" width="0.7" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="294.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (38 samples, 0.08%)</title><rect x="292.4" y="707.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (38 samples, 0.08%)</title><rect x="292.4" y="691.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (28 samples, 0.06%)</title><rect x="292.4" y="675.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="295.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (963 samples, 2.00%)</title><rect x="293.3" y="707.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.3" y="718.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (963 samples, 2.00%)</title><rect x="293.3" y="691.0" width="23.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.3" y="702.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (963 samples, 2.00%)</title><rect x="293.3" y="675.0" width="23.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.3" y="686.0">j..</text>
</g>
<g>
<title>java.lang.String (479 samples, 1.00%)</title><rect x="293.3" y="659.0" width="11.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="296.3" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (484 samples, 1.01%)</title><rect x="305.0" y="659.0" width="11.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="308.0" y="670.0"></text>
</g>
<g>
<title>byte[] (484 samples, 1.01%)</title><rect x="305.0" y="643.0" width="11.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="308.0" y="654.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.ReplicasFactor (24 samples, 0.05%)</title><rect x="316.9" y="707.0" width="0.6" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="319.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (5,680 samples, 11.81%)</title><rect x="317.5" y="707.0" width="139.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.5" y="718.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/lang/String.getBytes (71 samples, 0.15%)</title><rect x="317.5" y="691.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="320.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (71 samples, 0.15%)</title><rect x="317.5" y="675.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (71 samples, 0.15%)</title><rect x="317.5" y="659.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="320.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (71 samples, 0.15%)</title><rect x="317.5" y="643.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="320.5" y="654.0"></text>
</g>
<g>
<title>byte[] (71 samples, 0.15%)</title><rect x="317.5" y="627.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="320.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (61 samples, 0.13%)</title><rect x="319.2" y="691.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.2" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (61 samples, 0.13%)</title><rect x="319.2" y="675.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$129/576121827.get$Lambda (20 samples, 0.04%)</title><rect x="319.2" y="659.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="322.2" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$129 (20 samples, 0.04%)</title><rect x="319.2" y="643.0" width="0.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="322.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$131/640212311.get$Lambda (22 samples, 0.05%)</title><rect x="319.7" y="659.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="322.7" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$131 (22 samples, 0.05%)</title><rect x="319.7" y="643.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="322.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$140/513088504.get$Lambda (19 samples, 0.04%)</title><rect x="320.3" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="323.3" y="670.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$140 (19 samples, 0.04%)</title><rect x="320.3" y="643.0" width="0.4" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="323.3" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest$BodyPublishers.ofByteArray (53 samples, 0.11%)</title><rect x="320.7" y="691.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="323.7" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RequestPublishers$ByteArrayPublisher (53 samples, 0.11%)</title><rect x="320.7" y="675.0" width="1.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="323.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (104 samples, 0.22%)</title><rect x="322.0" y="691.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="325.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (104 samples, 0.22%)</title><rect x="322.0" y="675.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="325.0" y="686.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniApply (59 samples, 0.12%)</title><rect x="322.0" y="659.0" width="1.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="325.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.09%)</title><rect x="323.5" y="659.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="326.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (45 samples, 0.09%)</title><rect x="323.5" y="643.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.5" y="654.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (45 samples, 0.09%)</title><rect x="323.5" y="627.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="326.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (3,383 samples, 7.03%)</title><rect x="324.6" y="691.0" width="83.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="327.6" y="702.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,383 samples, 7.03%)</title><rect x="324.6" y="675.0" width="83.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="327.6" y="686.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,383 samples, 7.03%)</title><rect x="324.6" y="659.0" width="83.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.6" y="670.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (3,383 samples, 7.03%)</title><rect x="324.6" y="643.0" width="83.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="327.6" y="654.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (21 samples, 0.04%)</title><rect x="324.6" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="327.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (21 samples, 0.04%)</title><rect x="324.6" y="611.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$195/1536212598.get$Lambda (21 samples, 0.04%)</title><rect x="324.6" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="327.6" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$$Lambda$195 (21 samples, 0.04%)</title><rect x="324.6" y="579.0" width="0.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="327.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (98 samples, 0.20%)</title><rect x="325.1" y="627.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="328.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (98 samples, 0.20%)</title><rect x="325.1" y="611.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (52 samples, 0.11%)</title><rect x="325.1" y="595.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="328.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.10%)</title><rect x="326.4" y="595.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="329.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (46 samples, 0.10%)</title><rect x="326.4" y="579.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="329.4" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.10%)</title><rect x="326.4" y="563.0" width="1.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="329.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (110 samples, 0.23%)</title><rect x="327.5" y="627.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (110 samples, 0.23%)</title><rect x="327.5" y="611.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.5" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (53 samples, 0.11%)</title><rect x="327.5" y="595.0" width="1.3" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="330.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.12%)</title><rect x="328.8" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="331.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (57 samples, 0.12%)</title><rect x="328.8" y="579.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.8" y="590.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (57 samples, 0.12%)</title><rect x="328.8" y="563.0" width="1.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="331.8" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestImpl (97 samples, 0.20%)</title><rect x="330.2" y="627.0" width="2.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="333.2" y="638.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange (146 samples, 0.30%)</title><rect x="332.6" y="627.0" width="3.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="335.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (1,618 samples, 3.36%)</title><rect x="336.3" y="627.0" width="39.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.3" y="638.0">jdk..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (198 samples, 0.41%)</title><rect x="336.3" y="611.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="339.3" y="622.0"></text>
</g>
<g>
<title>java/util/Collection.stream (149 samples, 0.31%)</title><rect x="336.3" y="595.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="339.3" y="606.0"></text>
</g>
<g>
<title>java/util/List.spliterator (58 samples, 0.12%)</title><rect x="336.3" y="579.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="339.3" y="590.0"></text>
</g>
<g>
<title>java.util.AbstractList$RandomAccessSpliterator (58 samples, 0.12%)</title><rect x="336.3" y="563.0" width="1.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="339.3" y="574.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (91 samples, 0.19%)</title><rect x="337.7" y="579.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="340.7" y="590.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (91 samples, 0.19%)</title><rect x="337.7" y="563.0" width="2.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="340.7" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (49 samples, 0.10%)</title><rect x="339.9" y="595.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.9" y="606.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (49 samples, 0.10%)</title><rect x="339.9" y="579.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.9" y="590.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (49 samples, 0.10%)</title><rect x="339.9" y="563.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.9" y="574.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$63/1029472813.get (49 samples, 0.10%)</title><rect x="339.9" y="547.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="342.9" y="558.0"></text>
</g>
<g>
<title>java.util.stream.FindOps$FindSink$OfRef (49 samples, 0.10%)</title><rect x="339.9" y="531.0" width="1.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="342.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (576 samples, 1.20%)</title><rect x="341.1" y="611.0" width="14.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.1" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (576 samples, 1.20%)</title><rect x="341.1" y="595.0" width="14.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.1" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (25 samples, 0.05%)</title><rect x="341.1" y="579.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="344.1" y="590.0"></text>
</g>
<g>
<title>java.util.ArrayList (53 samples, 0.11%)</title><rect x="341.7" y="579.0" width="1.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="344.7" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (78 samples, 0.16%)</title><rect x="343.0" y="579.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="346.0" y="590.0"></text>
</g>
<g>
<title>java.util.TreeSet (35 samples, 0.07%)</title><rect x="344.9" y="579.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="347.9" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.07%)</title><rect x="345.8" y="579.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.8" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.07%)</title><rect x="345.8" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.8" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (32 samples, 0.07%)</title><rect x="345.8" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.8" y="558.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (32 samples, 0.07%)</title><rect x="345.8" y="531.0" width="0.8" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="348.8" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (225 samples, 0.47%)</title><rect x="346.6" y="579.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="349.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (225 samples, 0.47%)</title><rect x="346.6" y="563.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (225 samples, 0.47%)</title><rect x="346.6" y="547.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (225 samples, 0.47%)</title><rect x="346.6" y="531.0" width="5.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="349.6" y="542.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (93 samples, 0.19%)</title><rect x="346.6" y="515.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.6" y="526.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (93 samples, 0.19%)</title><rect x="346.6" y="499.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.6" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (93 samples, 0.19%)</title><rect x="346.6" y="483.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="349.6" y="494.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.19%)</title><rect x="346.6" y="467.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.6" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (93 samples, 0.19%)</title><rect x="346.6" y="451.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.6" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.19%)</title><rect x="346.6" y="435.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="349.6" y="446.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (93 samples, 0.19%)</title><rect x="346.6" y="419.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="349.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (93 samples, 0.19%)</title><rect x="346.6" y="403.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.6" y="414.0"></text>
</g>
<g>
<title>java.lang.Object[] (93 samples, 0.19%)</title><rect x="346.6" y="387.0" width="2.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="349.6" y="398.0"></text>
</g>
<g>
<title>java/util/List.copyOf (71 samples, 0.15%)</title><rect x="348.9" y="515.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="351.9" y="526.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (71 samples, 0.15%)</title><rect x="348.9" y="499.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.9" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (42 samples, 0.09%)</title><rect x="348.9" y="483.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.9" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (42 samples, 0.09%)</title><rect x="348.9" y="467.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.9" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (42 samples, 0.09%)</title><rect x="348.9" y="451.0" width="1.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="351.9" y="462.0"></text>
</g>
<g>
<title>java/util/List.of (29 samples, 0.06%)</title><rect x="349.9" y="483.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.9" y="494.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (29 samples, 0.06%)</title><rect x="349.9" y="467.0" width="0.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="352.9" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (61 samples, 0.13%)</title><rect x="350.6" y="515.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="353.6" y="526.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (61 samples, 0.13%)</title><rect x="350.6" y="499.0" width="1.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="353.6" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (53 samples, 0.11%)</title><rect x="352.1" y="579.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="355.1" y="590.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (53 samples, 0.11%)</title><rect x="352.1" y="563.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="355.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (75 samples, 0.16%)</title><rect x="353.4" y="579.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.4" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.16%)</title><rect x="353.4" y="563.0" width="1.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="356.4" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (21 samples, 0.04%)</title><rect x="355.3" y="611.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="358.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (594 samples, 1.23%)</title><rect x="355.8" y="611.0" width="14.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="358.8" y="622.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (594 samples, 1.23%)</title><rect x="355.8" y="595.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.8" y="606.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (550 samples, 1.14%)</title><rect x="355.8" y="579.0" width="13.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="358.8" y="590.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (550 samples, 1.14%)</title><rect x="355.8" y="563.0" width="13.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="358.8" y="574.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (550 samples, 1.14%)</title><rect x="355.8" y="547.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.8" y="558.0"></text>
</g>
<g>
<title>java.lang.StringBuilder (130 samples, 0.27%)</title><rect x="355.8" y="531.0" width="3.2" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="358.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (158 samples, 0.33%)</title><rect x="359.0" y="531.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="362.0" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (158 samples, 0.33%)</title><rect x="359.0" y="515.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.0" y="526.0"></text>
</g>
<g>
<title>byte[] (158 samples, 0.33%)</title><rect x="359.0" y="499.0" width="3.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="362.0" y="510.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (262 samples, 0.54%)</title><rect x="362.8" y="531.0" width="6.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="365.8" y="542.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (262 samples, 0.54%)</title><rect x="362.8" y="515.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="365.8" y="526.0"></text>
</g>
<g>
<title>java.lang.String (119 samples, 0.25%)</title><rect x="362.8" y="499.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="365.8" y="510.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (143 samples, 0.30%)</title><rect x="365.7" y="499.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="368.7" y="510.0"></text>
</g>
<g>
<title>byte[] (143 samples, 0.30%)</title><rect x="365.7" y="483.0" width="3.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="368.7" y="494.0"></text>
</g>
<g>
<title>sun.net.spi.DefaultProxySelector$4 (44 samples, 0.09%)</title><rect x="369.3" y="579.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="372.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (75 samples, 0.16%)</title><rect x="370.3" y="611.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="373.3" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap (75 samples, 0.16%)</title><rect x="370.3" y="595.0" width="1.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="373.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (154 samples, 0.32%)</title><rect x="372.2" y="611.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="375.2" y="622.0"></text>
</g>
<g>
<title>java.util.ArrayList (41 samples, 0.09%)</title><rect x="372.2" y="595.0" width="1.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="375.2" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (51 samples, 0.11%)</title><rect x="373.2" y="595.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="376.2" y="606.0"></text>
</g>
<g>
<title>java.lang.Object[] (51 samples, 0.11%)</title><rect x="373.2" y="579.0" width="1.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="376.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (62 samples, 0.13%)</title><rect x="374.4" y="595.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="377.4" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (62 samples, 0.13%)</title><rect x="374.4" y="579.0" width="1.6" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="377.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (861 samples, 1.79%)</title><rect x="376.0" y="627.0" width="21.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.0" y="638.0">j..</text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (33 samples, 0.07%)</title><rect x="376.0" y="611.0" width="0.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="379.0" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.map (86 samples, 0.18%)</title><rect x="376.8" y="611.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="379.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$159/167629462.apply (86 samples, 0.18%)</title><rect x="376.8" y="595.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="379.8" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$ConnectTimeoutTracker (45 samples, 0.09%)</title><rect x="376.8" y="579.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="379.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$ConnectTimeoutTracker.&lt;init&gt; (41 samples, 0.09%)</title><rect x="377.9" y="579.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="380.9" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicLong (41 samples, 0.09%)</title><rect x="377.9" y="563.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="380.9" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange (119 samples, 0.25%)</title><rect x="378.9" y="611.0" width="2.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="381.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (29 samples, 0.06%)</title><rect x="381.8" y="611.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="384.8" y="622.0"></text>
</g>
<g>
<title>jdk.internal.net.http.Exchange$ConnectionAborter (29 samples, 0.06%)</title><rect x="381.8" y="595.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="384.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.connectTimeout (30 samples, 0.06%)</title><rect x="382.5" y="611.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.5" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (30 samples, 0.06%)</title><rect x="382.5" y="595.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="385.5" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (30 samples, 0.06%)</title><rect x="382.5" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="385.5" y="590.0"></text>
</g>
<g>
<title>java.util.Optional (30 samples, 0.06%)</title><rect x="382.5" y="563.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="385.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (564 samples, 1.17%)</title><rect x="383.2" y="611.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="386.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (564 samples, 1.17%)</title><rect x="383.2" y="595.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.2" y="606.0"></text>
</g>
<g>
<title>java.lang.Class[] (65 samples, 0.14%)</title><rect x="383.2" y="579.0" width="1.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="386.2" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (41 samples, 0.09%)</title><rect x="384.8" y="579.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="387.8" y="590.0"></text>
</g>
<g>
<title>java.util.LinkedList (53 samples, 0.11%)</title><rect x="385.8" y="579.0" width="1.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="388.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (243 samples, 0.51%)</title><rect x="387.1" y="579.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="390.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (243 samples, 0.51%)</title><rect x="387.1" y="563.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="390.1" y="574.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (243 samples, 0.51%)</title><rect x="387.1" y="547.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="390.1" y="558.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (243 samples, 0.51%)</title><rect x="387.1" y="531.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.1" y="542.0"></text>
</g>
<g>
<title>java.lang.reflect.Constructor (241 samples, 0.50%)</title><rect x="387.1" y="515.0" width="5.9" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="390.1" y="526.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (87 samples, 0.18%)</title><rect x="393.1" y="579.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="396.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/reflect/DelegatingConstructorAccessorImpl.newInstance (87 samples, 0.18%)</title><rect x="393.1" y="563.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.1" y="574.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2100.newInstance (17 samples, 0.04%)</title><rect x="393.1" y="547.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.1" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.AuthenticationFilter (17 samples, 0.04%)</title><rect x="393.1" y="531.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="396.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor2107.newInstance (70 samples, 0.15%)</title><rect x="393.5" y="547.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="396.5" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.RedirectFilter (70 samples, 0.15%)</title><rect x="393.5" y="531.0" width="1.7" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="396.5" y="542.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (75 samples, 0.16%)</title><rect x="395.2" y="579.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="398.2" y="590.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (75 samples, 0.16%)</title><rect x="395.2" y="563.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.2" y="574.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (75 samples, 0.16%)</title><rect x="395.2" y="547.0" width="1.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="398.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (428 samples, 0.89%)</title><rect x="397.1" y="627.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (75 samples, 0.16%)</title><rect x="397.1" y="611.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="400.1" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (41 samples, 0.09%)</title><rect x="397.1" y="595.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="400.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 0.07%)</title><rect x="398.1" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (34 samples, 0.07%)</title><rect x="398.1" y="579.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.1" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (32 samples, 0.07%)</title><rect x="398.1" y="563.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="401.1" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (46 samples, 0.10%)</title><rect x="398.9" y="611.0" width="1.1" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="401.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (307 samples, 0.64%)</title><rect x="400.0" y="611.0" width="7.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.0" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (64 samples, 0.13%)</title><rect x="400.0" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.0" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (64 samples, 0.13%)</title><rect x="400.0" y="579.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="403.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1563358180.get$Lambda (25 samples, 0.05%)</title><rect x="400.0" y="563.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="403.0" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$178 (25 samples, 0.05%)</title><rect x="400.0" y="547.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="403.0" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/699148914.get$Lambda (39 samples, 0.08%)</title><rect x="400.7" y="563.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.7" y="574.0"></text>
</g>
<g>
<title>jdk.internal.net.http.MultiExchange$$Lambda$183 (39 samples, 0.08%)</title><rect x="400.7" y="547.0" width="0.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="403.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (243 samples, 0.51%)</title><rect x="401.6" y="595.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (243 samples, 0.51%)</title><rect x="401.6" y="579.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="404.6" y="590.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniCompose (127 samples, 0.26%)</title><rect x="401.6" y="563.0" width="3.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="404.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.24%)</title><rect x="404.7" y="563.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (116 samples, 0.24%)</title><rect x="404.7" y="547.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="407.7" y="558.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (116 samples, 0.24%)</title><rect x="404.7" y="531.0" width="2.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="407.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (658 samples, 1.37%)</title><rect x="407.6" y="691.0" width="16.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.6" y="702.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ImmutableHttpRequest (69 samples, 0.14%)</title><rect x="407.6" y="675.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="410.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (589 samples, 1.22%)</title><rect x="409.3" y="675.0" width="14.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.3" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (542 samples, 1.13%)</title><rect x="409.3" y="659.0" width="13.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="412.3" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (542 samples, 1.13%)</title><rect x="409.3" y="643.0" width="13.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.3" y="654.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders (26 samples, 0.05%)</title><rect x="409.3" y="627.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="412.3" y="638.0"></text>
</g>
<g>
<title>java.util.ArrayList (38 samples, 0.08%)</title><rect x="409.9" y="627.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="412.9" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (67 samples, 0.14%)</title><rect x="410.8" y="627.0" width="1.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="413.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeSet (23 samples, 0.05%)</title><rect x="412.5" y="627.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="415.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (43 samples, 0.09%)</title><rect x="413.0" y="627.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.0" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (43 samples, 0.09%)</title><rect x="413.0" y="611.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.0" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.get$Lambda (43 samples, 0.09%)</title><rect x="413.0" y="595.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.0" y="606.0"></text>
</g>
<g>
<title>java.net.http.HttpHeaders$$Lambda$148 (43 samples, 0.09%)</title><rect x="413.0" y="579.0" width="1.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="416.0" y="590.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (50 samples, 0.10%)</title><rect x="414.1" y="627.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.1" y="638.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (50 samples, 0.10%)</title><rect x="414.1" y="611.0" width="1.2" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="417.1" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (218 samples, 0.45%)</title><rect x="415.3" y="627.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="418.3" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (218 samples, 0.45%)</title><rect x="415.3" y="611.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.3" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (218 samples, 0.45%)</title><rect x="415.3" y="595.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.3" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (84 samples, 0.17%)</title><rect x="415.3" y="579.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.3" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$153/1179190549.accept (84 samples, 0.17%)</title><rect x="415.3" y="563.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (84 samples, 0.17%)</title><rect x="415.3" y="547.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.3" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.17%)</title><rect x="415.3" y="531.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.3" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (84 samples, 0.17%)</title><rect x="415.3" y="515.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="418.3" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.17%)</title><rect x="415.3" y="499.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="418.3" y="510.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (84 samples, 0.17%)</title><rect x="415.3" y="483.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.3" y="494.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (84 samples, 0.17%)</title><rect x="415.3" y="467.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.3" y="478.0"></text>
</g>
<g>
<title>java.lang.Object[] (84 samples, 0.17%)</title><rect x="415.3" y="451.0" width="2.1" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="418.3" y="462.0"></text>
</g>
<g>
<title>java/util/List.copyOf (71 samples, 0.15%)</title><rect x="417.4" y="579.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.4" y="590.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections.listCopy (71 samples, 0.15%)</title><rect x="417.4" y="563.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.toArray (33 samples, 0.07%)</title><rect x="417.4" y="547.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.4" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (33 samples, 0.07%)</title><rect x="417.4" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="420.4" y="542.0"></text>
</g>
<g>
<title>java.lang.Object[] (33 samples, 0.07%)</title><rect x="417.4" y="515.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="420.4" y="526.0"></text>
</g>
<g>
<title>java/util/List.of (38 samples, 0.08%)</title><rect x="418.2" y="547.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.2" y="558.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (38 samples, 0.08%)</title><rect x="418.2" y="531.0" width="0.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="421.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (63 samples, 0.13%)</title><rect x="419.1" y="579.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="422.1" y="590.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (63 samples, 0.13%)</title><rect x="419.1" y="563.0" width="1.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="422.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (77 samples, 0.16%)</title><rect x="420.7" y="627.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.7" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap (77 samples, 0.16%)</title><rect x="420.7" y="611.0" width="1.9" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="423.7" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (47 samples, 0.10%)</title><rect x="422.6" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.6" y="670.0"></text>
</g>
<g>
<title>java/util/Optional.of (47 samples, 0.10%)</title><rect x="422.6" y="643.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.6" y="654.0"></text>
</g>
<g>
<title>java.util.Optional (47 samples, 0.10%)</title><rect x="422.6" y="627.0" width="1.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="425.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (121 samples, 0.25%)</title><rect x="423.7" y="691.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.7" y="702.0"></text>
</g>
<g>
<title>java/lang/String.substring (121 samples, 0.25%)</title><rect x="423.7" y="675.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="426.7" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (121 samples, 0.25%)</title><rect x="423.7" y="659.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.7" y="670.0"></text>
</g>
<g>
<title>java.lang.String (60 samples, 0.12%)</title><rect x="423.7" y="643.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="426.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (61 samples, 0.13%)</title><rect x="425.2" y="643.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="428.2" y="654.0"></text>
</g>
<g>
<title>byte[] (61 samples, 0.13%)</title><rect x="425.2" y="627.0" width="1.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="428.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (113 samples, 0.23%)</title><rect x="426.7" y="691.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (113 samples, 0.23%)</title><rect x="426.7" y="675.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.7" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (113 samples, 0.23%)</title><rect x="426.7" y="659.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.7" y="670.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (113 samples, 0.23%)</title><rect x="426.7" y="643.0" width="2.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="429.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.requestForRepl (1,073 samples, 2.23%)</title><rect x="429.4" y="691.0" width="26.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.4" y="702.0">r..</text>
</g>
<g>
<title>java.net.URI (129 samples, 0.27%)</title><rect x="429.4" y="675.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="432.4" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (145 samples, 0.30%)</title><rect x="432.6" y="675.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (145 samples, 0.30%)</title><rect x="432.6" y="659.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="435.6" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1954471782.invoke (145 samples, 0.30%)</title><rect x="432.6" y="643.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (145 samples, 0.30%)</title><rect x="432.6" y="627.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (29 samples, 0.06%)</title><rect x="432.6" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.6" y="622.0"></text>
</g>
<g>
<title>java.lang.String (29 samples, 0.06%)</title><rect x="432.6" y="595.0" width="0.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="435.6" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (116 samples, 0.24%)</title><rect x="433.3" y="611.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (116 samples, 0.24%)</title><rect x="433.3" y="595.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="436.3" y="606.0"></text>
</g>
<g>
<title>byte[] (116 samples, 0.24%)</title><rect x="433.3" y="579.0" width="2.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="436.3" y="590.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (506 samples, 1.05%)</title><rect x="436.2" y="675.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.2" y="686.0"></text>
</g>
<g>
<title>java.net.URI$Parser (39 samples, 0.08%)</title><rect x="436.2" y="659.0" width="0.9" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="439.2" y="670.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (467 samples, 0.97%)</title><rect x="437.1" y="659.0" width="11.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (62 samples, 0.13%)</title><rect x="437.1" y="643.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (62 samples, 0.13%)</title><rect x="437.1" y="627.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String (23 samples, 0.05%)</title><rect x="437.1" y="611.0" width="0.6" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="440.1" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (39 samples, 0.08%)</title><rect x="437.7" y="611.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.7" y="622.0"></text>
</g>
<g>
<title>byte[] (39 samples, 0.08%)</title><rect x="437.7" y="595.0" width="0.9" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="440.7" y="606.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (405 samples, 0.84%)</title><rect x="438.6" y="643.0" width="10.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="441.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (189 samples, 0.39%)</title><rect x="438.6" y="627.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="441.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (189 samples, 0.39%)</title><rect x="438.6" y="611.0" width="4.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.6" y="622.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.15%)</title><rect x="438.6" y="595.0" width="1.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="441.6" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (119 samples, 0.25%)</title><rect x="440.4" y="595.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.4" y="606.0"></text>
</g>
<g>
<title>byte[] (119 samples, 0.25%)</title><rect x="440.4" y="579.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="443.4" y="590.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (216 samples, 0.45%)</title><rect x="443.3" y="627.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (111 samples, 0.23%)</title><rect x="443.3" y="611.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="446.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (111 samples, 0.23%)</title><rect x="443.3" y="595.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.3" y="606.0"></text>
</g>
<g>
<title>java.lang.String (53 samples, 0.11%)</title><rect x="443.3" y="579.0" width="1.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="446.3" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (58 samples, 0.12%)</title><rect x="444.6" y="579.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="447.6" y="590.0"></text>
</g>
<g>
<title>byte[] (58 samples, 0.12%)</title><rect x="444.6" y="563.0" width="1.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="447.6" y="574.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (105 samples, 0.22%)</title><rect x="446.0" y="611.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="449.0" y="622.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (105 samples, 0.22%)</title><rect x="446.0" y="595.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="449.0" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (105 samples, 0.22%)</title><rect x="446.0" y="579.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="449.0" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (105 samples, 0.22%)</title><rect x="446.0" y="563.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.0" y="574.0"></text>
</g>
<g>
<title>java.lang.String (43 samples, 0.09%)</title><rect x="446.0" y="547.0" width="1.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="449.0" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (62 samples, 0.13%)</title><rect x="447.1" y="547.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.1" y="558.0"></text>
</g>
<g>
<title>byte[] (62 samples, 0.13%)</title><rect x="447.1" y="531.0" width="1.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="450.1" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (173 samples, 0.36%)</title><rect x="448.6" y="675.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.6" y="686.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpRequestBuilderImpl (72 samples, 0.15%)</title><rect x="448.6" y="659.0" width="1.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="451.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (101 samples, 0.21%)</title><rect x="450.3" y="659.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.3" y="670.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.HttpHeadersBuilder (18 samples, 0.04%)</title><rect x="450.3" y="643.0" width="0.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="453.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (83 samples, 0.17%)</title><rect x="450.8" y="643.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="453.8" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (83 samples, 0.17%)</title><rect x="450.8" y="627.0" width="2.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="453.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (120 samples, 0.25%)</title><rect x="452.8" y="675.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="455.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (120 samples, 0.25%)</title><rect x="452.8" y="659.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="455.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (120 samples, 0.25%)</title><rect x="452.8" y="643.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="455.8" y="654.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (120 samples, 0.25%)</title><rect x="452.8" y="627.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.8" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (53 samples, 0.11%)</title><rect x="452.8" y="611.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.8" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (53 samples, 0.11%)</title><rect x="452.8" y="595.0" width="1.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="455.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder$$Lambda$142/1636010248.apply (67 samples, 0.14%)</title><rect x="454.1" y="611.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.lambda$addHeader$0 (67 samples, 0.14%)</title><rect x="454.1" y="595.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="457.1" y="606.0"></text>
</g>
<g>
<title>java.util.ArrayList (37 samples, 0.08%)</title><rect x="454.1" y="579.0" width="0.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="457.1" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (30 samples, 0.06%)</title><rect x="455.0" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="458.0" y="590.0"></text>
</g>
<g>
<title>java.lang.Object[] (30 samples, 0.06%)</title><rect x="455.0" y="563.0" width="0.8" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="458.0" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (43 samples, 0.09%)</title><rect x="455.8" y="691.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="458.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (43 samples, 0.09%)</title><rect x="455.8" y="675.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="458.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (43 samples, 0.09%)</title><rect x="455.8" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="458.8" y="670.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$AsyncSupply (23 samples, 0.05%)</title><rect x="455.8" y="643.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="458.8" y="654.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (20 samples, 0.04%)</title><rect x="456.3" y="643.0" width="0.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="459.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (235 samples, 0.49%)</title><rect x="456.8" y="707.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="459.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (235 samples, 0.49%)</title><rect x="456.8" y="691.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.8" y="702.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.03%)</title><rect x="456.8" y="675.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="459.8" y="686.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (55 samples, 0.11%)</title><rect x="457.2" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.2" y="686.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (15 samples, 0.03%)</title><rect x="457.2" y="659.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="460.2" y="670.0"></text>
</g>
<g>
<title>java.lang.String[] (15 samples, 0.03%)</title><rect x="457.2" y="643.0" width="0.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="460.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (40 samples, 0.08%)</title><rect x="457.6" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="460.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (23 samples, 0.05%)</title><rect x="457.6" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (23 samples, 0.05%)</title><rect x="457.6" y="627.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="460.6" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (23 samples, 0.05%)</title><rect x="457.6" y="611.0" width="0.5" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="460.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (17 samples, 0.04%)</title><rect x="458.1" y="643.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="461.1" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (17 samples, 0.04%)</title><rect x="458.1" y="627.0" width="0.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="461.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (164 samples, 0.34%)</title><rect x="458.6" y="675.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.6" y="686.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (41 samples, 0.09%)</title><rect x="458.6" y="659.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="461.6" y="670.0"></text>
</g>
<g>
<title>java.util.TreeMap (41 samples, 0.09%)</title><rect x="458.6" y="643.0" width="1.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="461.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (123 samples, 0.26%)</title><rect x="459.6" y="659.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.6" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (123 samples, 0.26%)</title><rect x="459.6" y="643.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (27 samples, 0.06%)</title><rect x="459.6" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.6" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (27 samples, 0.06%)</title><rect x="459.6" y="611.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="462.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (96 samples, 0.20%)</title><rect x="460.2" y="627.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (96 samples, 0.20%)</title><rect x="460.2" y="611.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.2" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (96 samples, 0.20%)</title><rect x="460.2" y="595.0" width="2.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="463.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (55 samples, 0.11%)</title><rect x="462.6" y="707.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.6" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (55 samples, 0.11%)</title><rect x="462.6" y="691.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.6" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (33 samples, 0.07%)</title><rect x="462.6" y="675.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.6" y="686.0"></text>
</g>
<g>
<title>java.lang.Integer (33 samples, 0.07%)</title><rect x="462.6" y="659.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="465.6" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (22 samples, 0.05%)</title><rect x="463.4" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (22 samples, 0.05%)</title><rect x="463.4" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="466.4" y="670.0"></text>
</g>
<g>
<title>java.util.AbstractMap$SimpleImmutableEntry (22 samples, 0.05%)</title><rect x="463.4" y="643.0" width="0.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="466.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (304 samples, 0.63%)</title><rect x="463.9" y="707.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (304 samples, 0.63%)</title><rect x="463.9" y="691.0" width="7.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.9" y="702.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.02%)</title><rect x="463.9" y="675.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="466.9" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (52 samples, 0.11%)</title><rect x="464.2" y="675.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.2" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (52 samples, 0.11%)</title><rect x="464.2" y="659.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.2" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (52 samples, 0.11%)</title><rect x="464.2" y="643.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.2" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (52 samples, 0.11%)</title><rect x="464.2" y="627.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="467.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (52 samples, 0.11%)</title><rect x="464.2" y="611.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="467.2" y="622.0"></text>
</g>
<g>
<title>java.lang.Object[] (52 samples, 0.11%)</title><rect x="464.2" y="595.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="467.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (240 samples, 0.50%)</title><rect x="465.5" y="675.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="468.5" y="686.0"></text>
</g>
<g>
<title>java.lang.String[] (11 samples, 0.02%)</title><rect x="465.5" y="659.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="468.5" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (59 samples, 0.12%)</title><rect x="465.8" y="659.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.8" y="670.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (25 samples, 0.05%)</title><rect x="465.8" y="643.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.8" y="654.0"></text>
</g>
<g>
<title>java.lang.String[] (25 samples, 0.05%)</title><rect x="465.8" y="627.0" width="0.6" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="468.8" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (34 samples, 0.07%)</title><rect x="466.4" y="643.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (17 samples, 0.04%)</title><rect x="466.4" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (17 samples, 0.04%)</title><rect x="466.4" y="611.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.4" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (17 samples, 0.04%)</title><rect x="466.4" y="595.0" width="0.4" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="469.4" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (17 samples, 0.04%)</title><rect x="466.8" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.8" y="638.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (17 samples, 0.04%)</title><rect x="466.8" y="611.0" width="0.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="469.8" y="622.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (170 samples, 0.35%)</title><rect x="467.2" y="659.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (38 samples, 0.08%)</title><rect x="467.2" y="643.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.2" y="654.0"></text>
</g>
<g>
<title>java.util.TreeMap (38 samples, 0.08%)</title><rect x="467.2" y="627.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="470.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (132 samples, 0.27%)</title><rect x="468.2" y="643.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="471.2" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (132 samples, 0.27%)</title><rect x="468.2" y="627.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="471.2" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (31 samples, 0.06%)</title><rect x="468.2" y="611.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="471.2" y="622.0"></text>
</g>
<g>
<title>java.util.TreeMap$ValueIterator (31 samples, 0.06%)</title><rect x="468.2" y="595.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="471.2" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (101 samples, 0.21%)</title><rect x="468.9" y="611.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (101 samples, 0.21%)</title><rect x="468.9" y="595.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.9" y="606.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (101 samples, 0.21%)</title><rect x="468.9" y="579.0" width="2.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="471.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.atLeastAsync (325 samples, 0.68%)</title><rect x="471.4" y="707.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.4" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (17 samples, 0.04%)</title><rect x="471.4" y="691.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="474.4" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.CopyOnWriteArrayList (14 samples, 0.03%)</title><rect x="471.8" y="691.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="474.8" y="702.0"></text>
</g>
<g>
<title>java.util.concurrent.atomic.AtomicInteger (21 samples, 0.04%)</title><rect x="472.1" y="691.0" width="0.6" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="475.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (244 samples, 0.51%)</title><rect x="472.7" y="691.0" width="5.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$204/1505551486.accept (244 samples, 0.51%)</title><rect x="472.7" y="675.0" width="5.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$1 (244 samples, 0.51%)</title><rect x="472.7" y="659.0" width="5.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="475.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (70 samples, 0.15%)</title><rect x="472.7" y="643.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (70 samples, 0.15%)</title><rect x="472.7" y="627.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.get$Lambda (70 samples, 0.15%)</title><rect x="472.7" y="611.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.7" y="622.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.Futures$$Lambda$206 (70 samples, 0.15%)</title><rect x="472.7" y="595.0" width="1.7" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="475.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (174 samples, 0.36%)</title><rect x="474.4" y="643.0" width="4.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="477.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (174 samples, 0.36%)</title><rect x="474.4" y="627.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="477.4" y="638.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture$UniWhenComplete (81 samples, 0.17%)</title><rect x="474.4" y="611.0" width="2.0" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="477.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.newIncompleteFuture (23 samples, 0.05%)</title><rect x="476.4" y="611.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.4" y="622.0"></text>
</g>
<g>
<title>java.util.concurrent.CompletableFuture (23 samples, 0.05%)</title><rect x="476.4" y="595.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="479.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.02%)</title><rect x="476.9" y="611.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="479.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (11 samples, 0.02%)</title><rect x="476.9" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.9" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (11 samples, 0.02%)</title><rect x="476.9" y="579.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="479.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (11 samples, 0.02%)</title><rect x="476.9" y="563.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="479.9" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (11 samples, 0.02%)</title><rect x="476.9" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.9" y="558.0"></text>
</g>
<g>
<title>java.lang.Object[] (11 samples, 0.02%)</title><rect x="476.9" y="531.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="479.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.12%)</title><rect x="477.2" y="611.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="480.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (59 samples, 0.12%)</title><rect x="477.2" y="595.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="480.2" y="606.0"></text>
</g>
<g>
<title>jdk.internal.net.http.common.MinimalFuture (59 samples, 0.12%)</title><rect x="477.2" y="579.0" width="1.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="480.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (29 samples, 0.06%)</title><rect x="478.6" y="691.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.6" y="702.0"></text>
</g>
<g>
<title>java.lang.Object[] (15 samples, 0.03%)</title><rect x="478.6" y="675.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="481.6" y="686.0"></text>
</g>
<g>
<title>java.lang.Object (14 samples, 0.03%)</title><rect x="479.0" y="675.0" width="0.4" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="482.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (991 samples, 2.06%)</title><rect x="479.4" y="707.0" width="24.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.4" y="718.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (991 samples, 2.06%)</title><rect x="479.4" y="691.0" width="24.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="482.4" y="702.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (991 samples, 2.06%)</title><rect x="479.4" y="675.0" width="24.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.4" y="686.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (991 samples, 2.06%)</title><rect x="479.4" y="659.0" width="24.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="482.4" y="670.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (8,301 samples, 17.25%)</title><rect x="503.7" y="707.0" width="203.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.7" y="718.0">ru/mail/polis/service/gogun..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,473 samples, 5.14%)</title><rect x="503.7" y="691.0" width="60.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="506.7" y="702.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,473 samples, 5.14%)</title><rect x="503.7" y="675.0" width="60.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="506.7" y="686.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1,731 samples, 3.60%)</title><rect x="503.7" y="659.0" width="42.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.7" y="670.0">one/..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,731 samples, 3.60%)</title><rect x="503.7" y="643.0" width="42.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.7" y="654.0">one/..</text>
</g>
<g>
<title>byte[] (1,701 samples, 3.54%)</title><rect x="503.7" y="627.0" width="41.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="506.7" y="638.0">byt..</text>
</g>
<g>
<title>byte[] (30 samples, 0.06%)</title><rect x="545.4" y="627.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="548.4" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (742 samples, 1.54%)</title><rect x="546.1" y="659.0" width="18.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="549.1" y="670.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (742 samples, 1.54%)</title><rect x="546.1" y="643.0" width="18.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="549.1" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$411/644013256.get (5,828 samples, 12.11%)</title><rect x="564.3" y="691.0" width="143.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.3" y="702.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$2 (5,828 samples, 12.11%)</title><rect x="564.3" y="675.0" width="143.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="567.3" y="686.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (5,828 samples, 12.11%)</title><rect x="564.3" y="659.0" width="143.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.3" y="670.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one.nio.http.Response (397 samples, 0.83%)</title><rect x="564.3" y="643.0" width="9.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="567.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1,902 samples, 3.95%)</title><rect x="574.1" y="643.0" width="46.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="577.1" y="654.0">one/..</text>
</g>
<g>
<title>byte[] (772 samples, 1.60%)</title><rect x="574.1" y="627.0" width="18.9" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="577.1" y="638.0"></text>
</g>
<g>
<title>java.lang.String[] (638 samples, 1.33%)</title><rect x="593.0" y="627.0" width="15.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="596.0" y="638.0"></text>
</g>
<g>
<title>java.lang.String (492 samples, 1.02%)</title><rect x="608.6" y="627.0" width="12.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="611.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (2,628 samples, 5.46%)</title><rect x="620.7" y="643.0" width="64.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.7" y="654.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (33 samples, 0.07%)</title><rect x="620.7" y="627.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (33 samples, 0.07%)</title><rect x="620.7" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (33 samples, 0.07%)</title><rect x="620.7" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="623.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (28 samples, 0.06%)</title><rect x="620.7" y="579.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="623.7" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (28 samples, 0.06%)</title><rect x="620.7" y="563.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.7" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (13 samples, 0.03%)</title><rect x="620.7" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.7" y="558.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (13 samples, 0.03%)</title><rect x="620.7" y="531.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="623.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (15 samples, 0.03%)</title><rect x="621.0" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="624.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (15 samples, 0.03%)</title><rect x="621.0" y="531.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.0" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (15 samples, 0.03%)</title><rect x="621.0" y="515.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="624.0" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (2,595 samples, 5.39%)</title><rect x="621.5" y="627.0" width="63.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.5" y="638.0">ru/mail..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1,829 samples, 3.80%)</title><rect x="621.5" y="611.0" width="44.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.5" y="622.0">java..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,829 samples, 3.80%)</title><rect x="621.5" y="595.0" width="44.9" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="624.5" y="606.0">java..</text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (433 samples, 0.90%)</title><rect x="666.4" y="611.0" width="10.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="669.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (333 samples, 0.69%)</title><rect x="677.0" y="611.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.0" y="622.0"></text>
</g>
<g>
<title>java/util/Optional.of (333 samples, 0.69%)</title><rect x="677.0" y="595.0" width="8.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="680.0" y="606.0"></text>
</g>
<g>
<title>java.util.Optional (333 samples, 0.69%)</title><rect x="677.0" y="579.0" width="8.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="680.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (901 samples, 1.87%)</title><rect x="685.2" y="643.0" width="22.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="688.2" y="654.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (901 samples, 1.87%)</title><rect x="685.2" y="627.0" width="22.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.2" y="638.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (901 samples, 1.87%)</title><rect x="685.2" y="611.0" width="22.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="688.2" y="622.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (901 samples, 1.87%)</title><rect x="685.2" y="595.0" width="22.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="688.2" y="606.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (108 samples, 0.22%)</title><rect x="707.3" y="803.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (108 samples, 0.22%)</title><rect x="707.3" y="787.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (108 samples, 0.22%)</title><rect x="707.3" y="771.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (108 samples, 0.22%)</title><rect x="707.3" y="755.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (108 samples, 0.22%)</title><rect x="707.3" y="739.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (108 samples, 0.22%)</title><rect x="707.3" y="723.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="710.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (108 samples, 0.22%)</title><rect x="707.3" y="707.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (108 samples, 0.22%)</title><rect x="707.3" y="691.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (108 samples, 0.22%)</title><rect x="707.3" y="675.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (108 samples, 0.22%)</title><rect x="707.3" y="659.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (108 samples, 0.22%)</title><rect x="707.3" y="643.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (108 samples, 0.22%)</title><rect x="707.3" y="627.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="710.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (108 samples, 0.22%)</title><rect x="707.3" y="611.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="710.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (108 samples, 0.22%)</title><rect x="707.3" y="595.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="710.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (108 samples, 0.22%)</title><rect x="707.3" y="579.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (108 samples, 0.22%)</title><rect x="707.3" y="563.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.3" y="574.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (108 samples, 0.22%)</title><rect x="707.3" y="547.0" width="2.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="710.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (990 samples, 2.06%)</title><rect x="709.9" y="803.0" width="24.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="712.9" y="814.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (13 samples, 0.03%)</title><rect x="709.9" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="712.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.03%)</title><rect x="709.9" y="771.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.9" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/310623126.linkToTargetMethod (13 samples, 0.03%)</title><rect x="710.2" y="787.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (13 samples, 0.03%)</title><rect x="710.2" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$364/1313401388.get$Lambda (13 samples, 0.03%)</title><rect x="710.2" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.2" y="766.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$364 (13 samples, 0.03%)</title><rect x="710.2" y="739.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="713.2" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (229 samples, 0.48%)</title><rect x="710.6" y="787.0" width="5.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$365/1858085801.accept (195 samples, 0.41%)</title><rect x="710.6" y="771.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="713.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (195 samples, 0.41%)</title><rect x="710.6" y="755.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (195 samples, 0.41%)</title><rect x="710.6" y="739.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (195 samples, 0.41%)</title><rect x="710.6" y="723.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (195 samples, 0.41%)</title><rect x="710.6" y="707.0" width="4.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="713.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (195 samples, 0.41%)</title><rect x="710.6" y="691.0" width="4.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="713.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (195 samples, 0.41%)</title><rect x="710.6" y="675.0" width="4.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (195 samples, 0.41%)</title><rect x="710.6" y="659.0" width="4.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (195 samples, 0.41%)</title><rect x="710.6" y="643.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="713.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (195 samples, 0.41%)</title><rect x="710.6" y="627.0" width="4.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="713.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (195 samples, 0.41%)</title><rect x="710.6" y="611.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (195 samples, 0.41%)</title><rect x="710.6" y="595.0" width="4.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (45 samples, 0.09%)</title><rect x="710.6" y="579.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="713.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (45 samples, 0.09%)</title><rect x="710.6" y="563.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (45 samples, 0.09%)</title><rect x="710.6" y="547.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offer (21 samples, 0.04%)</title><rect x="710.6" y="531.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (21 samples, 0.04%)</title><rect x="710.6" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (21 samples, 0.04%)</title><rect x="710.6" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.newNode (21 samples, 0.04%)</title><rect x="710.6" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.6" y="494.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentLinkedDeque$Node (21 samples, 0.04%)</title><rect x="710.6" y="467.0" width="0.5" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="713.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.05%)</title><rect x="711.1" y="531.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.05%)</title><rect x="711.1" y="515.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (24 samples, 0.05%)</title><rect x="711.1" y="499.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.05%)</title><rect x="711.1" y="483.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (24 samples, 0.05%)</title><rect x="711.1" y="467.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.1" y="478.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (24 samples, 0.05%)</title><rect x="711.1" y="451.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="714.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (14 samples, 0.03%)</title><rect x="711.7" y="579.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="714.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.03%)</title><rect x="711.7" y="563.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="714.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.03%)</title><rect x="711.7" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="714.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383/1051865462.get$Lambda (14 samples, 0.03%)</title><rect x="711.7" y="531.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="714.7" y="542.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$383 (14 samples, 0.03%)</title><rect x="711.7" y="515.0" width="0.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="714.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (136 samples, 0.28%)</title><rect x="712.0" y="579.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="715.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (76 samples, 0.16%)</title><rect x="712.0" y="563.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.0" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (51 samples, 0.11%)</title><rect x="712.0" y="547.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="715.0" y="558.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (51 samples, 0.11%)</title><rect x="712.0" y="531.0" width="1.3" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="715.0" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (25 samples, 0.05%)</title><rect x="713.3" y="547.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.3" y="558.0"></text>
</g>
<g>
<title>java/util/List.of (25 samples, 0.05%)</title><rect x="713.3" y="531.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.3" y="542.0"></text>
</g>
<g>
<title>java.util.ImmutableCollections$List12 (25 samples, 0.05%)</title><rect x="713.3" y="515.0" width="0.6" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="716.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (60 samples, 0.12%)</title><rect x="713.9" y="563.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="716.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$241/1017891750.get (60 samples, 0.12%)</title><rect x="713.9" y="547.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (60 samples, 0.12%)</title><rect x="713.9" y="531.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.9" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (60 samples, 0.12%)</title><rect x="713.9" y="515.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="716.9" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (60 samples, 0.12%)</title><rect x="713.9" y="499.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="716.9" y="510.0"></text>
</g>
<g>
<title>byte[] (55 samples, 0.11%)</title><rect x="714.0" y="483.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.0" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$368/1161710876.accept (34 samples, 0.07%)</title><rect x="715.3" y="771.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (34 samples, 0.07%)</title><rect x="715.3" y="755.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$364/1313401388.run (34 samples, 0.07%)</title><rect x="715.3" y="739.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (34 samples, 0.07%)</title><rect x="715.3" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (34 samples, 0.07%)</title><rect x="715.3" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.3" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (34 samples, 0.07%)</title><rect x="715.3" y="691.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.3" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (34 samples, 0.07%)</title><rect x="715.3" y="675.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.3" y="686.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (34 samples, 0.07%)</title><rect x="715.3" y="659.0" width="0.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="718.3" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (98 samples, 0.20%)</title><rect x="716.2" y="787.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.2" y="798.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (98 samples, 0.20%)</title><rect x="716.2" y="771.0" width="2.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="719.2" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (44 samples, 0.09%)</title><rect x="718.6" y="787.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="721.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (23 samples, 0.05%)</title><rect x="718.6" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.6" y="782.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (23 samples, 0.05%)</title><rect x="718.6" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="721.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (23 samples, 0.05%)</title><rect x="718.6" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (23 samples, 0.05%)</title><rect x="718.6" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (23 samples, 0.05%)</title><rect x="718.6" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="721.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (23 samples, 0.05%)</title><rect x="718.6" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.6" y="702.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2$1 (23 samples, 0.05%)</title><rect x="718.6" y="675.0" width="0.5" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="721.6" y="686.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps.makeRef (21 samples, 0.04%)</title><rect x="719.1" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.1" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ForEachOps$ForEachOp$OfRef (21 samples, 0.04%)</title><rect x="719.1" y="755.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="722.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (160 samples, 0.33%)</title><rect x="719.7" y="787.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$263/2089736233.run (74 samples, 0.15%)</title><rect x="719.7" y="771.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (74 samples, 0.15%)</title><rect x="719.7" y="755.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="722.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.15%)</title><rect x="719.7" y="739.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 0.15%)</title><rect x="719.7" y="723.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (74 samples, 0.15%)</title><rect x="719.7" y="707.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (74 samples, 0.15%)</title><rect x="719.7" y="691.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (74 samples, 0.15%)</title><rect x="719.7" y="675.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="722.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (74 samples, 0.15%)</title><rect x="719.7" y="659.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (74 samples, 0.15%)</title><rect x="719.7" y="643.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (74 samples, 0.15%)</title><rect x="719.7" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (48 samples, 0.10%)</title><rect x="719.7" y="611.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="722.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (48 samples, 0.10%)</title><rect x="719.7" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (48 samples, 0.10%)</title><rect x="719.7" y="579.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1293226111.linkToTargetMethod (41 samples, 0.09%)</title><rect x="719.7" y="563.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/201719260.invoke (41 samples, 0.09%)</title><rect x="719.7" y="547.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.7" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (41 samples, 0.09%)</title><rect x="719.7" y="531.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.7" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (41 samples, 0.09%)</title><rect x="719.7" y="515.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.7" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (41 samples, 0.09%)</title><rect x="719.7" y="499.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.7" y="510.0"></text>
</g>
<g>
<title>byte[] (41 samples, 0.09%)</title><rect x="719.7" y="483.0" width="1.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="722.7" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (26 samples, 0.05%)</title><rect x="720.8" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.05%)</title><rect x="720.8" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (26 samples, 0.05%)</title><rect x="720.8" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.05%)</title><rect x="720.8" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="723.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.05%)</title><rect x="720.8" y="547.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="723.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.05%)</title><rect x="720.8" y="531.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.8" y="542.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (26 samples, 0.05%)</title><rect x="720.8" y="515.0" width="0.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="723.8" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$277/266906696.run (86 samples, 0.18%)</title><rect x="721.5" y="771.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="724.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (86 samples, 0.18%)</title><rect x="721.5" y="755.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (34 samples, 0.07%)</title><rect x="721.5" y="739.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="724.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (34 samples, 0.07%)</title><rect x="721.5" y="723.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1348530906.get$Lambda (34 samples, 0.07%)</title><rect x="721.5" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="724.5" y="718.0"></text>
</g>
<g>
<title>jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$375 (34 samples, 0.07%)</title><rect x="721.5" y="691.0" width="0.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="724.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (52 samples, 0.11%)</title><rect x="722.3" y="739.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="725.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (52 samples, 0.11%)</title><rect x="722.3" y="723.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (52 samples, 0.11%)</title><rect x="722.3" y="707.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="725.3" y="718.0"></text>
</g>
<g>
<title>java.util.concurrent.LinkedBlockingQueue$Node (52 samples, 0.11%)</title><rect x="722.3" y="691.0" width="1.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="725.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (133 samples, 0.28%)</title><rect x="723.6" y="787.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="726.6" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (28 samples, 0.06%)</title><rect x="723.6" y="771.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="726.6" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (28 samples, 0.06%)</title><rect x="723.6" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="726.6" y="766.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (28 samples, 0.06%)</title><rect x="723.6" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="726.6" y="750.0"></text>
</g>
<g>
<title>java/time/Instant.create (28 samples, 0.06%)</title><rect x="723.6" y="723.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="726.6" y="734.0"></text>
</g>
<g>
<title>java.time.Instant (28 samples, 0.06%)</title><rect x="723.6" y="707.0" width="0.7" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="726.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (105 samples, 0.22%)</title><rect x="724.3" y="771.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="727.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (25 samples, 0.05%)</title><rect x="724.3" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="727.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (25 samples, 0.05%)</title><rect x="724.3" y="739.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="727.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$452/56536574.get$Lambda (25 samples, 0.05%)</title><rect x="724.3" y="723.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.3" y="734.0"></text>
</g>
<g>
<title>jdk.internal.net.http.ConnectionPool$$Lambda$452 (25 samples, 0.05%)</title><rect x="724.3" y="707.0" width="0.6" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="727.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (80 samples, 0.17%)</title><rect x="724.9" y="755.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.9" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (32 samples, 0.07%)</title><rect x="724.9" y="739.0" width="0.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="727.9" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (48 samples, 0.10%)</title><rect x="725.7" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="728.7" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (48 samples, 0.10%)</title><rect x="725.7" y="723.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="728.7" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedList$ListItr (48 samples, 0.10%)</title><rect x="725.7" y="707.0" width="1.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="728.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (151 samples, 0.31%)</title><rect x="726.8" y="787.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="729.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.03%)</title><rect x="726.8" y="771.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (15 samples, 0.03%)</title><rect x="726.8" y="755.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="729.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$362/1315817636.get$Lambda (15 samples, 0.03%)</title><rect x="726.8" y="739.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="729.8" y="750.0"></text>
</g>
<g>
<title>jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$362 (15 samples, 0.03%)</title><rect x="726.8" y="723.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="729.8" y="734.0"></text>
</g>
<g>
<title>java/util/Collection.stream (82 samples, 0.17%)</title><rect x="727.2" y="771.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.spliterator (30 samples, 0.06%)</title><rect x="727.2" y="755.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.2" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySpliterator (30 samples, 0.06%)</title><rect x="727.2" y="739.0" width="0.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="730.2" y="750.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (52 samples, 0.11%)</title><rect x="727.9" y="755.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.9" y="766.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$Head (52 samples, 0.11%)</title><rect x="727.9" y="739.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="730.9" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (54 samples, 0.11%)</title><rect x="729.2" y="771.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="732.2" y="782.0"></text>
</g>
<g>
<title>java.util.stream.ReferencePipeline$2 (54 samples, 0.11%)</title><rect x="729.2" y="755.0" width="1.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="732.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (78 samples, 0.16%)</title><rect x="730.5" y="787.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (78 samples, 0.16%)</title><rect x="730.5" y="771.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.5" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (78 samples, 0.16%)</title><rect x="730.5" y="755.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="733.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (78 samples, 0.16%)</title><rect x="730.5" y="739.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.5" y="750.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (78 samples, 0.16%)</title><rect x="730.5" y="723.0" width="2.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="733.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (41 samples, 0.09%)</title><rect x="732.5" y="787.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (41 samples, 0.09%)</title><rect x="732.5" y="771.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (41 samples, 0.09%)</title><rect x="732.5" y="755.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="735.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (41 samples, 0.09%)</title><rect x="732.5" y="739.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (16 samples, 0.03%)</title><rect x="732.5" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (16 samples, 0.03%)</title><rect x="732.5" y="707.0" width="0.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="735.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (25 samples, 0.05%)</title><rect x="732.9" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="735.9" y="734.0"></text>
</g>
<g>
<title>java/util/HashSet.add (25 samples, 0.05%)</title><rect x="732.9" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.put (25 samples, 0.05%)</title><rect x="732.9" y="691.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="735.9" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (25 samples, 0.05%)</title><rect x="732.9" y="675.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.9" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (25 samples, 0.05%)</title><rect x="732.9" y="659.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="735.9" y="670.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (25 samples, 0.05%)</title><rect x="732.9" y="643.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="735.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (14 samples, 0.03%)</title><rect x="733.5" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="736.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (14 samples, 0.03%)</title><rect x="733.5" y="771.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.5" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (14 samples, 0.03%)</title><rect x="733.5" y="755.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.5" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (14 samples, 0.03%)</title><rect x="733.5" y="739.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="736.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (14 samples, 0.03%)</title><rect x="733.5" y="723.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.5" y="734.0"></text>
</g>
<g>
<title>java.lang.Integer (14 samples, 0.03%)</title><rect x="733.5" y="707.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="736.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (16 samples, 0.03%)</title><rect x="733.8" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (16 samples, 0.03%)</title><rect x="733.8" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (16 samples, 0.03%)</title><rect x="733.8" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.8" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (16 samples, 0.03%)</title><rect x="733.8" y="739.0" width="0.4" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="736.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (18,583 samples, 38.63%)</title><rect x="734.2" y="803.0" width="455.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.2" y="814.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,510 samples, 3.14%)</title><rect x="734.2" y="787.0" width="37.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="737.2" y="798.0">one..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,510 samples, 3.14%)</title><rect x="734.2" y="771.0" width="37.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="737.2" y="782.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.process (17,073 samples, 35.49%)</title><rect x="771.2" y="787.0" width="418.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="774.2" y="798.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (17,073 samples, 35.49%)</title><rect x="771.2" y="771.0" width="418.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.2" y="782.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (17,073 samples, 35.49%)</title><rect x="771.2" y="755.0" width="418.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="774.2" y="766.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,862 samples, 5.95%)</title><rect x="771.2" y="739.0" width="70.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.2" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,862 samples, 5.95%)</title><rect x="771.2" y="723.0" width="70.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="774.2" y="734.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (1,643 samples, 3.42%)</title><rect x="771.2" y="707.0" width="40.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.2" y="718.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (976 samples, 2.03%)</title><rect x="771.2" y="691.0" width="24.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="774.2" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (976 samples, 2.03%)</title><rect x="771.2" y="675.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="774.2" y="686.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (976 samples, 2.03%)</title><rect x="771.2" y="659.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="774.2" y="670.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (976 samples, 2.03%)</title><rect x="771.2" y="643.0" width="24.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.2" y="654.0">j..</text>
</g>
<g>
<title>java.lang.String (467 samples, 0.97%)</title><rect x="771.2" y="627.0" width="11.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="774.2" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (509 samples, 1.06%)</title><rect x="782.7" y="627.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="785.7" y="638.0"></text>
</g>
<g>
<title>byte[] (509 samples, 1.06%)</title><rect x="782.7" y="611.0" width="12.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="785.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (667 samples, 1.39%)</title><rect x="795.2" y="691.0" width="16.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="798.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (667 samples, 1.39%)</title><rect x="795.2" y="675.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="798.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (660 samples, 1.37%)</title><rect x="795.2" y="659.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="798.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (660 samples, 1.37%)</title><rect x="795.2" y="643.0" width="16.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="798.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1295475510.get$Lambda (660 samples, 1.37%)</title><rect x="795.2" y="627.0" width="16.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.2" y="638.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$126 (660 samples, 1.37%)</title><rect x="795.2" y="611.0" width="16.2" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="798.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,219 samples, 2.53%)</title><rect x="811.5" y="707.0" width="29.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.5" y="718.0">on..</text>
</g>
<g>
<title>java/lang/String.substring (1,219 samples, 2.53%)</title><rect x="811.5" y="691.0" width="29.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.5" y="702.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,219 samples, 2.53%)</title><rect x="811.5" y="675.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.5" y="686.0">ja..</text>
</g>
<g>
<title>java.lang.String (580 samples, 1.21%)</title><rect x="811.5" y="659.0" width="14.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="814.5" y="670.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (639 samples, 1.33%)</title><rect x="825.8" y="659.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.8" y="670.0"></text>
</g>
<g>
<title>byte[] (639 samples, 1.33%)</title><rect x="825.8" y="643.0" width="15.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="828.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4,903 samples, 10.19%)</title><rect x="841.4" y="739.0" width="120.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="844.4" y="750.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one.nio.http.Request (828 samples, 1.72%)</title><rect x="841.4" y="723.0" width="20.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="844.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,497 samples, 3.11%)</title><rect x="861.7" y="723.0" width="36.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.7" y="734.0">one..</text>
</g>
<g>
<title>java.lang.String[] (1,464 samples, 3.04%)</title><rect x="861.7" y="707.0" width="36.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="864.7" y="718.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (33 samples, 0.07%)</title><rect x="897.7" y="707.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="900.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,578 samples, 5.36%)</title><rect x="898.5" y="723.0" width="63.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="901.5" y="734.0">one/nio..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,578 samples, 5.36%)</title><rect x="898.5" y="707.0" width="63.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.5" y="718.0">one/nio..</text>
</g>
<g>
<title>char[] (1,245 samples, 2.59%)</title><rect x="898.5" y="691.0" width="30.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="901.5" y="702.0">ch..</text>
</g>
<g>
<title>char[] (14 samples, 0.03%)</title><rect x="929.0" y="691.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="932.0" y="702.0"></text>
</g>
<g>
<title>java.lang.String (526 samples, 1.09%)</title><rect x="929.3" y="691.0" width="12.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="932.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (793 samples, 1.65%)</title><rect x="942.2" y="691.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (793 samples, 1.65%)</title><rect x="942.2" y="675.0" width="19.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.2" y="686.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (793 samples, 1.65%)</title><rect x="942.2" y="659.0" width="19.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="945.2" y="670.0"></text>
</g>
<g>
<title>byte[] (793 samples, 1.65%)</title><rect x="942.2" y="643.0" width="19.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="945.2" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (623 samples, 1.29%)</title><rect x="961.7" y="739.0" width="15.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.7" y="750.0"></text>
</g>
<g>
<title>byte[] (623 samples, 1.29%)</title><rect x="961.7" y="723.0" width="15.3" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="964.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (936 samples, 1.95%)</title><rect x="977.0" y="739.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="980.0" y="750.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (936 samples, 1.95%)</title><rect x="977.0" y="723.0" width="22.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="980.0" y="734.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (936 samples, 1.95%)</title><rect x="977.0" y="707.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="980.0" y="718.0">j..</text>
</g>
<g>
<title>java.lang.String (465 samples, 0.97%)</title><rect x="977.0" y="691.0" width="11.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="980.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (471 samples, 0.98%)</title><rect x="988.4" y="691.0" width="11.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.4" y="702.0"></text>
</g>
<g>
<title>byte[] (471 samples, 0.98%)</title><rect x="988.4" y="675.0" width="11.5" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="991.4" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,749 samples, 16.11%)</title><rect x="999.9" y="739.0" width="190.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.9" y="750.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,749 samples, 16.11%)</title><rect x="999.9" y="723.0" width="190.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1002.9" y="734.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (3,835 samples, 7.97%)</title><rect x="999.9" y="707.0" width="94.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1002.9" y="718.0">char[]</text>
</g>
<g>
<title>char[] (23 samples, 0.05%)</title><rect x="1094.0" y="707.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1097.0" y="718.0"></text>
</g>
<g>
<title>java.lang.String (1,431 samples, 2.97%)</title><rect x="1094.6" y="707.0" width="35.1" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1097.6" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,460 samples, 5.11%)</title><rect x="1129.7" y="707.0" width="60.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1132.7" y="718.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,460 samples, 5.11%)</title><rect x="1129.7" y="691.0" width="60.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1132.7" y="702.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,460 samples, 5.11%)</title><rect x="1129.7" y="675.0" width="60.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1132.7" y="686.0">java/l..</text>
</g>
<g>
<title>byte[] (2,456 samples, 5.11%)</title><rect x="1129.7" y="659.0" width="60.2" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1132.7" y="670.0">byte[]</text>
</g>
</g>
</svg>
