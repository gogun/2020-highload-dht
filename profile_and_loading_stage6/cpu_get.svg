<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1029"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1029"> </text>
<g id="frames">
<g>
<title>all (4,945 samples, 100.00%)</title><rect x="10.0" y="995.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="1006.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (47 samples, 0.95%)</title><rect x="10.0" y="979.0" width="11.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="13.0" y="990.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (47 samples, 0.95%)</title><rect x="10.0" y="963.0" width="11.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (44 samples, 0.89%)</title><rect x="10.7" y="947.0" width="10.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.7" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (39 samples, 0.79%)</title><rect x="11.0" y="931.0" width="9.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.0" y="942.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="20.3" y="931.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.3" y="942.0"></text>
</g>
<g>
<title>[no_Java_frame] (11 samples, 0.22%)</title><rect x="21.2" y="979.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="24.2" y="990.0"></text>
</g>
<g>
<title>[not_walkable_Java] (24 samples, 0.49%)</title><rect x="23.8" y="979.0" width="5.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="26.8" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (14 samples, 0.28%)</title><rect x="23.8" y="963.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="26.8" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.12%)</title><rect x="27.2" y="963.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="30.2" y="974.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (6 samples, 0.12%)</title><rect x="27.2" y="947.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.2" y="958.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.10%)</title><rect x="27.4" y="931.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="30.4" y="942.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="28.6" y="963.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.6" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.04%)</title><rect x="29.1" y="963.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="32.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="29.6" y="979.0" width="2.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="32.6" y="990.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="30.3" y="963.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="33.3" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="30.5" y="947.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="33.5" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="30.5" y="931.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="33.5" y="942.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="31.0" y="963.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="34.0" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="31.2" y="947.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="34.2" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="31.2" y="931.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.2" y="942.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 0.14%)</title><rect x="32.0" y="979.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="35.0" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.06%)</title><rect x="32.4" y="963.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="35.4" y="974.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="33.1" y="963.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="36.1" y="974.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="33.1" y="947.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.1" y="958.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="33.1" y="931.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.1" y="942.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="33.1" y="915.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="36.1" y="926.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="33.1" y="899.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="36.1" y="910.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="33.1" y="883.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="36.1" y="894.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,806 samples, 76.97%)</title><rect x="33.6" y="979.0" width="908.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="36.6" y="990.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,806 samples, 76.97%)</title><rect x="33.6" y="963.0" width="908.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="36.6" y="974.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,805 samples, 76.95%)</title><rect x="33.6" y="947.0" width="908.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.6" y="958.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="35.5" y="931.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="38.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (953 samples, 19.27%)</title><rect x="36.0" y="931.0" width="227.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="39.0" y="942.0">java/util/concurrent/Completab..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (191 samples, 3.86%)</title><rect x="36.2" y="915.0" width="45.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.2" y="926.0">java..</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="36.7" y="899.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="39.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (182 samples, 3.68%)</title><rect x="37.2" y="899.0" width="43.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.2" y="910.0">java..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$178/1563358180.apply (182 samples, 3.68%)</title><rect x="37.2" y="883.0" width="43.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.2" y="894.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (182 samples, 3.68%)</title><rect x="37.2" y="867.0" width="43.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="40.2" y="878.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (182 samples, 3.68%)</title><rect x="37.2" y="851.0" width="43.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.2" y="862.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.04%)</title><rect x="37.2" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.04%)</title><rect x="37.2" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.&lt;init&gt; (2 samples, 0.04%)</title><rect x="37.2" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="37.2" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="40.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (143 samples, 2.89%)</title><rect x="37.9" y="835.0" width="34.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="40.9" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (143 samples, 2.89%)</title><rect x="37.9" y="819.0" width="34.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.9" y="830.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (143 samples, 2.89%)</title><rect x="37.9" y="803.0" width="34.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.9" y="814.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (73 samples, 1.48%)</title><rect x="37.9" y="787.0" width="17.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (73 samples, 1.48%)</title><rect x="37.9" y="771.0" width="17.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (73 samples, 1.48%)</title><rect x="37.9" y="755.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$312/1583544498.apply (73 samples, 1.48%)</title><rect x="37.9" y="739.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (73 samples, 1.48%)</title><rect x="37.9" y="723.0" width="17.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (73 samples, 1.48%)</title><rect x="37.9" y="707.0" width="17.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="40.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$213/1455797668.apply (73 samples, 1.48%)</title><rect x="37.9" y="691.0" width="17.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="40.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (73 samples, 1.48%)</title><rect x="37.9" y="675.0" width="17.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (73 samples, 1.48%)</title><rect x="37.9" y="659.0" width="17.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (62 samples, 1.25%)</title><rect x="38.2" y="643.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="41.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (62 samples, 1.25%)</title><rect x="38.2" y="627.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="41.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$351/1158701491.apply (61 samples, 1.23%)</title><rect x="38.2" y="611.0" width="14.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="41.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (61 samples, 1.23%)</title><rect x="38.2" y="595.0" width="14.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="38.6" y="579.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="41.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="38.6" y="563.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="38.6" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="38.6" y="531.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="41.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.06%)</title><rect x="38.9" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.06%)</title><rect x="38.9" y="499.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="41.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.06%)</title><rect x="38.9" y="483.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="41.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="39.1" y="467.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.1" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.04%)</title><rect x="39.1" y="451.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.1" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.04%)</title><rect x="39.1" y="435.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.04%)</title><rect x="39.1" y="419.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (11 samples, 0.22%)</title><rect x="39.6" y="579.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (11 samples, 0.22%)</title><rect x="39.6" y="563.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="42.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (3 samples, 0.06%)</title><rect x="39.6" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.06%)</title><rect x="39.6" y="531.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="42.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.06%)</title><rect x="39.6" y="515.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="42.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.06%)</title><rect x="39.6" y="499.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="42.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.06%)</title><rect x="39.6" y="483.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="39.8" y="467.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8 samples, 0.16%)</title><rect x="40.3" y="547.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7 samples, 0.14%)</title><rect x="40.5" y="531.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="43.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 0.14%)</title><rect x="40.5" y="515.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.5" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.14%)</title><rect x="40.5" y="499.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="43.5" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.14%)</title><rect x="40.5" y="483.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="43.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.12%)</title><rect x="40.8" y="467.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="43.8" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.10%)</title><rect x="41.0" y="451.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.0" y="462.0"></text>
</g>
<g>
<title>__write (4 samples, 0.08%)</title><rect x="41.3" y="435.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="44.3" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="41.5" y="419.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="44.5" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="41.5" y="403.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="44.5" y="414.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.04%)</title><rect x="41.5" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.5" y="398.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.04%)</title><rect x="41.5" y="371.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="44.5" y="382.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.04%)</title><rect x="41.5" y="355.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.5" y="366.0"></text>
</g>
<g>
<title>pipe_write (2 samples, 0.04%)</title><rect x="41.5" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="44.5" y="350.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="41.5" y="323.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="44.5" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="41.5" y="307.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="44.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (44 samples, 0.89%)</title><rect x="42.2" y="579.0" width="10.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.2" y="590.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="42.5" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.5" y="574.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="42.5" y="547.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (30 samples, 0.61%)</title><rect x="43.2" y="563.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="46.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (4 samples, 0.08%)</title><rect x="43.6" y="547.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.08%)</title><rect x="43.6" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.08%)</title><rect x="43.6" y="515.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.6" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.08%)</title><rect x="43.6" y="499.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.06%)</title><rect x="43.9" y="483.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.9" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.06%)</title><rect x="43.9" y="467.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.9" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (12 samples, 0.24%)</title><rect x="44.6" y="547.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.6" y="558.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.10%)</title><rect x="44.6" y="531.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.6" y="542.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.10%)</title><rect x="44.6" y="515.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.6" y="526.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.08%)</title><rect x="44.8" y="499.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.8" y="510.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.inflate (4 samples, 0.08%)</title><rect x="44.8" y="483.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="47.8" y="494.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="45.3" y="467.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="48.3" y="478.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$376/1989645083.test (2 samples, 0.04%)</title><rect x="47.0" y="531.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="50.0" y="542.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2 samples, 0.04%)</title><rect x="47.0" y="515.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="50.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (2 samples, 0.04%)</title><rect x="47.5" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="50.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.isConnect (2 samples, 0.04%)</title><rect x="47.5" y="531.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="50.5" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (10 samples, 0.20%)</title><rect x="47.9" y="547.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="50.9" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.20%)</title><rect x="47.9" y="531.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="50.9" y="542.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.20%)</title><rect x="47.9" y="515.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.9" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.18%)</title><rect x="48.2" y="499.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="51.2" y="510.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (8 samples, 0.16%)</title><rect x="48.2" y="483.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.2" y="494.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.16%)</title><rect x="48.2" y="467.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.2" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.04%)</title><rect x="48.7" y="451.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.7" y="462.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="49.1" y="451.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="52.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.04%)</title><rect x="50.3" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.3" y="574.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="50.3" y="547.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (8 samples, 0.16%)</title><rect x="50.8" y="563.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.8" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="51.0" y="547.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="54.0" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="51.0" y="531.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="54.0" y="542.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="51.3" y="515.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (4 samples, 0.08%)</title><rect x="51.8" y="547.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="54.8" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (9 samples, 0.18%)</title><rect x="53.2" y="643.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (9 samples, 0.18%)</title><rect x="53.2" y="627.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="56.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.18%)</title><rect x="53.2" y="611.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="56.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.18%)</title><rect x="53.2" y="595.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.12%)</title><rect x="53.9" y="579.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="56.9" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.12%)</title><rect x="53.9" y="563.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="56.9" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.08%)</title><rect x="53.9" y="547.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="56.9" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (4 samples, 0.08%)</title><rect x="53.9" y="531.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="56.9" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.06%)</title><rect x="54.1" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="57.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="54.1" y="499.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (2 samples, 0.04%)</title><rect x="54.1" y="483.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="57.1" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="54.1" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.1" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="54.1" y="451.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="57.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.04%)</title><rect x="54.9" y="547.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="57.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="55.3" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="58.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="55.3" y="771.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="58.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (68 samples, 1.38%)</title><rect x="55.8" y="787.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="58.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="55.8" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="58.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="55.8" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="58.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="56.3" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (63 samples, 1.27%)</title><rect x="57.0" y="771.0" width="15.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="60.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (63 samples, 1.27%)</title><rect x="57.0" y="755.0" width="15.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (63 samples, 1.27%)</title><rect x="57.0" y="739.0" width="15.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="57.0" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="60.0" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="57.0" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.0" y="718.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="57.0" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="60.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (6 samples, 0.12%)</title><rect x="57.7" y="723.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="60.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.06%)</title><rect x="57.7" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="60.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.&lt;init&gt; (3 samples, 0.06%)</title><rect x="57.7" y="691.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.04%)</title><rect x="58.4" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="61.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (2 samples, 0.04%)</title><rect x="58.4" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (2 samples, 0.04%)</title><rect x="59.2" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="59.2" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="62.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="59.2" y="691.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (25 samples, 0.51%)</title><rect x="59.6" y="723.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (24 samples, 0.49%)</title><rect x="59.6" y="707.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.6" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.24%)</title><rect x="60.8" y="691.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="63.8" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (12 samples, 0.24%)</title><rect x="60.8" y="675.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="63.8" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (12 samples, 0.24%)</title><rect x="60.8" y="659.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="63.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (7 samples, 0.14%)</title><rect x="63.7" y="691.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.7" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="63.7" y="675.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (5 samples, 0.10%)</title><rect x="64.2" y="675.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.2" y="686.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (4 samples, 0.08%)</title><rect x="64.4" y="659.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (26 samples, 0.53%)</title><rect x="65.6" y="723.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="68.6" y="734.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (26 samples, 0.53%)</title><rect x="65.6" y="707.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.6" y="718.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (18 samples, 0.36%)</title><rect x="65.8" y="691.0" width="4.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="68.8" y="702.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.04%)</title><rect x="66.3" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="69.3" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.08%)</title><rect x="66.8" y="675.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="69.8" y="686.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.12%)</title><rect x="68.0" y="675.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="71.0" y="686.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.12%)</title><rect x="68.0" y="659.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="71.0" y="670.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.08%)</title><rect x="68.0" y="643.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="71.0" y="654.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="68.9" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="71.9" y="654.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.06%)</title><rect x="69.4" y="675.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="72.4" y="686.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="69.7" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="72.7" y="670.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.04%)</title><rect x="69.7" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="72.7" y="654.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.04%)</title><rect x="70.6" y="691.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="73.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$222/1637846157.run (3 samples, 0.06%)</title><rect x="71.1" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.06%)</title><rect x="71.1" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.1" y="686.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.06%)</title><rect x="71.1" y="659.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.1" y="670.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.06%)</title><rect x="71.1" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.1" y="654.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="71.1" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.1" y="638.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="71.1" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.1" y="622.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.06%)</title><rect x="71.1" y="595.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.04%)</title><rect x="71.3" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.3" y="590.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="71.3" y="563.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.3" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="71.3" y="547.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerTimer (20 samples, 0.40%)</title><rect x="72.0" y="835.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.0" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="72.0" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="75.0" y="830.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="72.0" y="803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="75.0" y="814.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="72.0" y="787.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="75.0" y="798.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (8 samples, 0.16%)</title><rect x="72.5" y="819.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="75.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (8 samples, 0.16%)</title><rect x="72.5" y="803.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.04%)</title><rect x="73.2" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.compareTo (3 samples, 0.06%)</title><rect x="73.7" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.wakeupSelector (10 samples, 0.20%)</title><rect x="74.4" y="819.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (10 samples, 0.20%)</title><rect x="74.4" y="803.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (9 samples, 0.18%)</title><rect x="74.7" y="787.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.7" y="798.0"></text>
</g>
<g>
<title>__write (7 samples, 0.14%)</title><rect x="75.1" y="771.0" width="1.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="78.1" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="75.6" y="755.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="78.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="75.6" y="739.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="78.6" y="750.0"></text>
</g>
<g>
<title>ksys_write (5 samples, 0.10%)</title><rect x="75.6" y="723.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="78.6" y="734.0"></text>
</g>
<g>
<title>vfs_write (5 samples, 0.10%)</title><rect x="75.6" y="707.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="78.6" y="718.0"></text>
</g>
<g>
<title>new_sync_write (5 samples, 0.10%)</title><rect x="75.6" y="691.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="78.6" y="702.0"></text>
</g>
<g>
<title>pipe_write (5 samples, 0.10%)</title><rect x="75.6" y="675.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="78.6" y="686.0"></text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.04%)</title><rect x="75.6" y="659.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="78.6" y="670.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="76.1" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="79.1" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="76.1" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (2 samples, 0.04%)</title><rect x="76.8" y="835.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.8" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="76.8" y="819.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="79.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (10 samples, 0.20%)</title><rect x="77.3" y="835.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="80.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.18%)</title><rect x="77.5" y="819.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.12%)</title><rect x="78.2" y="803.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.2" y="814.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.12%)</title><rect x="78.2" y="787.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.2" y="798.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.getTable (3 samples, 0.06%)</title><rect x="78.2" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="81.2" y="782.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.expungeStaleEntries (3 samples, 0.06%)</title><rect x="78.2" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="81.2" y="766.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.poll (3 samples, 0.06%)</title><rect x="78.2" y="739.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.2" y="750.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (3 samples, 0.06%)</title><rect x="78.2" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="81.2" y="734.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.06%)</title><rect x="79.0" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="82.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.06%)</title><rect x="79.0" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.0" y="766.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.04%)</title><rect x="79.2" y="739.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="82.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.of (4 samples, 0.08%)</title><rect x="79.7" y="835.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="82.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseTimerEvent.&lt;init&gt; (4 samples, 0.08%)</title><rect x="79.7" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/TimeoutEvent.&lt;init&gt; (4 samples, 0.08%)</title><rect x="79.7" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.7" y="814.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.06%)</title><rect x="79.7" y="787.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.7" y="798.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.06%)</title><rect x="79.7" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="82.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="79.9" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="82.9" y="766.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="79.9" y="739.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="82.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.10%)</title><rect x="80.6" y="899.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.10%)</title><rect x="80.6" y="883.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="83.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (4 samples, 0.08%)</title><rect x="80.9" y="867.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="83.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (4 samples, 0.08%)</title><rect x="80.9" y="851.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (4 samples, 0.08%)</title><rect x="80.9" y="835.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="83.9" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="81.3" y="819.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$131/640212311.get (761 samples, 15.39%)</title><rect x="81.8" y="915.0" width="181.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.8" y="926.0">ru/mail/polis/service/g..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$proxy$8 (761 samples, 15.39%)</title><rect x="81.8" y="899.0" width="181.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="84.8" y="910.0">ru/mail/polis/service/g..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (761 samples, 15.39%)</title><rect x="81.8" y="883.0" width="181.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="84.8" y="894.0">ru/mail/polis/service/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (760 samples, 15.37%)</title><rect x="82.1" y="867.0" width="181.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="85.1" y="878.0">ru/mail/polis/dao/DAO.g..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (88 samples, 1.78%)</title><rect x="82.1" y="851.0" width="21.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="85.1" y="862.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (87 samples, 1.76%)</title><rect x="82.3" y="835.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.3" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="82.5" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.5" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="82.5" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.5" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (84 samples, 1.70%)</title><rect x="83.0" y="819.0" width="20.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.0" y="830.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (84 samples, 1.70%)</title><rect x="83.0" y="803.0" width="20.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="86.0" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (84 samples, 1.70%)</title><rect x="83.0" y="787.0" width="20.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.0" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (84 samples, 1.70%)</title><rect x="83.0" y="771.0" width="20.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.0" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (84 samples, 1.70%)</title><rect x="83.0" y="755.0" width="20.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.0" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (84 samples, 1.70%)</title><rect x="83.0" y="739.0" width="20.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.0" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (83 samples, 1.68%)</title><rect x="83.0" y="723.0" width="19.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.0" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.04%)</title><rect x="83.0" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="86.0" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (81 samples, 1.64%)</title><rect x="83.5" y="707.0" width="19.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="86.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (81 samples, 1.64%)</title><rect x="83.5" y="691.0" width="19.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="86.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (81 samples, 1.64%)</title><rect x="83.5" y="675.0" width="19.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="86.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (32 samples, 0.65%)</title><rect x="83.7" y="659.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="86.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (32 samples, 0.65%)</title><rect x="83.7" y="643.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (32 samples, 0.65%)</title><rect x="83.7" y="627.0" width="7.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="86.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (30 samples, 0.61%)</title><rect x="84.0" y="611.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="87.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (28 samples, 0.57%)</title><rect x="84.0" y="595.0" width="6.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (28 samples, 0.57%)</title><rect x="84.0" y="579.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (28 samples, 0.57%)</title><rect x="84.0" y="563.0" width="6.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="87.0" y="574.0"></text>
</g>
<g>
<title>pread (25 samples, 0.51%)</title><rect x="84.7" y="547.0" width="6.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="87.7" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.44%)</title><rect x="85.4" y="531.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="88.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.44%)</title><rect x="85.4" y="515.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="88.4" y="526.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.34%)</title><rect x="86.6" y="499.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="89.6" y="510.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="86.8" y="483.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="89.8" y="494.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.06%)</title><rect x="86.8" y="467.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="89.8" y="478.0"></text>
</g>
<g>
<title>vfs_read (12 samples, 0.24%)</title><rect x="87.8" y="483.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.8" y="494.0"></text>
</g>
<g>
<title>new_sync_read (10 samples, 0.20%)</title><rect x="88.0" y="467.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="91.0" y="478.0"></text>
</g>
<g>
<title>shmem_file_read_iter (7 samples, 0.14%)</title><rect x="88.7" y="451.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="91.7" y="462.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (4 samples, 0.08%)</title><rect x="89.5" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="92.5" y="446.0"></text>
</g>
<g>
<title>find_lock_entry (4 samples, 0.08%)</title><rect x="89.5" y="419.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="92.5" y="430.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.06%)</title><rect x="89.5" y="403.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="92.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="90.7" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.7" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="90.7" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (48 samples, 0.97%)</title><rect x="91.4" y="659.0" width="11.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (48 samples, 0.97%)</title><rect x="91.4" y="643.0" width="11.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="94.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.10%)</title><rect x="91.4" y="627.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.4" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.10%)</title><rect x="91.4" y="611.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="94.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.04%)</title><rect x="92.6" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.6" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.04%)</title><rect x="92.6" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.6" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="92.6" y="595.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="95.6" y="606.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="92.6" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.6" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="92.6" y="563.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.6" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (40 samples, 0.81%)</title><rect x="93.0" y="627.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (37 samples, 0.75%)</title><rect x="93.0" y="611.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="96.0" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (37 samples, 0.75%)</title><rect x="93.0" y="595.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (37 samples, 0.75%)</title><rect x="93.0" y="579.0" width="8.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.0" y="590.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="93.8" y="563.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="96.8" y="574.0"></text>
</g>
<g>
<title>pread (32 samples, 0.65%)</title><rect x="94.2" y="563.0" width="7.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="97.2" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.55%)</title><rect x="95.4" y="547.0" width="6.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="98.4" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.55%)</title><rect x="95.4" y="531.0" width="6.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.4" y="542.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.32%)</title><rect x="98.1" y="515.0" width="3.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="101.1" y="526.0"></text>
</g>
<g>
<title>vfs_read (15 samples, 0.30%)</title><rect x="98.3" y="499.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="101.3" y="510.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.24%)</title><rect x="98.8" y="483.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="101.8" y="494.0"></text>
</g>
<g>
<title>shmem_file_read_iter (11 samples, 0.22%)</title><rect x="99.0" y="467.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.0" y="478.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.06%)</title><rect x="99.7" y="451.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.7" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.06%)</title><rect x="99.7" y="435.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="102.7" y="446.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.04%)</title><rect x="100.7" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="103.7" y="462.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.04%)</title><rect x="100.7" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="103.7" y="446.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="100.7" y="419.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="103.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="101.9" y="611.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.9" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.04%)</title><rect x="102.1" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (672 samples, 13.59%)</title><rect x="103.1" y="851.0" width="160.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.1" y="862.0">ru/mail/polis/dao/go..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (84 samples, 1.70%)</title><rect x="103.3" y="835.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.3" y="846.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (84 samples, 1.70%)</title><rect x="103.3" y="819.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.3" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="103.3" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="106.3" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (82 samples, 1.66%)</title><rect x="103.8" y="803.0" width="19.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.8" y="814.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (82 samples, 1.66%)</title><rect x="103.8" y="787.0" width="19.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.8" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (82 samples, 1.66%)</title><rect x="103.8" y="771.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.8" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (82 samples, 1.66%)</title><rect x="103.8" y="755.0" width="19.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.8" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (82 samples, 1.66%)</title><rect x="103.8" y="739.0" width="19.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.8" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (81 samples, 1.64%)</title><rect x="103.8" y="723.0" width="19.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (79 samples, 1.60%)</title><rect x="103.8" y="707.0" width="18.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (78 samples, 1.58%)</title><rect x="104.0" y="691.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (78 samples, 1.58%)</title><rect x="104.0" y="675.0" width="18.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (78 samples, 1.58%)</title><rect x="104.0" y="659.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.0" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (28 samples, 0.57%)</title><rect x="104.0" y="643.0" width="6.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (27 samples, 0.55%)</title><rect x="104.3" y="627.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.3" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (27 samples, 0.55%)</title><rect x="104.3" y="611.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (22 samples, 0.44%)</title><rect x="105.0" y="595.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="108.0" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.38%)</title><rect x="105.0" y="579.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.0" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (19 samples, 0.38%)</title><rect x="105.0" y="563.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (19 samples, 0.38%)</title><rect x="105.0" y="547.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="108.0" y="558.0"></text>
</g>
<g>
<title>pread (16 samples, 0.32%)</title><rect x="105.7" y="531.0" width="3.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="108.7" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.28%)</title><rect x="106.2" y="515.0" width="3.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="109.2" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.28%)</title><rect x="106.2" y="499.0" width="3.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="109.2" y="510.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.06%)</title><rect x="106.6" y="483.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="109.6" y="494.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.06%)</title><rect x="106.6" y="467.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.6" y="478.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="106.9" y="451.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="109.9" y="462.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.18%)</title><rect x="107.4" y="483.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="110.4" y="494.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="107.4" y="467.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="110.4" y="478.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.04%)</title><rect x="107.4" y="451.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="110.4" y="462.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.14%)</title><rect x="107.8" y="467.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="110.8" y="478.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.12%)</title><rect x="107.8" y="451.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="110.8" y="462.0"></text>
</g>
<g>
<title>shmem_file_read_iter (4 samples, 0.08%)</title><rect x="108.3" y="435.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.3" y="446.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.04%)</title><rect x="108.6" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="111.6" y="430.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.04%)</title><rect x="108.6" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.6" y="414.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="108.6" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="111.6" y="398.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="108.6" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="111.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="109.5" y="579.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.5" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.04%)</title><rect x="109.7" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.7" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.04%)</title><rect x="110.2" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.2" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (49 samples, 0.99%)</title><rect x="110.9" y="643.0" width="11.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.9" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (49 samples, 0.99%)</title><rect x="110.9" y="627.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.9" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (45 samples, 0.91%)</title><rect x="111.4" y="611.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="114.4" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (37 samples, 0.75%)</title><rect x="111.4" y="595.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="114.4" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (36 samples, 0.73%)</title><rect x="111.7" y="579.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (36 samples, 0.73%)</title><rect x="111.7" y="563.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.7" y="574.0"></text>
</g>
<g>
<title>pread (34 samples, 0.69%)</title><rect x="112.1" y="547.0" width="8.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="115.1" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.51%)</title><rect x="114.3" y="531.0" width="5.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="117.3" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.51%)</title><rect x="114.3" y="515.0" width="5.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="117.3" y="526.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (17 samples, 0.34%)</title><rect x="115.7" y="499.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="118.7" y="510.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="115.9" y="483.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.9" y="494.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.08%)</title><rect x="115.9" y="467.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="118.9" y="478.0"></text>
</g>
<g>
<title>vfs_read (11 samples, 0.22%)</title><rect x="117.1" y="483.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="120.1" y="494.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="117.1" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="120.1" y="478.0"></text>
</g>
<g>
<title>new_sync_read (8 samples, 0.16%)</title><rect x="117.9" y="467.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="120.9" y="478.0"></text>
</g>
<g>
<title>shmem_file_read_iter (7 samples, 0.14%)</title><rect x="118.1" y="451.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="121.1" y="462.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.04%)</title><rect x="118.1" y="435.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.1" y="446.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.04%)</title><rect x="118.1" y="419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.1" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (2 samples, 0.04%)</title><rect x="118.6" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="121.6" y="446.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.04%)</title><rect x="118.6" y="419.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="121.6" y="430.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.04%)</title><rect x="118.6" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="121.6" y="414.0"></text>
</g>
<g>
<title>touch_atime (3 samples, 0.06%)</title><rect x="119.1" y="435.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="122.1" y="446.0"></text>
</g>
<g>
<title>atime_needs_update (2 samples, 0.04%)</title><rect x="119.3" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="122.3" y="430.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.04%)</title><rect x="119.8" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="122.8" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="119.8" y="483.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="122.8" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.16%)</title><rect x="120.2" y="595.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="123.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="120.2" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.10%)</title><rect x="121.0" y="579.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.0" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (2 samples, 0.04%)</title><rect x="122.6" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.6" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.04%)</title><rect x="122.6" y="691.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.6" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (2 samples, 0.04%)</title><rect x="122.6" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="125.6" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.04%)</title><rect x="122.6" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.6" y="670.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (566 samples, 11.45%)</title><rect x="123.3" y="835.0" width="135.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.3" y="846.0">java/lang/Iterabl..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$487/55263987.accept (563 samples, 11.39%)</title><rect x="124.1" y="819.0" width="134.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="127.1" y="830.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (563 samples, 11.39%)</title><rect x="124.1" y="803.0" width="134.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.1" y="814.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (563 samples, 11.39%)</title><rect x="124.1" y="787.0" width="134.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="127.1" y="798.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (563 samples, 11.39%)</title><rect x="124.1" y="771.0" width="134.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.1" y="782.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (563 samples, 11.39%)</title><rect x="124.1" y="755.0" width="134.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="127.1" y="766.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (561 samples, 11.34%)</title><rect x="124.5" y="739.0" width="133.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.5" y="750.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (31 samples, 0.63%)</title><rect x="124.8" y="723.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (31 samples, 0.63%)</title><rect x="124.8" y="707.0" width="7.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (30 samples, 0.61%)</title><rect x="125.0" y="691.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.0" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (22 samples, 0.44%)</title><rect x="126.9" y="675.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="129.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.14%)</title><rect x="128.8" y="659.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (5 samples, 0.10%)</title><rect x="129.3" y="643.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.3" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="130.0" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.0" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (7 samples, 0.14%)</title><rect x="130.5" y="659.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="133.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="131.7" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="131.7" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.7" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (7 samples, 0.14%)</title><rect x="132.2" y="723.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (4 samples, 0.08%)</title><rect x="132.4" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="135.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (2 samples, 0.04%)</title><rect x="133.4" y="707.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (2 samples, 0.04%)</title><rect x="133.4" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.4" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (522 samples, 10.56%)</title><rect x="133.8" y="723.0" width="124.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="136.8" y="734.0">sun/nio/ch/File..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (505 samples, 10.21%)</title><rect x="137.9" y="707.0" width="120.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.9" y="718.0">sun/nio/ch/File..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (16 samples, 0.32%)</title><rect x="139.8" y="691.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.8" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (11 samples, 0.22%)</title><rect x="141.0" y="675.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="144.0" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.14%)</title><rect x="141.7" y="659.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.7" y="670.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.14%)</title><rect x="141.7" y="643.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="144.7" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.14%)</title><rect x="141.7" y="627.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="144.7" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (13 samples, 0.26%)</title><rect x="143.6" y="691.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.6" y="702.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (12 samples, 0.24%)</title><rect x="143.9" y="675.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.9" y="686.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.08%)</title><rect x="145.8" y="659.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="148.8" y="670.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.06%)</title><rect x="146.0" y="643.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="149.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.06%)</title><rect x="146.0" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.0" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (443 samples, 8.96%)</title><rect x="146.7" y="691.0" width="105.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.7" y="702.0">sun/nio/ch/IO..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (8 samples, 0.16%)</title><rect x="147.4" y="675.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="150.4" y="686.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.08%)</title><rect x="148.4" y="659.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (384 samples, 7.77%)</title><rect x="149.4" y="675.0" width="91.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.4" y="686.0">sun/nio/ch/..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (4 samples, 0.08%)</title><rect x="149.4" y="659.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.4" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.06%)</title><rect x="149.6" y="643.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="149.6" y="627.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.6" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.06%)</title><rect x="149.6" y="611.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.6" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (380 samples, 7.68%)</title><rect x="150.3" y="659.0" width="90.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="153.3" y="670.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (380 samples, 7.68%)</title><rect x="150.3" y="643.0" width="90.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="153.3" y="654.0">sun/nio/ch..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (4 samples, 0.08%)</title><rect x="152.5" y="627.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="155.5" y="638.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.14%)</title><rect x="153.4" y="627.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="156.4" y="638.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (5 samples, 0.10%)</title><rect x="155.1" y="627.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="158.1" y="638.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="156.3" y="627.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="159.3" y="638.0"></text>
</g>
<g>
<title>pread (353 samples, 7.14%)</title><rect x="156.8" y="627.0" width="84.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="159.8" y="638.0">pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (283 samples, 5.72%)</title><rect x="173.5" y="611.0" width="67.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.5" y="622.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (283 samples, 5.72%)</title><rect x="173.5" y="595.0" width="67.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.5" y="606.0">do_sysc..</text>
</g>
<g>
<title>__syscall_return_slowpath (11 samples, 0.22%)</title><rect x="184.7" y="579.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="187.7" y="590.0"></text>
</g>
<g>
<title>__audit_syscall_exit (11 samples, 0.22%)</title><rect x="184.7" y="563.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="187.7" y="574.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="186.6" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="189.6" y="558.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (206 samples, 4.17%)</title><rect x="187.3" y="579.0" width="49.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="190.3" y="590.0">__x64..</text>
</g>
<g>
<title>__fget_light (32 samples, 0.65%)</title><rect x="189.0" y="563.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.0" y="574.0"></text>
</g>
<g>
<title>__fget_files (25 samples, 0.51%)</title><rect x="190.6" y="547.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="193.6" y="558.0"></text>
</g>
<g>
<title>fput_many (12 samples, 0.24%)</title><rect x="196.8" y="563.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="199.8" y="574.0"></text>
</g>
<g>
<title>vfs_read (154 samples, 3.11%)</title><rect x="199.7" y="563.0" width="36.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="202.7" y="574.0">vfs..</text>
</g>
<g>
<title>fsnotify (13 samples, 0.26%)</title><rect x="201.4" y="547.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="204.4" y="558.0"></text>
</g>
<g>
<title>fsnotify_parent (11 samples, 0.22%)</title><rect x="204.5" y="547.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="207.5" y="558.0"></text>
</g>
<g>
<title>new_sync_read (114 samples, 2.31%)</title><rect x="207.1" y="547.0" width="27.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="210.1" y="558.0">n..</text>
</g>
<g>
<title>shmem_file_read_iter (97 samples, 1.96%)</title><rect x="211.2" y="531.0" width="23.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.2" y="542.0">s..</text>
</g>
<g>
<title>copy_page_to_iter (15 samples, 0.30%)</title><rect x="215.7" y="515.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="218.7" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.10%)</title><rect x="216.6" y="499.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="219.6" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (6 samples, 0.12%)</title><rect x="217.8" y="499.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="220.8" y="510.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (50 samples, 1.01%)</title><rect x="219.3" y="515.0" width="11.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="222.3" y="526.0"></text>
</g>
<g>
<title>find_lock_entry (44 samples, 0.89%)</title><rect x="220.7" y="499.0" width="10.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="223.7" y="510.0"></text>
</g>
<g>
<title>find_get_entry (32 samples, 0.65%)</title><rect x="223.1" y="483.0" width="7.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="226.1" y="494.0"></text>
</g>
<g>
<title>xas_load (15 samples, 0.30%)</title><rect x="227.1" y="467.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="230.1" y="478.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.10%)</title><rect x="229.5" y="451.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="232.5" y="462.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.04%)</title><rect x="230.7" y="483.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="233.7" y="494.0"></text>
</g>
<g>
<title>touch_atime (11 samples, 0.22%)</title><rect x="231.2" y="515.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="234.2" y="526.0"></text>
</g>
<g>
<title>atime_needs_update (9 samples, 0.18%)</title><rect x="231.7" y="499.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.7" y="510.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.10%)</title><rect x="232.6" y="483.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.6" y="494.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.04%)</title><rect x="233.8" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="236.8" y="526.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.18%)</title><rect x="234.3" y="547.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="237.3" y="558.0"></text>
</g>
<g>
<title>fsnotify_parent (4 samples, 0.08%)</title><rect x="235.5" y="531.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="238.5" y="542.0"></text>
</g>
<g>
<title>syscall_trace_enter (19 samples, 0.38%)</title><rect x="236.5" y="579.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.5" y="590.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.12%)</title><rect x="238.8" y="563.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="241.8" y="574.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.06%)</title><rect x="240.3" y="563.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="243.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (48 samples, 0.97%)</title><rect x="241.0" y="675.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="244.0" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (12 samples, 0.24%)</title><rect x="241.2" y="659.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.2" y="670.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.12%)</title><rect x="242.4" y="643.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (35 samples, 0.71%)</title><rect x="244.1" y="659.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.1" y="670.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.04%)</title><rect x="247.7" y="643.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.7" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (2 samples, 0.04%)</title><rect x="247.7" y="627.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="247.7" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="250.7" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (6 samples, 0.12%)</title><rect x="248.1" y="643.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.1" y="654.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (6 samples, 0.12%)</title><rect x="248.1" y="627.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (6 samples, 0.12%)</title><rect x="248.1" y="611.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.1" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (6 samples, 0.12%)</title><rect x="249.6" y="643.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="252.6" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.10%)</title><rect x="251.0" y="643.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="254.0" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (19 samples, 0.38%)</title><rect x="252.4" y="691.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.4" y="702.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="254.6" y="675.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="257.6" y="686.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="254.6" y="659.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="257.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (7 samples, 0.14%)</title><rect x="255.3" y="675.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.3" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (6 samples, 0.12%)</title><rect x="257.0" y="691.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.08%)</title><rect x="258.4" y="835.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.4" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="258.4" y="819.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.4" y="830.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.08%)</title><rect x="258.4" y="803.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.4" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="258.4" y="787.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.4" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="258.4" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.4" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.04%)</title><rect x="258.4" y="755.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.4" y="766.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="258.4" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.4" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="258.4" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (2 samples, 0.04%)</title><rect x="258.4" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.4" y="718.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.04%)</title><rect x="258.9" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.9" y="798.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.04%)</title><rect x="258.9" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.9" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.04%)</title><rect x="258.9" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="261.9" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.04%)</title><rect x="258.9" y="739.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.9" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="258.9" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="261.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.04%)</title><rect x="258.9" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (17 samples, 0.34%)</title><rect x="259.4" y="835.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="262.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (14 samples, 0.28%)</title><rect x="259.6" y="819.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (14 samples, 0.28%)</title><rect x="259.6" y="803.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (14 samples, 0.28%)</title><rect x="259.6" y="787.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (14 samples, 0.28%)</title><rect x="259.6" y="771.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (14 samples, 0.28%)</title><rect x="259.6" y="755.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (14 samples, 0.28%)</title><rect x="259.6" y="739.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.22%)</title><rect x="260.3" y="723.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="263.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.22%)</title><rect x="260.3" y="707.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="263.3" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.14%)</title><rect x="261.3" y="691.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="264.3" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.08%)</title><rect x="261.5" y="675.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.5" y="686.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.04%)</title><rect x="262.0" y="659.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="265.0" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="262.5" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.entrySet (2 samples, 0.04%)</title><rect x="262.9" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="265.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="262.9" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (88 samples, 1.78%)</title><rect x="263.4" y="931.0" width="21.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (14 samples, 0.28%)</title><rect x="263.4" y="915.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="266.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (12 samples, 0.24%)</title><rect x="263.9" y="899.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.24%)</title><rect x="263.9" y="883.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (11 samples, 0.22%)</title><rect x="264.1" y="867.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="267.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.22%)</title><rect x="264.1" y="851.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="264.1" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="264.1" y="819.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.1" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="264.1" y="803.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="267.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures$$Lambda$206/1523301598.accept (8 samples, 0.16%)</title><rect x="264.9" y="835.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="267.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/Futures.lambda$atLeastAsync$0 (8 samples, 0.16%)</title><rect x="264.9" y="819.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.10%)</title><rect x="265.1" y="803.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.10%)</title><rect x="265.1" y="787.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.10%)</title><rect x="265.1" y="771.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.10%)</title><rect x="265.1" y="755.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.10%)</title><rect x="265.1" y="739.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.10%)</title><rect x="265.1" y="723.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="268.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.10%)</title><rect x="265.1" y="707.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="265.3" y="691.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="265.3" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="268.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="265.3" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="265.3" y="643.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="265.3" y="627.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="265.8" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="268.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="265.8" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="265.8" y="659.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="268.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="265.8" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="268.8" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="265.8" y="627.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.8" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="265.8" y="611.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="268.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="265.8" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="268.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="265.8" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="268.8" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="265.8" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="268.8" y="574.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="265.8" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="268.8" y="558.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="265.8" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="268.8" y="542.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="265.8" y="515.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="268.8" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="265.8" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="268.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="265.8" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="268.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (2 samples, 0.04%)</title><rect x="266.3" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (74 samples, 1.50%)</title><rect x="266.8" y="915.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (74 samples, 1.50%)</title><rect x="266.8" y="899.0" width="17.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$209/236399593.accept (74 samples, 1.50%)</title><rect x="266.8" y="883.0" width="17.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$6 (74 samples, 1.50%)</title><rect x="266.8" y="867.0" width="17.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="269.8" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="267.0" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.0" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (71 samples, 1.44%)</title><rect x="267.5" y="851.0" width="16.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="270.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (63 samples, 1.27%)</title><rect x="267.5" y="835.0" width="15.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="270.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (62 samples, 1.25%)</title><rect x="267.7" y="819.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="267.7" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (60 samples, 1.21%)</title><rect x="268.2" y="803.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (60 samples, 1.21%)</title><rect x="268.2" y="787.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.2" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (59 samples, 1.19%)</title><rect x="268.4" y="771.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.4" y="782.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (59 samples, 1.19%)</title><rect x="268.4" y="755.0" width="14.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.4" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.06%)</title><rect x="268.7" y="739.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="271.7" y="750.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="268.9" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="271.9" y="734.0"></text>
</g>
<g>
<title>__libc_send (55 samples, 1.11%)</title><rect x="269.4" y="739.0" width="13.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="272.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 1.07%)</title><rect x="269.9" y="723.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.9" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 1.07%)</title><rect x="269.9" y="707.0" width="12.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.9" y="718.0"></text>
</g>
<g>
<title>__x64_sys_sendto (53 samples, 1.07%)</title><rect x="269.9" y="691.0" width="12.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="272.9" y="702.0"></text>
</g>
<g>
<title>__sys_sendto (53 samples, 1.07%)</title><rect x="269.9" y="675.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="272.9" y="686.0"></text>
</g>
<g>
<title>sock_sendmsg (51 samples, 1.03%)</title><rect x="270.1" y="659.0" width="12.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.1" y="670.0"></text>
</g>
<g>
<title>tcp_sendmsg (51 samples, 1.03%)</title><rect x="270.1" y="643.0" width="12.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="273.1" y="654.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (50 samples, 1.01%)</title><rect x="270.3" y="627.0" width="12.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="273.3" y="638.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (44 samples, 0.89%)</title><rect x="270.6" y="611.0" width="10.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="273.6" y="622.0"></text>
</g>
<g>
<title>tcp_write_xmit (44 samples, 0.89%)</title><rect x="270.6" y="595.0" width="10.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="273.6" y="606.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (39 samples, 0.79%)</title><rect x="271.1" y="579.0" width="9.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="274.1" y="590.0"></text>
</g>
<g>
<title>__ip_queue_xmit (37 samples, 0.75%)</title><rect x="271.3" y="563.0" width="8.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="274.3" y="574.0"></text>
</g>
<g>
<title>ip_output (36 samples, 0.73%)</title><rect x="271.3" y="547.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="274.3" y="558.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.04%)</title><rect x="271.3" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="274.3" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (34 samples, 0.69%)</title><rect x="271.8" y="531.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="274.8" y="542.0"></text>
</g>
<g>
<title>__dev_queue_xmit (5 samples, 0.10%)</title><rect x="271.8" y="515.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="274.8" y="526.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.06%)</title><rect x="272.2" y="499.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.2" y="510.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.06%)</title><rect x="272.2" y="483.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.2" y="494.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (29 samples, 0.59%)</title><rect x="273.0" y="515.0" width="6.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="276.0" y="526.0"></text>
</g>
<g>
<title>do_softirq (29 samples, 0.59%)</title><rect x="273.0" y="499.0" width="6.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="276.0" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (27 samples, 0.55%)</title><rect x="273.4" y="483.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="276.4" y="494.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (27 samples, 0.55%)</title><rect x="273.4" y="467.0" width="6.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="276.4" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (27 samples, 0.55%)</title><rect x="273.4" y="451.0" width="6.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="276.4" y="462.0"></text>
</g>
<g>
<title>net_rx_action (27 samples, 0.55%)</title><rect x="273.4" y="435.0" width="6.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="276.4" y="446.0"></text>
</g>
<g>
<title>process_backlog (26 samples, 0.53%)</title><rect x="273.7" y="419.0" width="6.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.7" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (25 samples, 0.51%)</title><rect x="273.9" y="403.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="276.9" y="414.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 0.51%)</title><rect x="273.9" y="387.0" width="6.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="276.9" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver (24 samples, 0.49%)</title><rect x="273.9" y="371.0" width="5.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="276.9" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (24 samples, 0.49%)</title><rect x="273.9" y="355.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="276.9" y="366.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (24 samples, 0.49%)</title><rect x="273.9" y="339.0" width="5.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="276.9" y="350.0"></text>
</g>
<g>
<title>tcp_v4_rcv (24 samples, 0.49%)</title><rect x="273.9" y="323.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.9" y="334.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="274.4" y="307.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.4" y="318.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (18 samples, 0.36%)</title><rect x="275.4" y="307.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="278.4" y="318.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 0.36%)</title><rect x="275.4" y="291.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="278.4" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (10 samples, 0.20%)</title><rect x="276.1" y="275.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="279.1" y="286.0"></text>
</g>
<g>
<title>__wake_up_common_lock (9 samples, 0.18%)</title><rect x="276.3" y="259.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="279.3" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.18%)</title><rect x="276.3" y="243.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="279.3" y="254.0"></text>
</g>
<g>
<title>tcp_ack (5 samples, 0.10%)</title><rect x="278.5" y="275.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.5" y="286.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="280.4" y="579.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.4" y="590.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="280.4" y="563.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="283.4" y="574.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.06%)</title><rect x="280.4" y="547.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="283.4" y="558.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="280.4" y="531.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="283.4" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.04%)</title><rect x="281.3" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="284.3" y="622.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.04%)</title><rect x="281.3" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="284.3" y="606.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="281.3" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="284.3" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$459/714641870.get (8 samples, 0.16%)</title><rect x="282.5" y="835.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.5" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/MergeResponses.mergeGetResponses (8 samples, 0.16%)</title><rect x="282.5" y="819.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.10%)</title><rect x="283.2" y="803.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="286.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="283.5" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="283.7" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.7" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="283.7" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.7" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="283.7" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (260 samples, 5.26%)</title><rect x="284.4" y="931.0" width="62.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.4" y="942.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (123 samples, 2.49%)</title><rect x="285.1" y="915.0" width="29.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.1" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (97 samples, 1.96%)</title><rect x="285.4" y="899.0" width="23.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.4" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (17 samples, 0.34%)</title><rect x="285.6" y="883.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.34%)</title><rect x="285.6" y="867.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="288.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.34%)</title><rect x="285.6" y="851.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.34%)</title><rect x="285.6" y="835.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.32%)</title><rect x="285.9" y="819.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.9" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="286.1" y="803.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="289.1" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="286.1" y="787.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="289.1" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (12 samples, 0.24%)</title><rect x="286.8" y="803.0" width="2.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="289.8" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.24%)</title><rect x="286.8" y="787.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="289.8" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.24%)</title><rect x="286.8" y="771.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="289.8" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.22%)</title><rect x="287.0" y="755.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="290.0" y="766.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.22%)</title><rect x="287.0" y="739.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="290.0" y="750.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.22%)</title><rect x="287.0" y="723.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="290.0" y="734.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.20%)</title><rect x="287.3" y="707.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="290.3" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.20%)</title><rect x="287.3" y="691.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="290.3" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.20%)</title><rect x="287.3" y="675.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="290.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (8 samples, 0.16%)</title><rect x="289.7" y="883.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="292.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (8 samples, 0.16%)</title><rect x="289.7" y="867.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (69 samples, 1.40%)</title><rect x="291.6" y="883.0" width="16.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (69 samples, 1.40%)</title><rect x="291.6" y="867.0" width="16.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.6" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (29 samples, 0.59%)</title><rect x="292.3" y="851.0" width="6.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="295.3" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.14%)</title><rect x="292.5" y="835.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="295.5" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="293.5" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="296.5" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.04%)</title><rect x="294.2" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="297.2" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.04%)</title><rect x="294.7" y="835.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="297.7" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (13 samples, 0.26%)</title><rect x="295.4" y="835.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="298.4" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.18%)</title><rect x="296.3" y="819.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="299.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.18%)</title><rect x="296.3" y="803.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="299.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="297.5" y="787.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="300.5" y="798.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="297.5" y="771.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="300.5" y="782.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.08%)</title><rect x="297.5" y="755.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="300.5" y="766.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="298.0" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="301.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.71%)</title><rect x="299.2" y="851.0" width="8.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="302.2" y="862.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.04%)</title><rect x="299.2" y="835.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="302.2" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.06%)</title><rect x="299.7" y="835.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="302.7" y="846.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (28 samples, 0.57%)</title><rect x="300.9" y="835.0" width="6.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="303.9" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.34%)</title><rect x="303.5" y="819.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.34%)</title><rect x="303.5" y="803.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="306.5" y="814.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (6 samples, 0.12%)</title><rect x="304.0" y="787.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="307.0" y="798.0"></text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 0.10%)</title><rect x="304.2" y="771.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="307.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.18%)</title><rect x="305.4" y="787.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="308.4" y="798.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.18%)</title><rect x="305.4" y="771.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="308.4" y="782.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.10%)</title><rect x="306.4" y="755.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.4" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="306.4" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="309.4" y="750.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="306.4" y="723.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.4" y="734.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.06%)</title><rect x="306.8" y="739.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="309.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="308.0" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="311.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (25 samples, 0.51%)</title><rect x="308.5" y="899.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (25 samples, 0.51%)</title><rect x="308.5" y="883.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="311.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (25 samples, 0.51%)</title><rect x="308.5" y="867.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.51%)</title><rect x="308.5" y="851.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="311.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.47%)</title><rect x="309.0" y="835.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.0" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="309.0" y="819.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="312.0" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (20 samples, 0.40%)</title><rect x="309.5" y="819.0" width="4.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="312.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.30%)</title><rect x="310.7" y="803.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="313.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.30%)</title><rect x="310.7" y="787.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="313.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.30%)</title><rect x="310.7" y="771.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.7" y="782.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.30%)</title><rect x="310.7" y="755.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.7" y="766.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.30%)</title><rect x="310.7" y="739.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="313.7" y="750.0"></text>
</g>
<g>
<title>wake_up_q (14 samples, 0.28%)</title><rect x="310.9" y="723.0" width="3.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.9" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (14 samples, 0.28%)</title><rect x="310.9" y="707.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.9" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (14 samples, 0.28%)</title><rect x="310.9" y="691.0" width="3.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (134 samples, 2.71%)</title><rect x="314.5" y="915.0" width="32.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.5" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (100 samples, 2.02%)</title><rect x="315.9" y="899.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.9" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (19 samples, 0.38%)</title><rect x="316.6" y="883.0" width="4.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="319.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (19 samples, 0.38%)</title><rect x="316.6" y="867.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (19 samples, 0.38%)</title><rect x="316.6" y="851.0" width="4.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="319.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.38%)</title><rect x="316.6" y="835.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.32%)</title><rect x="317.3" y="819.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="320.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="317.6" y="803.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="320.6" y="814.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.26%)</title><rect x="318.1" y="803.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="321.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.22%)</title><rect x="318.5" y="787.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="321.5" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.22%)</title><rect x="318.5" y="771.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="321.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.20%)</title><rect x="318.8" y="755.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="321.8" y="766.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.20%)</title><rect x="318.8" y="739.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="321.8" y="750.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.20%)</title><rect x="318.8" y="723.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="321.8" y="734.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.20%)</title><rect x="318.8" y="707.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="321.8" y="718.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.20%)</title><rect x="318.8" y="691.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="321.8" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.20%)</title><rect x="318.8" y="675.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="321.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (78 samples, 1.58%)</title><rect x="321.2" y="883.0" width="18.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="324.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (78 samples, 1.58%)</title><rect x="321.2" y="867.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.2" y="878.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.44%)</title><rect x="321.4" y="851.0" width="5.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="324.4" y="862.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.16%)</title><rect x="321.6" y="835.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="324.6" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="322.6" y="819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="325.6" y="830.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.04%)</title><rect x="324.0" y="835.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="327.0" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (8 samples, 0.16%)</title><rect x="324.5" y="835.0" width="1.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="327.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.16%)</title><rect x="324.5" y="819.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="327.5" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.16%)</title><rect x="324.5" y="803.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="327.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.10%)</title><rect x="325.0" y="787.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="328.0" y="798.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="325.5" y="771.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="328.5" y="782.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="325.5" y="755.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.5" y="766.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="325.7" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="328.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.09%)</title><rect x="326.7" y="851.0" width="12.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="329.7" y="862.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.04%)</title><rect x="326.7" y="835.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="329.7" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (5 samples, 0.10%)</title><rect x="327.1" y="835.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="330.1" y="846.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="328.6" y="835.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="331.6" y="846.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (42 samples, 0.85%)</title><rect x="329.5" y="835.0" width="10.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="332.5" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.36%)</title><rect x="335.2" y="819.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="338.2" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.36%)</title><rect x="335.2" y="803.0" width="4.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="338.2" y="814.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.04%)</title><rect x="336.0" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="339.0" y="798.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.04%)</title><rect x="336.0" y="771.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="339.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.26%)</title><rect x="336.4" y="787.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="339.4" y="798.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.22%)</title><rect x="336.9" y="771.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="339.9" y="782.0"></text>
</g>
<g>
<title>futex_wait (11 samples, 0.22%)</title><rect x="336.9" y="755.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="339.9" y="766.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.08%)</title><rect x="337.4" y="739.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="340.4" y="750.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.08%)</title><rect x="337.4" y="723.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="340.4" y="734.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.08%)</title><rect x="337.4" y="707.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="340.4" y="718.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.10%)</title><rect x="338.3" y="739.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="341.3" y="750.0"></text>
</g>
<g>
<title>get_futex_value_locked (3 samples, 0.06%)</title><rect x="338.6" y="723.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="341.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="339.8" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="342.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.04%)</title><rect x="339.8" y="883.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.04%)</title><rect x="339.8" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="342.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.04%)</title><rect x="339.8" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.10%)</title><rect x="340.3" y="899.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="343.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (5 samples, 0.10%)</title><rect x="340.3" y="883.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="343.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.10%)</title><rect x="340.3" y="867.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.08%)</title><rect x="340.5" y="851.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.08%)</title><rect x="340.5" y="835.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="343.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.08%)</title><rect x="340.5" y="819.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="340.5" y="803.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="343.5" y="814.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="340.5" y="787.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="343.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="340.5" y="771.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="343.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="340.5" y="755.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="343.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="340.7" y="739.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="343.7" y="750.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="341.0" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="344.0" y="734.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="341.0" y="707.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="344.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (21 samples, 0.42%)</title><rect x="341.4" y="899.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="344.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (21 samples, 0.42%)</title><rect x="341.4" y="883.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="344.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (21 samples, 0.42%)</title><rect x="341.4" y="867.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (21 samples, 0.42%)</title><rect x="341.4" y="851.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="344.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (21 samples, 0.42%)</title><rect x="341.4" y="835.0" width="5.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="344.4" y="846.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="341.4" y="819.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="344.4" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (17 samples, 0.34%)</title><rect x="342.4" y="819.0" width="4.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="345.4" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.32%)</title><rect x="342.6" y="803.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="345.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.32%)</title><rect x="342.6" y="787.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="345.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.28%)</title><rect x="342.9" y="771.0" width="3.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="345.9" y="782.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.26%)</title><rect x="343.1" y="755.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="346.1" y="766.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.26%)</title><rect x="343.1" y="739.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="346.1" y="750.0"></text>
</g>
<g>
<title>wake_up_q (11 samples, 0.22%)</title><rect x="343.6" y="723.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="346.6" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (11 samples, 0.22%)</title><rect x="343.6" y="707.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="346.6" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (11 samples, 0.22%)</title><rect x="343.6" y="691.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="346.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="346.5" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$375/1348530906.run (153 samples, 3.09%)</title><rect x="346.9" y="931.0" width="36.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="349.9" y="942.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (153 samples, 3.09%)</title><rect x="346.9" y="915.0" width="36.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.9" y="926.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (153 samples, 3.09%)</title><rect x="346.9" y="899.0" width="36.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.9" y="910.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (150 samples, 3.03%)</title><rect x="347.7" y="883.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.7" y="894.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (150 samples, 3.03%)</title><rect x="347.7" y="867.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.7" y="878.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (150 samples, 3.03%)</title><rect x="347.7" y="851.0" width="35.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="350.7" y="862.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (150 samples, 3.03%)</title><rect x="347.7" y="835.0" width="35.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.7" y="846.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (150 samples, 3.03%)</title><rect x="347.7" y="819.0" width="35.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.7" y="830.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (150 samples, 3.03%)</title><rect x="347.7" y="803.0" width="35.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.7" y="814.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (149 samples, 3.01%)</title><rect x="347.9" y="787.0" width="35.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="350.9" y="798.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (149 samples, 3.01%)</title><rect x="347.9" y="771.0" width="35.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="350.9" y="782.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (26 samples, 0.53%)</title><rect x="347.9" y="755.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="350.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (22 samples, 0.44%)</title><rect x="348.1" y="739.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.44%)</title><rect x="348.1" y="723.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="351.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (21 samples, 0.42%)</title><rect x="348.4" y="707.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="351.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (21 samples, 0.42%)</title><rect x="348.4" y="691.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="351.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (12 samples, 0.24%)</title><rect x="348.4" y="675.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="351.4" y="686.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="348.6" y="659.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="351.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="349.6" y="659.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="352.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (2 samples, 0.04%)</title><rect x="349.6" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$402/198896344.apply (5 samples, 0.10%)</title><rect x="350.0" y="659.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.06%)</title><rect x="350.3" y="643.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="353.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.06%)</title><rect x="350.3" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="353.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (2 samples, 0.04%)</title><rect x="350.5" y="611.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="353.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (2 samples, 0.04%)</title><rect x="350.5" y="595.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.04%)</title><rect x="350.5" y="579.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="353.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.16%)</title><rect x="351.2" y="675.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="354.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.14%)</title><rect x="351.5" y="659.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="354.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$357/47109688.apply (6 samples, 0.12%)</title><rect x="351.7" y="643.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6 samples, 0.12%)</title><rect x="351.7" y="627.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6 samples, 0.12%)</title><rect x="351.7" y="611.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$212/311098875.apply (6 samples, 0.12%)</title><rect x="351.7" y="595.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6 samples, 0.12%)</title><rect x="351.7" y="579.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="354.7" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="351.7" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="354.7" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="351.7" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$402/198896344.get$Lambda (2 samples, 0.04%)</title><rect x="351.7" y="531.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="354.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="352.2" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="352.2" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="355.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="352.2" y="531.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="355.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="352.2" y="515.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.04%)</title><rect x="352.7" y="563.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="355.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.06%)</title><rect x="353.4" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="356.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.04%)</title><rect x="353.6" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.04%)</title><rect x="353.6" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="356.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (122 samples, 2.47%)</title><rect x="354.3" y="755.0" width="29.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="357.3" y="766.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (122 samples, 2.47%)</title><rect x="354.3" y="739.0" width="29.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="357.3" y="750.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (122 samples, 2.47%)</title><rect x="354.3" y="723.0" width="29.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.3" y="734.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (122 samples, 2.47%)</title><rect x="354.3" y="707.0" width="29.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="357.3" y="718.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (121 samples, 2.45%)</title><rect x="354.6" y="691.0" width="28.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="357.6" y="702.0">jd..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (121 samples, 2.45%)</title><rect x="354.6" y="675.0" width="28.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="357.6" y="686.0">ja..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (121 samples, 2.45%)</title><rect x="354.6" y="659.0" width="28.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="357.6" y="670.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (121 samples, 2.45%)</title><rect x="354.6" y="643.0" width="28.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="357.6" y="654.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (121 samples, 2.45%)</title><rect x="354.6" y="627.0" width="28.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="357.6" y="638.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (118 samples, 2.39%)</title><rect x="355.1" y="611.0" width="28.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="358.1" y="622.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (118 samples, 2.39%)</title><rect x="355.1" y="595.0" width="28.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="358.1" y="606.0">su..</text>
</g>
<g>
<title>__GI___writev (114 samples, 2.31%)</title><rect x="355.5" y="579.0" width="27.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="358.5" y="590.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 2.26%)</title><rect x="356.0" y="563.0" width="26.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="359.0" y="574.0">e..</text>
</g>
<g>
<title>do_syscall_64 (112 samples, 2.26%)</title><rect x="356.0" y="547.0" width="26.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="359.0" y="558.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.04%)</title><rect x="356.2" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.2" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.04%)</title><rect x="356.2" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.2" y="526.0"></text>
</g>
<g>
<title>do_writev (109 samples, 2.20%)</title><rect x="356.7" y="531.0" width="26.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.7" y="542.0">d..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.06%)</title><rect x="356.7" y="515.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.7" y="526.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="356.7" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="359.7" y="510.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.06%)</title><rect x="356.7" y="483.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="359.7" y="494.0"></text>
</g>
<g>
<title>vfs_writev (106 samples, 2.14%)</title><rect x="357.4" y="515.0" width="25.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.4" y="526.0">v..</text>
</g>
<g>
<title>do_iter_write (103 samples, 2.08%)</title><rect x="358.2" y="499.0" width="24.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="361.2" y="510.0">d..</text>
</g>
<g>
<title>do_iter_readv_writev (102 samples, 2.06%)</title><rect x="358.2" y="483.0" width="24.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="361.2" y="494.0">d..</text>
</g>
<g>
<title>sock_write_iter (100 samples, 2.02%)</title><rect x="358.6" y="467.0" width="23.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="361.6" y="478.0">s..</text>
</g>
<g>
<title>sock_sendmsg (100 samples, 2.02%)</title><rect x="358.6" y="451.0" width="23.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="361.6" y="462.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.04%)</title><rect x="358.6" y="435.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="361.6" y="446.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.04%)</title><rect x="358.6" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="361.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg (98 samples, 1.98%)</title><rect x="359.1" y="435.0" width="23.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="362.1" y="446.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (97 samples, 1.96%)</title><rect x="359.3" y="419.0" width="23.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="362.3" y="430.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (83 samples, 1.68%)</title><rect x="361.0" y="403.0" width="19.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="364.0" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (83 samples, 1.68%)</title><rect x="361.0" y="387.0" width="19.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.0" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (76 samples, 1.54%)</title><rect x="361.5" y="371.0" width="18.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (71 samples, 1.44%)</title><rect x="362.2" y="355.0" width="17.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.2" y="366.0"></text>
</g>
<g>
<title>ip_output (70 samples, 1.42%)</title><rect x="362.4" y="339.0" width="16.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="365.4" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (66 samples, 1.33%)</title><rect x="362.7" y="323.0" width="15.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="365.7" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.04%)</title><rect x="363.6" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="366.6" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.04%)</title><rect x="363.6" y="291.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="366.6" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="363.6" y="275.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="366.6" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (60 samples, 1.21%)</title><rect x="364.1" y="307.0" width="14.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="367.1" y="318.0"></text>
</g>
<g>
<title>do_softirq (60 samples, 1.21%)</title><rect x="364.1" y="291.0" width="14.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="367.1" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (59 samples, 1.19%)</title><rect x="364.4" y="275.0" width="14.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="367.4" y="286.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (59 samples, 1.19%)</title><rect x="364.4" y="259.0" width="14.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="367.4" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (59 samples, 1.19%)</title><rect x="364.4" y="243.0" width="14.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="367.4" y="254.0"></text>
</g>
<g>
<title>net_rx_action (59 samples, 1.19%)</title><rect x="364.4" y="227.0" width="14.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.4" y="238.0"></text>
</g>
<g>
<title>process_backlog (57 samples, 1.15%)</title><rect x="364.8" y="211.0" width="13.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="367.8" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (56 samples, 1.13%)</title><rect x="365.1" y="195.0" width="13.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="368.1" y="206.0"></text>
</g>
<g>
<title>ip_rcv (54 samples, 1.09%)</title><rect x="365.6" y="179.0" width="12.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="368.6" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (51 samples, 1.03%)</title><rect x="365.6" y="163.0" width="12.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.6" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 1.03%)</title><rect x="365.6" y="147.0" width="12.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="368.6" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (51 samples, 1.03%)</title><rect x="365.6" y="131.0" width="12.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="368.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (50 samples, 1.01%)</title><rect x="365.8" y="115.0" width="11.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.8" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.10%)</title><rect x="366.5" y="99.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.5" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (41 samples, 0.83%)</title><rect x="367.9" y="99.0" width="9.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="370.9" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (41 samples, 0.83%)</title><rect x="367.9" y="83.0" width="9.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="370.9" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="368.4" y="67.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.4" y="78.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.06%)</title><rect x="368.4" y="51.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="371.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="368.4" y="35.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="371.4" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (35 samples, 0.71%)</title><rect x="369.1" y="67.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.1" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (34 samples, 0.69%)</title><rect x="369.4" y="51.0" width="8.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="372.4" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (34 samples, 0.69%)</title><rect x="369.4" y="35.0" width="8.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="372.4" y="46.0"></text>
</g>
<g>
<title>ip_rcv_core (2 samples, 0.04%)</title><rect x="377.7" y="163.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="380.7" y="174.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.06%)</title><rect x="378.4" y="323.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="381.4" y="334.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.06%)</title><rect x="378.4" y="307.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.4" y="318.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.08%)</title><rect x="379.6" y="371.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="382.6" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.06%)</title><rect x="379.6" y="355.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="382.6" y="366.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.06%)</title><rect x="379.6" y="339.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="382.6" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="379.9" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="382.9" y="334.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.06%)</title><rect x="380.8" y="403.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="383.8" y="414.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.06%)</title><rect x="380.8" y="387.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.8" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="381.1" y="371.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="384.1" y="382.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.06%)</title><rect x="381.5" y="403.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="384.5" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (443 samples, 8.96%)</title><rect x="383.4" y="931.0" width="105.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.4" y="942.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (439 samples, 8.88%)</title><rect x="384.4" y="915.0" width="104.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="387.4" y="926.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (139 samples, 2.81%)</title><rect x="384.4" y="899.0" width="33.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.4" y="910.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (138 samples, 2.79%)</title><rect x="384.6" y="883.0" width="33.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="387.6" y="894.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (138 samples, 2.79%)</title><rect x="384.6" y="867.0" width="33.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.6" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (17 samples, 0.34%)</title><rect x="384.6" y="851.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="387.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (17 samples, 0.34%)</title><rect x="384.6" y="835.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (17 samples, 0.34%)</title><rect x="384.6" y="819.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="387.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (17 samples, 0.34%)</title><rect x="384.6" y="803.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (14 samples, 0.28%)</title><rect x="385.4" y="787.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (14 samples, 0.28%)</title><rect x="385.4" y="771.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (13 samples, 0.26%)</title><rect x="385.6" y="755.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="388.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (13 samples, 0.26%)</title><rect x="385.6" y="739.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="388.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (11 samples, 0.22%)</title><rect x="386.1" y="723.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.1" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (10 samples, 0.20%)</title><rect x="386.3" y="707.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="389.3" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (10 samples, 0.20%)</title><rect x="386.3" y="691.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="389.3" y="702.0"></text>
</g>
<g>
<title>__write (10 samples, 0.20%)</title><rect x="386.3" y="675.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="389.3" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.16%)</title><rect x="386.8" y="659.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="389.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.16%)</title><rect x="386.8" y="643.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="389.8" y="654.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 0.12%)</title><rect x="387.3" y="627.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="390.3" y="638.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 0.12%)</title><rect x="387.3" y="611.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="390.3" y="622.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 0.12%)</title><rect x="387.3" y="595.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.3" y="606.0"></text>
</g>
<g>
<title>pipe_write (6 samples, 0.12%)</title><rect x="387.3" y="579.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.3" y="590.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.12%)</title><rect x="387.3" y="563.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.3" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="387.3" y="547.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="390.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (120 samples, 2.43%)</title><rect x="388.9" y="851.0" width="28.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="391.9" y="862.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (120 samples, 2.43%)</title><rect x="388.9" y="835.0" width="28.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="391.9" y="846.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (120 samples, 2.43%)</title><rect x="388.9" y="819.0" width="28.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="391.9" y="830.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (120 samples, 2.43%)</title><rect x="388.9" y="803.0" width="28.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="391.9" y="814.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (59 samples, 1.19%)</title><rect x="388.9" y="787.0" width="14.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (59 samples, 1.19%)</title><rect x="388.9" y="771.0" width="14.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="391.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (58 samples, 1.17%)</title><rect x="388.9" y="755.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="391.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (54 samples, 1.09%)</title><rect x="388.9" y="739.0" width="12.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="391.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (54 samples, 1.09%)</title><rect x="388.9" y="723.0" width="12.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (54 samples, 1.09%)</title><rect x="388.9" y="707.0" width="12.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (54 samples, 1.09%)</title><rect x="388.9" y="691.0" width="12.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="391.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (53 samples, 1.07%)</title><rect x="389.2" y="675.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (53 samples, 1.07%)</title><rect x="389.2" y="659.0" width="12.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="392.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (41 samples, 0.83%)</title><rect x="390.1" y="643.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="393.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="390.8" y="627.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="393.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$183/699148914.apply (30 samples, 0.61%)</title><rect x="391.6" y="627.0" width="7.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="394.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (30 samples, 0.61%)</title><rect x="391.6" y="611.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.04%)</title><rect x="391.8" y="595.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="394.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (27 samples, 0.55%)</title><rect x="392.3" y="595.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (27 samples, 0.55%)</title><rect x="392.3" y="579.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (18 samples, 0.36%)</title><rect x="392.3" y="563.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.3" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (4 samples, 0.08%)</title><rect x="392.3" y="547.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="395.3" y="558.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (4 samples, 0.08%)</title><rect x="392.3" y="531.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="395.3" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="392.3" y="515.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.3" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.08%)</title><rect x="392.3" y="499.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.3" y="510.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.08%)</title><rect x="392.3" y="483.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.3" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="392.3" y="467.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.3" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="392.8" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="395.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.24%)</title><rect x="393.2" y="547.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$420/1058928207.run (12 samples, 0.24%)</title><rect x="393.2" y="531.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (12 samples, 0.24%)</title><rect x="393.2" y="515.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (8 samples, 0.16%)</title><rect x="393.9" y="499.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="396.9" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (8 samples, 0.16%)</title><rect x="393.9" y="483.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="396.9" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="394.2" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="397.2" y="478.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="394.2" y="451.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$438/275199194.get$Lambda (2 samples, 0.04%)</title><rect x="394.2" y="435.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.2" y="446.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (3 samples, 0.06%)</title><rect x="394.7" y="467.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="397.7" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="395.4" y="467.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="398.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="395.4" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.getBody (2 samples, 0.04%)</title><rect x="396.1" y="547.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.04%)</title><rect x="396.1" y="531.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.04%)</title><rect x="396.1" y="515.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="399.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.04%)</title><rect x="396.1" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="399.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (2 samples, 0.04%)</title><rect x="396.1" y="483.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="399.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="396.1" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.1" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/GetBodyHandler.apply (9 samples, 0.18%)</title><rect x="396.6" y="563.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="399.6" y="574.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (9 samples, 0.18%)</title><rect x="396.6" y="547.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.6" y="558.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.06%)</title><rect x="396.6" y="531.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="399.6" y="542.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="396.8" y="515.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="399.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="396.8" y="499.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="399.8" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="396.8" y="483.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="399.8" y="494.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="396.8" y="467.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="399.8" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (4 samples, 0.08%)</title><rect x="397.5" y="531.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.5" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="397.5" y="515.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="400.5" y="526.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="397.5" y="499.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.5" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (2 samples, 0.04%)</title><rect x="398.0" y="499.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="401.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (2 samples, 0.04%)</title><rect x="398.0" y="483.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="398.0" y="467.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.0" y="478.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="398.0" y="451.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="401.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$359/1611607641.apply (5 samples, 0.10%)</title><rect x="398.7" y="627.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (5 samples, 0.10%)</title><rect x="398.7" y="611.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (5 samples, 0.10%)</title><rect x="398.7" y="595.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="401.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (3 samples, 0.06%)</title><rect x="399.0" y="579.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="402.0" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.06%)</title><rect x="399.0" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="402.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (8 samples, 0.16%)</title><rect x="399.9" y="643.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="402.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (7 samples, 0.14%)</title><rect x="400.2" y="627.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="403.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$361/2115167929.apply (6 samples, 0.12%)</title><rect x="400.4" y="611.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.4" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (6 samples, 0.12%)</title><rect x="400.4" y="595.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="403.4" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.cancelTimer (5 samples, 0.10%)</title><rect x="400.4" y="579.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="403.4" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.cancelTimer (5 samples, 0.10%)</title><rect x="400.4" y="563.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.remove (5 samples, 0.10%)</title><rect x="400.4" y="547.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.remove (5 samples, 0.10%)</title><rect x="400.4" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="403.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.deleteEntry (4 samples, 0.08%)</title><rect x="400.4" y="515.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="403.4" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterDeletion (3 samples, 0.06%)</title><rect x="400.6" y="499.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="403.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.08%)</title><rect x="401.8" y="739.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="404.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.08%)</title><rect x="401.8" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.08%)</title><rect x="401.8" y="707.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="404.8" y="718.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="402.1" y="691.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="405.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (61 samples, 1.23%)</title><rect x="403.0" y="787.0" width="14.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="406.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (4 samples, 0.08%)</title><rect x="406.4" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.08%)</title><rect x="406.4" y="755.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="409.4" y="766.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.08%)</title><rect x="406.4" y="739.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="409.4" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="406.8" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="409.8" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="406.8" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (5 samples, 0.10%)</title><rect x="407.3" y="771.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="410.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.06%)</title><rect x="407.3" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="407.5" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="410.5" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="407.5" y="723.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="410.5" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="408.0" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="411.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (12 samples, 0.24%)</title><rect x="408.5" y="771.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.5" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.24%)</title><rect x="408.5" y="755.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="411.5" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.24%)</title><rect x="408.5" y="739.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="411.5" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (11 samples, 0.22%)</title><rect x="408.7" y="723.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (11 samples, 0.22%)</title><rect x="408.7" y="707.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="411.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.20%)</title><rect x="409.0" y="691.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="412.0" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.06%)</title><rect x="409.2" y="675.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="412.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (5 samples, 0.10%)</title><rect x="409.9" y="675.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="412.9" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.04%)</title><rect x="410.4" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="413.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (26 samples, 0.53%)</title><rect x="411.4" y="771.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="414.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (17 samples, 0.34%)</title><rect x="413.5" y="755.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="413.8" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="413.8" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="413.8" y="707.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="414.5" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.06%)</title><rect x="414.9" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="415.2" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="418.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.06%)</title><rect x="415.7" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.06%)</title><rect x="415.7" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.7" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="415.9" y="707.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="418.9" y="718.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.08%)</title><rect x="416.6" y="739.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="419.6" y="750.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.04%)</title><rect x="416.9" y="723.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (300 samples, 6.07%)</title><rect x="417.6" y="899.0" width="71.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.6" y="910.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (300 samples, 6.07%)</title><rect x="417.6" y="883.0" width="71.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.6" y="894.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (299 samples, 6.05%)</title><rect x="417.6" y="867.0" width="71.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.6" y="878.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$299/1822752166.run (298 samples, 6.03%)</title><rect x="417.8" y="851.0" width="71.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.8" y="862.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (296 samples, 5.99%)</title><rect x="418.3" y="835.0" width="70.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.3" y="846.0">jdk/inte..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkForErrors (2 samples, 0.04%)</title><rect x="418.3" y="819.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="418.8" y="819.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (289 samples, 5.84%)</title><rect x="419.5" y="819.0" width="68.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.5" y="830.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (289 samples, 5.84%)</title><rect x="419.5" y="803.0" width="68.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.5" y="814.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (289 samples, 5.84%)</title><rect x="419.5" y="787.0" width="68.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.5" y="798.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (289 samples, 5.84%)</title><rect x="419.5" y="771.0" width="68.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.5" y="782.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (289 samples, 5.84%)</title><rect x="419.5" y="755.0" width="68.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.5" y="766.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (289 samples, 5.84%)</title><rect x="419.5" y="739.0" width="68.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="422.5" y="750.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$421/1804270592.run (216 samples, 4.37%)</title><rect x="419.5" y="723.0" width="51.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="422.5" y="734.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (216 samples, 4.37%)</title><rect x="419.5" y="707.0" width="51.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="422.5" y="718.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (216 samples, 4.37%)</title><rect x="419.5" y="691.0" width="51.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.5" y="702.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (215 samples, 4.35%)</title><rect x="419.7" y="675.0" width="51.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.7" y="686.0">jdk/i..</text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.08%)</title><rect x="419.7" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="422.7" y="670.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.08%)</title><rect x="419.7" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="422.7" y="654.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (2 samples, 0.04%)</title><rect x="419.7" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="422.7" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.create (2 samples, 0.04%)</title><rect x="419.7" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.7" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="419.7" y="595.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="422.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="420.2" y="627.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.2" y="638.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="420.2" y="611.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="423.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (211 samples, 4.27%)</title><rect x="420.7" y="659.0" width="50.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="423.7" y="670.0">jdk/i..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (22 samples, 0.44%)</title><rect x="422.8" y="643.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="425.8" y="654.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (22 samples, 0.44%)</title><rect x="422.8" y="627.0" width="5.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="425.8" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (21 samples, 0.42%)</title><rect x="422.8" y="611.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="425.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (154 samples, 3.11%)</title><rect x="428.1" y="643.0" width="36.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.1" y="654.0">jdk..</text>
</g>
<g>
<title>java/time/Instant.plus (8 samples, 0.16%)</title><rect x="458.9" y="627.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.9" y="638.0"></text>
</g>
<g>
<title>java/time/Instant.plusSeconds (8 samples, 0.16%)</title><rect x="458.9" y="611.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="461.9" y="622.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (8 samples, 0.16%)</title><rect x="458.9" y="595.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="461.9" y="606.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (8 samples, 0.16%)</title><rect x="458.9" y="579.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="461.9" y="590.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (8 samples, 0.16%)</title><rect x="458.9" y="563.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="461.9" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.06%)</title><rect x="460.8" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.8" y="638.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.06%)</title><rect x="460.8" y="611.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="463.8" y="622.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (14 samples, 0.28%)</title><rect x="461.5" y="627.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="464.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.06%)</title><rect x="464.8" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="467.8" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="465.1" y="627.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="468.1" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (23 samples, 0.47%)</title><rect x="465.5" y="643.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (23 samples, 0.47%)</title><rect x="465.5" y="627.0" width="5.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (3 samples, 0.06%)</title><rect x="465.5" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.06%)</title><rect x="465.5" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.06%)</title><rect x="465.5" y="579.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.06%)</title><rect x="465.5" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="468.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.06%)</title><rect x="465.5" y="547.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="465.8" y="531.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.8" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (19 samples, 0.38%)</title><rect x="466.5" y="611.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (19 samples, 0.38%)</title><rect x="466.5" y="595.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="469.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (17 samples, 0.34%)</title><rect x="466.5" y="579.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (16 samples, 0.32%)</title><rect x="466.5" y="563.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (16 samples, 0.32%)</title><rect x="466.5" y="547.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.5" y="558.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="466.7" y="531.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="469.7" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="466.7" y="515.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="469.7" y="526.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.04%)</title><rect x="466.7" y="499.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="469.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (13 samples, 0.26%)</title><rect x="467.2" y="531.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (11 samples, 0.22%)</title><rect x="467.7" y="515.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.7" y="526.0"></text>
</g>
<g>
<title>__write (11 samples, 0.22%)</title><rect x="467.7" y="499.0" width="2.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="470.7" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.20%)</title><rect x="467.9" y="483.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="470.9" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.20%)</title><rect x="467.9" y="467.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.9" y="478.0"></text>
</g>
<g>
<title>ksys_write (8 samples, 0.16%)</title><rect x="468.2" y="451.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="471.2" y="462.0"></text>
</g>
<g>
<title>vfs_write (8 samples, 0.16%)</title><rect x="468.2" y="435.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.2" y="446.0"></text>
</g>
<g>
<title>new_sync_write (8 samples, 0.16%)</title><rect x="468.2" y="419.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="471.2" y="430.0"></text>
</g>
<g>
<title>pipe_write (7 samples, 0.14%)</title><rect x="468.4" y="403.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="471.4" y="414.0"></text>
</g>
<g>
<title>__wake_up_common_lock (6 samples, 0.12%)</title><rect x="468.6" y="387.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="471.6" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="468.6" y="371.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="471.6" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (2 samples, 0.04%)</title><rect x="470.5" y="579.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="470.5" y="563.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="473.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$422/148987113.accept (9 samples, 0.18%)</title><rect x="471.0" y="723.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (9 samples, 0.18%)</title><rect x="471.0" y="707.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (9 samples, 0.18%)</title><rect x="471.0" y="691.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.14%)</title><rect x="471.0" y="675.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.14%)</title><rect x="471.0" y="659.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.12%)</title><rect x="471.3" y="643.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.12%)</title><rect x="471.3" y="627.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="471.3" y="611.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="471.3" y="595.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="474.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$438/275199194.accept (2 samples, 0.04%)</title><rect x="472.2" y="611.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="475.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.04%)</title><rect x="472.2" y="595.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.04%)</title><rect x="472.2" y="579.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$327/689855706.accept (2 samples, 0.04%)</title><rect x="472.7" y="675.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.04%)</title><rect x="472.7" y="659.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (60 samples, 1.21%)</title><rect x="473.2" y="723.0" width="14.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (60 samples, 1.21%)</title><rect x="473.2" y="707.0" width="14.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="476.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onComplete (60 samples, 1.21%)</title><rect x="473.2" y="691.0" width="14.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (60 samples, 1.21%)</title><rect x="473.2" y="675.0" width="14.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="476.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (56 samples, 1.13%)</title><rect x="473.4" y="659.0" width="13.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="476.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (55 samples, 1.11%)</title><rect x="473.6" y="643.0" width="13.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (3 samples, 0.06%)</title><rect x="473.6" y="627.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/GetBodyHandler$$Lambda$499/1081019303.apply (2 samples, 0.04%)</title><rect x="473.9" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/GetBodyHandler.lambda$apply$0 (2 samples, 0.04%)</title><rect x="473.9" y="595.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (52 samples, 1.05%)</title><rect x="474.4" y="627.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (50 samples, 1.01%)</title><rect x="474.8" y="611.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="474.8" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="474.8" y="579.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="477.8" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/270619590.accept (2 samples, 0.04%)</title><rect x="474.8" y="563.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="477.8" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$441/270619590.accept (48 samples, 0.97%)</title><rect x="475.3" y="595.0" width="11.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (45 samples, 0.91%)</title><rect x="476.0" y="579.0" width="10.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (45 samples, 0.91%)</title><rect x="476.0" y="563.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (45 samples, 0.91%)</title><rect x="476.0" y="547.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (44 samples, 0.89%)</title><rect x="476.3" y="531.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="479.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (43 samples, 0.87%)</title><rect x="476.5" y="515.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="479.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (43 samples, 0.87%)</title><rect x="476.5" y="499.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.5" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (43 samples, 0.87%)</title><rect x="476.5" y="483.0" width="10.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (43 samples, 0.87%)</title><rect x="476.5" y="467.0" width="10.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="479.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (43 samples, 0.87%)</title><rect x="476.5" y="451.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="479.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (43 samples, 0.87%)</title><rect x="476.5" y="435.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.87%)</title><rect x="476.5" y="419.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 0.83%)</title><rect x="477.0" y="403.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.0" y="414.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.12%)</title><rect x="477.0" y="387.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="480.0" y="398.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="477.5" y="371.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="480.5" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="477.9" y="371.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="480.9" y="382.0"></text>
</g>
<g>
<title>__pthread_cond_signal (34 samples, 0.69%)</title><rect x="478.7" y="387.0" width="8.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="481.7" y="398.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.65%)</title><rect x="479.1" y="371.0" width="7.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="482.1" y="382.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.65%)</title><rect x="479.1" y="355.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.1" y="366.0"></text>
</g>
<g>
<title>__x64_sys_futex (28 samples, 0.57%)</title><rect x="479.9" y="339.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.9" y="350.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.55%)</title><rect x="480.1" y="323.0" width="6.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="483.1" y="334.0"></text>
</g>
<g>
<title>futex_wake (27 samples, 0.55%)</title><rect x="480.1" y="307.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="483.1" y="318.0"></text>
</g>
<g>
<title>wake_up_q (25 samples, 0.51%)</title><rect x="480.6" y="291.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="483.6" y="302.0"></text>
</g>
<g>
<title>try_to_wake_up (25 samples, 0.51%)</title><rect x="480.6" y="275.0" width="5.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.6" y="286.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 0.49%)</title><rect x="480.6" y="259.0" width="5.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="483.6" y="270.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (3 samples, 0.06%)</title><rect x="486.8" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.8" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="486.8" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="489.8" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="486.8" y="627.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="489.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.06%)</title><rect x="487.5" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.06%)</title><rect x="487.5" y="707.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (2 samples, 0.04%)</title><rect x="487.7" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$MappingSubscriber.onNext (2 samples, 0.04%)</title><rect x="487.7" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="490.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.04%)</title><rect x="487.7" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.04%)</title><rect x="487.7" y="643.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="490.7" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.04%)</title><rect x="487.7" y="627.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.7" y="638.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (2 samples, 0.04%)</title><rect x="487.7" y="611.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="490.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.04%)</title><rect x="488.4" y="819.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/1295475510.run (1,896 samples, 38.34%)</title><rect x="489.2" y="931.0" width="452.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.2" y="942.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$126/12954..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (1,896 samples, 38.34%)</title><rect x="489.2" y="915.0" width="452.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.2" y="926.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (1,896 samples, 38.34%)</title><rect x="489.2" y="899.0" width="452.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="492.2" y="910.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="489.6" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="492.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="489.6" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="492.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$411/644013256.get$Lambda (2 samples, 0.04%)</title><rect x="489.6" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$411/644013256.&lt;init&gt; (2 samples, 0.04%)</title><rect x="489.6" y="835.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="492.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.24%)</title><rect x="490.4" y="883.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.4" y="894.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.16%)</title><rect x="490.4" y="867.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.coder (4 samples, 0.08%)</title><rect x="490.6" y="851.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.6" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (4 samples, 0.08%)</title><rect x="490.6" y="835.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="493.6" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="491.5" y="851.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="494.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.08%)</title><rect x="492.3" y="867.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.3" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.08%)</title><rect x="492.3" y="851.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.3" y="862.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="492.7" y="835.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="495.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="493.2" y="883.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="493.2" y="867.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="496.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="493.2" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (110 samples, 2.22%)</title><rect x="493.9" y="883.0" width="26.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.9" y="894.0">r..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (63 samples, 1.27%)</title><rect x="494.6" y="867.0" width="15.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="497.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (63 samples, 1.27%)</title><rect x="494.6" y="851.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="497.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (63 samples, 1.27%)</title><rect x="494.6" y="835.0" width="15.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="497.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (63 samples, 1.27%)</title><rect x="494.6" y="819.0" width="15.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (37 samples, 0.75%)</title><rect x="495.6" y="803.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="498.6" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (3 samples, 0.06%)</title><rect x="496.3" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.3" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="496.3" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="499.3" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="496.3" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.3" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="496.3" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="496.3" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.3" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="496.3" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="499.3" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.12%)</title><rect x="497.0" y="787.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.0" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.12%)</title><rect x="497.0" y="771.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.0" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (4 samples, 0.08%)</title><rect x="497.5" y="755.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.08%)</title><rect x="497.5" y="739.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (4 samples, 0.08%)</title><rect x="497.5" y="723.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.5" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.08%)</title><rect x="497.5" y="707.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.5" y="718.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="497.7" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="497.7" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="500.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (24 samples, 0.49%)</title><rect x="498.7" y="787.0" width="5.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.7" y="798.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (24 samples, 0.49%)</title><rect x="498.7" y="771.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.7" y="782.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 0.49%)</title><rect x="498.7" y="755.0" width="5.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.7" y="766.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (17 samples, 0.34%)</title><rect x="498.7" y="739.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="501.7" y="750.0"></text>
</g>
<g>
<title>GrowableArray&lt;Metadata*&gt;::append(Metadata* const&amp;) [clone .isra.0] (2 samples, 0.04%)</title><rect x="499.4" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="502.4" y="734.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="499.9" y="723.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="502.9" y="734.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.08%)</title><rect x="500.4" y="723.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="503.4" y="734.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.04%)</title><rect x="500.6" y="707.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="503.6" y="718.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.04%)</title><rect x="500.6" y="691.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="503.6" y="702.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="502.0" y="723.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="505.0" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="502.0" y="707.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="505.0" y="718.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (6 samples, 0.12%)</title><rect x="503.0" y="739.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="506.0" y="750.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (5 samples, 0.10%)</title><rect x="503.2" y="723.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="506.2" y="734.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.04%)</title><rect x="504.0" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (9 samples, 0.18%)</title><rect x="504.4" y="803.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="507.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (6 samples, 0.12%)</title><rect x="505.1" y="787.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.10%)</title><rect x="505.4" y="771.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (13 samples, 0.26%)</title><rect x="506.6" y="803.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="509.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12 samples, 0.24%)</title><rect x="506.6" y="787.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.24%)</title><rect x="506.6" y="771.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="509.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="506.6" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.20%)</title><rect x="507.1" y="755.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="510.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.20%)</title><rect x="507.1" y="739.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.20%)</title><rect x="507.1" y="723.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.20%)</title><rect x="507.1" y="707.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="510.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.20%)</title><rect x="507.1" y="691.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="510.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.20%)</title><rect x="507.1" y="675.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.20%)</title><rect x="507.1" y="659.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.1" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 0.18%)</title><rect x="507.3" y="643.0" width="2.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="510.3" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.18%)</title><rect x="507.3" y="627.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="510.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.18%)</title><rect x="507.3" y="611.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="510.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.16%)</title><rect x="507.5" y="595.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="510.5" y="606.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.16%)</title><rect x="507.5" y="579.0" width="1.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.5" y="590.0"></text>
</g>
<g>
<title>futex_wake (8 samples, 0.16%)</title><rect x="507.5" y="563.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="510.5" y="574.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.12%)</title><rect x="508.0" y="547.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.0" y="558.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.12%)</title><rect x="508.0" y="531.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="511.0" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="508.0" y="515.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="511.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (5 samples, 0.10%)</title><rect x="509.7" y="867.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (5 samples, 0.10%)</title><rect x="509.7" y="851.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.7" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.10%)</title><rect x="509.7" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.7" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.10%)</title><rect x="509.7" y="819.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.7" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.06%)</title><rect x="510.2" y="803.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.2" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$148/1314295356.accept (3 samples, 0.06%)</title><rect x="510.2" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.2" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.06%)</title><rect x="510.2" y="771.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.08%)</title><rect x="510.9" y="867.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.08%)</title><rect x="510.9" y="851.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.9" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.08%)</title><rect x="510.9" y="835.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.9" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="511.4" y="819.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="514.4" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.requestForRepl (30 samples, 0.61%)</title><rect x="511.8" y="867.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="514.8" y="878.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (27 samples, 0.55%)</title><rect x="511.8" y="851.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.8" y="862.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (27 samples, 0.55%)</title><rect x="511.8" y="835.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.8" y="846.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (22 samples, 0.44%)</title><rect x="512.5" y="819.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.5" y="830.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (13 samples, 0.26%)</title><rect x="513.5" y="803.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="516.5" y="814.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (7 samples, 0.14%)</title><rect x="514.2" y="787.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.2" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.08%)</title><rect x="514.9" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="517.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="515.4" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="518.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="515.4" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="515.4" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="518.4" y="734.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.06%)</title><rect x="515.9" y="787.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.9" y="798.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.10%)</title><rect x="516.6" y="803.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="519.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="516.8" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.08%)</title><rect x="516.8" y="771.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="519.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.08%)</title><rect x="516.8" y="755.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.8" y="766.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="517.8" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.06%)</title><rect x="518.3" y="851.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.header (3 samples, 0.06%)</title><rect x="518.3" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.addHeader (2 samples, 0.04%)</title><rect x="518.5" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.5" y="830.0"></text>
</g>
<g>
<title>java/util/Map.computeIfAbsent (2 samples, 0.04%)</title><rect x="518.5" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="521.5" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="518.5" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (5 samples, 0.10%)</title><rect x="519.0" y="867.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.supplyAsync (5 samples, 0.10%)</title><rect x="519.0" y="851.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncSupplyStage (5 samples, 0.10%)</title><rect x="519.0" y="835.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.10%)</title><rect x="519.0" y="819.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (5 samples, 0.10%)</title><rect x="519.0" y="803.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="519.2" y="787.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="522.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="519.2" y="771.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="519.2" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="519.2" y="739.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="519.2" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.2" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.06%)</title><rect x="519.5" y="707.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="522.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="519.7" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="522.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="519.7" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="522.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="519.7" y="659.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="522.7" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="519.7" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="522.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="519.7" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="522.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.04%)</title><rect x="519.7" y="611.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="522.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.04%)</title><rect x="519.7" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="522.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="519.7" y="579.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="522.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (84 samples, 1.70%)</title><rect x="520.2" y="883.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (84 samples, 1.70%)</title><rect x="520.2" y="867.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="523.2" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.04%)</title><rect x="520.2" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.2" y="862.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (82 samples, 1.66%)</title><rect x="520.7" y="851.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.7" y="862.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (81 samples, 1.64%)</title><rect x="520.9" y="835.0" width="19.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.9" y="846.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (81 samples, 1.64%)</title><rect x="520.9" y="819.0" width="19.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (23 samples, 0.47%)</title><rect x="520.9" y="803.0" width="5.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="523.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (23 samples, 0.47%)</title><rect x="520.9" y="787.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.9" y="798.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (2 samples, 0.04%)</title><rect x="521.1" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="524.1" y="782.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (2 samples, 0.04%)</title><rect x="521.1" y="755.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="524.1" y="766.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (2 samples, 0.04%)</title><rect x="521.1" y="739.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="524.1" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (19 samples, 0.38%)</title><rect x="521.9" y="771.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="524.9" y="782.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (58 samples, 1.17%)</title><rect x="526.4" y="803.0" width="13.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="529.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (2 samples, 0.04%)</title><rect x="527.1" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (53 samples, 1.07%)</title><rect x="527.6" y="787.0" width="12.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.6" y="798.0"></text>
</g>
<g>
<title>itable stub (15 samples, 0.30%)</title><rect x="531.2" y="771.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="534.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (21 samples, 0.42%)</title><rect x="535.0" y="771.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="538.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (16 samples, 0.32%)</title><rect x="536.2" y="755.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="539.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (2 samples, 0.04%)</title><rect x="540.2" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (2 samples, 0.04%)</title><rect x="540.2" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (92 samples, 1.86%)</title><rect x="540.7" y="883.0" width="22.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.7" y="894.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (92 samples, 1.86%)</title><rect x="540.7" y="867.0" width="22.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.7" y="878.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (92 samples, 1.86%)</title><rect x="540.7" y="851.0" width="22.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.7" y="862.0">r..</text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (7 samples, 0.14%)</title><rect x="540.7" y="835.0" width="1.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.7" y="846.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (85 samples, 1.72%)</title><rect x="542.4" y="835.0" width="20.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (85 samples, 1.72%)</title><rect x="542.4" y="819.0" width="20.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.4" y="830.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (85 samples, 1.72%)</title><rect x="542.4" y="803.0" width="20.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.4" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (6 samples, 0.12%)</title><rect x="543.1" y="787.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.1" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (21 samples, 0.42%)</title><rect x="544.5" y="787.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (21 samples, 0.42%)</title><rect x="544.5" y="771.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.5" y="782.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (2 samples, 0.04%)</title><rect x="545.2" y="755.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="548.2" y="766.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (2 samples, 0.04%)</title><rect x="545.2" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="548.2" y="750.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (2 samples, 0.04%)</title><rect x="545.2" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="548.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (16 samples, 0.32%)</title><rect x="545.7" y="755.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.7" y="766.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (55 samples, 1.11%)</title><rect x="549.5" y="787.0" width="13.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="552.5" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (3 samples, 0.06%)</title><rect x="550.0" y="771.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.0" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (50 samples, 1.01%)</title><rect x="550.7" y="771.0" width="12.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="553.7" y="782.0"></text>
</g>
<g>
<title>itable stub (16 samples, 0.32%)</title><rect x="553.6" y="755.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="556.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (20 samples, 0.40%)</title><rect x="557.6" y="755.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="560.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (15 samples, 0.30%)</title><rect x="558.8" y="739.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (1,586 samples, 32.07%)</title><rect x="563.1" y="883.0" width="378.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.1" y="894.0">ru/mail/polis/service/gogun/ServiceUtils.selector</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (104 samples, 2.10%)</title><rect x="563.4" y="867.0" width="24.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.4" y="878.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (97 samples, 1.96%)</title><rect x="564.3" y="851.0" width="23.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.3" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.18%)</title><rect x="564.3" y="835.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.14%)</title><rect x="564.8" y="819.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.08%)</title><rect x="564.8" y="803.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="565.8" y="803.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="565.8" y="787.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.06%)</title><rect x="565.8" y="771.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="568.8" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 1.78%)</title><rect x="566.5" y="835.0" width="21.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (88 samples, 1.78%)</title><rect x="566.5" y="819.0" width="21.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.5" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (87 samples, 1.76%)</title><rect x="566.7" y="803.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="569.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (86 samples, 1.74%)</title><rect x="567.0" y="787.0" width="20.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="570.0" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.12%)</title><rect x="567.0" y="771.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="570.0" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="567.9" y="755.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="570.9" y="766.0"></text>
</g>
<g>
<title>__libc_send (80 samples, 1.62%)</title><rect x="568.4" y="771.0" width="19.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="571.4" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.60%)</title><rect x="568.6" y="755.0" width="18.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="571.6" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (79 samples, 1.60%)</title><rect x="568.6" y="739.0" width="18.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.6" y="750.0"></text>
</g>
<g>
<title>__x64_sys_sendto (76 samples, 1.54%)</title><rect x="569.3" y="723.0" width="18.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="572.3" y="734.0"></text>
</g>
<g>
<title>__sys_sendto (76 samples, 1.54%)</title><rect x="569.3" y="707.0" width="18.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="572.3" y="718.0"></text>
</g>
<g>
<title>sock_sendmsg (74 samples, 1.50%)</title><rect x="569.6" y="691.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.6" y="702.0"></text>
</g>
<g>
<title>tcp_sendmsg (74 samples, 1.50%)</title><rect x="569.6" y="675.0" width="17.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="572.6" y="686.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (74 samples, 1.50%)</title><rect x="569.6" y="659.0" width="17.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="572.6" y="670.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (56 samples, 1.13%)</title><rect x="570.5" y="643.0" width="13.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.5" y="654.0"></text>
</g>
<g>
<title>tcp_write_xmit (56 samples, 1.13%)</title><rect x="570.5" y="627.0" width="13.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="573.5" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (51 samples, 1.03%)</title><rect x="570.8" y="611.0" width="12.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="573.8" y="622.0"></text>
</g>
<g>
<title>__ip_queue_xmit (44 samples, 0.89%)</title><rect x="571.5" y="595.0" width="10.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="574.5" y="606.0"></text>
</g>
<g>
<title>ip_output (44 samples, 0.89%)</title><rect x="571.5" y="579.0" width="10.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="574.5" y="590.0"></text>
</g>
<g>
<title>ip_finish_output2 (43 samples, 0.87%)</title><rect x="571.7" y="563.0" width="10.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="574.7" y="574.0"></text>
</g>
<g>
<title>__dev_queue_xmit (6 samples, 0.12%)</title><rect x="571.7" y="547.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="574.7" y="558.0"></text>
</g>
<g>
<title>check_preemption_disabled (2 samples, 0.04%)</title><rect x="571.7" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="574.7" y="542.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.06%)</title><rect x="572.4" y="531.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.4" y="542.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.06%)</title><rect x="572.4" y="515.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="575.4" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (37 samples, 0.75%)</title><rect x="573.2" y="547.0" width="8.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="576.2" y="558.0"></text>
</g>
<g>
<title>do_softirq (37 samples, 0.75%)</title><rect x="573.2" y="531.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="576.2" y="542.0"></text>
</g>
<g>
<title>do_softirq_own_stack (37 samples, 0.75%)</title><rect x="573.2" y="515.0" width="8.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="576.2" y="526.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (37 samples, 0.75%)</title><rect x="573.2" y="499.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="576.2" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (37 samples, 0.75%)</title><rect x="573.2" y="483.0" width="8.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="576.2" y="494.0"></text>
</g>
<g>
<title>net_rx_action (35 samples, 0.71%)</title><rect x="573.6" y="467.0" width="8.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="576.6" y="478.0"></text>
</g>
<g>
<title>process_backlog (35 samples, 0.71%)</title><rect x="573.6" y="451.0" width="8.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="576.6" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (34 samples, 0.69%)</title><rect x="573.9" y="435.0" width="8.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="576.9" y="446.0"></text>
</g>
<g>
<title>ip_rcv (34 samples, 0.69%)</title><rect x="573.9" y="419.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="576.9" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver (33 samples, 0.67%)</title><rect x="573.9" y="403.0" width="7.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="576.9" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (32 samples, 0.65%)</title><rect x="574.1" y="387.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="577.1" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (32 samples, 0.65%)</title><rect x="574.1" y="371.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="577.1" y="382.0"></text>
</g>
<g>
<title>tcp_v4_rcv (32 samples, 0.65%)</title><rect x="574.1" y="355.0" width="7.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="577.1" y="366.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="574.1" y="339.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="577.1" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 0.55%)</title><rect x="575.1" y="339.0" width="6.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="578.1" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 0.55%)</title><rect x="575.1" y="323.0" width="6.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.1" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="575.3" y="307.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.3" y="318.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.04%)</title><rect x="575.3" y="291.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="578.3" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="575.3" y="275.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="578.3" y="286.0"></text>
</g>
<g>
<title>sock_def_readable (12 samples, 0.24%)</title><rect x="575.8" y="307.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="578.8" y="318.0"></text>
</g>
<g>
<title>__wake_up_common_lock (12 samples, 0.24%)</title><rect x="575.8" y="291.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.8" y="302.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (12 samples, 0.24%)</title><rect x="575.8" y="275.0" width="2.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="578.8" y="286.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.16%)</title><rect x="578.6" y="307.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="581.6" y="318.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="579.1" y="291.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.1" y="302.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="579.1" y="275.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="582.1" y="286.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.04%)</title><rect x="580.6" y="307.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="583.6" y="318.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.04%)</title><rect x="582.5" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="585.5" y="606.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.08%)</title><rect x="582.9" y="611.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="585.9" y="622.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="582.9" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="585.9" y="606.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.04%)</title><rect x="582.9" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="585.9" y="590.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="583.4" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="586.4" y="606.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.14%)</title><rect x="584.1" y="643.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="587.1" y="654.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.14%)</title><rect x="584.1" y="627.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="587.1" y="638.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.10%)</title><rect x="584.1" y="611.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="587.1" y="622.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.06%)</title><rect x="584.6" y="595.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="587.6" y="606.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="585.3" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.3" y="622.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (2 samples, 0.04%)</title><rect x="585.8" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="588.8" y="654.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.06%)</title><rect x="586.3" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.3" y="654.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.06%)</title><rect x="586.3" y="627.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="589.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.06%)</title><rect x="587.5" y="851.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="590.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="587.7" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.7" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$412/681916020.get (1,481 samples, 29.95%)</title><rect x="588.2" y="867.0" width="353.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.2" y="878.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$La..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$3 (1,481 samples, 29.95%)</title><rect x="588.2" y="851.0" width="353.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.2" y="862.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lam..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (1,481 samples, 29.95%)</title><rect x="588.2" y="835.0" width="353.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="591.2" y="846.0">ru/mail/polis/service/gogun/AsyncServiceImpl.han..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (1,479 samples, 29.91%)</title><rect x="588.2" y="819.0" width="352.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="591.2" y="830.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (143 samples, 2.89%)</title><rect x="588.2" y="803.0" width="34.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.2" y="814.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (142 samples, 2.87%)</title><rect x="588.2" y="787.0" width="33.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.2" y="798.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (8 samples, 0.16%)</title><rect x="588.2" y="771.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="591.2" y="782.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (8 samples, 0.16%)</title><rect x="588.2" y="755.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.2" y="766.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (8 samples, 0.16%)</title><rect x="588.2" y="739.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="591.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.16%)</title><rect x="588.2" y="723.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="591.2" y="734.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.16%)</title><rect x="588.2" y="707.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="591.2" y="718.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (6 samples, 0.12%)</title><rect x="588.7" y="691.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.7" y="702.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (6 samples, 0.12%)</title><rect x="588.7" y="675.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="591.7" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (6 samples, 0.12%)</title><rect x="588.7" y="659.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="591.7" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (6 samples, 0.12%)</title><rect x="588.7" y="643.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="588.7" y="627.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="591.7" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="588.7" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="591.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$470/910193538.apply (4 samples, 0.08%)</title><rect x="589.1" y="627.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (4 samples, 0.08%)</title><rect x="589.1" y="611.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.08%)</title><rect x="589.1" y="595.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.1" y="606.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (134 samples, 2.71%)</title><rect x="590.1" y="771.0" width="32.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.1" y="782.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (134 samples, 2.71%)</title><rect x="590.1" y="755.0" width="32.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="593.1" y="766.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (134 samples, 2.71%)</title><rect x="590.1" y="739.0" width="32.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.1" y="750.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (134 samples, 2.71%)</title><rect x="590.1" y="723.0" width="32.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="593.1" y="734.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (134 samples, 2.71%)</title><rect x="590.1" y="707.0" width="32.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="593.1" y="718.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (134 samples, 2.71%)</title><rect x="590.1" y="691.0" width="32.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.1" y="702.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (131 samples, 2.65%)</title><rect x="590.1" y="675.0" width="31.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.1" y="686.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (130 samples, 2.63%)</title><rect x="590.3" y="659.0" width="31.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.3" y="670.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (130 samples, 2.63%)</title><rect x="590.3" y="643.0" width="31.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.3" y="654.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (130 samples, 2.63%)</title><rect x="590.3" y="627.0" width="31.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="593.3" y="638.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (50 samples, 1.01%)</title><rect x="590.3" y="611.0" width="12.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.3" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="590.3" y="595.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="593.3" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="590.3" y="579.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.3" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="590.3" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.3" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (48 samples, 0.97%)</title><rect x="590.8" y="595.0" width="11.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (47 samples, 0.95%)</title><rect x="591.1" y="579.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.06%)</title><rect x="591.3" y="563.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="594.3" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.06%)</title><rect x="591.3" y="547.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.3" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="591.5" y="531.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="594.5" y="542.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="591.5" y="515.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="594.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="591.5" y="499.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (42 samples, 0.85%)</title><rect x="592.0" y="563.0" width="10.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.0" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (36 samples, 0.73%)</title><rect x="592.0" y="547.0" width="8.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="595.0" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (36 samples, 0.73%)</title><rect x="592.0" y="531.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="595.0" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (36 samples, 0.73%)</title><rect x="592.0" y="515.0" width="8.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="595.0" y="526.0"></text>
</g>
<g>
<title>pread (34 samples, 0.69%)</title><rect x="592.5" y="499.0" width="8.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="595.5" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.51%)</title><rect x="594.6" y="483.0" width="6.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="597.6" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.51%)</title><rect x="594.6" y="467.0" width="6.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="597.6" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (16 samples, 0.32%)</title><rect x="596.3" y="451.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="599.3" y="462.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="596.3" y="435.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="599.3" y="446.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.06%)</title><rect x="596.3" y="419.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="599.3" y="430.0"></text>
</g>
<g>
<title>vfs_read (13 samples, 0.26%)</title><rect x="597.0" y="435.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.0" y="446.0"></text>
</g>
<g>
<title>new_sync_read (12 samples, 0.24%)</title><rect x="597.3" y="419.0" width="2.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="600.3" y="430.0"></text>
</g>
<g>
<title>shmem_file_read_iter (8 samples, 0.16%)</title><rect x="598.2" y="403.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="601.2" y="414.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (5 samples, 0.10%)</title><rect x="598.7" y="387.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.7" y="398.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.06%)</title><rect x="599.2" y="371.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="602.2" y="382.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.04%)</title><rect x="600.1" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="603.1" y="462.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="600.1" y="435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="603.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.12%)</title><rect x="600.6" y="547.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="603.6" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.08%)</title><rect x="600.6" y="531.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.04%)</title><rect x="601.6" y="531.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (80 samples, 1.62%)</title><rect x="602.3" y="611.0" width="19.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.3" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (79 samples, 1.60%)</title><rect x="602.5" y="595.0" width="18.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.5" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (3 samples, 0.06%)</title><rect x="602.5" y="579.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.5" y="590.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (3 samples, 0.06%)</title><rect x="602.5" y="563.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (72 samples, 1.46%)</title><rect x="603.2" y="579.0" width="17.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="606.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (61 samples, 1.23%)</title><rect x="603.2" y="563.0" width="14.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (61 samples, 1.23%)</title><rect x="603.2" y="547.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (61 samples, 1.23%)</title><rect x="603.2" y="531.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.2" y="542.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (2 samples, 0.04%)</title><rect x="603.5" y="515.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="606.5" y="526.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="604.2" y="515.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="607.2" y="526.0"></text>
</g>
<g>
<title>pread (55 samples, 1.11%)</title><rect x="604.7" y="515.0" width="13.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="607.7" y="526.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 1.07%)</title><rect x="605.1" y="499.0" width="12.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="608.1" y="510.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 1.07%)</title><rect x="605.1" y="483.0" width="12.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="608.1" y="494.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.04%)</title><rect x="607.3" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="610.3" y="478.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (39 samples, 0.79%)</title><rect x="607.8" y="467.0" width="9.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="610.8" y="478.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="608.5" y="451.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="611.5" y="462.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.04%)</title><rect x="608.5" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.5" y="446.0"></text>
</g>
<g>
<title>vfs_read (33 samples, 0.67%)</title><rect x="609.2" y="451.0" width="7.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.2" y="462.0"></text>
</g>
<g>
<title>fsnotify_parent (2 samples, 0.04%)</title><rect x="609.7" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="612.7" y="446.0"></text>
</g>
<g>
<title>new_sync_read (23 samples, 0.47%)</title><rect x="610.1" y="435.0" width="5.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="613.1" y="446.0"></text>
</g>
<g>
<title>shmem_file_read_iter (20 samples, 0.40%)</title><rect x="610.9" y="419.0" width="4.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="613.9" y="430.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.08%)</title><rect x="611.6" y="403.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.6" y="414.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (11 samples, 0.22%)</title><rect x="612.5" y="403.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="615.5" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (9 samples, 0.18%)</title><rect x="613.0" y="387.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.0" y="398.0"></text>
</g>
<g>
<title>find_get_entry (9 samples, 0.18%)</title><rect x="613.0" y="371.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="616.0" y="382.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.10%)</title><rect x="614.0" y="355.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="617.0" y="366.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.12%)</title><rect x="615.6" y="435.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="618.6" y="446.0"></text>
</g>
<g>
<title>fsnotify_parent (4 samples, 0.08%)</title><rect x="616.1" y="419.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="619.1" y="430.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.06%)</title><rect x="617.1" y="467.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="620.1" y="478.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.04%)</title><rect x="617.1" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="620.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (11 samples, 0.22%)</title><rect x="617.8" y="563.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="620.8" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="617.8" y="547.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (9 samples, 0.18%)</title><rect x="618.3" y="547.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="621.3" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.04%)</title><rect x="618.7" y="531.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="621.7" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.04%)</title><rect x="618.7" y="515.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.7" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (2 samples, 0.04%)</title><rect x="618.7" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.7" y="510.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="619.2" y="531.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="622.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.06%)</title><rect x="620.4" y="579.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="623.4" y="590.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (3 samples, 0.06%)</title><rect x="621.4" y="675.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.4" y="686.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.06%)</title><rect x="621.4" y="659.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.4" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (3 samples, 0.06%)</title><rect x="621.4" y="643.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.4" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.06%)</title><rect x="621.4" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="621.4" y="611.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (1,336 samples, 27.02%)</title><rect x="622.3" y="803.0" width="318.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.3" y="814.0">ru/mail/polis/dao/gogun/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (157 samples, 3.17%)</title><rect x="622.6" y="787.0" width="37.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.6" y="798.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (156 samples, 3.15%)</title><rect x="622.8" y="771.0" width="37.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.8" y="782.0">com..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (153 samples, 3.09%)</title><rect x="623.5" y="755.0" width="36.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="626.5" y="766.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (153 samples, 3.09%)</title><rect x="623.5" y="739.0" width="36.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.5" y="750.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (153 samples, 3.09%)</title><rect x="623.5" y="723.0" width="36.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.5" y="734.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (153 samples, 3.09%)</title><rect x="623.5" y="707.0" width="36.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="626.5" y="718.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (153 samples, 3.09%)</title><rect x="623.5" y="691.0" width="36.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="626.5" y="702.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (152 samples, 3.07%)</title><rect x="623.5" y="675.0" width="36.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.5" y="686.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (152 samples, 3.07%)</title><rect x="623.5" y="659.0" width="36.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.5" y="670.0">com..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (4 samples, 0.08%)</title><rect x="623.7" y="643.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.7" y="654.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.06%)</title><rect x="624.0" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="627.0" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (147 samples, 2.97%)</title><rect x="624.7" y="643.0" width="35.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="627.7" y="654.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (147 samples, 2.97%)</title><rect x="624.7" y="627.0" width="35.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="627.7" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (147 samples, 2.97%)</title><rect x="624.7" y="611.0" width="35.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="627.7" y="622.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (58 samples, 1.17%)</title><rect x="624.9" y="595.0" width="13.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.9" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (58 samples, 1.17%)</title><rect x="624.9" y="579.0" width="13.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.9" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (57 samples, 1.15%)</title><rect x="625.2" y="563.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.2" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.12%)</title><rect x="625.2" y="547.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.2" y="558.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.12%)</title><rect x="625.2" y="531.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.2" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (46 samples, 0.93%)</title><rect x="626.8" y="547.0" width="11.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (37 samples, 0.75%)</title><rect x="627.3" y="531.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.3" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (37 samples, 0.75%)</title><rect x="627.3" y="515.0" width="8.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="630.3" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (37 samples, 0.75%)</title><rect x="627.3" y="499.0" width="8.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="630.3" y="510.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="627.8" y="483.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="630.8" y="494.0"></text>
</g>
<g>
<title>pread (33 samples, 0.67%)</title><rect x="628.3" y="483.0" width="7.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="631.3" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.55%)</title><rect x="629.7" y="467.0" width="6.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="632.7" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (27 samples, 0.55%)</title><rect x="629.7" y="451.0" width="6.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="632.7" y="462.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.06%)</title><rect x="630.7" y="435.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="633.7" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.06%)</title><rect x="630.7" y="419.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="633.7" y="430.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="630.9" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="633.9" y="414.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (18 samples, 0.36%)</title><rect x="631.4" y="435.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="634.4" y="446.0"></text>
</g>
<g>
<title>vfs_read (16 samples, 0.32%)</title><rect x="631.9" y="419.0" width="3.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="634.9" y="430.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.06%)</title><rect x="631.9" y="403.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="634.9" y="414.0"></text>
</g>
<g>
<title>new_sync_read (13 samples, 0.26%)</title><rect x="632.6" y="403.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="635.6" y="414.0"></text>
</g>
<g>
<title>shmem_file_read_iter (11 samples, 0.22%)</title><rect x="633.0" y="387.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="636.0" y="398.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.06%)</title><rect x="633.3" y="371.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="636.3" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (7 samples, 0.14%)</title><rect x="634.0" y="371.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="637.0" y="382.0"></text>
</g>
<g>
<title>find_lock_entry (5 samples, 0.10%)</title><rect x="634.5" y="355.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="637.5" y="366.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.06%)</title><rect x="634.7" y="339.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="637.7" y="350.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="635.0" y="323.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="638.0" y="334.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.04%)</title><rect x="635.7" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="638.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.14%)</title><rect x="636.2" y="531.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="639.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="636.4" y="515.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="639.4" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.06%)</title><rect x="637.1" y="515.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="640.1" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.08%)</title><rect x="637.8" y="547.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (88 samples, 1.78%)</title><rect x="638.8" y="595.0" width="21.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (86 samples, 1.74%)</title><rect x="639.3" y="579.0" width="20.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.10%)</title><rect x="639.5" y="563.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="642.5" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (4 samples, 0.08%)</title><rect x="639.7" y="547.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.06%)</title><rect x="640.7" y="563.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.7" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.06%)</title><rect x="640.7" y="547.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (76 samples, 1.54%)</title><rect x="641.4" y="563.0" width="18.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.4" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (59 samples, 1.19%)</title><rect x="641.4" y="547.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.4" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (58 samples, 1.17%)</title><rect x="641.6" y="531.0" width="13.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (58 samples, 1.17%)</title><rect x="641.6" y="515.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.6" y="526.0"></text>
</g>
<g>
<title>pread (56 samples, 1.13%)</title><rect x="642.1" y="499.0" width="13.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="645.1" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.89%)</title><rect x="645.0" y="483.0" width="10.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.0" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.89%)</title><rect x="645.0" y="467.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="648.0" y="478.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.04%)</title><rect x="646.9" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="649.9" y="462.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.04%)</title><rect x="646.9" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="649.9" y="446.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (32 samples, 0.65%)</title><rect x="647.4" y="451.0" width="7.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="650.4" y="462.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="647.8" y="435.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="650.8" y="446.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.06%)</title><rect x="648.1" y="419.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="651.1" y="430.0"></text>
</g>
<g>
<title>vfs_read (26 samples, 0.53%)</title><rect x="648.8" y="435.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="651.8" y="446.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.06%)</title><rect x="649.0" y="419.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="652.0" y="430.0"></text>
</g>
<g>
<title>new_sync_read (21 samples, 0.42%)</title><rect x="649.8" y="419.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="652.8" y="430.0"></text>
</g>
<g>
<title>shmem_file_read_iter (17 samples, 0.34%)</title><rect x="650.7" y="403.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="653.7" y="414.0"></text>
</g>
<g>
<title>copy_page_to_iter (4 samples, 0.08%)</title><rect x="651.2" y="387.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.2" y="398.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.06%)</title><rect x="651.4" y="371.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="654.4" y="382.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (10 samples, 0.20%)</title><rect x="652.1" y="387.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="655.1" y="398.0"></text>
</g>
<g>
<title>find_lock_entry (7 samples, 0.14%)</title><rect x="652.9" y="371.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="655.9" y="382.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.10%)</title><rect x="653.1" y="355.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="656.1" y="366.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.08%)</title><rect x="653.3" y="339.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="656.3" y="350.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.04%)</title><rect x="655.0" y="451.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="658.0" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.34%)</title><rect x="655.5" y="547.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.5" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.10%)</title><rect x="655.5" y="531.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.5" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.04%)</title><rect x="656.2" y="515.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="659.2" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (12 samples, 0.24%)</title><rect x="656.7" y="531.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.7" y="542.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.04%)</title><rect x="658.8" y="515.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="661.8" y="526.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (2 samples, 0.04%)</title><rect x="658.8" y="499.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="661.8" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (2 samples, 0.04%)</title><rect x="658.8" y="483.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.8" y="494.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,131 samples, 22.87%)</title><rect x="660.0" y="787.0" width="269.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="663.0" y="798.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="660.3" y="771.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="663.3" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (2 samples, 0.04%)</title><rect x="660.7" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.7" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (2 samples, 0.04%)</title><rect x="661.2" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="664.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.06%)</title><rect x="661.9" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="664.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$487/55263987.accept (1,119 samples, 22.63%)</title><rect x="662.9" y="771.0" width="267.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="665.9" y="782.0">ru/mail/polis/dao/gogun/DAOImpl$$Lam..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (1,119 samples, 22.63%)</title><rect x="662.9" y="755.0" width="267.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.9" y="766.0">ru/mail/polis/dao/gogun/DAOImpl.lamb..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (1,118 samples, 22.61%)</title><rect x="663.1" y="739.0" width="266.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="666.1" y="750.0">ru/mail/polis/dao/gogun/SSTable.iter..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (1,118 samples, 22.61%)</title><rect x="663.1" y="723.0" width="266.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.1" y="734.0">ru/mail/polis/dao/gogun/SSTable$1.&lt;i..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (1,117 samples, 22.59%)</title><rect x="663.4" y="707.0" width="266.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.4" y="718.0">ru/mail/polis/dao/gogun/SSTable.bina..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.06%)</title><rect x="663.4" y="691.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="666.4" y="702.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.06%)</title><rect x="663.4" y="675.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="666.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (1,114 samples, 22.53%)</title><rect x="664.1" y="691.0" width="265.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.1" y="702.0">ru/mail/polis/dao/gogun/SSTable.key</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.75%)</title><rect x="665.3" y="675.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.3" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (36 samples, 0.73%)</title><rect x="665.5" y="659.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.5" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (35 samples, 0.71%)</title><rect x="665.5" y="643.0" width="8.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="668.5" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (24 samples, 0.49%)</title><rect x="668.1" y="627.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="671.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (12 samples, 0.24%)</title><rect x="669.1" y="611.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="672.1" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.14%)</title><rect x="670.3" y="595.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="673.3" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (8 samples, 0.16%)</title><rect x="671.9" y="611.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="674.9" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (13 samples, 0.26%)</title><rect x="674.1" y="675.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="677.1" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (3 samples, 0.06%)</title><rect x="675.5" y="659.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (4 samples, 0.08%)</title><rect x="676.2" y="659.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (4 samples, 0.08%)</title><rect x="676.2" y="643.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="679.2" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,059 samples, 21.42%)</title><rect x="677.2" y="675.0" width="252.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="680.2" y="686.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (2 samples, 0.04%)</title><rect x="681.5" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.5" y="670.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.04%)</title><rect x="681.5" y="643.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="684.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,038 samples, 20.99%)</title><rect x="682.0" y="659.0" width="247.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="685.0" y="670.0">sun/nio/ch/FileChannelImpl.readIn..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (33 samples, 0.67%)</title><rect x="687.2" y="643.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.2" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (31 samples, 0.63%)</title><rect x="687.7" y="627.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.7" y="638.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (6 samples, 0.12%)</title><rect x="689.4" y="611.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="692.4" y="622.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (18 samples, 0.36%)</title><rect x="690.8" y="611.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="693.8" y="622.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (14 samples, 0.28%)</title><rect x="691.3" y="595.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="694.3" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (14 samples, 0.28%)</title><rect x="691.3" y="579.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="694.3" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (19 samples, 0.38%)</title><rect x="695.1" y="643.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="698.1" y="654.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (14 samples, 0.28%)</title><rect x="696.3" y="627.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.3" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.08%)</title><rect x="698.7" y="611.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.7" y="622.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.06%)</title><rect x="698.9" y="595.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.9" y="606.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="699.1" y="579.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="702.1" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (912 samples, 18.44%)</title><rect x="699.6" y="643.0" width="217.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.6" y="654.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.22%)</title><rect x="699.9" y="627.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="702.9" y="638.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (8 samples, 0.16%)</title><rect x="700.6" y="611.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.6" y="622.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (3 samples, 0.06%)</title><rect x="701.1" y="595.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="704.1" y="606.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (3 samples, 0.06%)</title><rect x="701.1" y="579.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="704.1" y="590.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (3 samples, 0.06%)</title><rect x="701.1" y="563.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="704.1" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (3 samples, 0.06%)</title><rect x="701.8" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="704.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (793 samples, 16.04%)</title><rect x="702.5" y="627.0" width="189.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="705.5" y="638.0">sun/nio/ch/IOUtil.readInt..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.06%)</title><rect x="703.2" y="611.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.2" y="622.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.06%)</title><rect x="703.2" y="595.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="706.2" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="703.2" y="579.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.2" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (787 samples, 15.92%)</title><rect x="703.9" y="611.0" width="187.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="706.9" y="622.0">sun/nio/ch/FileDispatche..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (786 samples, 15.89%)</title><rect x="704.2" y="595.0" width="187.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.2" y="606.0">sun/nio/ch/FileDispatche..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (3 samples, 0.06%)</title><rect x="709.6" y="579.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="712.6" y="590.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (12 samples, 0.24%)</title><rect x="710.4" y="579.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="713.4" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (8 samples, 0.16%)</title><rect x="713.2" y="579.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="716.2" y="590.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="715.4" y="579.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="718.4" y="590.0"></text>
</g>
<g>
<title>pread (737 samples, 14.90%)</title><rect x="715.9" y="579.0" width="175.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="718.9" y="590.0">pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (607 samples, 12.28%)</title><rect x="746.9" y="563.0" width="144.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="749.9" y="574.0">entry_SYSCALL_64_a..</text>
</g>
<g>
<title>do_syscall_64 (607 samples, 12.28%)</title><rect x="746.9" y="547.0" width="144.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="749.9" y="558.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (37 samples, 0.75%)</title><rect x="776.7" y="531.0" width="8.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="779.7" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (31 samples, 0.63%)</title><rect x="778.1" y="515.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.1" y="526.0"></text>
</g>
<g>
<title>kfree (6 samples, 0.12%)</title><rect x="782.7" y="499.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="785.7" y="510.0"></text>
</g>
<g>
<title>unroll_tree_refs (4 samples, 0.08%)</title><rect x="784.6" y="499.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="787.6" y="510.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (416 samples, 8.41%)</title><rect x="785.5" y="531.0" width="99.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="788.5" y="542.0">__x64_sys_pr..</text>
</g>
<g>
<title>__fget_light (50 samples, 1.01%)</title><rect x="790.5" y="515.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="793.5" y="526.0"></text>
</g>
<g>
<title>__fget_files (40 samples, 0.81%)</title><rect x="792.9" y="499.0" width="9.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="795.9" y="510.0"></text>
</g>
<g>
<title>fput_many (8 samples, 0.16%)</title><rect x="802.5" y="515.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="805.5" y="526.0"></text>
</g>
<g>
<title>vfs_read (337 samples, 6.81%)</title><rect x="804.4" y="515.0" width="80.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="807.4" y="526.0">vfs_read</text>
</g>
<g>
<title>fsnotify (26 samples, 0.53%)</title><rect x="808.2" y="499.0" width="6.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="811.2" y="510.0"></text>
</g>
<g>
<title>fsnotify_parent (17 samples, 0.34%)</title><rect x="814.4" y="499.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.4" y="510.0"></text>
</g>
<g>
<title>new_sync_read (251 samples, 5.08%)</title><rect x="818.5" y="499.0" width="59.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="821.5" y="510.0">new_sy..</text>
</g>
<g>
<title>iov_iter_init (2 samples, 0.04%)</title><rect x="827.1" y="483.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="830.1" y="494.0"></text>
</g>
<g>
<title>shmem_file_read_iter (213 samples, 4.31%)</title><rect x="827.5" y="483.0" width="50.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="830.5" y="494.0">shmem..</text>
</g>
<g>
<title>copy_page_to_iter (39 samples, 0.79%)</title><rect x="835.2" y="467.0" width="9.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="838.2" y="478.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="837.3" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.3" y="462.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (28 samples, 0.57%)</title><rect x="837.8" y="451.0" width="6.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="840.8" y="462.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (102 samples, 2.06%)</title><rect x="844.5" y="467.0" width="24.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.5" y="478.0">s..</text>
</g>
<g>
<title>find_lock_entry (82 samples, 1.66%)</title><rect x="849.2" y="451.0" width="19.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="852.2" y="462.0"></text>
</g>
<g>
<title>find_get_entry (64 samples, 1.29%)</title><rect x="851.9" y="435.0" width="15.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="854.9" y="446.0"></text>
</g>
<g>
<title>__rcu_read_lock (4 samples, 0.08%)</title><rect x="860.9" y="419.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="863.9" y="430.0"></text>
</g>
<g>
<title>xas_load (21 samples, 0.42%)</title><rect x="862.1" y="419.0" width="5.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="865.1" y="430.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.04%)</title><rect x="866.7" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="869.7" y="414.0"></text>
</g>
<g>
<title>page_mapping (7 samples, 0.14%)</title><rect x="867.1" y="435.0" width="1.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="870.1" y="446.0"></text>
</g>
<g>
<title>touch_atime (25 samples, 0.51%)</title><rect x="868.8" y="467.0" width="6.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="871.8" y="478.0"></text>
</g>
<g>
<title>atime_needs_update (15 samples, 0.30%)</title><rect x="871.2" y="451.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.2" y="462.0"></text>
</g>
<g>
<title>current_time (8 samples, 0.16%)</title><rect x="872.9" y="435.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="875.9" y="446.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (5 samples, 0.10%)</title><rect x="873.6" y="419.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="876.6" y="430.0"></text>
</g>
<g>
<title>unlock_page (14 samples, 0.28%)</title><rect x="874.8" y="467.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="877.8" y="478.0"></text>
</g>
<g>
<title>rw_verify_area (2 samples, 0.04%)</title><rect x="878.4" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="881.4" y="510.0"></text>
</g>
<g>
<title>security_file_permission (25 samples, 0.51%)</title><rect x="878.8" y="499.0" width="6.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="881.8" y="510.0"></text>
</g>
<g>
<title>fsnotify_parent (21 samples, 0.42%)</title><rect x="879.8" y="483.0" width="5.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="882.8" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (28 samples, 0.57%)</title><rect x="885.0" y="531.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="888.0" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_entry (10 samples, 0.20%)</title><rect x="888.4" y="515.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="891.4" y="526.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.08%)</title><rect x="890.8" y="515.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="893.8" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (107 samples, 2.16%)</title><rect x="891.7" y="627.0" width="25.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.7" y="638.0">s..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (15 samples, 0.30%)</title><rect x="892.4" y="611.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="895.4" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.10%)</title><rect x="893.4" y="595.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="896.4" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.10%)</title><rect x="894.8" y="595.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="897.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (89 samples, 1.80%)</title><rect x="896.0" y="611.0" width="21.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="899.0" y="622.0">s..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.10%)</title><rect x="903.9" y="595.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="906.9" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.08%)</title><rect x="904.1" y="579.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="907.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.08%)</title><rect x="904.1" y="563.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.1" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="904.6" y="547.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.6" y="558.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (20 samples, 0.40%)</title><rect x="905.1" y="595.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="908.1" y="606.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (20 samples, 0.40%)</title><rect x="905.1" y="579.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (20 samples, 0.40%)</title><rect x="905.1" y="563.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.1" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="910.1" y="595.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="913.1" y="606.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (20 samples, 0.40%)</title><rect x="910.8" y="595.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="913.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (5 samples, 0.10%)</title><rect x="915.8" y="595.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="918.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (36 samples, 0.73%)</title><rect x="917.3" y="643.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.3" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.10%)</title><rect x="921.3" y="627.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="924.3" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.08%)</title><rect x="921.3" y="611.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="924.3" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.04%)</title><rect x="921.8" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="924.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (14 samples, 0.28%)</title><rect x="922.5" y="627.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="925.5" y="638.0"></text>
</g>
<g>
<title>pthread_self (3 samples, 0.06%)</title><rect x="925.1" y="611.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="928.1" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (16 samples, 0.32%)</title><rect x="925.8" y="643.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="928.8" y="654.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.10%)</title><rect x="928.5" y="627.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="931.5" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.08%)</title><rect x="928.5" y="611.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="931.5" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (4 samples, 0.08%)</title><rect x="928.5" y="595.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="931.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.10%)</title><rect x="930.6" y="787.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.10%)</title><rect x="930.6" y="771.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.6" y="782.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.10%)</title><rect x="930.6" y="755.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="933.6" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (5 samples, 0.10%)</title><rect x="930.6" y="739.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.6" y="750.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (5 samples, 0.10%)</title><rect x="930.6" y="723.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="933.6" y="734.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (5 samples, 0.10%)</title><rect x="930.6" y="707.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="933.6" y="718.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.10%)</title><rect x="930.6" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.6" y="702.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.10%)</title><rect x="930.6" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.6" y="686.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (3 samples, 0.06%)</title><rect x="930.6" y="659.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="933.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (3 samples, 0.06%)</title><rect x="930.6" y="643.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (3 samples, 0.06%)</title><rect x="930.6" y="627.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (3 samples, 0.06%)</title><rect x="930.6" y="611.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (2 samples, 0.04%)</title><rect x="930.6" y="595.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.6" y="606.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$473/667791215.compare (2 samples, 0.04%)</title><rect x="931.3" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="934.3" y="670.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.04%)</title><rect x="931.3" y="643.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.3" y="654.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$471/1183268868.compare (2 samples, 0.04%)</title><rect x="931.3" y="627.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="934.3" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (39 samples, 0.79%)</title><rect x="931.8" y="787.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (38 samples, 0.77%)</title><rect x="931.8" y="771.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="934.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (37 samples, 0.75%)</title><rect x="932.0" y="755.0" width="8.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (36 samples, 0.73%)</title><rect x="932.0" y="739.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="935.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (36 samples, 0.73%)</title><rect x="932.0" y="723.0" width="8.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="935.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (36 samples, 0.73%)</title><rect x="932.0" y="707.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (35 samples, 0.71%)</title><rect x="932.3" y="691.0" width="8.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="935.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (26 samples, 0.53%)</title><rect x="934.4" y="675.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (26 samples, 0.53%)</title><rect x="934.4" y="659.0" width="6.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="937.4" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (15 samples, 0.30%)</title><rect x="937.1" y="643.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="940.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.06%)</title><rect x="937.1" y="627.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.1" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.20%)</title><rect x="937.8" y="627.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="940.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="939.2" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="942.2" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.04%)</title><rect x="939.2" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="942.2" y="606.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.04%)</title><rect x="939.7" y="611.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="942.7" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="940.2" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="943.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (68 samples, 1.38%)</title><rect x="941.8" y="979.0" width="16.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (68 samples, 1.38%)</title><rect x="941.8" y="963.0" width="16.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="944.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (24 samples, 0.49%)</title><rect x="942.1" y="947.0" width="5.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (24 samples, 0.49%)</title><rect x="942.1" y="931.0" width="5.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (23 samples, 0.47%)</title><rect x="942.3" y="915.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (18 samples, 0.36%)</title><rect x="943.5" y="899.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="946.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (18 samples, 0.36%)</title><rect x="943.5" y="883.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (15 samples, 0.30%)</title><rect x="944.0" y="867.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (15 samples, 0.30%)</title><rect x="944.0" y="851.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (15 samples, 0.30%)</title><rect x="944.0" y="835.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="947.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.24%)</title><rect x="944.0" y="819.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.24%)</title><rect x="944.0" y="803.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (12 samples, 0.24%)</title><rect x="944.0" y="787.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="947.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.18%)</title><rect x="944.7" y="771.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.18%)</title><rect x="944.7" y="755.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="947.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.18%)</title><rect x="944.7" y="739.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="947.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.18%)</title><rect x="944.7" y="723.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.18%)</title><rect x="944.7" y="707.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="947.7" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (8 samples, 0.16%)</title><rect x="944.9" y="691.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="947.9" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.14%)</title><rect x="945.2" y="675.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="948.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.14%)</title><rect x="945.2" y="659.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="948.2" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 0.14%)</title><rect x="945.2" y="643.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="948.2" y="654.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="945.2" y="627.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="948.2" y="638.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.14%)</title><rect x="945.2" y="611.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="948.2" y="622.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.12%)</title><rect x="945.4" y="595.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="948.4" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.12%)</title><rect x="945.4" y="579.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="948.4" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="945.4" y="563.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="948.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (3 samples, 0.06%)</title><rect x="946.8" y="819.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="949.8" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.06%)</title><rect x="946.8" y="803.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="949.8" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.06%)</title><rect x="946.8" y="787.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="949.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (43 samples, 0.87%)</title><rect x="947.8" y="947.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="950.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (2 samples, 0.04%)</title><rect x="947.8" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="950.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 0.83%)</title><rect x="948.3" y="931.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.3" y="942.0"></text>
</g>
<g>
<title>Unsafe_Park (15 samples, 0.30%)</title><rect x="949.0" y="915.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="952.0" y="926.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="949.0" y="899.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="952.0" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (12 samples, 0.24%)</title><rect x="949.7" y="899.0" width="2.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="952.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.24%)</title><rect x="949.7" y="883.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="952.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.24%)</title><rect x="949.7" y="867.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="952.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.10%)</title><rect x="951.4" y="851.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="954.4" y="862.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.10%)</title><rect x="951.4" y="835.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="954.4" y="846.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.08%)</title><rect x="951.6" y="819.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="954.6" y="830.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.04%)</title><rect x="951.6" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="954.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.44%)</title><rect x="952.6" y="915.0" width="5.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="955.6" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.04%)</title><rect x="952.6" y="899.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="955.6" y="910.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (20 samples, 0.40%)</title><rect x="953.0" y="899.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="956.0" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.22%)</title><rect x="955.2" y="883.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="958.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.22%)</title><rect x="955.2" y="867.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="958.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.18%)</title><rect x="955.7" y="851.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.7" y="862.0"></text>
</g>
<g>
<title>do_futex (9 samples, 0.18%)</title><rect x="955.7" y="835.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="958.7" y="846.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.16%)</title><rect x="955.9" y="819.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="958.9" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (4 samples, 0.08%)</title><rect x="956.1" y="803.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="959.1" y="814.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="956.6" y="787.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="959.6" y="798.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="956.6" y="771.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="959.6" y="782.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.06%)</title><rect x="957.1" y="803.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="960.1" y="814.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.04%)</title><rect x="957.3" y="787.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="960.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (299 samples, 6.05%)</title><rect x="958.1" y="979.0" width="71.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="961.1" y="990.0">jdk/inte..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="960.7" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="963.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="960.7" y="947.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.7" y="958.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (3 samples, 0.06%)</title><rect x="961.2" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.2" y="974.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (2 samples, 0.04%)</title><rect x="961.2" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="964.2" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.04%)</title><rect x="961.9" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="964.9" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.checkForComodification (2 samples, 0.04%)</title><rect x="961.9" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.9" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="962.4" y="963.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="965.4" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="962.4" y="947.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="965.4" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="962.6" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="965.6" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="962.6" y="915.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.6" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.10%)</title><rect x="963.3" y="963.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="966.3" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (88 samples, 1.78%)</title><rect x="964.5" y="963.0" width="21.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="967.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$365/1858085801.accept (83 samples, 1.68%)</title><rect x="964.7" y="947.0" width="19.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="967.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (83 samples, 1.68%)</title><rect x="964.7" y="931.0" width="19.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="967.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (83 samples, 1.68%)</title><rect x="964.7" y="915.0" width="19.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (83 samples, 1.68%)</title><rect x="964.7" y="899.0" width="19.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="967.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (83 samples, 1.68%)</title><rect x="964.7" y="883.0" width="19.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="967.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (83 samples, 1.68%)</title><rect x="964.7" y="867.0" width="19.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="967.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (83 samples, 1.68%)</title><rect x="964.7" y="851.0" width="19.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="967.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (83 samples, 1.68%)</title><rect x="964.7" y="835.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (83 samples, 1.68%)</title><rect x="964.7" y="819.0" width="19.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="967.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (83 samples, 1.68%)</title><rect x="964.7" y="803.0" width="19.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="967.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (82 samples, 1.66%)</title><rect x="964.7" y="787.0" width="19.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (82 samples, 1.66%)</title><rect x="964.7" y="771.0" width="19.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="967.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (11 samples, 0.22%)</title><rect x="965.0" y="755.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="968.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (11 samples, 0.22%)</title><rect x="965.0" y="739.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (11 samples, 0.22%)</title><rect x="965.0" y="723.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.22%)</title><rect x="965.0" y="707.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="968.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.22%)</title><rect x="965.0" y="691.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.22%)</title><rect x="965.0" y="675.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="968.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.22%)</title><rect x="965.0" y="659.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="968.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.04%)</title><rect x="965.0" y="643.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.18%)</title><rect x="965.5" y="643.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.18%)</title><rect x="965.5" y="627.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="965.5" y="611.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.04%)</title><rect x="965.5" y="595.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="968.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.04%)</title><rect x="965.5" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="965.5" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.12%)</title><rect x="966.2" y="611.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.12%)</title><rect x="966.2" y="595.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.12%)</title><rect x="966.2" y="579.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.12%)</title><rect x="966.2" y="563.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="966.2" y="547.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="969.2" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 0.10%)</title><rect x="966.4" y="531.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="969.4" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.10%)</title><rect x="966.4" y="515.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="969.4" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.10%)</title><rect x="966.4" y="499.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="969.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 0.10%)</title><rect x="966.4" y="483.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="969.4" y="494.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.10%)</title><rect x="966.4" y="467.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.4" y="478.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.10%)</title><rect x="966.4" y="451.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="969.4" y="462.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 0.10%)</title><rect x="966.4" y="435.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.4" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 0.10%)</title><rect x="966.4" y="419.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="969.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.10%)</title><rect x="966.4" y="403.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="969.4" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (2 samples, 0.04%)</title><rect x="967.6" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (68 samples, 1.38%)</title><rect x="968.1" y="755.0" width="16.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (66 samples, 1.33%)</title><rect x="968.6" y="739.0" width="15.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.6" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (65 samples, 1.31%)</title><rect x="968.8" y="723.0" width="15.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.8" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (65 samples, 1.31%)</title><rect x="968.8" y="707.0" width="15.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="971.8" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (59 samples, 1.19%)</title><rect x="968.8" y="691.0" width="14.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="971.8" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (59 samples, 1.19%)</title><rect x="968.8" y="675.0" width="14.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="971.8" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (59 samples, 1.19%)</title><rect x="968.8" y="659.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="971.8" y="670.0"></text>
</g>
<g>
<title>__read (57 samples, 1.15%)</title><rect x="969.0" y="643.0" width="13.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="972.0" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 1.13%)</title><rect x="969.3" y="627.0" width="13.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="972.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 1.13%)</title><rect x="969.3" y="611.0" width="13.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="972.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_read (2 samples, 0.04%)</title><rect x="970.2" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.2" y="606.0"></text>
</g>
<g>
<title>ksys_read (50 samples, 1.01%)</title><rect x="970.7" y="595.0" width="11.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.7" y="606.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.04%)</title><rect x="970.7" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="973.7" y="590.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="970.7" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="973.7" y="574.0"></text>
</g>
<g>
<title>vfs_read (48 samples, 0.97%)</title><rect x="971.2" y="579.0" width="11.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="974.2" y="590.0"></text>
</g>
<g>
<title>new_sync_read (47 samples, 0.95%)</title><rect x="971.4" y="563.0" width="11.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="974.4" y="574.0"></text>
</g>
<g>
<title>sock_read_iter (46 samples, 0.93%)</title><rect x="971.7" y="547.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="974.7" y="558.0"></text>
</g>
<g>
<title>inet6_recvmsg (46 samples, 0.93%)</title><rect x="971.7" y="531.0" width="10.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="974.7" y="542.0"></text>
</g>
<g>
<title>tcp_recvmsg (46 samples, 0.93%)</title><rect x="971.7" y="515.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.7" y="526.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.12%)</title><rect x="971.9" y="499.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="974.9" y="510.0"></text>
</g>
<g>
<title>skb_release_head_state (5 samples, 0.10%)</title><rect x="972.1" y="483.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="975.1" y="494.0"></text>
</g>
<g>
<title>dst_release (2 samples, 0.04%)</title><rect x="972.4" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.4" y="478.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="972.9" y="467.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.9" y="478.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (35 samples, 0.71%)</title><rect x="973.6" y="499.0" width="8.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="976.6" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (32 samples, 0.65%)</title><rect x="974.0" y="483.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.0" y="494.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.04%)</title><rect x="974.5" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="977.5" y="478.0"></text>
</g>
<g>
<title>ip_output (27 samples, 0.55%)</title><rect x="975.2" y="467.0" width="6.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="978.2" y="478.0"></text>
</g>
<g>
<title>ip_finish_output2 (26 samples, 0.53%)</title><rect x="975.5" y="451.0" width="6.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="978.5" y="462.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 0.49%)</title><rect x="976.0" y="435.0" width="5.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="979.0" y="446.0"></text>
</g>
<g>
<title>do_softirq (24 samples, 0.49%)</title><rect x="976.0" y="419.0" width="5.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.0" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 0.49%)</title><rect x="976.0" y="403.0" width="5.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="979.0" y="414.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (24 samples, 0.49%)</title><rect x="976.0" y="387.0" width="5.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="979.0" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 0.49%)</title><rect x="976.0" y="371.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="979.0" y="382.0"></text>
</g>
<g>
<title>net_rx_action (24 samples, 0.49%)</title><rect x="976.0" y="355.0" width="5.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="979.0" y="366.0"></text>
</g>
<g>
<title>process_backlog (22 samples, 0.44%)</title><rect x="976.4" y="339.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="979.4" y="350.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (19 samples, 0.38%)</title><rect x="977.1" y="323.0" width="4.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="980.1" y="334.0"></text>
</g>
<g>
<title>ip_rcv (18 samples, 0.36%)</title><rect x="977.4" y="307.0" width="4.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="980.4" y="318.0"></text>
</g>
<g>
<title>ip_local_deliver (17 samples, 0.34%)</title><rect x="977.4" y="291.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="980.4" y="302.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (16 samples, 0.32%)</title><rect x="977.6" y="275.0" width="3.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.6" y="286.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (16 samples, 0.32%)</title><rect x="977.6" y="259.0" width="3.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.6" y="270.0"></text>
</g>
<g>
<title>tcp_v4_rcv (15 samples, 0.30%)</title><rect x="977.9" y="243.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.9" y="254.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.06%)</title><rect x="978.1" y="227.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="981.1" y="238.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (7 samples, 0.14%)</title><rect x="979.5" y="227.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="982.5" y="238.0"></text>
</g>
<g>
<title>tcp_rcv_established (7 samples, 0.14%)</title><rect x="979.5" y="211.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="982.5" y="222.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.06%)</title><rect x="980.2" y="195.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="983.2" y="206.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.04%)</title><rect x="980.5" y="179.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="983.5" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.12%)</title><rect x="982.9" y="691.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.9" y="702.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.08%)</title><rect x="982.9" y="675.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="985.9" y="686.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.04%)</title><rect x="983.1" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="986.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.04%)</title><rect x="983.8" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="986.8" y="686.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="983.8" y="659.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="986.8" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$368/1161710876.accept (4 samples, 0.08%)</title><rect x="984.5" y="947.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.08%)</title><rect x="984.5" y="931.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="987.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$364/1313401388.run (4 samples, 0.08%)</title><rect x="984.5" y="915.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.08%)</title><rect x="984.5" y="899.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="987.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.08%)</title><rect x="984.5" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.5" y="894.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectionKey.cancel (2 samples, 0.04%)</title><rect x="984.5" y="867.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.5" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancel (2 samples, 0.04%)</title><rect x="984.5" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.5" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="985.0" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="988.0" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="985.0" y="851.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="988.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="985.0" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="988.0" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="985.0" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="988.0" y="830.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (4 samples, 0.08%)</title><rect x="985.7" y="963.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="988.7" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="985.7" y="947.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="988.7" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (4 samples, 0.08%)</title><rect x="985.7" y="931.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="988.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (4 samples, 0.08%)</title><rect x="985.7" y="915.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="988.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.08%)</title><rect x="985.7" y="899.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="988.7" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.08%)</title><rect x="985.7" y="883.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="988.7" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (2 samples, 0.04%)</title><rect x="985.7" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="988.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.04%)</title><rect x="985.7" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="988.7" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (2 samples, 0.04%)</title><rect x="985.7" y="835.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="988.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (27 samples, 0.55%)</title><rect x="986.7" y="963.0" width="6.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="989.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$263/2089736233.run (19 samples, 0.38%)</title><rect x="986.7" y="947.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (19 samples, 0.38%)</title><rect x="986.7" y="931.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.36%)</title><rect x="986.9" y="915.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="989.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (18 samples, 0.36%)</title><rect x="986.9" y="899.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (18 samples, 0.36%)</title><rect x="986.9" y="883.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (18 samples, 0.36%)</title><rect x="986.9" y="867.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="989.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$256/159403438.run (16 samples, 0.32%)</title><rect x="987.4" y="851.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="990.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (16 samples, 0.32%)</title><rect x="987.4" y="835.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="990.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (13 samples, 0.26%)</title><rect x="987.6" y="819.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="990.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (3 samples, 0.06%)</title><rect x="987.6" y="803.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="990.6" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (3 samples, 0.06%)</title><rect x="987.6" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="990.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (2 samples, 0.04%)</title><rect x="987.9" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="990.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (10 samples, 0.20%)</title><rect x="988.4" y="803.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="991.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (2 samples, 0.04%)</title><rect x="988.4" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.04%)</title><rect x="988.4" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.04%)</title><rect x="988.4" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="991.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (8 samples, 0.16%)</title><rect x="988.8" y="787.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="991.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.14%)</title><rect x="989.1" y="771.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.14%)</title><rect x="989.1" y="755.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.14%)</title><rect x="989.1" y="739.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="992.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.12%)</title><rect x="989.1" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="992.1" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.10%)</title><rect x="989.3" y="707.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.10%)</title><rect x="989.3" y="691.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="989.3" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="992.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="989.3" y="659.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="992.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="989.3" y="643.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="992.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="989.3" y="627.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="992.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="989.3" y="611.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="992.3" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.08%)</title><rect x="989.6" y="595.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="992.6" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="989.8" y="579.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="989.8" y="563.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="992.8" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="989.8" y="547.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="992.8" y="558.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="989.8" y="531.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="989.8" y="515.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="992.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="989.8" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="992.8" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="989.8" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="989.8" y="467.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="992.8" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (2 samples, 0.04%)</title><rect x="990.7" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (2 samples, 0.04%)</title><rect x="990.7" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="993.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.04%)</title><rect x="990.7" y="787.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="993.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.04%)</title><rect x="990.7" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="993.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$277/266906696.run (8 samples, 0.16%)</title><rect x="991.2" y="947.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="994.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (8 samples, 0.16%)</title><rect x="991.2" y="931.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="994.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.16%)</title><rect x="991.2" y="915.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="994.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.16%)</title><rect x="991.2" y="899.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="994.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.14%)</title><rect x="991.5" y="883.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="994.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.14%)</title><rect x="991.5" y="867.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.14%)</title><rect x="991.5" y="851.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.14%)</title><rect x="991.5" y="835.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="994.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.14%)</title><rect x="991.5" y="819.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="994.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.14%)</title><rect x="991.5" y="803.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.12%)</title><rect x="991.7" y="787.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="994.7" y="798.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 0.12%)</title><rect x="991.7" y="771.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="994.7" y="782.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="991.7" y="755.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="994.7" y="766.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.12%)</title><rect x="991.7" y="739.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.7" y="750.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.12%)</title><rect x="991.7" y="723.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="994.7" y="734.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.10%)</title><rect x="991.9" y="707.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="994.9" y="718.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.10%)</title><rect x="991.9" y="691.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="994.9" y="702.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.08%)</title><rect x="992.2" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="995.2" y="686.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.08%)</title><rect x="992.2" y="659.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="995.2" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="992.2" y="643.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="995.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (48 samples, 0.97%)</title><rect x="993.1" y="963.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="996.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (48 samples, 0.97%)</title><rect x="993.1" y="947.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.1" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (36 samples, 0.73%)</title><rect x="996.0" y="931.0" width="8.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="999.0" y="942.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (36 samples, 0.73%)</title><rect x="996.0" y="915.0" width="8.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="999.0" y="926.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (30 samples, 0.61%)</title><rect x="996.0" y="899.0" width="7.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="999.0" y="910.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.12%)</title><rect x="1003.2" y="899.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1006.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1004.6" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1007.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.04%)</title><rect x="1005.1" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (9 samples, 0.18%)</title><rect x="1005.5" y="963.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1008.5" y="974.0"></text>
</g>
<g>
<title>java/time/Instant.now (3 samples, 0.06%)</title><rect x="1005.8" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1008.8" y="958.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (3 samples, 0.06%)</title><rect x="1005.8" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="1006.0" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1009.0" y="926.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="1006.0" y="899.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1009.0" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="1006.5" y="947.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1009.5" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="1006.5" y="931.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.5" y="942.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.04%)</title><rect x="1007.2" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.2" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="1007.2" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.2" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.04%)</title><rect x="1007.2" y="915.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1010.2" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (74 samples, 1.50%)</title><rect x="1007.9" y="963.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1010.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (74 samples, 1.50%)</title><rect x="1007.9" y="947.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1010.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (73 samples, 1.48%)</title><rect x="1008.2" y="931.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1011.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (45 samples, 0.91%)</title><rect x="1008.4" y="915.0" width="10.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1011.4" y="926.0"></text>
</g>
<g>
<title>epoll_wait (42 samples, 0.85%)</title><rect x="1009.1" y="899.0" width="10.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1012.1" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.67%)</title><rect x="1011.3" y="883.0" width="7.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1014.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.67%)</title><rect x="1011.3" y="867.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1014.3" y="878.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.04%)</title><rect x="1012.0" y="851.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1015.0" y="862.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.04%)</title><rect x="1012.0" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1015.0" y="846.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (28 samples, 0.57%)</title><rect x="1012.5" y="851.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1015.5" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (27 samples, 0.55%)</title><rect x="1012.7" y="835.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1015.7" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (20 samples, 0.40%)</title><rect x="1013.4" y="819.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1016.4" y="830.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (5 samples, 0.10%)</title><rect x="1013.4" y="803.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1016.4" y="814.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.26%)</title><rect x="1014.6" y="803.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1017.6" y="814.0"></text>
</g>
<g>
<title>ep_item_poll (10 samples, 0.20%)</title><rect x="1015.3" y="787.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1018.3" y="798.0"></text>
</g>
<g>
<title>pipe_poll (6 samples, 0.12%)</title><rect x="1015.3" y="771.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1018.3" y="782.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.08%)</title><rect x="1016.8" y="771.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1019.8" y="782.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="1017.2" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1020.2" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.08%)</title><rect x="1018.2" y="819.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1021.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (22 samples, 0.44%)</title><rect x="1019.1" y="915.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1022.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (13 samples, 0.26%)</title><rect x="1019.4" y="899.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1022.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (12 samples, 0.24%)</title><rect x="1019.6" y="883.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1022.6" y="894.0"></text>
</g>
<g>
<title>__read (12 samples, 0.24%)</title><rect x="1019.6" y="867.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1022.6" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.20%)</title><rect x="1020.1" y="851.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1023.1" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.20%)</title><rect x="1020.1" y="835.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1023.1" y="846.0"></text>
</g>
<g>
<title>ksys_read (9 samples, 0.18%)</title><rect x="1020.1" y="819.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1023.1" y="830.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.16%)</title><rect x="1020.3" y="803.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.3" y="814.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.12%)</title><rect x="1020.6" y="787.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1023.6" y="798.0"></text>
</g>
<g>
<title>pipe_read (6 samples, 0.12%)</title><rect x="1020.6" y="771.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1023.6" y="782.0"></text>
</g>
<g>
<title>anon_pipe_buf_release (2 samples, 0.04%)</title><rect x="1020.8" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1023.8" y="766.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="1021.3" y="755.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1024.3" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.16%)</title><rect x="1022.5" y="899.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1025.5" y="910.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="1023.4" y="883.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1026.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="1023.4" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="1023.4" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1026.4" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (2 samples, 0.04%)</title><rect x="1023.9" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.04%)</title><rect x="1024.9" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1027.9" y="926.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.04%)</title><rect x="1024.9" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.9" y="910.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="1024.9" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1027.9" y="894.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="1024.9" y="867.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="1024.9" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1027.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (6 samples, 0.12%)</title><rect x="1025.6" y="963.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1028.6" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (6 samples, 0.12%)</title><rect x="1025.6" y="947.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1028.6" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (6 samples, 0.12%)</title><rect x="1025.6" y="931.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1028.6" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (3 samples, 0.06%)</title><rect x="1025.6" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1028.6" y="926.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.06%)</title><rect x="1025.6" y="899.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1028.6" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="1025.6" y="883.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1028.6" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="1025.6" y="867.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.6" y="878.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.06%)</title><rect x="1025.6" y="851.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1028.6" y="862.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.06%)</title><rect x="1025.6" y="835.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1028.6" y="846.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.04%)</title><rect x="1025.8" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1028.8" y="830.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.04%)</title><rect x="1025.8" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1028.8" y="814.0"></text>
</g>
<g>
<title>ep_item_poll (2 samples, 0.04%)</title><rect x="1025.8" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1028.8" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.06%)</title><rect x="1026.3" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.3" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2 samples, 0.04%)</title><rect x="1026.3" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.3" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.04%)</title><rect x="1026.3" y="883.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.3" y="894.0"></text>
</g>
<g>
<title>__read (2 samples, 0.04%)</title><rect x="1026.3" y="867.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1029.3" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (4 samples, 0.08%)</title><rect x="1027.0" y="963.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1030.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (4 samples, 0.08%)</title><rect x="1027.0" y="947.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1030.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (4 samples, 0.08%)</title><rect x="1027.0" y="931.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1030.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.iterator (6 samples, 0.12%)</title><rect x="1028.0" y="963.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.0" y="974.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.12%)</title><rect x="1028.0" y="947.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1031.0" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (6 samples, 0.12%)</title><rect x="1028.0" y="931.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1031.0" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (6 samples, 0.12%)</title><rect x="1028.0" y="915.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1031.0" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (6 samples, 0.12%)</title><rect x="1028.0" y="899.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1031.0" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (177 samples, 3.58%)</title><rect x="1029.4" y="979.0" width="42.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.4" y="990.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="1029.6" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="1029.6" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (55 samples, 1.11%)</title><rect x="1030.1" y="963.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1033.1" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1030.4" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1033.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.04%)</title><rect x="1030.4" y="931.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (52 samples, 1.05%)</title><rect x="1030.8" y="947.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.8" y="958.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.04%)</title><rect x="1031.3" y="931.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1034.3" y="942.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="1031.8" y="931.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1034.8" y="942.0"></text>
</g>
<g>
<title>epoll_wait (45 samples, 0.91%)</title><rect x="1032.3" y="931.0" width="10.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1035.3" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.77%)</title><rect x="1033.9" y="915.0" width="9.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1036.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.77%)</title><rect x="1033.9" y="899.0" width="9.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1036.9" y="910.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 0.61%)</title><rect x="1035.4" y="883.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1038.4" y="894.0"></text>
</g>
<g>
<title>do_epoll_wait (30 samples, 0.61%)</title><rect x="1035.4" y="867.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1038.4" y="878.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (23 samples, 0.47%)</title><rect x="1035.8" y="851.0" width="5.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1038.8" y="862.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (4 samples, 0.08%)</title><rect x="1035.8" y="835.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1038.8" y="846.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.34%)</title><rect x="1036.8" y="835.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1039.8" y="846.0"></text>
</g>
<g>
<title>ep_item_poll (15 samples, 0.30%)</title><rect x="1037.3" y="819.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1040.3" y="830.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.14%)</title><rect x="1039.2" y="803.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.2" y="814.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="1040.9" y="835.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1043.9" y="846.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 0.10%)</title><rect x="1041.3" y="851.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1044.3" y="862.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.10%)</title><rect x="1041.3" y="835.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1044.3" y="846.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.06%)</title><rect x="1041.8" y="819.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1044.8" y="830.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.04%)</title><rect x="1042.5" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1045.5" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (119 samples, 2.41%)</title><rect x="1043.2" y="963.0" width="28.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.2" y="974.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (118 samples, 2.39%)</title><rect x="1043.5" y="947.0" width="28.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1046.5" y="958.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (79 samples, 1.60%)</title><rect x="1043.5" y="931.0" width="18.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1046.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (45 samples, 0.91%)</title><rect x="1044.0" y="915.0" width="10.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (40 samples, 0.81%)</title><rect x="1044.9" y="899.0" width="9.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1047.9" y="910.0"></text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (34 samples, 0.69%)</title><rect x="1045.2" y="883.0" width="8.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1048.2" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (4 samples, 0.08%)</title><rect x="1045.2" y="867.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.08%)</title><rect x="1045.2" y="851.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.2" y="862.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="1045.6" y="835.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1045.6" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1048.6" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1045.6" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1048.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1045.6" y="787.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1048.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (30 samples, 0.61%)</title><rect x="1046.1" y="867.0" width="7.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1049.1" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (30 samples, 0.61%)</title><rect x="1046.1" y="851.0" width="7.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1049.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.53%)</title><rect x="1047.1" y="835.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (26 samples, 0.53%)</title><rect x="1047.1" y="819.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.12%)</title><rect x="1047.5" y="803.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1050.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (5 samples, 0.10%)</title><rect x="1047.8" y="787.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.10%)</title><rect x="1047.8" y="771.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (5 samples, 0.10%)</title><rect x="1047.8" y="755.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1050.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="1047.8" y="739.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1050.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.34%)</title><rect x="1049.2" y="803.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1052.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.34%)</title><rect x="1049.2" y="787.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1052.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.34%)</title><rect x="1049.2" y="771.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1052.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.32%)</title><rect x="1049.2" y="755.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1052.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.32%)</title><rect x="1049.2" y="739.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1052.2" y="750.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="1049.2" y="723.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1052.2" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.26%)</title><rect x="1049.9" y="723.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1052.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.24%)</title><rect x="1050.2" y="707.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1053.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.24%)</title><rect x="1050.2" y="691.0" width="2.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1053.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.20%)</title><rect x="1050.4" y="675.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1053.4" y="686.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.20%)</title><rect x="1050.4" y="659.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1053.4" y="670.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.20%)</title><rect x="1050.4" y="643.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1053.4" y="654.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 0.12%)</title><rect x="1051.4" y="627.0" width="1.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1054.4" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 0.12%)</title><rect x="1051.4" y="611.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1054.4" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.12%)</title><rect x="1051.4" y="595.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1054.4" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.08%)</title><rect x="1053.5" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1056.5" y="894.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.08%)</title><rect x="1053.5" y="867.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1056.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.08%)</title><rect x="1053.5" y="851.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1056.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.28%)</title><rect x="1054.7" y="915.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1057.7" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (8 samples, 0.16%)</title><rect x="1054.7" y="899.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.7" y="910.0"></text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (3 samples, 0.06%)</title><rect x="1054.9" y="883.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1057.9" y="894.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="1055.7" y="883.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1058.7" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="1056.6" y="899.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1059.6" y="910.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="1056.6" y="883.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1059.6" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.04%)</title><rect x="1057.6" y="899.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.6" y="910.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.12%)</title><rect x="1058.0" y="915.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1061.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="1058.0" y="899.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1061.0" y="910.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="1058.8" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1061.8" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="1058.8" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1061.8" y="894.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.24%)</title><rect x="1059.5" y="915.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1062.5" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.24%)</title><rect x="1059.5" y="899.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1062.5" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.06%)</title><rect x="1059.9" y="883.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1062.9" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.06%)</title><rect x="1059.9" y="867.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1062.9" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="1059.9" y="851.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1062.9" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (3 samples, 0.06%)</title><rect x="1059.9" y="835.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1062.9" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="1059.9" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.9" y="830.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="1060.7" y="883.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.7" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1061.6" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1064.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1061.6" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1064.6" y="878.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.06%)</title><rect x="1061.6" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1064.6" y="862.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.06%)</title><rect x="1061.6" y="835.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1064.6" y="846.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="1061.6" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1064.6" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (39 samples, 0.79%)</title><rect x="1062.3" y="931.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1065.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (37 samples, 0.75%)</title><rect x="1062.8" y="915.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1065.8" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.18%)</title><rect x="1063.3" y="899.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1066.3" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="1064.0" y="883.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1067.0" y="894.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="1064.5" y="883.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1067.5" y="894.0"></text>
</g>
<g>
<title>__libc_recv (24 samples, 0.49%)</title><rect x="1065.7" y="899.0" width="5.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1068.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.42%)</title><rect x="1066.4" y="883.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1069.4" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.42%)</title><rect x="1066.4" y="867.0" width="5.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1069.4" y="878.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (19 samples, 0.38%)</title><rect x="1066.9" y="851.0" width="4.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1069.9" y="862.0"></text>
</g>
<g>
<title>__sys_recvfrom (19 samples, 0.38%)</title><rect x="1066.9" y="835.0" width="4.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1069.9" y="846.0"></text>
</g>
<g>
<title>inet6_recvmsg (16 samples, 0.32%)</title><rect x="1067.6" y="819.0" width="3.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.6" y="830.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.32%)</title><rect x="1067.6" y="803.0" width="3.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1070.6" y="814.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.12%)</title><rect x="1069.3" y="787.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1072.3" y="798.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.12%)</title><rect x="1069.3" y="771.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1072.3" y="782.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.08%)</title><rect x="1069.5" y="755.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1072.5" y="766.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="1069.7" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1072.7" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="1070.7" y="787.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1073.7" y="798.0"></text>
</g>
<g>
<title>start_thread (495 samples, 10.01%)</title><rect x="1071.6" y="979.0" width="118.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1074.6" y="990.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (495 samples, 10.01%)</title><rect x="1071.6" y="963.0" width="118.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1074.6" y="974.0">thread_native_..</text>
</g>
<g>
<title>Thread::call_run() (495 samples, 10.01%)</title><rect x="1071.6" y="947.0" width="118.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1074.6" y="958.0">Thread::call_r..</text>
</g>
<g>
<title>GangWorker::loop() (492 samples, 9.95%)</title><rect x="1071.6" y="931.0" width="117.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1074.6" y="942.0">GangWorker::lo..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (251 samples, 5.08%)</title><rect x="1071.6" y="915.0" width="59.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1074.6" y="926.0">G1CMCo..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (248 samples, 5.02%)</title><rect x="1071.6" y="899.0" width="59.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.6" y="910.0">G1CMTa..</text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.0] (2 samples, 0.04%)</title><rect x="1073.3" y="883.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.3" y="894.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1] (180 samples, 3.64%)</title><rect x="1074.0" y="883.0" width="43.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1077.0" y="894.0">G1CM..</text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.04%)</title><rect x="1079.8" y="867.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.8" y="878.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (153 samples, 3.09%)</title><rect x="1080.5" y="867.0" width="36.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1083.5" y="878.0">voi..</text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (141 samples, 2.85%)</title><rect x="1083.3" y="851.0" width="33.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.3" y="862.0">vo..</text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (2 samples, 0.04%)</title><rect x="1116.5" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1119.5" y="846.0"></text>
</g>
<g>
<title>getrusage (2 samples, 0.04%)</title><rect x="1116.5" y="819.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1119.5" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1116.5" y="803.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1119.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1116.5" y="787.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1119.5" y="798.0"></text>
</g>
<g>
<title>G1CMTask::drain_satb_buffers() [clone .part.0] (2 samples, 0.04%)</title><rect x="1117.0" y="883.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1120.0" y="894.0"></text>
</g>
<g>
<title>SATBMarkQueueSet::apply_closure_to_completed_buffer(SATBBufferClosure*) (2 samples, 0.04%)</title><rect x="1117.0" y="867.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1120.0" y="878.0"></text>
</g>
<g>
<title>G1CMSATBBufferClosure::do_buffer(void**, unsigned long) (2 samples, 0.04%)</title><rect x="1117.0" y="851.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1120.0" y="862.0"></text>
</g>
<g>
<title>G1CMTask::make_reference_grey(oopDesc*) (2 samples, 0.04%)</title><rect x="1117.0" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1120.0" y="846.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (2 samples, 0.04%)</title><rect x="1117.5" y="883.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1120.5" y="894.0"></text>
</g>
<g>
<title>getrusage (2 samples, 0.04%)</title><rect x="1117.5" y="867.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1120.5" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="1117.5" y="851.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1120.5" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="1117.5" y="835.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1120.5" y="846.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;G1TaskQueueEntry, (MemoryType)5, 131072u&gt;::pop_local(G1TaskQueueEntry volatile&amp;, unsigned int) [clone .constprop.0] (27 samples, 0.55%)</title><rect x="1117.9" y="883.0" width="6.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1120.9" y="894.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (24 samples, 0.49%)</title><rect x="1124.6" y="883.0" width="5.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1127.6" y="894.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (15 samples, 0.30%)</title><rect x="1126.5" y="867.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.5" y="878.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.0] (3 samples, 0.06%)</title><rect x="1130.8" y="899.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.8" y="910.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (6 samples, 0.12%)</title><rect x="1131.5" y="915.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.5" y="926.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (6 samples, 0.12%)</title><rect x="1131.5" y="899.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.5" y="910.0"></text>
</g>
<g>
<title>SpinPause (6 samples, 0.12%)</title><rect x="1131.5" y="883.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1134.5" y="894.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (62 samples, 1.25%)</title><rect x="1133.2" y="915.0" width="14.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.2" y="926.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (28 samples, 0.57%)</title><rect x="1133.4" y="899.0" width="6.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.4" y="910.0"></text>
</g>
<g>
<title>SpinPause (26 samples, 0.53%)</title><rect x="1133.9" y="883.0" width="6.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1136.9" y="894.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (21 samples, 0.42%)</title><rect x="1140.1" y="899.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.1" y="910.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (21 samples, 0.42%)</title><rect x="1140.1" y="883.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.1" y="894.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (21 samples, 0.42%)</title><rect x="1140.1" y="867.0" width="5.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.1" y="878.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (21 samples, 0.42%)</title><rect x="1140.1" y="851.0" width="5.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.1" y="862.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (20 samples, 0.40%)</title><rect x="1140.4" y="835.0" width="4.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (7 samples, 0.14%)</title><rect x="1140.6" y="819.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1143.6" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="1141.3" y="803.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1144.3" y="814.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="1141.8" y="803.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1144.8" y="814.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (11 samples, 0.22%)</title><rect x="1142.3" y="819.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.3" y="830.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (6 samples, 0.12%)</title><rect x="1143.5" y="803.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.5" y="814.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (9 samples, 0.18%)</title><rect x="1145.1" y="899.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.1" y="910.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (9 samples, 0.18%)</title><rect x="1145.1" y="883.0" width="2.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.1" y="894.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (9 samples, 0.18%)</title><rect x="1145.1" y="867.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.1" y="878.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (9 samples, 0.18%)</title><rect x="1145.1" y="851.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.1" y="862.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (8 samples, 0.16%)</title><rect x="1145.4" y="835.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.4" y="846.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.06%)</title><rect x="1145.9" y="819.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.9" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.06%)</title><rect x="1145.9" y="803.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1148.9" y="814.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (3 samples, 0.06%)</title><rect x="1146.6" y="819.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.6" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1147.3" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.3" y="910.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1147.3" y="883.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.3" y="894.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1147.3" y="867.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.3" y="878.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (10 samples, 0.20%)</title><rect x="1148.0" y="915.0" width="2.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1151.0" y="926.0"></text>
</g>
<g>
<title>G1CodeCacheUnloadingTask::work_first_pass(unsigned int) (3 samples, 0.06%)</title><rect x="1148.7" y="899.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.7" y="910.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (3 samples, 0.06%)</title><rect x="1148.7" y="883.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1151.7" y="894.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (2 samples, 0.04%)</title><rect x="1148.7" y="867.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1151.7" y="878.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (3 samples, 0.06%)</title><rect x="1149.7" y="899.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1152.7" y="910.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (3 samples, 0.06%)</title><rect x="1149.7" y="883.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.7" y="894.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (159 samples, 3.22%)</title><rect x="1150.4" y="915.0" width="37.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.4" y="926.0">G1R..</text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (159 samples, 3.22%)</title><rect x="1150.4" y="899.0" width="37.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="910.0">Hea..</text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (157 samples, 3.17%)</title><rect x="1150.4" y="883.0" width="37.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.4" y="894.0">G1R..</text>
</g>
<g>
<title>Klass::start_of_vtable() const (2 samples, 0.04%)</title><rect x="1167.3" y="867.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.3" y="878.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (2 samples, 0.04%)</title><rect x="1168.0" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.0" y="878.0"></text>
</g>
<g>
<title>void G1RebuildRemSetClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.04%)</title><rect x="1168.5" y="867.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.5" y="878.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (78 samples, 1.58%)</title><rect x="1169.0" y="867.0" width="18.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.0" y="878.0"></text>
</g>
<g>
<title>BitMap::par_at_put(unsigned long, bool) (4 samples, 0.08%)</title><rect x="1180.9" y="851.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.9" y="862.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (19 samples, 0.38%)</title><rect x="1182.1" y="851.0" width="4.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.1" y="862.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.06%)</title><rect x="1185.5" y="835.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.5" y="846.0"></text>
</g>
<g>
<title>SparsePRT::add_card(int, int) (2 samples, 0.04%)</title><rect x="1186.2" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="846.0"></text>
</g>
<g>
<title>RSHashTable::add_card(int, int) (4 samples, 0.08%)</title><rect x="1186.7" y="851.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="862.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="1187.9" y="883.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="1188.6" y="915.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.6" y="926.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.04%)</title><rect x="1188.6" y="899.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.6" y="910.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.0] (2 samples, 0.04%)</title><rect x="1188.6" y="883.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.6" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="1188.6" y="867.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.06%)</title><rect x="1189.0" y="931.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.0" y="942.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.06%)</title><rect x="1189.0" y="915.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.0" y="926.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (2 samples, 0.04%)</title><rect x="1189.3" y="899.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.3" y="910.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.3" y="883.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="894.0"></text>
</g>
</g>
</svg>
