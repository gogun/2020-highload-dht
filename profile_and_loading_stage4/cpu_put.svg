<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (6,244 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.11%)</title><rect x="10.2" y="739.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.2" y="750.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.10%)</title><rect x="10.4" y="723.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (4 samples, 0.06%)</title><rect x="10.8" y="707.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="718.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.05%)</title><rect x="10.9" y="691.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="11.5" y="739.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="14.5" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.05%)</title><rect x="11.9" y="739.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="14.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,865 samples, 61.90%)</title><rect x="12.5" y="739.0" width="730.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.5" y="750.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,865 samples, 61.90%)</title><rect x="12.5" y="723.0" width="730.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="15.5" y="734.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,865 samples, 61.90%)</title><rect x="12.5" y="707.0" width="730.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.5" y="718.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (11 samples, 0.18%)</title><rect x="14.7" y="691.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.18%)</title><rect x="14.7" y="675.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="17.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.18%)</title><rect x="14.7" y="659.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.05%)</title><rect x="16.2" y="643.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (666 samples, 10.67%)</title><rect x="16.8" y="691.0" width="125.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.8" y="702.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (659 samples, 10.55%)</title><rect x="18.1" y="675.0" width="124.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.1" y="686.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (383 samples, 6.13%)</title><rect x="19.3" y="659.0" width="72.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="22.3" y="670.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (9 samples, 0.14%)</title><rect x="20.2" y="643.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (9 samples, 0.14%)</title><rect x="20.2" y="627.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.14%)</title><rect x="20.2" y="611.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.08%)</title><rect x="21.0" y="595.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="24.0" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.05%)</title><rect x="21.0" y="579.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="24.0" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="21.1" y="563.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="24.1" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="21.1" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="24.1" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="21.1" y="531.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="24.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (61 samples, 0.98%)</title><rect x="21.9" y="643.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (61 samples, 0.98%)</title><rect x="21.9" y="627.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (61 samples, 0.98%)</title><rect x="21.9" y="611.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (61 samples, 0.98%)</title><rect x="21.9" y="595.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (56 samples, 0.90%)</title><rect x="22.9" y="579.0" width="10.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.9" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.10%)</title><rect x="23.2" y="563.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="26.2" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="23.4" y="547.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="26.4" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.03%)</title><rect x="24.0" y="547.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="27.0" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (48 samples, 0.77%)</title><rect x="24.4" y="563.0" width="9.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="27.4" y="574.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.67%)</title><rect x="25.5" y="547.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="28.5" y="558.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.67%)</title><rect x="25.5" y="531.0" width="7.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="28.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (36 samples, 0.58%)</title><rect x="26.3" y="515.0" width="6.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="29.3" y="526.0"></text>
</g>
<g>
<title>do_futex (36 samples, 0.58%)</title><rect x="26.3" y="499.0" width="6.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.3" y="510.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 0.58%)</title><rect x="26.3" y="483.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="27.0" y="467.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.0" y="478.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.46%)</title><rect x="27.6" y="467.0" width="5.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.6" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.46%)</title><rect x="27.6" y="451.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.6" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.46%)</title><rect x="27.6" y="435.0" width="5.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.6" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (7 samples, 0.11%)</title><rect x="33.4" y="643.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="36.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (3 samples, 0.05%)</title><rect x="34.2" y="627.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="37.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (300 samples, 4.80%)</title><rect x="34.8" y="643.0" width="56.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="37.8" y="654.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (298 samples, 4.77%)</title><rect x="35.1" y="627.0" width="56.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="38.1" y="638.0">jdk/in..</text>
</g>
<g>
<title>Unsafe_Park (161 samples, 2.58%)</title><rect x="36.6" y="611.0" width="30.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="39.6" y="622.0">Un..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="39.5" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="42.5" y="606.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.03%)</title><rect x="39.9" y="595.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="42.9" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (22 samples, 0.35%)</title><rect x="40.2" y="595.0" width="4.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="43.2" y="606.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (3 samples, 0.05%)</title><rect x="42.5" y="579.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="45.5" y="590.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.05%)</title><rect x="43.1" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="46.1" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.06%)</title><rect x="43.6" y="579.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="46.6" y="590.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (4 samples, 0.06%)</title><rect x="44.4" y="595.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="47.4" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (5 samples, 0.08%)</title><rect x="45.2" y="595.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="48.2" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (6 samples, 0.10%)</title><rect x="46.3" y="595.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="49.3" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="47.6" y="595.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="50.6" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (85 samples, 1.36%)</title><rect x="48.0" y="595.0" width="16.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="51.0" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 0.96%)</title><rect x="52.7" y="579.0" width="11.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 0.96%)</title><rect x="52.7" y="563.0" width="11.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="55.7" y="574.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.05%)</title><rect x="58.9" y="547.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="61.9" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="58.9" y="531.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="61.9" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.30%)</title><rect x="59.5" y="547.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.5" y="558.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.27%)</title><rect x="59.9" y="531.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="62.9" y="542.0"></text>
</g>
<g>
<title>futex_wake (15 samples, 0.24%)</title><rect x="60.3" y="515.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="63.3" y="526.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="62.3" y="499.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="65.3" y="510.0"></text>
</g>
<g>
<title>syscall_trace_enter (5 samples, 0.08%)</title><rect x="63.1" y="547.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="66.1" y="558.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.05%)</title><rect x="64.0" y="595.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="67.0" y="606.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="64.6" y="595.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="67.6" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (11 samples, 0.18%)</title><rect x="65.0" y="595.0" width="2.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="68.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (122 samples, 1.95%)</title><rect x="67.1" y="611.0" width="23.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="70.1" y="622.0">[..</text>
</g>
<g>
<title>__condvar_confirm_wakeup (2 samples, 0.03%)</title><rect x="67.1" y="595.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="70.1" y="606.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (10 samples, 0.16%)</title><rect x="67.5" y="595.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="70.5" y="606.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (15 samples, 0.24%)</title><rect x="69.5" y="595.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="72.5" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.06%)</title><rect x="72.4" y="595.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="75.4" y="606.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (90 samples, 1.44%)</title><rect x="73.1" y="595.0" width="17.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="76.1" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 0.93%)</title><rect x="79.2" y="579.0" width="10.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 0.93%)</title><rect x="79.2" y="563.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="82.2" y="574.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.05%)</title><rect x="80.5" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="83.5" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 0.72%)</title><rect x="81.1" y="547.0" width="8.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="84.1" y="558.0"></text>
</g>
<g>
<title>do_futex (44 samples, 0.70%)</title><rect x="81.2" y="531.0" width="8.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="84.2" y="542.0"></text>
</g>
<g>
<title>futex_wait (42 samples, 0.67%)</title><rect x="81.6" y="515.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="84.6" y="526.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.29%)</title><rect x="83.1" y="499.0" width="3.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.1" y="510.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.21%)</title><rect x="84.1" y="483.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="87.1" y="494.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.18%)</title><rect x="84.5" y="467.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.5" y="478.0"></text>
</g>
<g>
<title>debug_smp_processor_id (2 samples, 0.03%)</title><rect x="85.0" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.0" y="462.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.10%)</title><rect x="85.4" y="451.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.4" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (4 samples, 0.06%)</title><rect x="85.8" y="435.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="88.8" y="446.0"></text>
</g>
<g>
<title>futex_wait_setup (16 samples, 0.26%)</title><rect x="86.5" y="499.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.5" y="510.0"></text>
</g>
<g>
<title>get_futex_value_locked (4 samples, 0.06%)</title><rect x="88.6" y="483.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="91.6" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.05%)</title><rect x="89.6" y="547.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="92.6" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.05%)</title><rect x="89.6" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="92.6" y="542.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (6 samples, 0.10%)</title><rect x="90.3" y="611.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="93.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (44 samples, 0.70%)</title><rect x="91.6" y="659.0" width="8.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (44 samples, 0.70%)</title><rect x="91.6" y="643.0" width="8.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="94.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (44 samples, 0.70%)</title><rect x="91.6" y="627.0" width="8.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (40 samples, 0.64%)</title><rect x="91.8" y="611.0" width="7.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (40 samples, 0.64%)</title><rect x="91.8" y="595.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.8" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (39 samples, 0.62%)</title><rect x="92.0" y="579.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.0" y="590.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.22%)</title><rect x="92.2" y="563.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="95.2" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (6 samples, 0.10%)</title><rect x="93.3" y="547.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="96.3" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="93.5" y="531.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="96.5" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="93.5" y="515.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="96.5" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="93.7" y="499.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="96.7" y="510.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="93.9" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.9" y="494.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="93.9" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="96.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.35%)</title><rect x="94.9" y="563.0" width="4.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="97.9" y="574.0"></text>
</g>
<g>
<title>__condvar_dec_grefs (4 samples, 0.06%)</title><rect x="95.0" y="547.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="98.0" y="558.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (16 samples, 0.26%)</title><rect x="96.0" y="547.0" width="3.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="99.0" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.22%)</title><rect x="96.4" y="531.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="99.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.22%)</title><rect x="96.4" y="515.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="99.4" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.18%)</title><rect x="96.9" y="499.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="99.9" y="510.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.18%)</title><rect x="96.9" y="483.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="99.9" y="494.0"></text>
</g>
<g>
<title>futex_wait (10 samples, 0.16%)</title><rect x="97.1" y="467.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.1" y="478.0"></text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 0.11%)</title><rect x="97.5" y="451.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.5" y="462.0"></text>
</g>
<g>
<title>schedule (5 samples, 0.08%)</title><rect x="97.9" y="435.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="100.9" y="446.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="98.4" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="101.4" y="430.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="98.4" y="403.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="101.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (2 samples, 0.03%)</title><rect x="98.4" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.4" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (226 samples, 3.62%)</title><rect x="100.0" y="659.0" width="42.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.0" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (226 samples, 3.62%)</title><rect x="100.0" y="643.0" width="42.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="103.0" y="654.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (226 samples, 3.62%)</title><rect x="100.0" y="627.0" width="42.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.0" y="638.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (183 samples, 2.93%)</title><rect x="108.1" y="611.0" width="34.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.1" y="622.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (183 samples, 2.93%)</title><rect x="108.1" y="595.0" width="34.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.1" y="606.0">jd..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="108.5" y="579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="111.5" y="590.0"></text>
</g>
<g>
<title>Unsafe_Unpark (26 samples, 0.42%)</title><rect x="108.8" y="579.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="111.8" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="109.6" y="563.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="112.6" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.05%)</title><rect x="110.3" y="563.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="113.3" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (6 samples, 0.10%)</title><rect x="110.9" y="563.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="113.9" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="112.0" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="115.0" y="574.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="112.4" y="563.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="115.4" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (4 samples, 0.06%)</title><rect x="113.0" y="563.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="116.0" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (153 samples, 2.45%)</title><rect x="113.8" y="579.0" width="28.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="116.8" y="590.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (140 samples, 2.24%)</title><rect x="116.2" y="563.0" width="26.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.2" y="574.0">e..</text>
</g>
<g>
<title>do_syscall_64 (140 samples, 2.24%)</title><rect x="116.2" y="547.0" width="26.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="119.2" y="558.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (5 samples, 0.08%)</title><rect x="117.9" y="531.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="120.9" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.06%)</title><rect x="118.1" y="515.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="121.1" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (122 samples, 1.95%)</title><rect x="118.9" y="531.0" width="23.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.9" y="542.0">_..</text>
</g>
<g>
<title>do_futex (119 samples, 1.91%)</title><rect x="119.4" y="515.0" width="22.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="122.4" y="526.0">d..</text>
</g>
<g>
<title>futex_wake (118 samples, 1.89%)</title><rect x="119.6" y="499.0" width="22.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.6" y="510.0">f..</text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.06%)</title><rect x="120.9" y="483.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="123.9" y="494.0"></text>
</g>
<g>
<title>wake_up_q (107 samples, 1.71%)</title><rect x="121.7" y="483.0" width="20.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="124.7" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (107 samples, 1.71%)</title><rect x="121.7" y="467.0" width="20.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="124.7" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (107 samples, 1.71%)</title><rect x="121.7" y="451.0" width="20.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="124.7" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.06%)</title><rect x="141.9" y="531.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="144.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$86/350376718.run (366 samples, 5.86%)</title><rect x="142.7" y="691.0" width="69.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.7" y="702.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$flush$8 (366 samples, 5.86%)</title><rect x="142.7" y="675.0" width="69.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="145.7" y="686.0">ru/mail..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.serialize (366 samples, 5.86%)</title><rect x="142.7" y="659.0" width="69.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.7" y="670.0">ru/mail..</text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="143.8" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.8" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.06%)</title><rect x="143.8" y="627.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.8" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="143.8" y="611.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.8" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.06%)</title><rect x="143.8" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.8" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (356 samples, 5.70%)</title><rect x="144.6" y="643.0" width="67.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.6" y="654.0">sun/nio..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.14%)</title><rect x="144.6" y="627.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.6" y="638.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (9 samples, 0.14%)</title><rect x="144.6" y="611.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.6" y="622.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (9 samples, 0.14%)</title><rect x="144.6" y="595.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.6" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="145.7" y="579.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="148.7" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (333 samples, 5.33%)</title><rect x="146.3" y="627.0" width="62.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.3" y="638.0">sun/ni..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="148.0" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.0" y="622.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (13 samples, 0.21%)</title><rect x="148.7" y="611.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="151.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.16%)</title><rect x="148.7" y="595.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.7" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.16%)</title><rect x="148.7" y="579.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="151.7" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="149.1" y="563.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="152.1" y="574.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="149.7" y="563.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="152.7" y="574.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (3 samples, 0.05%)</title><rect x="150.0" y="563.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="153.0" y="574.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.05%)</title><rect x="150.6" y="595.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="153.6" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (3 samples, 0.05%)</title><rect x="150.6" y="579.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.6" y="590.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (2 samples, 0.03%)</title><rect x="150.8" y="563.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="153.8" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextPutIndex (2 samples, 0.03%)</title><rect x="150.8" y="547.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.8" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (294 samples, 4.71%)</title><rect x="151.2" y="611.0" width="55.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="154.2" y="622.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (294 samples, 4.71%)</title><rect x="151.2" y="595.0" width="55.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="154.2" y="606.0">sun/n..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (294 samples, 4.71%)</title><rect x="151.2" y="579.0" width="55.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.2" y="590.0">sun/n..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="152.3" y="563.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="155.3" y="574.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.06%)</title><rect x="152.7" y="563.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="155.7" y="574.0"></text>
</g>
<g>
<title>__write (281 samples, 4.50%)</title><rect x="153.4" y="563.0" width="53.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="156.4" y="574.0">__write</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (241 samples, 3.86%)</title><rect x="161.0" y="547.0" width="45.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="164.0" y="558.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (241 samples, 3.86%)</title><rect x="161.0" y="531.0" width="45.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="164.0" y="542.0">do_s..</text>
</g>
<g>
<title>__syscall_return_slowpath (7 samples, 0.11%)</title><rect x="169.1" y="515.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="172.1" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_exit (6 samples, 0.10%)</title><rect x="169.3" y="499.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="172.3" y="510.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.06%)</title><rect x="170.4" y="515.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="173.4" y="526.0"></text>
</g>
<g>
<title>ksys_write (181 samples, 2.90%)</title><rect x="171.2" y="515.0" width="34.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.2" y="526.0">ks..</text>
</g>
<g>
<title>__fdget_pos (13 samples, 0.21%)</title><rect x="171.8" y="499.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="174.8" y="510.0"></text>
</g>
<g>
<title>__fget_light (13 samples, 0.21%)</title><rect x="171.8" y="483.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="174.8" y="494.0"></text>
</g>
<g>
<title>__fget_files (8 samples, 0.13%)</title><rect x="172.7" y="467.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="175.7" y="478.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="174.2" y="499.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="177.2" y="510.0"></text>
</g>
<g>
<title>mutex_unlock (4 samples, 0.06%)</title><rect x="174.6" y="499.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="177.6" y="510.0"></text>
</g>
<g>
<title>vfs_write (159 samples, 2.55%)</title><rect x="175.4" y="499.0" width="30.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="178.4" y="510.0">vf..</text>
</g>
<g>
<title>__sb_end_write (4 samples, 0.06%)</title><rect x="175.7" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="178.7" y="494.0"></text>
</g>
<g>
<title>__sb_start_write (6 samples, 0.10%)</title><rect x="176.5" y="483.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.5" y="494.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.05%)</title><rect x="177.1" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="180.1" y="478.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.08%)</title><rect x="177.6" y="483.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="180.6" y="494.0"></text>
</g>
<g>
<title>new_sync_write (140 samples, 2.24%)</title><rect x="178.6" y="483.0" width="26.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="181.6" y="494.0">n..</text>
</g>
<g>
<title>generic_file_write_iter (131 samples, 2.10%)</title><rect x="180.1" y="467.0" width="24.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="183.1" y="478.0">g..</text>
</g>
<g>
<title>__generic_file_write_iter (110 samples, 1.76%)</title><rect x="181.2" y="451.0" width="20.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="184.2" y="462.0"></text>
</g>
<g>
<title>file_update_time (7 samples, 0.11%)</title><rect x="181.8" y="435.0" width="1.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="184.8" y="446.0"></text>
</g>
<g>
<title>current_time (4 samples, 0.06%)</title><rect x="182.4" y="419.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="185.4" y="430.0"></text>
</g>
<g>
<title>generic_perform_write (100 samples, 1.60%)</title><rect x="183.1" y="435.0" width="18.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="186.1" y="446.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.05%)</title><rect x="184.4" y="419.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="187.4" y="430.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.03%)</title><rect x="185.0" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.0" y="430.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (16 samples, 0.26%)</title><rect x="185.4" y="419.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="188.4" y="430.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="186.5" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.5" y="414.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (5 samples, 0.08%)</title><rect x="186.9" y="403.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="189.9" y="414.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.05%)</title><rect x="187.8" y="403.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="190.8" y="414.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (8 samples, 0.13%)</title><rect x="188.4" y="419.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="191.4" y="430.0"></text>
</g>
<g>
<title>shmem_write_begin (39 samples, 0.62%)</title><rect x="189.9" y="419.0" width="7.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.9" y="430.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (32 samples, 0.51%)</title><rect x="191.2" y="403.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="194.2" y="414.0"></text>
</g>
<g>
<title>find_lock_entry (18 samples, 0.29%)</title><rect x="193.3" y="387.0" width="3.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="196.3" y="398.0"></text>
</g>
<g>
<title>find_get_entry (11 samples, 0.18%)</title><rect x="194.3" y="371.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="197.3" y="382.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.05%)</title><rect x="195.8" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="198.8" y="366.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.03%)</title><rect x="196.3" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="199.3" y="382.0"></text>
</g>
<g>
<title>shmem_write_end (25 samples, 0.40%)</title><rect x="197.3" y="419.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="200.3" y="430.0"></text>
</g>
<g>
<title>__set_page_dirty_no_writeback (2 samples, 0.03%)</title><rect x="200.5" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="203.5" y="414.0"></text>
</g>
<g>
<title>set_page_dirty (3 samples, 0.05%)</title><rect x="200.9" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="203.9" y="414.0"></text>
</g>
<g>
<title>unlock_page (3 samples, 0.05%)</title><rect x="201.4" y="403.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="204.4" y="414.0"></text>
</g>
<g>
<title>down_write (7 samples, 0.11%)</title><rect x="202.0" y="451.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="205.0" y="462.0"></text>
</g>
<g>
<title>generic_write_check_limits (3 samples, 0.05%)</title><rect x="203.3" y="451.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="206.3" y="462.0"></text>
</g>
<g>
<title>up_write (5 samples, 0.08%)</title><rect x="203.9" y="451.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="206.9" y="462.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="205.0" y="483.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="208.0" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (6 samples, 0.10%)</title><rect x="205.4" y="515.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="208.4" y="526.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.06%)</title><rect x="205.8" y="499.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.8" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.11%)</title><rect x="206.7" y="611.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="209.7" y="622.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (6 samples, 0.10%)</title><rect x="208.1" y="611.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.1" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="208.2" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="211.2" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.03%)</title><rect x="208.2" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.2" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.03%)</title><rect x="208.2" y="563.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="211.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (2 samples, 0.03%)</title><rect x="208.2" y="547.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="211.2" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (3 samples, 0.05%)</title><rect x="208.6" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.6" y="606.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (14 samples, 0.22%)</title><rect x="209.2" y="627.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="212.2" y="638.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.05%)</title><rect x="211.3" y="611.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="214.3" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$85/81009881.run (2,808 samples, 44.97%)</title><rect x="211.8" y="691.0" width="530.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.8" y="702.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$85/81009881.run</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (2,808 samples, 44.97%)</title><rect x="211.8" y="675.0" width="530.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="214.8" y="686.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.05%)</title><rect x="212.2" y="659.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.05%)</title><rect x="212.2" y="643.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="215.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.05%)</title><rect x="212.2" y="627.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.05%)</title><rect x="212.2" y="611.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="215.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.05%)</title><rect x="212.2" y="595.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.2" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.05%)</title><rect x="212.2" y="579.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="215.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (2,803 samples, 44.89%)</title><rect x="212.8" y="659.0" width="529.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.8" y="670.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.05%)</title><rect x="217.7" y="643.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="220.7" y="654.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.05%)</title><rect x="217.7" y="627.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="220.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.05%)</title><rect x="217.7" y="611.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.7" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.05%)</title><rect x="217.7" y="595.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="220.7" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.13%)</title><rect x="218.3" y="643.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="221.3" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,007 samples, 32.14%)</title><rect x="219.8" y="643.0" width="379.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="222.8" y="654.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.05%)</title><rect x="226.2" y="627.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="229.2" y="638.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.05%)</title><rect x="226.2" y="611.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="229.2" y="622.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.05%)</title><rect x="226.2" y="595.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="229.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="226.8" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="226.8" y="611.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.8" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="226.8" y="595.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.03%)</title><rect x="226.8" y="579.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.8" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (1,948 samples, 31.20%)</title><rect x="227.1" y="627.0" width="368.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.1" y="638.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.06%)</title><rect x="228.3" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="231.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (76 samples, 1.22%)</title><rect x="229.0" y="611.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="232.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (62 samples, 0.99%)</title><rect x="231.7" y="595.0" width="11.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="234.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (40 samples, 0.64%)</title><rect x="231.7" y="579.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.7" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.11%)</title><rect x="237.9" y="563.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="240.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.35%)</title><rect x="239.2" y="579.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.35%)</title><rect x="239.2" y="563.0" width="4.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.2" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (22 samples, 0.35%)</title><rect x="239.2" y="547.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="242.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1,862 samples, 29.82%)</title><rect x="243.4" y="611.0" width="351.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.4" y="622.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (1,860 samples, 29.79%)</title><rect x="243.8" y="595.0" width="351.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.8" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="244.9" y="579.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.9" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (1,852 samples, 29.66%)</title><rect x="245.3" y="579.0" width="350.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="248.3" y="590.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="247.5" y="563.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="250.5" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (1,832 samples, 29.34%)</title><rect x="247.9" y="563.0" width="346.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.9" y="574.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (40 samples, 0.64%)</title><rect x="250.8" y="547.0" width="7.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="253.8" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="252.1" y="531.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="255.1" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="252.7" y="531.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="255.7" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (23 samples, 0.37%)</title><rect x="253.6" y="531.0" width="4.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="256.6" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (6 samples, 0.10%)</title><rect x="254.4" y="515.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="257.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (6 samples, 0.10%)</title><rect x="255.5" y="515.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="258.5" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (7 samples, 0.11%)</title><rect x="256.6" y="515.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="259.6" y="526.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="257.9" y="531.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="260.9" y="542.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.13%)</title><rect x="258.3" y="547.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="261.3" y="558.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="259.8" y="547.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="262.8" y="558.0"></text>
</g>
<g>
<title>__libc_send (1,765 samples, 28.27%)</title><rect x="260.2" y="547.0" width="333.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="263.2" y="558.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,693 samples, 27.11%)</title><rect x="273.8" y="531.0" width="320.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="276.8" y="542.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,693 samples, 27.11%)</title><rect x="273.8" y="515.0" width="320.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="276.8" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (16 samples, 0.26%)</title><rect x="282.7" y="499.0" width="3.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="285.7" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (15 samples, 0.24%)</title><rect x="282.9" y="483.0" width="2.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="285.9" y="494.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="284.2" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="287.2" y="478.0"></text>
</g>
<g>
<title>path_put (3 samples, 0.05%)</title><rect x="284.6" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="287.6" y="478.0"></text>
</g>
<g>
<title>dput (2 samples, 0.03%)</title><rect x="284.8" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="287.8" y="462.0"></text>
</g>
<g>
<title>unroll_tree_refs (3 samples, 0.05%)</title><rect x="285.2" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="288.2" y="478.0"></text>
</g>
<g>
<title>__x64_sys_sendto (1,616 samples, 25.88%)</title><rect x="285.7" y="499.0" width="305.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="288.7" y="510.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (1,612 samples, 25.82%)</title><rect x="286.5" y="483.0" width="304.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="289.5" y="494.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (6 samples, 0.10%)</title><rect x="289.7" y="467.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="292.7" y="478.0"></text>
</g>
<g>
<title>import_single_range (3 samples, 0.05%)</title><rect x="290.8" y="467.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="293.8" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (1,551 samples, 24.84%)</title><rect x="291.4" y="467.0" width="293.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.4" y="478.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (12 samples, 0.19%)</title><rect x="292.1" y="451.0" width="2.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="295.1" y="462.0"></text>
</g>
<g>
<title>inet_send_prepare (7 samples, 0.11%)</title><rect x="293.1" y="435.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="296.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (1,534 samples, 24.57%)</title><rect x="294.6" y="451.0" width="289.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="297.6" y="462.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 0.19%)</title><rect x="295.0" y="435.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="298.0" y="446.0"></text>
</g>
<g>
<title>check_preemption_disabled (2 samples, 0.03%)</title><rect x="296.1" y="419.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.1" y="430.0"></text>
</g>
<g>
<title>preempt_count_sub (4 samples, 0.06%)</title><rect x="296.5" y="419.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="299.5" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (9 samples, 0.14%)</title><rect x="297.3" y="435.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="300.3" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.14%)</title><rect x="297.3" y="419.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="300.3" y="430.0"></text>
</g>
<g>
<title>release_sock (21 samples, 0.34%)</title><rect x="299.0" y="435.0" width="3.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="302.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (9 samples, 0.14%)</title><rect x="299.9" y="419.0" width="1.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="302.9" y="430.0"></text>
</g>
<g>
<title>preempt_count_add (6 samples, 0.10%)</title><rect x="300.5" y="403.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.5" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (7 samples, 0.11%)</title><rect x="301.6" y="419.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.6" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1,490 samples, 23.86%)</title><rect x="302.9" y="435.0" width="281.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.9" y="446.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (1,252 samples, 20.05%)</title><rect x="309.3" y="419.0" width="236.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="312.3" y="430.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (1,252 samples, 20.05%)</title><rect x="309.3" y="403.0" width="236.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="312.3" y="414.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (1,182 samples, 18.93%)</title><rect x="313.3" y="387.0" width="223.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="316.3" y="398.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1,074 samples, 17.20%)</title><rect x="322.4" y="371.0" width="203.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="325.4" y="382.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (19 samples, 0.30%)</title><rect x="324.3" y="355.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.3" y="366.0"></text>
</g>
<g>
<title>ip_send_check (10 samples, 0.16%)</title><rect x="326.0" y="339.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="329.0" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (27 samples, 0.43%)</title><rect x="328.1" y="355.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="331.1" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (16 samples, 0.26%)</title><rect x="330.1" y="339.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="333.1" y="350.0"></text>
</g>
<g>
<title>ip_output (1,016 samples, 16.27%)</title><rect x="333.3" y="355.0" width="192.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="336.3" y="366.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (11 samples, 0.18%)</title><rect x="336.6" y="339.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="339.6" y="350.0"></text>
</g>
<g>
<title>ipv4_mtu (5 samples, 0.08%)</title><rect x="337.7" y="323.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.7" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (972 samples, 15.57%)</title><rect x="338.6" y="339.0" width="183.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.6" y="350.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (127 samples, 2.03%)</title><rect x="342.0" y="323.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="345.0" y="334.0">_..</text>
</g>
<g>
<title>__this_cpu_preempt_check (2 samples, 0.03%)</title><rect x="346.4" y="307.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="349.4" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (84 samples, 1.35%)</title><rect x="347.0" y="307.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="350.0" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (77 samples, 1.23%)</title><rect x="348.3" y="291.0" width="14.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="351.3" y="302.0"></text>
</g>
<g>
<title>netif_rx (37 samples, 0.59%)</title><rect x="351.7" y="275.0" width="7.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="354.7" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (35 samples, 0.56%)</title><rect x="352.1" y="259.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="355.1" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (28 samples, 0.45%)</title><rect x="352.6" y="243.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.6" y="254.0"></text>
</g>
<g>
<title>preempt_count_sub (3 samples, 0.05%)</title><rect x="358.1" y="243.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="361.1" y="254.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.03%)</title><rect x="358.7" y="275.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="361.7" y="286.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (3 samples, 0.05%)</title><rect x="359.0" y="275.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="362.0" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (17 samples, 0.27%)</title><rect x="359.6" y="275.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="362.6" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (15 samples, 0.24%)</title><rect x="363.0" y="307.0" width="2.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="366.0" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (12 samples, 0.19%)</title><rect x="363.6" y="291.0" width="2.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="366.6" y="302.0"></text>
</g>
<g>
<title>skb_network_protocol (5 samples, 0.08%)</title><rect x="364.9" y="275.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="367.9" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (825 samples, 13.21%)</title><rect x="366.0" y="323.0" width="156.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.0" y="334.0">__local_bh_enable_ip</text>
</g>
<g>
<title>check_preemption_disabled (2 samples, 0.03%)</title><rect x="366.2" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="369.2" y="318.0"></text>
</g>
<g>
<title>do_softirq (816 samples, 13.07%)</title><rect x="366.6" y="307.0" width="154.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="369.6" y="318.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (791 samples, 12.67%)</title><rect x="371.3" y="291.0" width="149.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="374.3" y="302.0">do_softirq_own_stack</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (791 samples, 12.67%)</title><rect x="371.3" y="275.0" width="149.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="374.3" y="286.0">asm_call_sysvec_on_..</text>
</g>
<g>
<title>__softirqentry_text_start (791 samples, 12.67%)</title><rect x="371.3" y="259.0" width="149.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="374.3" y="270.0">__softirqentry_text..</text>
</g>
<g>
<title>check_preemption_disabled (2 samples, 0.03%)</title><rect x="381.0" y="243.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="384.0" y="254.0"></text>
</g>
<g>
<title>net_rx_action (738 samples, 11.82%)</title><rect x="381.3" y="243.0" width="139.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.3" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (5 samples, 0.08%)</title><rect x="384.0" y="227.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="387.0" y="238.0"></text>
</g>
<g>
<title>process_backlog (717 samples, 11.48%)</title><rect x="385.3" y="227.0" width="135.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.3" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (690 samples, 11.05%)</title><rect x="390.2" y="211.0" width="130.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="393.2" y="222.0">__netif_receive_..</text>
</g>
<g>
<title>__netif_receive_skb_core (23 samples, 0.37%)</title><rect x="391.2" y="195.0" width="4.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="394.2" y="206.0"></text>
</g>
<g>
<title>check_preemption_disabled (4 samples, 0.06%)</title><rect x="394.8" y="179.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.8" y="190.0"></text>
</g>
<g>
<title>ip_rcv (662 samples, 10.60%)</title><rect x="395.5" y="195.0" width="125.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.5" y="206.0">ip_rcv</text>
</g>
<g>
<title>__x86_retpoline_rax (3 samples, 0.05%)</title><rect x="397.0" y="179.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="400.0" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (634 samples, 10.15%)</title><rect x="397.6" y="179.0" width="119.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="400.6" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (620 samples, 9.93%)</title><rect x="400.2" y="163.0" width="117.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="403.2" y="174.0">ip_local_deliv..</text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.03%)</title><rect x="400.4" y="147.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="403.4" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (616 samples, 9.87%)</title><rect x="401.0" y="147.0" width="116.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="404.0" y="158.0">ip_protocol_de..</text>
</g>
<g>
<title>check_preemption_disabled (2 samples, 0.03%)</title><rect x="403.1" y="131.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="406.1" y="142.0"></text>
</g>
<g>
<title>raw_local_deliver (8 samples, 0.13%)</title><rect x="403.5" y="131.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="406.5" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (595 samples, 9.53%)</title><rect x="405.0" y="131.0" width="112.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="408.0" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (38 samples, 0.61%)</title><rect x="410.3" y="115.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.3" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (8 samples, 0.13%)</title><rect x="415.9" y="99.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (5 samples, 0.08%)</title><rect x="417.4" y="115.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="420.4" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock (2 samples, 0.03%)</title><rect x="418.4" y="115.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.4" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (31 samples, 0.50%)</title><rect x="418.8" y="115.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="421.8" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (19 samples, 0.30%)</title><rect x="419.3" y="99.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="422.3" y="110.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.03%)</title><rect x="422.2" y="83.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="425.2" y="94.0"></text>
</g>
<g>
<title>__rcu_read_lock (6 samples, 0.10%)</title><rect x="422.9" y="99.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="425.9" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.05%)</title><rect x="424.1" y="99.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="427.1" y="110.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="424.6" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="427.6" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (478 samples, 7.66%)</title><rect x="425.2" y="115.0" width="90.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="428.2" y="126.0">tcp_v4_do_..</text>
</g>
<g>
<title>ipv4_dst_check (4 samples, 0.06%)</title><rect x="425.6" y="99.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="428.6" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (472 samples, 7.56%)</title><rect x="426.3" y="99.0" width="89.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="429.3" y="110.0">tcp_rcv_es..</text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.06%)</title><rect x="429.5" y="83.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="432.5" y="94.0"></text>
</g>
<g>
<title>ktime_get_seconds (4 samples, 0.06%)</title><rect x="430.5" y="83.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="433.5" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (15 samples, 0.24%)</title><rect x="431.2" y="83.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="434.2" y="94.0"></text>
</g>
<g>
<title>__mod_timer (13 samples, 0.21%)</title><rect x="431.4" y="67.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="434.4" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.14%)</title><rect x="432.0" y="51.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="435.0" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (186 samples, 2.98%)</title><rect x="434.1" y="83.0" width="35.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="437.1" y="94.0">soc..</text>
</g>
<g>
<title>__wake_up_common_lock (178 samples, 2.85%)</title><rect x="435.6" y="67.0" width="33.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="438.6" y="78.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (175 samples, 2.80%)</title><rect x="436.2" y="51.0" width="33.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="439.2" y="62.0">_r..</text>
</g>
<g>
<title>tcp_ack (201 samples, 3.22%)</title><rect x="469.2" y="83.0" width="38.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="472.2" y="94.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (63 samples, 1.01%)</title><rect x="479.4" y="67.0" width="11.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.4" y="78.0"></text>
</g>
<g>
<title>kfree (23 samples, 0.37%)</title><rect x="479.4" y="51.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="482.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (10 samples, 0.16%)</title><rect x="480.9" y="35.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="483.9" y="46.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (5 samples, 0.08%)</title><rect x="482.8" y="35.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="485.8" y="46.0"></text>
</g>
<g>
<title>skb_release_data (40 samples, 0.64%)</title><rect x="483.8" y="51.0" width="7.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.8" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (3 samples, 0.05%)</title><rect x="491.5" y="67.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="494.5" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (4 samples, 0.06%)</title><rect x="492.1" y="67.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.1" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (24 samples, 0.38%)</title><rect x="492.8" y="67.0" width="4.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.8" y="78.0"></text>
</g>
<g>
<title>__slab_free (9 samples, 0.14%)</title><rect x="493.8" y="51.0" width="1.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="496.8" y="62.0"></text>
</g>
<g>
<title>cache_from_obj (9 samples, 0.14%)</title><rect x="495.5" y="51.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.5" y="62.0"></text>
</g>
<g>
<title>rb_first (2 samples, 0.03%)</title><rect x="497.6" y="67.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="500.6" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (20 samples, 0.32%)</title><rect x="498.1" y="67.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="501.1" y="78.0"></text>
</g>
<g>
<title>tcp_chrono_stop (2 samples, 0.03%)</title><rect x="501.9" y="67.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="504.9" y="78.0"></text>
</g>
<g>
<title>tcp_newly_delivered (4 samples, 0.06%)</title><rect x="502.3" y="67.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="505.3" y="78.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (5 samples, 0.08%)</title><rect x="503.1" y="67.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="506.1" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (4 samples, 0.06%)</title><rect x="504.2" y="67.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="507.2" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.05%)</title><rect x="504.9" y="67.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="507.9" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (6 samples, 0.10%)</title><rect x="505.5" y="67.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.5" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (3 samples, 0.05%)</title><rect x="506.6" y="67.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="509.6" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (19 samples, 0.30%)</title><rect x="507.2" y="83.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.2" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (7 samples, 0.11%)</title><rect x="511.0" y="83.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.0" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (13 samples, 0.21%)</title><rect x="512.3" y="83.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="515.3" y="94.0"></text>
</g>
<g>
<title>ktime_get (13 samples, 0.21%)</title><rect x="512.3" y="67.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="515.3" y="78.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (2 samples, 0.03%)</title><rect x="512.7" y="51.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="515.7" y="62.0"></text>
</g>
<g>
<title>read_tsc (9 samples, 0.14%)</title><rect x="513.1" y="51.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="516.1" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.05%)</title><rect x="514.8" y="83.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="517.8" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (8 samples, 0.13%)</title><rect x="515.5" y="115.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.5" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.03%)</title><rect x="517.0" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="520.0" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core (12 samples, 0.19%)</title><rect x="517.4" y="179.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="520.4" y="190.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (2 samples, 0.03%)</title><rect x="518.7" y="163.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.7" y="174.0"></text>
</g>
<g>
<title>check_preemption_disabled (3 samples, 0.05%)</title><rect x="519.1" y="163.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="522.1" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 0.08%)</title><rect x="519.7" y="179.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.7" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.constprop.0 (5 samples, 0.08%)</title><rect x="519.7" y="163.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="522.7" y="174.0"></text>
</g>
<g>
<title>preempt_count_sub (5 samples, 0.08%)</title><rect x="520.8" y="307.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="523.8" y="318.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.03%)</title><rect x="522.0" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="525.0" y="334.0"></text>
</g>
<g>
<title>ip_finish_output (16 samples, 0.26%)</title><rect x="522.3" y="339.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="525.3" y="350.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (13 samples, 0.21%)</title><rect x="522.9" y="323.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.9" y="334.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.03%)</title><rect x="524.4" y="307.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="527.4" y="318.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.03%)</title><rect x="525.0" y="307.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="528.0" y="318.0"></text>
</g>
<g>
<title>__tcp_select_window (7 samples, 0.11%)</title><rect x="525.4" y="371.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.4" y="382.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (5 samples, 0.08%)</title><rect x="526.7" y="371.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="529.7" y="382.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (8 samples, 0.13%)</title><rect x="527.6" y="371.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.6" y="382.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.03%)</title><rect x="529.1" y="371.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="532.1" y="382.0"></text>
</g>
<g>
<title>skb_clone (25 samples, 0.40%)</title><rect x="529.5" y="371.0" width="4.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="532.5" y="382.0"></text>
</g>
<g>
<title>__copy_skb_header (7 samples, 0.11%)</title><rect x="532.9" y="355.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="535.9" y="366.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.03%)</title><rect x="534.4" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="537.4" y="382.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.03%)</title><rect x="534.8" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="537.8" y="382.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (3 samples, 0.05%)</title><rect x="535.2" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="538.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_send_check (5 samples, 0.08%)</title><rect x="535.7" y="371.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="538.7" y="382.0"></text>
</g>
<g>
<title>ktime_get (8 samples, 0.13%)</title><rect x="536.7" y="387.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="539.7" y="398.0"></text>
</g>
<g>
<title>read_tsc (6 samples, 0.10%)</title><rect x="537.1" y="371.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="540.1" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (22 samples, 0.35%)</title><rect x="538.2" y="387.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="541.2" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (17 samples, 0.27%)</title><rect x="538.8" y="371.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="541.8" y="382.0"></text>
</g>
<g>
<title>__mod_timer (17 samples, 0.27%)</title><rect x="538.8" y="355.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="541.8" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.14%)</title><rect x="540.1" y="339.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.1" y="350.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (14 samples, 0.22%)</title><rect x="542.4" y="387.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="545.4" y="398.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.03%)</title><rect x="543.1" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="546.1" y="382.0"></text>
</g>
<g>
<title>rb_first (3 samples, 0.05%)</title><rect x="543.5" y="371.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="546.5" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.08%)</title><rect x="544.1" y="371.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="547.1" y="382.0"></text>
</g>
<g>
<title>__mod_timer (4 samples, 0.06%)</title><rect x="544.3" y="355.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="547.3" y="366.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (5 samples, 0.08%)</title><rect x="545.0" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.0" y="398.0"></text>
</g>
<g>
<title>sk_page_frag_refill (13 samples, 0.21%)</title><rect x="546.0" y="419.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="549.0" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (13 samples, 0.21%)</title><rect x="546.0" y="403.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="549.0" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (81 samples, 1.30%)</title><rect x="548.4" y="419.0" width="15.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="551.4" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (77 samples, 1.23%)</title><rect x="549.2" y="403.0" width="14.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="552.2" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (42 samples, 0.67%)</title><rect x="549.5" y="387.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="552.5" y="398.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.0 (4 samples, 0.06%)</title><rect x="553.3" y="371.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="556.3" y="382.0"></text>
</g>
<g>
<title>kmalloc_slab (6 samples, 0.10%)</title><rect x="554.3" y="371.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="557.3" y="382.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="555.4" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.4" y="382.0"></text>
</g>
<g>
<title>memset_erms (8 samples, 0.13%)</title><rect x="556.0" y="371.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="559.0" y="382.0"></text>
</g>
<g>
<title>__ksize (15 samples, 0.24%)</title><rect x="557.5" y="387.0" width="2.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="560.5" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (18 samples, 0.29%)</title><rect x="560.3" y="387.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="563.3" y="398.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.03%)</title><rect x="562.4" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="565.4" y="382.0"></text>
</g>
<g>
<title>memset_erms (5 samples, 0.08%)</title><rect x="562.8" y="371.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="565.8" y="382.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (32 samples, 0.51%)</title><rect x="563.7" y="419.0" width="6.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="566.7" y="430.0"></text>
</g>
<g>
<title>__check_object_size (11 samples, 0.18%)</title><rect x="563.9" y="403.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="566.9" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.08%)</title><rect x="564.5" y="387.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="567.5" y="398.0"></text>
</g>
<g>
<title>check_stack_object (3 samples, 0.05%)</title><rect x="565.4" y="387.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="568.4" y="398.0"></text>
</g>
<g>
<title>_copy_from_iter_full (20 samples, 0.32%)</title><rect x="566.0" y="403.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="569.0" y="414.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (11 samples, 0.18%)</title><rect x="566.7" y="387.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="569.7" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (5 samples, 0.08%)</title><rect x="568.8" y="387.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.8" y="398.0"></text>
</g>
<g>
<title>skb_entail (14 samples, 0.22%)</title><rect x="569.8" y="419.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="572.8" y="430.0"></text>
</g>
<g>
<title>tcp_chrono_start (3 samples, 0.05%)</title><rect x="571.8" y="403.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="574.8" y="414.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 0.10%)</title><rect x="572.4" y="419.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="575.4" y="430.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (13 samples, 0.21%)</title><rect x="573.5" y="419.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="576.5" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (41 samples, 0.66%)</title><rect x="576.0" y="419.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="579.0" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (38 samples, 0.61%)</title><rect x="576.6" y="403.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.6" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (17 samples, 0.27%)</title><rect x="579.8" y="387.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="582.8" y="398.0"></text>
</g>
<g>
<title>tcp_established_options (4 samples, 0.06%)</title><rect x="583.0" y="387.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="586.0" y="398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.06%)</title><rect x="583.7" y="419.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="586.7" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (35 samples, 0.56%)</title><rect x="584.5" y="467.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="587.5" y="478.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="584.7" y="451.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.7" y="462.0"></text>
</g>
<g>
<title>__fget_light (31 samples, 0.50%)</title><rect x="585.3" y="451.0" width="5.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="588.3" y="462.0"></text>
</g>
<g>
<title>__fget_files (21 samples, 0.34%)</title><rect x="587.1" y="435.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="590.1" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (14 samples, 0.22%)</title><rect x="591.1" y="499.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="594.1" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.10%)</title><rect x="592.4" y="483.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="595.4" y="494.0"></text>
</g>
<g>
<title>send@plt (2 samples, 0.03%)</title><rect x="593.8" y="547.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="596.8" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (6 samples, 0.10%)</title><rect x="594.1" y="563.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="597.1" y="574.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="594.1" y="547.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="597.1" y="558.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="594.7" y="547.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="597.7" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (20 samples, 0.32%)</title><rect x="595.3" y="627.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="598.3" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.13%)</title><rect x="597.5" y="611.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.13%)</title><rect x="597.5" y="595.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="600.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/ConsistentHashing.get (98 samples, 1.57%)</title><rect x="599.2" y="643.0" width="18.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.2" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="603.4" y="627.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="606.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/ConsistentHashing.get (74 samples, 1.19%)</title><rect x="603.8" y="627.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="606.8" y="638.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.05%)</title><rect x="603.8" y="611.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.8" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="603.8" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="606.8" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (3 samples, 0.05%)</title><rect x="603.8" y="579.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="606.8" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.05%)</title><rect x="603.8" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="606.8" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="603.8" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="606.8" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="603.8" y="531.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="606.8" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="603.8" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="606.8" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (3 samples, 0.05%)</title><rect x="604.3" y="611.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="607.3" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.firstKey (6 samples, 0.10%)</title><rect x="604.9" y="611.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.subLowest (6 samples, 0.10%)</title><rect x="604.9" y="595.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (6 samples, 0.10%)</title><rect x="604.9" y="579.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.9" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (6 samples, 0.10%)</title><rect x="604.9" y="563.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="607.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (5 samples, 0.08%)</title><rect x="605.1" y="547.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="608.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.isEmpty (30 samples, 0.48%)</title><rect x="606.0" y="611.0" width="5.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="609.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.isEmpty (30 samples, 0.48%)</title><rect x="606.0" y="595.0" width="5.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (30 samples, 0.48%)</title><rect x="606.0" y="579.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (13 samples, 0.21%)</title><rect x="609.1" y="563.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (11 samples, 0.18%)</title><rect x="609.4" y="547.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="612.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (17 samples, 0.27%)</title><rect x="611.7" y="611.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="614.7" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (12 samples, 0.19%)</title><rect x="612.7" y="595.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.firstKey (3 samples, 0.05%)</title><rect x="614.9" y="611.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.9" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (3 samples, 0.05%)</title><rect x="614.9" y="595.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="617.9" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="615.1" y="579.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="618.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (11 samples, 0.18%)</title><rect x="615.5" y="611.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (6 samples, 0.10%)</title><rect x="616.4" y="595.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.4" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (658 samples, 10.54%)</title><rect x="617.8" y="643.0" width="124.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.8" y="654.0">ru/mail/polis/d..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (23 samples, 0.37%)</title><rect x="618.1" y="627.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="621.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (23 samples, 0.37%)</title><rect x="618.1" y="611.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (21 samples, 0.34%)</title><rect x="618.5" y="595.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="621.5" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.14%)</title><rect x="620.4" y="579.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.4" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (9 samples, 0.14%)</title><rect x="620.4" y="563.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.4" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (9 samples, 0.14%)</title><rect x="620.4" y="547.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.4" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (9 samples, 0.14%)</title><rect x="620.4" y="531.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (17 samples, 0.27%)</title><rect x="622.5" y="627.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (17 samples, 0.27%)</title><rect x="622.5" y="611.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (17 samples, 0.27%)</title><rect x="622.5" y="595.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.5" y="606.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (17 samples, 0.27%)</title><rect x="622.5" y="579.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.5" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.remove (17 samples, 0.27%)</title><rect x="622.5" y="563.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="625.5" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.expungeStaleEntry (2 samples, 0.03%)</title><rect x="624.9" y="547.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="627.9" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (2 samples, 0.03%)</title><rect x="625.3" y="547.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.03%)</title><rect x="625.7" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (614 samples, 9.83%)</title><rect x="626.1" y="627.0" width="116.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.1" y="638.0">ru/mail/polis/..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (21 samples, 0.34%)</title><rect x="626.3" y="611.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="629.3" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.05%)</title><rect x="628.7" y="595.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="631.7" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="628.9" y="579.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="631.9" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="628.9" y="563.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="631.9" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="628.9" y="547.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="631.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.08%)</title><rect x="629.3" y="595.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.3" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (591 samples, 9.47%)</title><rect x="630.2" y="611.0" width="111.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.2" y="622.0">java/util/con..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="633.4" y="595.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="636.4" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (562 samples, 9.00%)</title><rect x="633.8" y="595.0" width="106.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="636.8" y="606.0">java/util/con..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (20 samples, 0.32%)</title><rect x="648.4" y="579.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="651.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (8 samples, 0.13%)</title><rect x="652.2" y="579.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="655.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (8 samples, 0.13%)</title><rect x="652.2" y="563.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.2" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (16 samples, 0.26%)</title><rect x="653.7" y="579.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="656.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.08%)</title><rect x="653.9" y="563.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.9" y="574.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.03%)</title><rect x="654.2" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (10 samples, 0.16%)</title><rect x="654.8" y="563.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="657.8" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.16%)</title><rect x="654.8" y="547.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.16%)</title><rect x="654.8" y="531.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.8" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.08%)</title><rect x="655.6" y="515.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.6" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.08%)</title><rect x="655.6" y="499.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="658.6" y="510.0"></text>
</g>
<g>
<title>vectorizedMismatch (4 samples, 0.06%)</title><rect x="655.7" y="483.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="658.7" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (441 samples, 7.06%)</title><rect x="656.7" y="579.0" width="83.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.7" y="590.0">java/util..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (441 samples, 7.06%)</title><rect x="656.7" y="563.0" width="83.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.7" y="574.0">java/nio/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (441 samples, 7.06%)</title><rect x="656.7" y="547.0" width="83.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.7" y="558.0">java/nio/..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (115 samples, 1.84%)</title><rect x="718.3" y="531.0" width="21.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.3" y="542.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (114 samples, 1.83%)</title><rect x="718.5" y="515.0" width="21.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="721.5" y="526.0">j..</text>
</g>
<g>
<title>vectorizedMismatch (45 samples, 0.72%)</title><rect x="731.5" y="499.0" width="8.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="734.5" y="510.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (10 samples, 0.16%)</title><rect x="740.0" y="595.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="743.0" y="606.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="740.8" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="743.8" y="590.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="741.2" y="579.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="744.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.getBuffer (2 samples, 0.03%)</title><rect x="742.1" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="745.1" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="742.1" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="745.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="742.1" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="745.1" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="742.1" y="595.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="745.1" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.03%)</title><rect x="742.1" y="579.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="745.1" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.03%)</title><rect x="742.1" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="745.1" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="742.1" y="547.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="745.1" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (2 samples, 0.03%)</title><rect x="742.5" y="691.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="745.5" y="702.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (2,127 samples, 34.06%)</title><rect x="742.9" y="739.0" width="401.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.9" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>gettimeofday (4 samples, 0.06%)</title><rect x="744.0" y="723.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="747.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (10 samples, 0.16%)</title><rect x="744.8" y="723.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="747.8" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (674 samples, 10.79%)</title><rect x="746.6" y="723.0" width="127.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="749.6" y="734.0">one/nio/net/Nati..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (672 samples, 10.76%)</title><rect x="747.0" y="707.0" width="127.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="750.0" y="718.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (11 samples, 0.18%)</title><rect x="752.1" y="691.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="755.1" y="702.0"></text>
</g>
<g>
<title>__clock_gettime (24 samples, 0.38%)</title><rect x="754.2" y="691.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="757.2" y="702.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.06%)</title><rect x="757.2" y="675.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="760.2" y="686.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.06%)</title><rect x="758.0" y="675.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="761.0" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (11 samples, 0.18%)</title><rect x="758.7" y="691.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="761.7" y="702.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="760.8" y="691.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.8" y="702.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.08%)</title><rect x="761.4" y="691.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="764.4" y="702.0"></text>
</g>
<g>
<title>epoll_wait (588 samples, 9.42%)</title><rect x="762.5" y="691.0" width="111.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="765.5" y="702.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (435 samples, 6.97%)</title><rect x="791.4" y="675.0" width="82.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="794.4" y="686.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (435 samples, 6.97%)</title><rect x="791.4" y="659.0" width="82.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.4" y="670.0">do_syscal..</text>
</g>
<g>
<title>__syscall_return_slowpath (25 samples, 0.40%)</title><rect x="799.8" y="643.0" width="4.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="802.8" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_exit (19 samples, 0.30%)</title><rect x="800.9" y="627.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="803.9" y="638.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="803.7" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="806.7" y="622.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (361 samples, 5.78%)</title><rect x="804.5" y="643.0" width="68.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="807.5" y="654.0">__x64_s..</text>
</g>
<g>
<title>do_epoll_wait (358 samples, 5.73%)</title><rect x="805.0" y="627.0" width="67.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="808.0" y="638.0">do_epol..</text>
</g>
<g>
<title>__fget_light (15 samples, 0.24%)</title><rect x="809.2" y="611.0" width="2.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="812.2" y="622.0"></text>
</g>
<g>
<title>__fget_files (12 samples, 0.19%)</title><rect x="809.8" y="595.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="812.8" y="606.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (6 samples, 0.10%)</title><rect x="812.2" y="611.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="815.2" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (227 samples, 3.64%)</title><rect x="813.4" y="611.0" width="42.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="816.4" y="622.0">ep_s..</text>
</g>
<g>
<title>_raw_write_unlock_irq (40 samples, 0.64%)</title><rect x="814.3" y="595.0" width="7.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="817.3" y="606.0"></text>
</g>
<g>
<title>preempt_count_sub (8 samples, 0.13%)</title><rect x="820.4" y="579.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="823.4" y="590.0"></text>
</g>
<g>
<title>ep_send_events_proc (161 samples, 2.58%)</title><rect x="821.9" y="595.0" width="30.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="824.9" y="606.0">ep..</text>
</g>
<g>
<title>ep_item_poll (135 samples, 2.16%)</title><rect x="826.8" y="579.0" width="25.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="829.8" y="590.0">e..</text>
</g>
<g>
<title>sock_poll (117 samples, 1.87%)</title><rect x="830.2" y="563.0" width="22.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="833.2" y="574.0">s..</text>
</g>
<g>
<title>tcp_poll (58 samples, 0.93%)</title><rect x="841.3" y="547.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="844.3" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (13 samples, 0.21%)</title><rect x="849.8" y="531.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="852.8" y="542.0"></text>
</g>
<g>
<title>mutex_lock (13 samples, 0.21%)</title><rect x="852.3" y="595.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="855.3" y="606.0"></text>
</g>
<g>
<title>mutex_unlock (8 samples, 0.13%)</title><rect x="854.7" y="595.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="857.7" y="606.0"></text>
</g>
<g>
<title>fput_many (11 samples, 0.18%)</title><rect x="856.3" y="611.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="859.3" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (76 samples, 1.22%)</title><rect x="858.3" y="611.0" width="14.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="861.3" y="622.0"></text>
</g>
<g>
<title>schedule (68 samples, 1.09%)</title><rect x="859.8" y="595.0" width="12.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="862.8" y="606.0"></text>
</g>
<g>
<title>__schedule (59 samples, 0.94%)</title><rect x="861.2" y="579.0" width="11.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="864.2" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (47 samples, 0.75%)</title><rect x="863.4" y="563.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="866.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (43 samples, 0.69%)</title><rect x="864.2" y="547.0" width="8.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="867.2" y="558.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="871.8" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="874.8" y="542.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="871.8" y="515.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.8" y="526.0"></text>
</g>
<g>
<title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="871.8" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="874.8" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.03%)</title><rect x="871.8" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="874.8" y="494.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (2 samples, 0.03%)</title><rect x="871.8" y="467.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="874.8" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="871.8" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="874.8" y="462.0"></text>
</g>
<g>
<title>syscall_trace_enter (5 samples, 0.08%)</title><rect x="872.7" y="643.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.7" y="654.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="873.3" y="627.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="876.3" y="638.0"></text>
</g>
<g>
<title>epoll_wait@plt (2 samples, 0.03%)</title><rect x="873.6" y="691.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="876.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,417 samples, 22.69%)</title><rect x="874.0" y="723.0" width="267.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="877.0" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,351 samples, 21.64%)</title><rect x="885.4" y="707.0" width="255.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="888.4" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (660 samples, 10.57%)</title><rect x="885.6" y="691.0" width="124.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="888.6" y="702.0">one/nio/http/Ht..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.11%)</title><rect x="889.0" y="675.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="892.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (312 samples, 5.00%)</title><rect x="890.3" y="675.0" width="58.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="893.3" y="686.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (286 samples, 4.58%)</title><rect x="895.2" y="659.0" width="54.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="898.2" y="670.0">one/n..</text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (254 samples, 4.07%)</title><rect x="896.7" y="643.0" width="48.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="899.7" y="654.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (44 samples, 0.70%)</title><rect x="896.7" y="627.0" width="8.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="899.7" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (44 samples, 0.70%)</title><rect x="896.7" y="611.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (12 samples, 0.19%)</title><rect x="897.6" y="595.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (12 samples, 0.19%)</title><rect x="897.6" y="579.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="900.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.30%)</title><rect x="899.9" y="595.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="902.9" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (13 samples, 0.21%)</title><rect x="901.0" y="579.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="904.0" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="903.1" y="563.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="906.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.13%)</title><rect x="903.5" y="595.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="906.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="903.5" y="579.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.13%)</title><rect x="903.5" y="563.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="906.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.13%)</title><rect x="903.5" y="547.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="906.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.upsert (210 samples, 3.36%)</title><rect x="905.0" y="627.0" width="39.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.0" y="638.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (210 samples, 3.36%)</title><rect x="905.0" y="611.0" width="39.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.0" y="622.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (209 samples, 3.35%)</title><rect x="905.2" y="595.0" width="39.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.2" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (168 samples, 2.69%)</title><rect x="910.3" y="579.0" width="31.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.3" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.10%)</title><rect x="910.3" y="563.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="913.3" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.10%)</title><rect x="910.3" y="547.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (6 samples, 0.10%)</title><rect x="910.3" y="531.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="913.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.06%)</title><rect x="910.7" y="515.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.7" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (3 samples, 0.05%)</title><rect x="910.9" y="499.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (50 samples, 0.80%)</title><rect x="911.4" y="563.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="914.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (50 samples, 0.80%)</title><rect x="911.4" y="547.0" width="9.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="914.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (47 samples, 0.75%)</title><rect x="911.4" y="531.0" width="8.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="914.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (47 samples, 0.75%)</title><rect x="911.4" y="515.0" width="8.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="914.4" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (47 samples, 0.75%)</title><rect x="911.4" y="499.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="914.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (40 samples, 0.64%)</title><rect x="912.8" y="483.0" width="7.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.8" y="494.0"></text>
</g>
<g>
<title>Unsafe_Park (22 samples, 0.35%)</title><rect x="912.8" y="467.0" width="4.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="915.8" y="478.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (16 samples, 0.26%)</title><rect x="913.5" y="451.0" width="3.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="916.5" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.21%)</title><rect x="914.1" y="435.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="917.1" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.21%)</title><rect x="914.1" y="419.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="917.1" y="430.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.05%)</title><rect x="914.7" y="403.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.7" y="414.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="914.7" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="917.7" y="398.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="914.8" y="371.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="917.8" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.10%)</title><rect x="915.2" y="403.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.2" y="414.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.08%)</title><rect x="915.4" y="387.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="918.4" y="398.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="915.8" y="371.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="918.8" y="382.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="916.0" y="355.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="919.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.26%)</title><rect x="916.9" y="467.0" width="3.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="919.9" y="478.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="917.1" y="451.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="920.1" y="462.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (13 samples, 0.21%)</title><rect x="917.5" y="451.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="920.5" y="462.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.19%)</title><rect x="917.7" y="435.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="920.7" y="446.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.19%)</title><rect x="917.7" y="419.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.7" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.14%)</title><rect x="918.2" y="403.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.2" y="414.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.13%)</title><rect x="918.4" y="387.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.4" y="398.0"></text>
</g>
<g>
<title>futex_wait (8 samples, 0.13%)</title><rect x="918.4" y="371.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="921.4" y="382.0"></text>
</g>
<g>
<title>futex_wait_queue_me (5 samples, 0.08%)</title><rect x="918.6" y="355.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="921.6" y="366.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.06%)</title><rect x="918.8" y="339.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.8" y="350.0"></text>
</g>
<g>
<title>__schedule (4 samples, 0.06%)</title><rect x="918.8" y="323.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="921.8" y="334.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="919.0" y="307.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="922.0" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (2 samples, 0.03%)</title><rect x="919.2" y="291.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.2" y="302.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.03%)</title><rect x="919.6" y="355.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.6" y="366.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="919.9" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="922.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.05%)</title><rect x="920.3" y="531.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.3" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (112 samples, 1.79%)</title><rect x="920.9" y="563.0" width="21.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="923.9" y="574.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (112 samples, 1.79%)</title><rect x="920.9" y="547.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="923.9" y="558.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (112 samples, 1.79%)</title><rect x="920.9" y="531.0" width="21.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="923.9" y="542.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (75 samples, 1.20%)</title><rect x="927.9" y="515.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="930.9" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (75 samples, 1.20%)</title><rect x="927.9" y="499.0" width="14.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.9" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.24%)</title><rect x="928.1" y="483.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="931.1" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="928.8" y="467.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="931.8" y="478.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="929.2" y="467.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="932.2" y="478.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.05%)</title><rect x="930.3" y="467.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="933.3" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (58 samples, 0.93%)</title><rect x="930.9" y="483.0" width="11.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="933.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 0.80%)</title><rect x="932.4" y="467.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="935.4" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 0.80%)</title><rect x="932.4" y="451.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.4" y="462.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.05%)</title><rect x="932.8" y="435.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="935.8" y="446.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.03%)</title><rect x="933.0" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="936.0" y="430.0"></text>
</g>
<g>
<title>__x64_sys_futex (44 samples, 0.70%)</title><rect x="933.4" y="435.0" width="8.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="936.4" y="446.0"></text>
</g>
<g>
<title>do_futex (43 samples, 0.69%)</title><rect x="933.6" y="419.0" width="8.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="936.6" y="430.0"></text>
</g>
<g>
<title>futex_wake (43 samples, 0.69%)</title><rect x="933.6" y="403.0" width="8.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="936.6" y="414.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.05%)</title><rect x="934.1" y="387.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="937.1" y="398.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.58%)</title><rect x="934.9" y="387.0" width="6.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="937.9" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.58%)</title><rect x="934.9" y="371.0" width="6.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="937.9" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.56%)</title><rect x="934.9" y="355.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="937.9" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.reject (7 samples, 0.11%)</title><rect x="942.1" y="579.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.1" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution (7 samples, 0.11%)</title><rect x="942.1" y="563.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="945.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 0.11%)</title><rect x="942.1" y="547.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (7 samples, 0.11%)</title><rect x="942.1" y="531.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.1" y="542.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (7 samples, 0.11%)</title><rect x="943.4" y="579.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="946.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (17 samples, 0.27%)</title><rect x="944.7" y="643.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="947.7" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.get (13 samples, 0.21%)</title><rect x="945.5" y="627.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.5" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.08%)</title><rect x="945.5" y="611.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="948.5" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (8 samples, 0.13%)</title><rect x="946.4" y="611.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.4" y="622.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (8 samples, 0.13%)</title><rect x="946.4" y="595.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.4" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (8 samples, 0.13%)</title><rect x="946.4" y="579.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.4" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (7 samples, 0.11%)</title><rect x="947.9" y="643.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="950.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (7 samples, 0.11%)</title><rect x="947.9" y="627.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="950.9" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.11%)</title><rect x="947.9" y="611.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="950.9" y="622.0"></text>
</g>
<g>
<title>RequestHandler3_upsert.handleRequest (5 samples, 0.08%)</title><rect x="948.1" y="595.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="951.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (110 samples, 1.76%)</title><rect x="949.2" y="675.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="952.2" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (24 samples, 0.38%)</title><rect x="950.9" y="659.0" width="4.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.9" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="950.9" y="643.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="953.9" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.03%)</title><rect x="950.9" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="953.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.32%)</title><rect x="951.7" y="643.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="954.7" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (20 samples, 0.32%)</title><rect x="951.7" y="627.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.7" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (20 samples, 0.32%)</title><rect x="951.7" y="611.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.13%)</title><rect x="954.0" y="595.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="957.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (54 samples, 0.86%)</title><rect x="955.5" y="659.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="958.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (50 samples, 0.80%)</title><rect x="956.2" y="643.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="959.2" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (23 samples, 0.37%)</title><rect x="965.7" y="659.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="968.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (37 samples, 0.59%)</title><rect x="970.0" y="675.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="973.0" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (36 samples, 0.58%)</title><rect x="970.2" y="659.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="973.2" y="670.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (36 samples, 0.58%)</title><rect x="970.2" y="643.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="973.2" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (11 samples, 0.18%)</title><rect x="974.9" y="627.0" width="2.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="977.9" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (42 samples, 0.67%)</title><rect x="977.0" y="675.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="980.0" y="686.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (26 samples, 0.42%)</title><rect x="978.9" y="659.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="981.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (26 samples, 0.42%)</title><rect x="978.9" y="643.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="981.9" y="654.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.10%)</title><rect x="983.8" y="659.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="986.8" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.10%)</title><rect x="983.8" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.8" y="654.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.03%)</title><rect x="983.8" y="627.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="986.8" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.06%)</title><rect x="984.2" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.2" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (134 samples, 2.15%)</title><rect x="985.0" y="675.0" width="25.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="988.0" y="686.0">o..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (44 samples, 0.70%)</title><rect x="1002.0" y="659.0" width="8.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1005.0" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.05%)</title><rect x="1009.7" y="643.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.05%)</title><rect x="1009.7" y="627.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1012.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.03%)</title><rect x="1009.7" y="611.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1012.7" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="1009.7" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1012.7" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.03%)</title><rect x="1009.7" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1012.7" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="1009.7" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1012.7" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.11%)</title><rect x="1010.3" y="691.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1013.3" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (683 samples, 10.94%)</title><rect x="1011.6" y="691.0" width="129.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1014.6" y="702.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (657 samples, 10.52%)</title><rect x="1014.4" y="675.0" width="124.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1017.4" y="686.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (108 samples, 1.73%)</title><rect x="1018.8" y="659.0" width="20.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1021.8" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (8 samples, 0.13%)</title><rect x="1020.5" y="643.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1023.5" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.03%)</title><rect x="1022.0" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1025.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.06%)</title><rect x="1022.4" y="643.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1025.4" y="654.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (32 samples, 0.51%)</title><rect x="1023.1" y="643.0" width="6.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1026.1" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (51 samples, 0.82%)</title><rect x="1029.4" y="643.0" width="9.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1032.4" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (10 samples, 0.16%)</title><rect x="1033.0" y="627.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1036.0" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (10 samples, 0.16%)</title><rect x="1034.8" y="627.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1037.8" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (12 samples, 0.19%)</title><rect x="1036.7" y="627.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1039.7" y="638.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.13%)</title><rect x="1039.2" y="659.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1042.2" y="670.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (4 samples, 0.06%)</title><rect x="1040.7" y="659.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1043.7" y="670.0"></text>
</g>
<g>
<title>__libc_recv (501 samples, 8.02%)</title><rect x="1041.5" y="659.0" width="94.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1044.5" y="670.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (411 samples, 6.58%)</title><rect x="1058.5" y="643.0" width="77.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1061.5" y="654.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (411 samples, 6.58%)</title><rect x="1058.5" y="627.0" width="77.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1061.5" y="638.0">do_syscal..</text>
</g>
<g>
<title>__syscall_return_slowpath (19 samples, 0.30%)</title><rect x="1067.9" y="611.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1070.9" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_exit (17 samples, 0.27%)</title><rect x="1068.1" y="595.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1071.1" y="606.0"></text>
</g>
<g>
<title>unroll_tree_refs (3 samples, 0.05%)</title><rect x="1070.8" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1073.8" y="590.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (322 samples, 5.16%)</title><rect x="1071.5" y="611.0" width="60.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1074.5" y="622.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (311 samples, 4.98%)</title><rect x="1073.6" y="595.0" width="58.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1076.6" y="606.0">__sys_..</text>
</g>
<g>
<title>fput_many (4 samples, 0.06%)</title><rect x="1076.2" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1079.2" y="590.0"></text>
</g>
<g>
<title>import_single_range (5 samples, 0.08%)</title><rect x="1077.0" y="579.0" width="0.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1080.0" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (258 samples, 4.13%)</title><rect x="1077.9" y="579.0" width="48.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.9" y="590.0">inet..</text>
</g>
<g>
<title>tcp_recvmsg (252 samples, 4.04%)</title><rect x="1079.1" y="563.0" width="47.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1082.1" y="574.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (33 samples, 0.53%)</title><rect x="1090.0" y="547.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1093.0" y="558.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.08%)</title><rect x="1090.0" y="531.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1093.0" y="542.0"></text>
</g>
<g>
<title>skb_release_head_state (28 samples, 0.45%)</title><rect x="1091.0" y="531.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1094.0" y="542.0"></text>
</g>
<g>
<title>dst_release (17 samples, 0.27%)</title><rect x="1091.4" y="515.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1094.4" y="526.0"></text>
</g>
<g>
<title>sock_rfree (9 samples, 0.14%)</title><rect x="1094.6" y="515.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1097.6" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (12 samples, 0.19%)</title><rect x="1096.3" y="547.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1099.3" y="558.0"></text>
</g>
<g>
<title>check_preemption_disabled (2 samples, 0.03%)</title><rect x="1097.2" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1100.2" y="542.0"></text>
</g>
<g>
<title>preempt_count_sub (5 samples, 0.08%)</title><rect x="1097.6" y="531.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1100.6" y="542.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.05%)</title><rect x="1098.7" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1101.7" y="558.0"></text>
</g>
<g>
<title>lock_sock_nested (15 samples, 0.24%)</title><rect x="1099.3" y="547.0" width="2.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1102.3" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (14 samples, 0.22%)</title><rect x="1099.3" y="531.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1102.3" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.05%)</title><rect x="1101.4" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1104.4" y="526.0"></text>
</g>
<g>
<title>release_sock (13 samples, 0.21%)</title><rect x="1102.1" y="547.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1105.1" y="558.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (6 samples, 0.10%)</title><rect x="1102.5" y="531.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1105.5" y="542.0"></text>
</g>
<g>
<title>preempt_count_add (3 samples, 0.05%)</title><rect x="1103.1" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.1" y="526.0"></text>
</g>
<g>
<title>tcp_release_cb (5 samples, 0.08%)</title><rect x="1103.6" y="531.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1106.6" y="542.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (78 samples, 1.25%)</title><rect x="1104.6" y="547.0" width="14.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.6" y="558.0"></text>
</g>
<g>
<title>__skb_datagram_iter (77 samples, 1.23%)</title><rect x="1104.8" y="531.0" width="14.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1107.8" y="542.0"></text>
</g>
<g>
<title>_copy_to_iter (25 samples, 0.40%)</title><rect x="1108.7" y="515.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1111.7" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (19 samples, 0.30%)</title><rect x="1109.9" y="499.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1112.9" y="510.0"></text>
</g>
<g>
<title>simple_copy_to_iter (31 samples, 0.50%)</title><rect x="1113.5" y="515.0" width="5.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1116.5" y="526.0"></text>
</g>
<g>
<title>__check_object_size (30 samples, 0.48%)</title><rect x="1113.7" y="499.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1116.7" y="510.0"></text>
</g>
<g>
<title>__virt_addr_valid (10 samples, 0.16%)</title><rect x="1117.4" y="483.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1120.4" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (9 samples, 0.14%)</title><rect x="1119.3" y="547.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1122.3" y="558.0"></text>
</g>
<g>
<title>__tcp_select_window (4 samples, 0.06%)</title><rect x="1120.3" y="531.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1123.3" y="542.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (30 samples, 0.48%)</title><rect x="1121.0" y="547.0" width="5.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1124.0" y="558.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (25 samples, 0.40%)</title><rect x="1122.0" y="531.0" width="4.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1125.0" y="542.0"></text>
</g>
<g>
<title>ktime_get (22 samples, 0.35%)</title><rect x="1122.5" y="515.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1125.5" y="526.0"></text>
</g>
<g>
<title>read_tsc (17 samples, 0.27%)</title><rect x="1123.5" y="499.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1126.5" y="510.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.03%)</title><rect x="1126.7" y="579.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1129.7" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (28 samples, 0.45%)</title><rect x="1127.1" y="579.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1130.1" y="590.0"></text>
</g>
<g>
<title>__fget_light (27 samples, 0.43%)</title><rect x="1127.3" y="563.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1130.3" y="574.0"></text>
</g>
<g>
<title>__fget_files (21 samples, 0.34%)</title><rect x="1128.4" y="547.0" width="4.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1131.4" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (20 samples, 0.32%)</title><rect x="1132.4" y="611.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1135.4" y="622.0"></text>
</g>
<g>
<title>__audit_syscall_entry (9 samples, 0.14%)</title><rect x="1134.1" y="595.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1137.1" y="606.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="1135.8" y="595.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1138.8" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (13 samples, 0.21%)</title><rect x="1136.1" y="659.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1139.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (11 samples, 0.18%)</title><rect x="1138.6" y="675.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1141.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 0.10%)</title><rect x="1140.7" y="707.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1143.7" y="718.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (16 samples, 0.26%)</title><rect x="1141.8" y="723.0" width="3.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.8" y="734.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.16%)</title><rect x="1142.4" y="707.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1145.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="1144.3" y="707.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1147.3" y="718.0"></text>
</g>
<g>
<title>start_thread (239 samples, 3.83%)</title><rect x="1144.8" y="739.0" width="45.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1147.8" y="750.0">star..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (239 samples, 3.83%)</title><rect x="1144.8" y="723.0" width="45.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1147.8" y="734.0">thre..</text>
</g>
<g>
<title>Thread::call_run() (239 samples, 3.83%)</title><rect x="1144.8" y="707.0" width="45.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.8" y="718.0">Thre..</text>
</g>
<g>
<title>GangWorker::loop() (236 samples, 3.78%)</title><rect x="1144.8" y="691.0" width="44.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.8" y="702.0">Gang..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1144.8" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1147.8" y="686.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (2 samples, 0.03%)</title><rect x="1144.8" y="659.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.8" y="670.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.0] (2 samples, 0.03%)</title><rect x="1144.8" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.8" y="654.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (2 samples, 0.03%)</title><rect x="1144.8" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.8" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1144.8" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.8" y="622.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (230 samples, 3.68%)</title><rect x="1145.4" y="675.0" width="43.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.4" y="686.0">G1Pa..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (196 samples, 3.14%)</title><rect x="1145.6" y="659.0" width="37.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.6" y="670.0">G1P..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (146 samples, 2.34%)</title><rect x="1145.6" y="643.0" width="27.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.6" y="654.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (90 samples, 1.44%)</title><rect x="1155.8" y="627.0" width="17.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.8" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (16 samples, 0.26%)</title><rect x="1169.8" y="611.0" width="3.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.8" y="622.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::pop_global(StarTask volatile&amp;) (5 samples, 0.08%)</title><rect x="1173.2" y="643.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.2" y="654.0"></text>
</g>
<g>
<title>SpinPause (44 samples, 0.70%)</title><rect x="1174.3" y="643.0" width="8.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1177.3" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadStateSet::state_for_worker(unsigned int) (2 samples, 0.03%)</title><rect x="1182.6" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.6" y="670.0"></text>
</g>
<g>
<title>G1ParScanThreadState::G1ParScanThreadState(G1CollectedHeap*, unsigned int, unsigned long) (2 samples, 0.03%)</title><rect x="1182.6" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.6" y="654.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (24 samples, 0.38%)</title><rect x="1183.0" y="659.0" width="4.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.0" y="670.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (24 samples, 0.38%)</title><rect x="1183.0" y="643.0" width="4.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.0" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (24 samples, 0.38%)</title><rect x="1183.0" y="627.0" width="4.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.0" y="638.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (24 samples, 0.38%)</title><rect x="1183.0" y="611.0" width="4.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.0" y="622.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (24 samples, 0.38%)</title><rect x="1183.0" y="595.0" width="4.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.0" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (14 samples, 0.22%)</title><rect x="1183.4" y="579.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.4" y="590.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.10%)</title><rect x="1184.9" y="563.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.9" y="574.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (8 samples, 0.13%)</title><rect x="1186.0" y="579.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (2 samples, 0.03%)</title><rect x="1186.2" y="563.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.2" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateBoundedDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate_bounded&lt;ObjArrayKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*, MemRegion) (4 samples, 0.06%)</title><rect x="1186.6" y="563.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="574.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (4 samples, 0.06%)</title><rect x="1186.6" y="547.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.6" y="558.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (6 samples, 0.10%)</title><rect x="1187.7" y="659.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.7" y="670.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (5 samples, 0.08%)</title><rect x="1187.7" y="643.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="654.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1187.9" y="627.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="638.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (4 samples, 0.06%)</title><rect x="1187.9" y="611.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.9" y="622.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (2 samples, 0.03%)</title><rect x="1188.1" y="595.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.1" y="606.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (2 samples, 0.03%)</title><rect x="1188.9" y="675.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="686.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (2 samples, 0.03%)</title><rect x="1188.9" y="659.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.9" y="670.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1188.9" y="643.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.9" y="654.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.4" y="691.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.4" y="702.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.4" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="686.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (2 samples, 0.03%)</title><rect x="1189.4" y="659.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.4" y="670.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.4" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.4" y="654.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.4" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.4" y="638.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.4" y="611.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="622.0"></text>
</g>
</g>
</svg>
