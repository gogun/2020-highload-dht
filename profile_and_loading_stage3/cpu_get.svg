<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="790" onload="init(evt)" viewBox="0 0 1200 790"
	 xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="773"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="773"> </text>
<g id="frames">
<g>
<title>all (10,034 samples, 100.00%)</title><rect x="10.0" y="739.0" width="1180.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="13.0" y="750.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.06%)</title><rect x="10.0" y="723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (6 samples, 0.06%)</title><rect x="10.0" y="707.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.06%)</title><rect x="10.0" y="691.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.06%)</title><rect x="10.0" y="675.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>[not_walkable_Java] (38 samples, 0.38%)</title><rect x="10.7" y="723.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.7" y="734.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (36 samples, 0.36%)</title><rect x="10.7" y="707.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.03%)</title><rect x="15.2" y="723.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="18.2" y="734.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.0 (3 samples, 0.03%)</title><rect x="15.2" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="18.2" y="718.0"></text>
</g>
<g>
<title>java/lang/Thread.run (9,821 samples, 97.88%)</title><rect x="16.1" y="723.0" width="1155.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="19.1" y="734.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (9,821 samples, 97.88%)</title><rect x="16.1" y="707.0" width="1155.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.1" y="718.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (9,821 samples, 97.88%)</title><rect x="16.1" y="691.0" width="1155.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.1" y="702.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (46 samples, 0.46%)</title><rect x="16.2" y="675.0" width="5.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (45 samples, 0.45%)</title><rect x="16.4" y="659.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (35 samples, 0.35%)</title><rect x="16.4" y="643.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="19.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (35 samples, 0.35%)</title><rect x="16.4" y="627.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="19.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (35 samples, 0.35%)</title><rect x="16.4" y="611.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="19.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (13 samples, 0.13%)</title><rect x="16.6" y="595.0" width="1.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="19.6" y="606.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.03%)</title><rect x="17.1" y="579.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="20.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.17%)</title><rect x="18.1" y="595.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="21.1" y="606.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (12 samples, 0.12%)</title><rect x="18.7" y="579.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.7" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.07%)</title><rect x="19.3" y="563.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="22.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 0.07%)</title><rect x="19.3" y="547.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="22.3" y="558.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.03%)</title><rect x="19.3" y="531.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="22.3" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.03%)</title><rect x="19.3" y="515.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="22.3" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.03%)</title><rect x="19.6" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="22.6" y="542.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.03%)</title><rect x="19.6" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="22.6" y="526.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.03%)</title><rect x="19.6" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="22.6" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.03%)</title><rect x="20.1" y="595.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (7 samples, 0.07%)</title><rect x="20.5" y="643.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.06%)</title><rect x="20.6" y="627.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="23.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (5 samples, 0.05%)</title><rect x="20.6" y="611.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.03%)</title><rect x="21.3" y="643.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.03%)</title><rect x="21.3" y="627.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.03%)</title><rect x="21.3" y="611.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.3" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.03%)</title><rect x="21.3" y="595.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.03%)</title><rect x="21.3" y="579.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="24.3" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.processWorkerExit (3 samples, 0.03%)</title><rect x="21.6" y="675.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.03%)</title><rect x="21.6" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.03%)</title><rect x="21.6" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="24.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.03%)</title><rect x="21.6" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$136/145067326.run (9,771 samples, 97.38%)</title><rect x="22.0" y="675.0" width="1149.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.0" y="686.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$136/145067326.run</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$get$3 (9,769 samples, 97.36%)</title><rect x="22.2" y="659.0" width="1148.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="25.2" y="670.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$get$3</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGetRequest (9,769 samples, 97.36%)</title><rect x="22.2" y="643.0" width="1148.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.2" y="654.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleGetRequest</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.04%)</title><rect x="22.5" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (115 samples, 1.15%)</title><rect x="23.1" y="627.0" width="13.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.1" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (108 samples, 1.08%)</title><rect x="23.3" y="611.0" width="12.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.04%)</title><rect x="23.3" y="595.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="26.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (104 samples, 1.04%)</title><rect x="23.8" y="595.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.8" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (104 samples, 1.04%)</title><rect x="23.8" y="579.0" width="12.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.8" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (103 samples, 1.03%)</title><rect x="23.9" y="563.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.9" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (103 samples, 1.03%)</title><rect x="23.9" y="547.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.9" y="558.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.05%)</title><rect x="23.9" y="531.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="26.9" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.04%)</title><rect x="24.0" y="515.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="27.0" y="526.0"></text>
</g>
<g>
<title>__libc_send (97 samples, 0.97%)</title><rect x="24.5" y="531.0" width="11.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="27.5" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (95 samples, 0.95%)</title><rect x="24.7" y="515.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="27.7" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (95 samples, 0.95%)</title><rect x="24.7" y="499.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="27.7" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (93 samples, 0.93%)</title><rect x="24.8" y="483.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.8" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (93 samples, 0.93%)</title><rect x="24.8" y="467.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="27.8" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (92 samples, 0.92%)</title><rect x="24.9" y="451.0" width="10.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="27.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (91 samples, 0.91%)</title><rect x="25.1" y="435.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="28.1" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (90 samples, 0.90%)</title><rect x="25.2" y="419.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="28.2" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (82 samples, 0.82%)</title><rect x="25.2" y="403.0" width="9.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="28.2" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (81 samples, 0.81%)</title><rect x="25.3" y="387.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="28.3" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (76 samples, 0.76%)</title><rect x="25.5" y="371.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="28.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (72 samples, 0.72%)</title><rect x="25.9" y="355.0" width="8.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="28.9" y="366.0"></text>
</g>
<g>
<title>ip_output (72 samples, 0.72%)</title><rect x="25.9" y="339.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="28.9" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (71 samples, 0.71%)</title><rect x="26.0" y="323.0" width="8.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="29.0" y="334.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.08%)</title><rect x="26.1" y="307.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="29.1" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.05%)</title><rect x="26.3" y="291.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.3" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.04%)</title><rect x="26.5" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="29.5" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (62 samples, 0.62%)</title><rect x="27.1" y="307.0" width="7.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="30.1" y="318.0"></text>
</g>
<g>
<title>do_softirq (61 samples, 0.61%)</title><rect x="27.1" y="291.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="30.1" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (59 samples, 0.59%)</title><rect x="27.3" y="275.0" width="6.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.3" y="286.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (59 samples, 0.59%)</title><rect x="27.3" y="259.0" width="6.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.3" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (59 samples, 0.59%)</title><rect x="27.3" y="243.0" width="6.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.3" y="254.0"></text>
</g>
<g>
<title>net_rx_action (58 samples, 0.58%)</title><rect x="27.4" y="227.0" width="6.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="30.4" y="238.0"></text>
</g>
<g>
<title>process_backlog (56 samples, 0.56%)</title><rect x="27.6" y="211.0" width="6.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.6" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (55 samples, 0.55%)</title><rect x="27.8" y="195.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="30.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv (55 samples, 0.55%)</title><rect x="27.8" y="179.0" width="6.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.8" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (52 samples, 0.52%)</title><rect x="27.8" y="163.0" width="6.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="30.8" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (52 samples, 0.52%)</title><rect x="27.8" y="147.0" width="6.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="30.8" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (52 samples, 0.52%)</title><rect x="27.8" y="131.0" width="6.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="30.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (51 samples, 0.51%)</title><rect x="27.9" y="115.0" width="6.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="30.9" y="126.0"></text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.05%)</title><rect x="27.9" y="99.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="30.9" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (44 samples, 0.44%)</title><rect x="28.7" y="99.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="31.7" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (44 samples, 0.44%)</title><rect x="28.7" y="83.0" width="5.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="31.7" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="29.3" y="67.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="32.3" y="78.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.03%)</title><rect x="29.3" y="51.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="32.3" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="29.3" y="35.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="32.3" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (24 samples, 0.24%)</title><rect x="29.6" y="67.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="32.6" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 0.24%)</title><rect x="29.6" y="51.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="32.6" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (24 samples, 0.24%)</title><rect x="29.6" y="35.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="32.6" y="46.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.10%)</title><rect x="32.5" y="67.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="35.5" y="78.0"></text>
</g>
<g>
<title>ip_rcv_core (3 samples, 0.03%)</title><rect x="33.9" y="163.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.9" y="174.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.03%)</title><rect x="34.5" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="37.5" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.03%)</title><rect x="34.5" y="355.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.5" y="366.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.03%)</title><rect x="34.5" y="339.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="37.5" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.03%)</title><rect x="34.5" y="323.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="37.5" y="334.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.03%)</title><rect x="34.8" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="37.8" y="414.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.03%)</title><rect x="35.4" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="38.4" y="414.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.03%)</title><rect x="35.4" y="387.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="38.4" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.05%)</title><rect x="36.0" y="611.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="39.0" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.03%)</title><rect x="36.2" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.03%)</title><rect x="36.2" y="579.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="39.2" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (9,647 samples, 96.14%)</title><rect x="36.6" y="627.0" width="1134.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.6" y="638.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (51 samples, 0.51%)</title><rect x="36.6" y="611.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (51 samples, 0.51%)</title><rect x="36.6" y="595.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.6" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (50 samples, 0.50%)</title><rect x="36.7" y="579.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="39.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (50 samples, 0.50%)</title><rect x="36.7" y="563.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (50 samples, 0.50%)</title><rect x="36.7" y="547.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (49 samples, 0.49%)</title><rect x="36.7" y="531.0" width="5.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="39.7" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (4 samples, 0.04%)</title><rect x="36.8" y="515.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="39.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (4 samples, 0.04%)</title><rect x="36.8" y="499.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="39.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (4 samples, 0.04%)</title><rect x="36.8" y="483.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.8" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="36.8" y="467.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="39.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (4 samples, 0.04%)</title><rect x="36.8" y="451.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="39.8" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/633026531.compare (3 samples, 0.03%)</title><rect x="36.9" y="435.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.03%)</title><rect x="36.9" y="419.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="39.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$132/964325819.compare (3 samples, 0.03%)</title><rect x="36.9" y="403.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="39.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.03%)</title><rect x="36.9" y="387.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="39.9" y="398.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (44 samples, 0.44%)</title><rect x="37.3" y="515.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (44 samples, 0.44%)</title><rect x="37.3" y="499.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="40.3" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (44 samples, 0.44%)</title><rect x="37.3" y="483.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.3" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (44 samples, 0.44%)</title><rect x="37.3" y="467.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.44%)</title><rect x="37.3" y="451.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.3" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (44 samples, 0.44%)</title><rect x="37.3" y="435.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="40.3" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (42 samples, 0.42%)</title><rect x="37.3" y="419.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="40.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (42 samples, 0.42%)</title><rect x="37.3" y="403.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (42 samples, 0.42%)</title><rect x="37.3" y="387.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="40.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (42 samples, 0.42%)</title><rect x="37.3" y="371.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (14 samples, 0.14%)</title><rect x="37.3" y="355.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (14 samples, 0.14%)</title><rect x="37.3" y="339.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.3" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (14 samples, 0.14%)</title><rect x="37.3" y="323.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (13 samples, 0.13%)</title><rect x="37.3" y="307.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="40.3" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (12 samples, 0.12%)</title><rect x="37.4" y="291.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (12 samples, 0.12%)</title><rect x="37.4" y="275.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="40.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (12 samples, 0.12%)</title><rect x="37.4" y="259.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="40.4" y="270.0"></text>
</g>
<g>
<title>pread (10 samples, 0.10%)</title><rect x="37.6" y="243.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="40.6" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.09%)</title><rect x="37.8" y="227.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="40.8" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (9 samples, 0.09%)</title><rect x="37.8" y="211.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="40.8" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (5 samples, 0.05%)</title><rect x="38.0" y="195.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="41.0" y="206.0"></text>
</g>
<g>
<title>vfs_read (5 samples, 0.05%)</title><rect x="38.0" y="179.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="41.0" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (27 samples, 0.27%)</title><rect x="39.0" y="355.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="42.0" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (27 samples, 0.27%)</title><rect x="39.0" y="339.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="42.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (22 samples, 0.22%)</title><rect x="39.4" y="323.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="42.4" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (4 samples, 0.04%)</title><rect x="39.4" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.4" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="39.4" y="291.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="42.4" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.04%)</title><rect x="39.4" y="275.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.4" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="39.4" y="259.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.15%)</title><rect x="40.0" y="307.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="43.0" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.15%)</title><rect x="40.0" y="291.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.15%)</title><rect x="40.0" y="275.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="43.0" y="286.0"></text>
</g>
<g>
<title>pread (15 samples, 0.15%)</title><rect x="40.0" y="259.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.0" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.12%)</title><rect x="40.3" y="243.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.3" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.12%)</title><rect x="40.3" y="227.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="43.3" y="238.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.09%)</title><rect x="40.6" y="211.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="43.6" y="222.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.08%)</title><rect x="40.7" y="195.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="43.7" y="206.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.04%)</title><rect x="41.2" y="179.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="44.2" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (3 samples, 0.03%)</title><rect x="42.6" y="611.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.6" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (3 samples, 0.03%)</title><rect x="42.6" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="45.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.iterator (9,593 samples, 95.60%)</title><rect x="42.9" y="611.0" width="1128.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="45.9" y="622.0">ru/mail/polis/dao/gogun/DAOImpl.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (9,593 samples, 95.60%)</title><rect x="42.9" y="595.0" width="1128.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="45.9" y="606.0">ru/mail/polis/dao/gogun/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (837 samples, 8.34%)</title><rect x="43.3" y="579.0" width="98.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.3" y="590.0">com/google/c..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (836 samples, 8.33%)</title><rect x="43.4" y="563.0" width="98.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="46.4" y="574.0">com/google/c..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (821 samples, 8.18%)</title><rect x="45.2" y="547.0" width="96.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.2" y="558.0">java/util/P..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (821 samples, 8.18%)</title><rect x="45.2" y="531.0" width="96.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="48.2" y="542.0">java/util/P..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (819 samples, 8.16%)</title><rect x="45.4" y="515.0" width="96.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.4" y="526.0">java/util/P..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (819 samples, 8.16%)</title><rect x="45.4" y="499.0" width="96.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.4" y="510.0">java/util/P..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (819 samples, 8.16%)</title><rect x="45.4" y="483.0" width="96.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="48.4" y="494.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (818 samples, 8.15%)</title><rect x="45.5" y="467.0" width="96.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.5" y="478.0">com/google/..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (801 samples, 7.98%)</title><rect x="45.6" y="451.0" width="94.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.6" y="462.0">com/google/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (797 samples, 7.94%)</title><rect x="46.1" y="435.0" width="93.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="49.1" y="446.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (797 samples, 7.94%)</title><rect x="46.1" y="419.0" width="93.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.1" y="430.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (797 samples, 7.94%)</title><rect x="46.1" y="403.0" width="93.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.1" y="414.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.03%)</title><rect x="46.1" y="387.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="49.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (303 samples, 3.02%)</title><rect x="46.6" y="387.0" width="35.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.6" y="398.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (7 samples, 0.07%)</title><rect x="46.6" y="371.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.07%)</title><rect x="46.6" y="355.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.06%)</title><rect x="46.7" y="339.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="49.7" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.05%)</title><rect x="46.8" y="323.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="49.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="46.9" y="307.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.04%)</title><rect x="46.9" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="49.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (295 samples, 2.94%)</title><rect x="47.5" y="371.0" width="34.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.5" y="382.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (295 samples, 2.94%)</title><rect x="47.5" y="355.0" width="34.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.5" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.05%)</title><rect x="47.6" y="339.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.6" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.05%)</title><rect x="47.6" y="323.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.6" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.05%)</title><rect x="47.6" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.6" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.05%)</title><rect x="47.6" y="291.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.6" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.05%)</title><rect x="47.6" y="275.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (7 samples, 0.07%)</title><rect x="48.2" y="339.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.2" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (7 samples, 0.07%)</title><rect x="48.2" y="323.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.2" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (7 samples, 0.07%)</title><rect x="48.2" y="307.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.2" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (7 samples, 0.07%)</title><rect x="48.2" y="291.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.2" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (7 samples, 0.07%)</title><rect x="48.2" y="275.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (269 samples, 2.68%)</title><rect x="49.0" y="339.0" width="31.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.0" y="350.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (11 samples, 0.11%)</title><rect x="49.2" y="323.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.2" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (10 samples, 0.10%)</title><rect x="49.3" y="307.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (4 samples, 0.04%)</title><rect x="49.4" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="52.4" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="49.5" y="275.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="52.5" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.03%)</title><rect x="50.1" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.1" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (3 samples, 0.03%)</title><rect x="50.1" y="275.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.1" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (3 samples, 0.03%)</title><rect x="50.1" y="259.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.1" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.03%)</title><rect x="50.1" y="243.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.1" y="254.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (5 samples, 0.05%)</title><rect x="50.5" y="323.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="53.5" y="334.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (5 samples, 0.05%)</title><rect x="50.5" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="53.5" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (5 samples, 0.05%)</title><rect x="50.5" y="291.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.5" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="50.7" y="275.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (244 samples, 2.43%)</title><rect x="51.0" y="323.0" width="28.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="54.0" y="334.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (243 samples, 2.42%)</title><rect x="51.2" y="307.0" width="28.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="54.2" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (243 samples, 2.42%)</title><rect x="51.2" y="291.0" width="28.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="54.2" y="302.0">su..</text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.06%)</title><rect x="52.0" y="275.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="55.0" y="286.0"></text>
</g>
<g>
<title>pread (228 samples, 2.27%)</title><rect x="52.9" y="275.0" width="26.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="55.9" y="286.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (182 samples, 1.81%)</title><rect x="58.3" y="259.0" width="21.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="61.3" y="270.0">e..</text>
</g>
<g>
<title>do_syscall_64 (182 samples, 1.81%)</title><rect x="58.3" y="243.0" width="21.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="61.3" y="254.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.03%)</title><rect x="62.4" y="227.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="65.4" y="238.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.03%)</title><rect x="62.4" y="211.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="65.4" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (138 samples, 1.38%)</title><rect x="62.8" y="227.0" width="16.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="65.8" y="238.0"></text>
</g>
<g>
<title>__fget_light (18 samples, 0.18%)</title><rect x="63.0" y="211.0" width="2.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="66.0" y="222.0"></text>
</g>
<g>
<title>__fget_files (15 samples, 0.15%)</title><rect x="63.4" y="195.0" width="1.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="66.4" y="206.0"></text>
</g>
<g>
<title>fput_many (6 samples, 0.06%)</title><rect x="65.2" y="211.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="68.2" y="222.0"></text>
</g>
<g>
<title>vfs_read (112 samples, 1.12%)</title><rect x="65.9" y="211.0" width="13.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="68.9" y="222.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.04%)</title><rect x="66.2" y="195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.2" y="206.0"></text>
</g>
<g>
<title>fsnotify_parent (8 samples, 0.08%)</title><rect x="66.7" y="195.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.7" y="206.0"></text>
</g>
<g>
<title>new_sync_read (87 samples, 0.87%)</title><rect x="67.6" y="195.0" width="10.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.6" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (78 samples, 0.78%)</title><rect x="68.7" y="179.0" width="9.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="71.7" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (10 samples, 0.10%)</title><rect x="70.1" y="163.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.1" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (9 samples, 0.09%)</title><rect x="70.2" y="147.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="73.2" y="158.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (48 samples, 0.48%)</title><rect x="71.3" y="163.0" width="5.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="74.3" y="174.0"></text>
</g>
<g>
<title>find_lock_entry (43 samples, 0.43%)</title><rect x="71.9" y="147.0" width="5.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="74.9" y="158.0"></text>
</g>
<g>
<title>find_get_entry (31 samples, 0.31%)</title><rect x="72.7" y="131.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.7" y="142.0"></text>
</g>
<g>
<title>xas_load (15 samples, 0.15%)</title><rect x="74.6" y="115.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.6" y="126.0"></text>
</g>
<g>
<title>xas_start (4 samples, 0.04%)</title><rect x="75.9" y="99.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="78.9" y="110.0"></text>
</g>
<g>
<title>page_mapping (5 samples, 0.05%)</title><rect x="76.3" y="131.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.3" y="142.0"></text>
</g>
<g>
<title>touch_atime (7 samples, 0.07%)</title><rect x="76.9" y="163.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="79.9" y="174.0"></text>
</g>
<g>
<title>atime_needs_update (3 samples, 0.03%)</title><rect x="77.4" y="147.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.4" y="158.0"></text>
</g>
<g>
<title>current_time (3 samples, 0.03%)</title><rect x="77.4" y="131.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="80.4" y="142.0"></text>
</g>
<g>
<title>security_file_permission (9 samples, 0.09%)</title><rect x="78.0" y="195.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="81.0" y="206.0"></text>
</g>
<g>
<title>fsnotify_parent (5 samples, 0.05%)</title><rect x="78.4" y="179.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.4" y="190.0"></text>
</g>
<g>
<title>syscall_trace_enter (6 samples, 0.06%)</title><rect x="79.0" y="227.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.0" y="238.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.03%)</title><rect x="79.4" y="211.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="82.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.08%)</title><rect x="79.7" y="323.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="82.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.05%)</title><rect x="80.1" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="83.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (13 samples, 0.13%)</title><rect x="80.7" y="339.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="83.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (4 samples, 0.04%)</title><rect x="81.7" y="323.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="84.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (489 samples, 4.87%)</title><rect x="82.3" y="387.0" width="57.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.3" y="398.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (489 samples, 4.87%)</title><rect x="82.3" y="371.0" width="57.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.3" y="382.0">sun/ni..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (6 samples, 0.06%)</title><rect x="82.7" y="355.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.7" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (6 samples, 0.06%)</title><rect x="82.7" y="339.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (8 samples, 0.08%)</title><rect x="83.4" y="355.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="86.4" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (8 samples, 0.08%)</title><rect x="83.4" y="339.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (437 samples, 4.36%)</title><rect x="84.3" y="355.0" width="51.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.3" y="366.0">sun/n..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (101 samples, 1.01%)</title><rect x="84.6" y="339.0" width="11.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.6" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (100 samples, 1.00%)</title><rect x="84.7" y="323.0" width="11.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.7" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (93 samples, 0.93%)</title><rect x="85.5" y="307.0" width="10.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.5" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (93 samples, 0.93%)</title><rect x="85.5" y="291.0" width="10.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="88.5" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.flip (3 samples, 0.03%)</title><rect x="94.1" y="275.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="97.1" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (4 samples, 0.04%)</title><rect x="95.4" y="275.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.4" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="96.0" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.0" y="286.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (5 samples, 0.05%)</title><rect x="96.4" y="339.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="99.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (304 samples, 3.03%)</title><rect x="97.0" y="339.0" width="35.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.0" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (299 samples, 2.98%)</title><rect x="97.4" y="323.0" width="35.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.4" y="334.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (299 samples, 2.98%)</title><rect x="97.4" y="307.0" width="35.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.4" y="318.0">sun..</text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.06%)</title><rect x="98.9" y="291.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="101.9" y="302.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (5 samples, 0.05%)</title><rect x="99.6" y="291.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="102.6" y="302.0"></text>
</g>
<g>
<title>pread (273 samples, 2.72%)</title><rect x="100.4" y="291.0" width="32.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="103.4" y="302.0">pr..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (221 samples, 2.20%)</title><rect x="106.5" y="275.0" width="26.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="109.5" y="286.0">e..</text>
</g>
<g>
<title>do_syscall_64 (221 samples, 2.20%)</title><rect x="106.5" y="259.0" width="26.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="109.5" y="270.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (11 samples, 0.11%)</title><rect x="112.5" y="243.0" width="1.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="115.5" y="254.0"></text>
</g>
<g>
<title>__audit_syscall_exit (9 samples, 0.09%)</title><rect x="112.8" y="227.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.8" y="238.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (142 samples, 1.42%)</title><rect x="113.8" y="243.0" width="16.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="116.8" y="254.0"></text>
</g>
<g>
<title>__fget_light (16 samples, 0.16%)</title><rect x="114.8" y="227.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="117.8" y="238.0"></text>
</g>
<g>
<title>__fget_files (12 samples, 0.12%)</title><rect x="115.3" y="211.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="118.3" y="222.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.03%)</title><rect x="116.7" y="227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="119.7" y="238.0"></text>
</g>
<g>
<title>vfs_read (115 samples, 1.15%)</title><rect x="117.0" y="227.0" width="13.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="120.0" y="238.0"></text>
</g>
<g>
<title>fsnotify (6 samples, 0.06%)</title><rect x="117.7" y="211.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="120.7" y="222.0"></text>
</g>
<g>
<title>fsnotify_parent (10 samples, 0.10%)</title><rect x="118.4" y="211.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.4" y="222.0"></text>
</g>
<g>
<title>new_sync_read (85 samples, 0.85%)</title><rect x="119.6" y="211.0" width="10.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="122.6" y="222.0"></text>
</g>
<g>
<title>shmem_file_read_iter (71 samples, 0.71%)</title><rect x="121.2" y="195.0" width="8.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="124.2" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (16 samples, 0.16%)</title><rect x="122.5" y="179.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="125.5" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (10 samples, 0.10%)</title><rect x="123.2" y="163.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="126.2" y="174.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (32 samples, 0.32%)</title><rect x="124.4" y="179.0" width="3.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="127.4" y="190.0"></text>
</g>
<g>
<title>find_lock_entry (26 samples, 0.26%)</title><rect x="125.1" y="163.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="128.1" y="174.0"></text>
</g>
<g>
<title>find_get_entry (18 samples, 0.18%)</title><rect x="125.8" y="147.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="128.8" y="158.0"></text>
</g>
<g>
<title>xas_load (6 samples, 0.06%)</title><rect x="127.2" y="131.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="130.2" y="142.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.03%)</title><rect x="127.6" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="130.6" y="126.0"></text>
</g>
<g>
<title>touch_atime (9 samples, 0.09%)</title><rect x="128.2" y="179.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="131.2" y="190.0"></text>
</g>
<g>
<title>atime_needs_update (8 samples, 0.08%)</title><rect x="128.3" y="163.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="131.3" y="174.0"></text>
</g>
<g>
<title>current_time (5 samples, 0.05%)</title><rect x="128.7" y="147.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="131.7" y="158.0"></text>
</g>
<g>
<title>unlock_page (3 samples, 0.03%)</title><rect x="129.2" y="179.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="132.2" y="190.0"></text>
</g>
<g>
<title>security_file_permission (8 samples, 0.08%)</title><rect x="129.6" y="211.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="132.6" y="222.0"></text>
</g>
<g>
<title>fsnotify_parent (6 samples, 0.06%)</title><rect x="129.8" y="195.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="132.8" y="206.0"></text>
</g>
<g>
<title>syscall_trace_enter (17 samples, 0.17%)</title><rect x="130.5" y="243.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="133.5" y="254.0"></text>
</g>
<g>
<title>__audit_syscall_entry (6 samples, 0.06%)</title><rect x="131.5" y="227.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="134.5" y="238.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (3 samples, 0.03%)</title><rect x="132.2" y="227.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="135.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (16 samples, 0.16%)</title><rect x="132.8" y="339.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.09%)</title><rect x="133.0" y="323.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.04%)</title><rect x="133.6" y="307.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="136.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (5 samples, 0.05%)</title><rect x="134.1" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (9 samples, 0.09%)</title><rect x="134.7" y="339.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="137.7" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (9 samples, 0.09%)</title><rect x="134.7" y="323.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="137.7" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (6 samples, 0.06%)</title><rect x="134.7" y="307.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.7" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.03%)</title><rect x="135.4" y="307.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.4" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.createMap (3 samples, 0.03%)</title><rect x="135.4" y="291.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (17 samples, 0.17%)</title><rect x="135.7" y="355.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.06%)</title><rect x="137.0" y="339.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (18 samples, 0.18%)</title><rect x="137.7" y="355.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/633026531.compare (16 samples, 0.16%)</title><rect x="139.8" y="451.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.8" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (15 samples, 0.15%)</title><rect x="139.9" y="435.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$132/964325819.compare (15 samples, 0.15%)</title><rect x="139.9" y="419.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (15 samples, 0.15%)</title><rect x="139.9" y="403.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="142.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.08%)</title><rect x="140.3" y="387.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="140.7" y="371.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$131/1256742631.apply (4 samples, 0.04%)</title><rect x="141.2" y="387.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (4 samples, 0.04%)</title><rect x="141.2" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.04%)</title><rect x="141.2" y="355.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="144.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8,667 samples, 86.38%)</title><rect x="141.7" y="579.0" width="1019.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.7" y="590.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (27 samples, 0.27%)</title><rect x="142.1" y="563.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.1" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (27 samples, 0.27%)</title><rect x="142.1" y="547.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="145.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (17 samples, 0.17%)</title><rect x="143.2" y="531.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.&lt;init&gt; (9 samples, 0.09%)</title><rect x="143.2" y="515.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.2" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (5 samples, 0.05%)</title><rect x="143.7" y="499.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="146.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absHighest (8 samples, 0.08%)</title><rect x="144.3" y="515.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.3" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.getLastEntry (7 samples, 0.07%)</title><rect x="144.4" y="499.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.4" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (6 samples, 0.06%)</title><rect x="145.2" y="563.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.2" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (5 samples, 0.05%)</title><rect x="145.4" y="547.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="145.4" y="531.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$142/2067733446.accept (8,631 samples, 86.02%)</title><rect x="145.9" y="563.0" width="1015.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="148.9" y="574.0">ru/mail/polis/dao/gogun/DAOImpl$$Lambda$142/2067733446.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (8,631 samples, 86.02%)</title><rect x="145.9" y="547.0" width="1015.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.9" y="558.0">ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (8,631 samples, 86.02%)</title><rect x="145.9" y="531.0" width="1015.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.9" y="542.0">ru/mail/polis/dao/gogun/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (8,631 samples, 86.02%)</title><rect x="145.9" y="515.0" width="1015.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.9" y="526.0">ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (8,631 samples, 86.02%)</title><rect x="145.9" y="499.0" width="1015.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.9" y="510.0">ru/mail/polis/dao/gogun/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (72 samples, 0.72%)</title><rect x="146.1" y="483.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.1" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.07%)</title><rect x="147.0" y="467.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.0" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (6 samples, 0.06%)</title><rect x="147.1" y="451.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="150.1" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (50 samples, 0.50%)</title><rect x="148.1" y="467.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="151.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (19 samples, 0.19%)</title><rect x="151.7" y="451.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="154.7" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (7 samples, 0.07%)</title><rect x="152.6" y="435.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (3 samples, 0.03%)</title><rect x="153.5" y="435.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.5" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.05%)</title><rect x="153.9" y="467.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="156.9" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.04%)</title><rect x="153.9" y="451.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (8,558 samples, 85.29%)</title><rect x="154.5" y="483.0" width="1006.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="157.5" y="494.0">ru/mail/polis/dao/gogun/SSTable.key</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (40 samples, 0.40%)</title><rect x="155.4" y="467.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="158.4" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.38%)</title><rect x="155.6" y="451.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.6" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (11 samples, 0.11%)</title><rect x="156.1" y="435.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="159.1" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (9 samples, 0.09%)</title><rect x="156.2" y="419.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="159.2" y="430.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 0.07%)</title><rect x="156.2" y="403.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="159.2" y="414.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (3 samples, 0.03%)</title><rect x="156.5" y="387.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="159.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.23%)</title><rect x="157.4" y="435.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="160.4" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (19 samples, 0.19%)</title><rect x="157.8" y="419.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.8" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (17 samples, 0.17%)</title><rect x="158.1" y="403.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.1" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (12 samples, 0.12%)</title><rect x="158.6" y="387.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="161.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (10 samples, 0.10%)</title><rect x="158.9" y="371.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (4 samples, 0.04%)</title><rect x="160.2" y="467.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="163.2" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (8,505 samples, 84.76%)</title><rect x="160.8" y="467.0" width="1000.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.8" y="478.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.ensureOpen (23 samples, 0.23%)</title><rect x="162.8" y="451.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.8" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (23 samples, 0.23%)</title><rect x="162.8" y="435.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="165.8" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (8,465 samples, 84.36%)</title><rect x="165.5" y="451.0" width="995.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="168.5" y="462.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (4 samples, 0.04%)</title><rect x="171.1" y="435.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="174.1" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (287 samples, 2.86%)</title><rect x="171.6" y="435.0" width="33.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="174.6" y="446.0">su..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (285 samples, 2.84%)</title><rect x="171.8" y="419.0" width="33.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="174.8" y="430.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (14 samples, 0.14%)</title><rect x="194.0" y="403.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="197.0" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (59 samples, 0.59%)</title><rect x="196.0" y="403.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="199.0" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (51 samples, 0.51%)</title><rect x="197.0" y="387.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (46 samples, 0.46%)</title><rect x="197.6" y="371.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (15 samples, 0.15%)</title><rect x="201.2" y="355.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="204.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (20 samples, 0.20%)</title><rect x="203.0" y="403.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (87 samples, 0.87%)</title><rect x="205.3" y="435.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.3" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (85 samples, 0.85%)</title><rect x="205.6" y="419.0" width="10.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="208.6" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (29 samples, 0.29%)</title><rect x="212.2" y="403.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.2" y="414.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (21 samples, 0.21%)</title><rect x="213.0" y="387.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.0" y="398.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (21 samples, 0.21%)</title><rect x="213.0" y="371.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="216.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (5 samples, 0.05%)</title><rect x="215.6" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="218.6" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7,553 samples, 75.27%)</title><rect x="216.2" y="435.0" width="888.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.2" y="446.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (163 samples, 1.62%)</title><rect x="221.9" y="419.0" width="19.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (60 samples, 0.60%)</title><rect x="226.9" y="403.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="229.9" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (61 samples, 0.61%)</title><rect x="233.9" y="403.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="236.9" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (8 samples, 0.08%)</title><rect x="236.7" y="387.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="239.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (13 samples, 0.13%)</title><rect x="237.7" y="387.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.7" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (3 samples, 0.03%)</title><rect x="238.4" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="241.4" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="238.7" y="371.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="241.7" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.05%)</title><rect x="239.2" y="387.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="242.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.03%)</title><rect x="239.4" y="371.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (11 samples, 0.11%)</title><rect x="239.8" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="242.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (11 samples, 0.11%)</title><rect x="239.8" y="371.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="242.8" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (9 samples, 0.09%)</title><rect x="240.0" y="355.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="243.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (7 samples, 0.07%)</title><rect x="240.3" y="339.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="243.3" y="350.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (159 samples, 1.58%)</title><rect x="241.1" y="419.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="244.1" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (129 samples, 1.29%)</title><rect x="244.6" y="403.0" width="15.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="247.6" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (123 samples, 1.23%)</title><rect x="245.3" y="387.0" width="14.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6,733 samples, 67.10%)</title><rect x="260.0" y="419.0" width="791.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="263.0" y="430.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (189 samples, 1.88%)</title><rect x="262.3" y="403.0" width="22.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.3" y="414.0">j..</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (150 samples, 1.49%)</title><rect x="266.8" y="387.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="269.8" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (19 samples, 0.19%)</title><rect x="268.6" y="371.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.6" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.07%)</title><rect x="269.2" y="355.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="272.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (7 samples, 0.07%)</title><rect x="270.0" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.0" y="366.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (16 samples, 0.16%)</title><rect x="270.8" y="371.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="273.8" y="382.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.04%)</title><rect x="272.7" y="371.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="275.7" y="382.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (89 samples, 0.89%)</title><rect x="273.3" y="371.0" width="10.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="276.3" y="382.0"></text>
</g>
<g>
<title>unsafe_arraycopy (6 samples, 0.06%)</title><rect x="283.8" y="371.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="286.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (6,525 samples, 65.03%)</title><rect x="284.5" y="403.0" width="767.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.5" y="414.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (6,521 samples, 64.99%)</title><rect x="284.9" y="387.0" width="766.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.9" y="398.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (22 samples, 0.22%)</title><rect x="310.9" y="371.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="313.9" y="382.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (112 samples, 1.12%)</title><rect x="313.5" y="371.0" width="13.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="316.5" y="382.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (91 samples, 0.91%)</title><rect x="326.7" y="371.0" width="10.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="329.7" y="382.0"></text>
</g>
<g>
<title>fdval (30 samples, 0.30%)</title><rect x="337.6" y="371.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="340.6" y="382.0"></text>
</g>
<g>
<title>pread (6,043 samples, 60.23%)</title><rect x="341.2" y="371.0" width="710.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="344.2" y="382.0">pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4,868 samples, 48.52%)</title><rect x="479.3" y="355.0" width="572.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="482.3" y="366.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (4,868 samples, 48.52%)</title><rect x="479.3" y="339.0" width="572.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="482.3" y="350.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (199 samples, 1.98%)</title><rect x="600.0" y="323.0" width="23.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.0" y="334.0">_..</text>
</g>
<g>
<title>__audit_syscall_exit (173 samples, 1.72%)</title><rect x="603.1" y="307.0" width="20.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="606.1" y="318.0"></text>
</g>
<g>
<title>kfree (33 samples, 0.33%)</title><rect x="613.8" y="291.0" width="3.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="616.8" y="302.0"></text>
</g>
<g>
<title>mntput (5 samples, 0.05%)</title><rect x="617.6" y="291.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="620.6" y="302.0"></text>
</g>
<g>
<title>path_put (20 samples, 0.20%)</title><rect x="618.2" y="291.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="621.2" y="302.0"></text>
</g>
<g>
<title>dput (4 samples, 0.04%)</title><rect x="620.1" y="275.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="623.1" y="286.0"></text>
</g>
<g>
<title>unroll_tree_refs (24 samples, 0.24%)</title><rect x="620.6" y="291.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.6" y="302.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (3,366 samples, 33.55%)</title><rect x="623.4" y="323.0" width="395.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="626.4" y="334.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fget_light (383 samples, 3.82%)</title><rect x="636.3" y="307.0" width="45.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="639.3" y="318.0">__fg..</text>
</g>
<g>
<title>__fget_files (313 samples, 3.12%)</title><rect x="644.5" y="291.0" width="36.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="647.5" y="302.0">__f..</text>
</g>
<g>
<title>__rcu_read_lock (5 samples, 0.05%)</title><rect x="679.0" y="275.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="682.0" y="286.0"></text>
</g>
<g>
<title>__rcu_read_unlock (13 samples, 0.13%)</title><rect x="679.6" y="275.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="682.6" y="286.0"></text>
</g>
<g>
<title>fput (5 samples, 0.05%)</title><rect x="681.4" y="307.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="684.4" y="318.0"></text>
</g>
<g>
<title>fput_many (75 samples, 0.75%)</title><rect x="682.0" y="307.0" width="8.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="685.0" y="318.0"></text>
</g>
<g>
<title>vfs_read (2,793 samples, 27.84%)</title><rect x="690.8" y="307.0" width="328.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="693.8" y="318.0">vfs_read</text>
</g>
<g>
<title>fsnotify (218 samples, 2.17%)</title><rect x="704.9" y="291.0" width="25.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="707.9" y="302.0">f..</text>
</g>
<g>
<title>fsnotify_parent (155 samples, 1.54%)</title><rect x="730.5" y="291.0" width="18.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="733.5" y="302.0"></text>
</g>
<g>
<title>new_sync_read (2,104 samples, 20.97%)</title><rect x="748.8" y="291.0" width="247.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="751.8" y="302.0">new_sync_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (4 samples, 0.04%)</title><rect x="773.0" y="275.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="776.0" y="286.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (15 samples, 0.15%)</title><rect x="773.5" y="275.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="776.5" y="286.0"></text>
</g>
<g>
<title>iov_iter_init (20 samples, 0.20%)</title><rect x="775.3" y="275.0" width="2.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="778.3" y="286.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1,858 samples, 18.52%)</title><rect x="777.7" y="275.0" width="218.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="780.7" y="286.0">shmem_file_read_iter</text>
</g>
<g>
<title>copy_page_to_iter (434 samples, 4.33%)</title><rect x="814.0" y="259.0" width="51.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="817.0" y="270.0">copy_..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (40 samples, 0.40%)</title><rect x="827.1" y="243.0" width="4.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="830.1" y="254.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (283 samples, 2.82%)</title><rect x="831.8" y="243.0" width="33.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="834.8" y="254.0">co..</text>
</g>
<g>
<title>shmem_getpage_gfp (861 samples, 8.58%)</title><rect x="865.2" y="259.0" width="101.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="868.2" y="270.0">shmem_getpag..</text>
</g>
<g>
<title>find_lock_entry (724 samples, 7.22%)</title><rect x="881.3" y="243.0" width="85.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.3" y="254.0">find_lock_..</text>
</g>
<g>
<title>find_get_entry (580 samples, 5.78%)</title><rect x="890.5" y="227.0" width="68.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="893.5" y="238.0">find_ge..</text>
</g>
<g>
<title>__rcu_read_lock (12 samples, 0.12%)</title><rect x="928.7" y="211.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.7" y="222.0"></text>
</g>
<g>
<title>__rcu_read_unlock (9 samples, 0.09%)</title><rect x="930.1" y="211.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="933.1" y="222.0"></text>
</g>
<g>
<title>xas_load (233 samples, 2.32%)</title><rect x="931.3" y="211.0" width="27.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="934.3" y="222.0">x..</text>
</g>
<g>
<title>xas_start (72 samples, 0.72%)</title><rect x="950.2" y="195.0" width="8.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="953.2" y="206.0"></text>
</g>
<g>
<title>page_mapping (62 samples, 0.62%)</title><rect x="958.7" y="227.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="961.7" y="238.0"></text>
</g>
<g>
<title>wait_on_page_bit_common (4 samples, 0.04%)</title><rect x="966.0" y="227.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="969.0" y="238.0"></text>
</g>
<g>
<title>touch_atime (180 samples, 1.79%)</title><rect x="966.4" y="259.0" width="21.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="969.4" y="270.0">t..</text>
</g>
<g>
<title>atime_needs_update (140 samples, 1.40%)</title><rect x="971.1" y="243.0" width="16.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="974.1" y="254.0"></text>
</g>
<g>
<title>current_time (82 samples, 0.82%)</title><rect x="978.0" y="227.0" width="9.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="981.0" y="238.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (18 samples, 0.18%)</title><rect x="985.5" y="211.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.5" y="222.0"></text>
</g>
<g>
<title>unlock_page (73 samples, 0.73%)</title><rect x="987.6" y="259.0" width="8.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="990.6" y="270.0"></text>
</g>
<g>
<title>rw_verify_area (13 samples, 0.13%)</title><rect x="996.2" y="291.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="999.2" y="302.0"></text>
</g>
<g>
<title>security_file_permission (183 samples, 1.82%)</title><rect x="997.7" y="291.0" width="21.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1000.7" y="302.0">s..</text>
</g>
<g>
<title>fsnotify_parent (130 samples, 1.30%)</title><rect x="1004.0" y="275.0" width="15.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1007.0" y="286.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (5 samples, 0.05%)</title><rect x="1019.4" y="323.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1022.4" y="334.0"></text>
</g>
<g>
<title>syscall_trace_enter (271 samples, 2.70%)</title><rect x="1020.0" y="323.0" width="31.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1023.0" y="334.0">sy..</text>
</g>
<g>
<title>__audit_syscall_entry (81 samples, 0.81%)</title><rect x="1039.4" y="307.0" width="9.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1042.4" y="318.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (25 samples, 0.25%)</title><rect x="1048.9" y="307.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1051.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (197 samples, 1.96%)</title><rect x="1051.8" y="419.0" width="23.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1054.8" y="430.0">s..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (78 samples, 0.78%)</title><rect x="1054.4" y="403.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1057.4" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (37 samples, 0.37%)</title><rect x="1059.2" y="387.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1062.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (97 samples, 0.97%)</title><rect x="1063.6" y="403.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1066.6" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="1073.7" y="387.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1076.7" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.04%)</title><rect x="1073.7" y="371.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1076.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.04%)</title><rect x="1073.7" y="355.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1076.7" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.04%)</title><rect x="1073.7" y="339.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1076.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (6 samples, 0.06%)</title><rect x="1074.3" y="387.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1077.3" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (250 samples, 2.49%)</title><rect x="1075.0" y="419.0" width="29.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1078.0" y="430.0">su..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (181 samples, 1.80%)</title><rect x="1075.7" y="403.0" width="21.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1078.7" y="414.0">j..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (132 samples, 1.32%)</title><rect x="1076.0" y="387.0" width="15.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1079.0" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (72 samples, 0.72%)</title><rect x="1083.1" y="371.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1086.1" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (46 samples, 0.46%)</title><rect x="1091.6" y="387.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1094.6" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.createMap (34 samples, 0.34%)</title><rect x="1092.3" y="371.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1095.3" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.&lt;init&gt; (26 samples, 0.26%)</title><rect x="1093.2" y="355.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1096.2" y="366.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.03%)</title><rect x="1094.9" y="339.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1097.9" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap$Entry.&lt;init&gt; (9 samples, 0.09%)</title><rect x="1095.2" y="339.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1098.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (3 samples, 0.03%)</title><rect x="1096.3" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1099.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (3 samples, 0.03%)</title><rect x="1096.6" y="371.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1099.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (55 samples, 0.55%)</title><rect x="1097.0" y="403.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (8 samples, 0.08%)</title><rect x="1103.4" y="403.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1106.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (8 samples, 0.08%)</title><rect x="1104.4" y="435.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1107.4" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (362 samples, 3.61%)</title><rect x="1105.3" y="435.0" width="42.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.3" y="446.0">sun/..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (12 samples, 0.12%)</title><rect x="1128.6" y="419.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.6" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (7 samples, 0.07%)</title><rect x="1129.0" y="403.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1132.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.03%)</title><rect x="1130.0" y="419.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (141 samples, 1.41%)</title><rect x="1130.4" y="419.0" width="16.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.4" y="430.0"></text>
</g>
<g>
<title>pthread_self (12 samples, 0.12%)</title><rect x="1145.5" y="403.0" width="1.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1148.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (8 samples, 0.08%)</title><rect x="1147.0" y="419.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1150.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (111 samples, 1.11%)</title><rect x="1147.9" y="435.0" width="13.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1150.9" y="446.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (17 samples, 0.17%)</title><rect x="1159.0" y="419.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.0" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (11 samples, 0.11%)</title><rect x="1159.2" y="403.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.2" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (6 samples, 0.06%)</title><rect x="1159.5" y="387.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.5" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.04%)</title><rect x="1160.5" y="403.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.5" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.03%)</title><rect x="1161.4" y="579.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.4" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.03%)</title><rect x="1161.4" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.4" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (3 samples, 0.03%)</title><rect x="1161.4" y="547.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.4" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (59 samples, 0.59%)</title><rect x="1161.9" y="579.0" width="6.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1164.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (59 samples, 0.59%)</title><rect x="1161.9" y="563.0" width="6.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1164.9" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (59 samples, 0.59%)</title><rect x="1161.9" y="547.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.9" y="558.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (7 samples, 0.07%)</title><rect x="1162.0" y="531.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (7 samples, 0.07%)</title><rect x="1162.0" y="515.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1165.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (6 samples, 0.06%)</title><rect x="1162.1" y="499.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1165.1" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="1162.2" y="483.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1165.2" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (5 samples, 0.05%)</title><rect x="1162.2" y="467.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1165.2" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$134/633026531.compare (5 samples, 0.05%)</title><rect x="1162.2" y="451.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1165.2" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (4 samples, 0.04%)</title><rect x="1162.4" y="435.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1165.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$132/964325819.compare (4 samples, 0.04%)</title><rect x="1162.4" y="419.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1165.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (4 samples, 0.04%)</title><rect x="1162.4" y="403.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1165.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="1162.5" y="387.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1165.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.03%)</title><rect x="1162.5" y="371.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1165.5" y="382.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (51 samples, 0.51%)</title><rect x="1162.8" y="531.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.8" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (51 samples, 0.51%)</title><rect x="1162.8" y="515.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1165.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (49 samples, 0.49%)</title><rect x="1163.1" y="499.0" width="5.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1166.1" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (49 samples, 0.49%)</title><rect x="1163.1" y="483.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1166.1" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (49 samples, 0.49%)</title><rect x="1163.1" y="467.0" width="5.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1166.1" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (48 samples, 0.48%)</title><rect x="1163.2" y="451.0" width="5.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1166.2" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (46 samples, 0.46%)</title><rect x="1163.2" y="435.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1166.2" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (46 samples, 0.46%)</title><rect x="1163.2" y="419.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (46 samples, 0.46%)</title><rect x="1163.2" y="403.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1166.2" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (46 samples, 0.46%)</title><rect x="1163.2" y="387.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1166.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (19 samples, 0.19%)</title><rect x="1163.2" y="371.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1166.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (19 samples, 0.19%)</title><rect x="1163.2" y="355.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1166.2" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (19 samples, 0.19%)</title><rect x="1163.2" y="339.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1166.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.17%)</title><rect x="1163.4" y="323.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (13 samples, 0.13%)</title><rect x="1163.8" y="307.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1166.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (13 samples, 0.13%)</title><rect x="1163.8" y="291.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1166.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (13 samples, 0.13%)</title><rect x="1163.8" y="275.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1166.8" y="286.0"></text>
</g>
<g>
<title>pread (11 samples, 0.11%)</title><rect x="1164.0" y="259.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1167.0" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.10%)</title><rect x="1164.1" y="243.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1167.1" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (10 samples, 0.10%)</title><rect x="1164.1" y="227.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1167.1" y="238.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.04%)</title><rect x="1164.8" y="211.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1167.8" y="222.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.03%)</title><rect x="1165.0" y="195.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1168.0" y="206.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.03%)</title><rect x="1165.0" y="179.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1168.0" y="190.0"></text>
</g>
<g>
<title>shmem_file_read_iter (3 samples, 0.03%)</title><rect x="1165.0" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1168.0" y="174.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (27 samples, 0.27%)</title><rect x="1165.4" y="371.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1168.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (27 samples, 0.27%)</title><rect x="1165.4" y="355.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1168.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (25 samples, 0.25%)</title><rect x="1165.7" y="339.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.05%)</title><rect x="1165.7" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1168.7" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.04%)</title><rect x="1165.8" y="307.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.03%)</title><rect x="1165.9" y="291.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1168.9" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.03%)</title><rect x="1165.9" y="275.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (19 samples, 0.19%)</title><rect x="1166.2" y="323.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1169.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (18 samples, 0.18%)</title><rect x="1166.4" y="307.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (18 samples, 0.18%)</title><rect x="1166.4" y="291.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1169.4" y="302.0"></text>
</g>
<g>
<title>pread (17 samples, 0.17%)</title><rect x="1166.5" y="275.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1169.5" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.15%)</title><rect x="1166.7" y="259.0" width="1.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1169.7" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.15%)</title><rect x="1166.7" y="243.0" width="1.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1169.7" y="254.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.10%)</title><rect x="1167.1" y="227.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.1" y="238.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.08%)</title><rect x="1167.3" y="211.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.3" y="222.0"></text>
</g>
<g>
<title>new_sync_read (6 samples, 0.06%)</title><rect x="1167.4" y="195.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.4" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (5 samples, 0.05%)</title><rect x="1167.5" y="179.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.5" y="190.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.03%)</title><rect x="1167.8" y="163.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1170.8" y="174.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.03%)</title><rect x="1167.8" y="147.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1170.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (19 samples, 0.19%)</title><rect x="1168.8" y="579.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1171.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (19 samples, 0.19%)</title><rect x="1168.8" y="563.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (19 samples, 0.19%)</title><rect x="1168.8" y="547.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1171.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (19 samples, 0.19%)</title><rect x="1168.8" y="531.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1171.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (17 samples, 0.17%)</title><rect x="1169.1" y="515.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1172.1" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (17 samples, 0.17%)</title><rect x="1169.1" y="499.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1172.1" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (17 samples, 0.17%)</title><rect x="1169.1" y="483.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1172.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.11%)</title><rect x="1169.8" y="467.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1172.8" y="478.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.11%)</title><rect x="1169.8" y="451.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1172.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.05%)</title><rect x="1170.5" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1173.5" y="446.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.05%)</title><rect x="1170.5" y="419.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1173.5" y="430.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (123 samples, 1.23%)</title><rect x="1171.1" y="723.0" width="14.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1174.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (30 samples, 0.30%)</title><rect x="1171.2" y="707.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1174.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (30 samples, 0.30%)</title><rect x="1171.2" y="691.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.2" y="702.0"></text>
</g>
<g>
<title>epoll_wait (25 samples, 0.25%)</title><rect x="1171.8" y="675.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1174.8" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.22%)</title><rect x="1172.1" y="659.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1175.1" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.22%)</title><rect x="1172.1" y="643.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1175.1" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (21 samples, 0.21%)</title><rect x="1172.2" y="627.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1175.2" y="638.0"></text>
</g>
<g>
<title>do_epoll_wait (21 samples, 0.21%)</title><rect x="1172.2" y="611.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1175.2" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (14 samples, 0.14%)</title><rect x="1172.6" y="595.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1175.6" y="606.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.08%)</title><rect x="1172.9" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1175.9" y="590.0"></text>
</g>
<g>
<title>ep_item_poll (7 samples, 0.07%)</title><rect x="1173.1" y="563.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.1" y="574.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.05%)</title><rect x="1173.3" y="547.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1176.3" y="558.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.03%)</title><rect x="1173.9" y="579.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1176.9" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.03%)</title><rect x="1174.4" y="595.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1177.4" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (92 samples, 0.92%)</title><rect x="1174.7" y="707.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (91 samples, 0.91%)</title><rect x="1174.7" y="691.0" width="10.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.7" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (67 samples, 0.67%)</title><rect x="1174.7" y="675.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (50 samples, 0.50%)</title><rect x="1175.4" y="659.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1178.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (49 samples, 0.49%)</title><rect x="1175.5" y="643.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1178.5" y="654.0"></text>
</g>
<g>
<title>RequestHandler0_get.handleRequest (49 samples, 0.49%)</title><rect x="1175.5" y="627.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.5" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (3 samples, 0.03%)</title><rect x="1175.5" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.03%)</title><rect x="1175.5" y="595.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1178.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.03%)</title><rect x="1175.5" y="579.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.03%)</title><rect x="1175.5" y="563.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1178.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.get (46 samples, 0.46%)</title><rect x="1175.9" y="611.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1178.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (46 samples, 0.46%)</title><rect x="1175.9" y="595.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1178.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (22 samples, 0.22%)</title><rect x="1175.9" y="579.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (20 samples, 0.20%)</title><rect x="1176.1" y="563.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (20 samples, 0.20%)</title><rect x="1176.1" y="547.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1179.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.20%)</title><rect x="1176.1" y="531.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1179.1" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (20 samples, 0.20%)</title><rect x="1176.1" y="515.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1179.1" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (20 samples, 0.20%)</title><rect x="1176.1" y="499.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1179.1" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.06%)</title><rect x="1176.2" y="483.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1179.2" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.03%)</title><rect x="1176.6" y="467.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1179.6" y="478.0"></text>
</g>
<g>
<title>__pthread_cond_signal (13 samples, 0.13%)</title><rect x="1176.9" y="483.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1179.9" y="494.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.11%)</title><rect x="1177.2" y="467.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1180.2" y="478.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.11%)</title><rect x="1177.2" y="451.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1180.2" y="462.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.10%)</title><rect x="1177.3" y="435.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.3" y="446.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.10%)</title><rect x="1177.3" y="419.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1180.3" y="430.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.09%)</title><rect x="1177.4" y="403.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1180.4" y="414.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 0.07%)</title><rect x="1177.7" y="387.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1180.7" y="398.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 0.07%)</title><rect x="1177.7" y="371.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.7" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.07%)</title><rect x="1177.7" y="355.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1180.7" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.addWorker (24 samples, 0.24%)</title><rect x="1178.5" y="579.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1181.5" y="590.0"></text>
</g>
<g>
<title>java/lang/Thread.start (15 samples, 0.15%)</title><rect x="1178.5" y="563.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1181.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.start0 (15 samples, 0.15%)</title><rect x="1178.5" y="547.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1181.5" y="558.0"></text>
</g>
<g>
<title>JVM_StartThread (8 samples, 0.08%)</title><rect x="1178.5" y="531.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1181.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.05%)</title><rect x="1179.4" y="531.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1182.4" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.&lt;init&gt; (5 samples, 0.05%)</title><rect x="1180.2" y="563.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1183.2" y="574.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder$1.newThread (5 samples, 0.05%)</title><rect x="1180.2" y="547.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1183.2" y="558.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder.access$000 (3 samples, 0.03%)</title><rect x="1180.2" y="531.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1183.2" y="542.0"></text>
</g>
<g>
<title>com/google/common/util/concurrent/ThreadFactoryBuilder.format (3 samples, 0.03%)</title><rect x="1180.2" y="515.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.2" y="526.0"></text>
</g>
<g>
<title>java/lang/String.format (3 samples, 0.03%)</title><rect x="1180.2" y="499.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1183.2" y="510.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.03%)</title><rect x="1180.2" y="483.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1183.2" y="494.0"></text>
</g>
<g>
<title>java/util/Formatter.format (3 samples, 0.03%)</title><rect x="1180.2" y="467.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1183.2" y="478.0"></text>
</g>
<g>
<title>java/util/Formatter.parse (3 samples, 0.03%)</title><rect x="1180.2" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1183.2" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.04%)</title><rect x="1180.8" y="563.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1183.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.04%)</title><rect x="1180.8" y="547.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1183.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.04%)</title><rect x="1180.8" y="531.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1183.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (4 samples, 0.04%)</title><rect x="1180.8" y="515.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1183.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (4 samples, 0.04%)</title><rect x="1180.8" y="499.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1183.8" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.08%)</title><rect x="1181.3" y="659.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1184.3" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="1181.8" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1184.8" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.04%)</title><rect x="1181.8" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1184.8" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (24 samples, 0.24%)</title><rect x="1182.6" y="675.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1185.6" y="686.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (23 samples, 0.23%)</title><rect x="1182.7" y="659.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1185.7" y="670.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.04%)</title><rect x="1182.7" y="643.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1185.7" y="654.0"></text>
</g>
<g>
<title>__libc_recv (19 samples, 0.19%)</title><rect x="1183.2" y="643.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1186.2" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.18%)</title><rect x="1183.3" y="627.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1186.3" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.18%)</title><rect x="1183.3" y="611.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1186.3" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (15 samples, 0.15%)</title><rect x="1183.5" y="595.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.5" y="606.0"></text>
</g>
<g>
<title>__sys_recvfrom (15 samples, 0.15%)</title><rect x="1183.5" y="579.0" width="1.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1186.5" y="590.0"></text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 0.11%)</title><rect x="1183.6" y="563.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1186.6" y="574.0"></text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 0.11%)</title><rect x="1183.6" y="547.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1186.6" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.04%)</title><rect x="1184.5" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1187.5" y="542.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.04%)</title><rect x="1184.5" y="515.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1187.5" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.03%)</title><rect x="1184.9" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1187.9" y="574.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.03%)</title><rect x="1184.9" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1187.9" y="558.0"></text>
</g>
<g>
<title>start_thread (38 samples, 0.38%)</title><rect x="1185.5" y="723.0" width="4.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1188.5" y="734.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (38 samples, 0.38%)</title><rect x="1185.5" y="707.0" width="4.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1188.5" y="718.0"></text>
</g>
<g>
<title>Thread::call_run() (38 samples, 0.38%)</title><rect x="1185.5" y="691.0" width="4.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.5" y="702.0"></text>
</g>
<g>
<title>GangWorker::loop() (34 samples, 0.34%)</title><rect x="1185.5" y="675.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.5" y="686.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (32 samples, 0.32%)</title><rect x="1185.5" y="659.0" width="3.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.5" y="670.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (24 samples, 0.24%)</title><rect x="1185.5" y="643.0" width="2.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.5" y="654.0"></text>
</g>
<g>
<title>SpinPause (24 samples, 0.24%)</title><rect x="1185.5" y="627.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1188.5" y="638.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.04%)</title><rect x="1188.8" y="643.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.8" y="654.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (3 samples, 0.03%)</title><rect x="1188.8" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.8" y="638.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1188.8" y="611.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.8" y="622.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (3 samples, 0.03%)</title><rect x="1188.8" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.8" y="606.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.03%)</title><rect x="1189.6" y="675.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.6" y="686.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.03%)</title><rect x="1189.6" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.6" y="670.0"></text>
</g>
</g>
</svg>
