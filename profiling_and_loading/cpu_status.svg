<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (532 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (532 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="766.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 1.50%)</title><rect x="10.0" y="739.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 1.50%)</title><rect x="10.0" y="723.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.56%)</title><rect x="21.1" y="707.0" width="6.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (134 samples, 25.19%)</title><rect x="27.7" y="739.0" width="297.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="30.7" y="750.0">one/nio/net/NativeSelector.select</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.19%)</title><rect x="30.0" y="723.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.19%)</title><rect x="30.0" y="707.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="33.0" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (132 samples, 24.81%)</title><rect x="32.2" y="723.0" width="292.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.2" y="734.0">one/nio/net/NativeSelector.epollWait</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.94%)</title><rect x="67.7" y="707.0" width="11.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="70.7" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (61 samples, 11.47%)</title><rect x="78.8" y="707.0" width="135.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="81.8" y="718.0">__clock_gettime</text>
</g>
<g>
<title>[vdso] (16 samples, 3.01%)</title><rect x="152.0" y="691.0" width="35.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="155.0" y="702.0">[vd..</text>
</g>
<g>
<title>clock_gettime (12 samples, 2.26%)</title><rect x="187.4" y="691.0" width="26.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="190.4" y="702.0">c..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.38%)</title><rect x="214.1" y="707.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="217.1" y="718.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.19%)</title><rect x="218.5" y="707.0" width="2.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="221.5" y="718.0"></text>
</g>
<g>
<title>clock_gettime (14 samples, 2.63%)</title><rect x="220.7" y="707.0" width="31.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="223.7" y="718.0">cl..</text>
</g>
<g>
<title>epoll_wait (33 samples, 6.20%)</title><rect x="251.8" y="707.0" width="73.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="254.8" y="718.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 5.26%)</title><rect x="262.9" y="691.0" width="62.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="265.9" y="702.0">entry_..</text>
</g>
<g>
<title>do_syscall_64 (28 samples, 5.26%)</title><rect x="262.9" y="675.0" width="62.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="265.9" y="686.0">do_sys..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (16 samples, 3.01%)</title><rect x="285.0" y="659.0" width="35.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="288.0" y="670.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (16 samples, 3.01%)</title><rect x="285.0" y="643.0" width="35.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="288.0" y="654.0">do_..</text>
</g>
<g>
<title>__fget_light (3 samples, 0.56%)</title><rect x="285.0" y="627.0" width="6.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="288.0" y="638.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.56%)</title><rect x="285.0" y="611.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.0" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (6 samples, 1.13%)</title><rect x="291.7" y="627.0" width="13.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="294.7" y="638.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.38%)</title><rect x="291.7" y="611.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="294.7" y="622.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.38%)</title><rect x="296.1" y="611.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="299.1" y="622.0"></text>
</g>
<g>
<title>ep_item_poll (1 samples, 0.19%)</title><rect x="298.3" y="595.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="301.3" y="606.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.19%)</title><rect x="298.3" y="579.0" width="2.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="301.3" y="590.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.19%)</title><rect x="298.3" y="563.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="301.3" y="574.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.19%)</title><rect x="300.6" y="611.0" width="2.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="303.6" y="622.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.19%)</title><rect x="302.8" y="611.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="305.8" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (7 samples, 1.32%)</title><rect x="305.0" y="627.0" width="15.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="308.0" y="638.0"></text>
</g>
<g>
<title>schedule (6 samples, 1.13%)</title><rect x="307.2" y="611.0" width="13.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="310.2" y="622.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.56%)</title><rect x="313.9" y="595.0" width="6.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="316.9" y="606.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.38%)</title><rect x="320.5" y="659.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.5" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.19%)</title><rect x="322.7" y="643.0" width="2.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="325.7" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (390 samples, 73.31%)</title><rect x="325.0" y="739.0" width="865.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="328.0" y="750.0">one/nio/net/Session.process</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.19%)</title><rect x="327.2" y="723.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="330.2" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.19%)</title><rect x="327.2" y="707.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="330.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (388 samples, 72.93%)</title><rect x="329.4" y="723.0" width="860.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.4" y="734.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (317 samples, 59.59%)</title><rect x="329.4" y="707.0" width="703.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.4" y="718.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (292 samples, 54.89%)</title><rect x="353.8" y="691.0" width="647.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="356.8" y="702.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (292 samples, 54.89%)</title><rect x="353.8" y="675.0" width="647.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="356.8" y="686.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler2_status.handleRequest (286 samples, 53.76%)</title><rect x="353.8" y="659.0" width="634.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.8" y="670.0">RequestHandler2_status.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (271 samples, 50.94%)</title><rect x="353.8" y="643.0" width="601.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.8" y="654.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (262 samples, 49.25%)</title><rect x="356.0" y="627.0" width="581.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.0" y="638.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 1.13%)</title><rect x="356.0" y="611.0" width="13.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="359.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 1.13%)</title><rect x="356.0" y="595.0" width="13.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.0" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.38%)</title><rect x="356.0" y="579.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.19%)</title><rect x="360.5" y="579.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="363.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.56%)</title><rect x="362.7" y="579.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="365.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.56%)</title><rect x="362.7" y="563.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="365.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.56%)</title><rect x="362.7" y="547.0" width="6.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.7" y="558.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.19%)</title><rect x="367.1" y="531.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="370.1" y="542.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (256 samples, 48.12%)</title><rect x="369.3" y="611.0" width="567.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.3" y="622.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (256 samples, 48.12%)</title><rect x="369.3" y="595.0" width="567.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="372.3" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (256 samples, 48.12%)</title><rect x="369.3" y="579.0" width="567.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="372.3" y="590.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (256 samples, 48.12%)</title><rect x="369.3" y="563.0" width="567.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.3" y="574.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.94%)</title><rect x="373.8" y="547.0" width="11.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="376.8" y="558.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (4 samples, 0.75%)</title><rect x="373.8" y="531.0" width="8.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="376.8" y="542.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (3 samples, 0.56%)</title><rect x="376.0" y="515.0" width="6.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="379.0" y="526.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.19%)</title><rect x="382.6" y="531.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="385.6" y="542.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.19%)</title><rect x="384.8" y="547.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="387.8" y="558.0"></text>
</g>
<g>
<title>__libc_send (248 samples, 46.62%)</title><rect x="387.1" y="547.0" width="550.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="390.1" y="558.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (240 samples, 45.11%)</title><rect x="404.8" y="531.0" width="532.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="407.8" y="542.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (240 samples, 45.11%)</title><rect x="404.8" y="515.0" width="532.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="407.8" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.19%)</title><rect x="407.0" y="499.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.0" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (235 samples, 44.17%)</title><rect x="409.2" y="499.0" width="521.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="412.2" y="510.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (234 samples, 43.98%)</title><rect x="411.5" y="483.0" width="519.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="414.5" y="494.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (233 samples, 43.80%)</title><rect x="413.7" y="467.0" width="516.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.7" y="478.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (4 samples, 0.75%)</title><rect x="415.9" y="451.0" width="8.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="418.9" y="462.0"></text>
</g>
<g>
<title>inet_send_prepare (2 samples, 0.38%)</title><rect x="420.3" y="435.0" width="4.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.3" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (228 samples, 42.86%)</title><rect x="424.8" y="451.0" width="505.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="427.8" y="462.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.19%)</title><rect x="424.8" y="435.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="427.8" y="446.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.19%)</title><rect x="424.8" y="419.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="427.8" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.19%)</title><rect x="427.0" y="435.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="430.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.19%)</title><rect x="427.0" y="419.0" width="2.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.0" y="430.0"></text>
</g>
<g>
<title>release_sock (3 samples, 0.56%)</title><rect x="429.2" y="435.0" width="6.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="432.2" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.56%)</title><rect x="429.2" y="419.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="432.2" y="430.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.38%)</title><rect x="431.4" y="403.0" width="4.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="434.4" y="414.0"></text>
</g>
<g>
<title>in_lock_functions (2 samples, 0.38%)</title><rect x="431.4" y="387.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="434.4" y="398.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (223 samples, 41.92%)</title><rect x="435.9" y="435.0" width="494.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="438.9" y="446.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (199 samples, 37.41%)</title><rect x="444.7" y="419.0" width="441.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="447.7" y="430.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (199 samples, 37.41%)</title><rect x="444.7" y="403.0" width="441.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.7" y="414.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (194 samples, 36.47%)</title><rect x="449.2" y="387.0" width="430.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.2" y="398.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (187 samples, 35.15%)</title><rect x="458.0" y="371.0" width="414.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.0" y="382.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.38%)</title><rect x="462.5" y="355.0" width="4.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="465.5" y="366.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.19%)</title><rect x="464.7" y="339.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="467.7" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (4 samples, 0.75%)</title><rect x="466.9" y="355.0" width="8.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.9" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.56%)</title><rect x="469.1" y="339.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="472.1" y="350.0"></text>
</g>
<g>
<title>ip_output (179 samples, 33.65%)</title><rect x="475.8" y="355.0" width="397.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="478.8" y="366.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (178 samples, 33.46%)</title><rect x="475.8" y="339.0" width="394.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="478.8" y="350.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (22 samples, 4.14%)</title><rect x="486.9" y="323.0" width="48.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.9" y="334.0">__de..</text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.19%)</title><rect x="489.1" y="307.0" width="2.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="492.1" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (14 samples, 2.63%)</title><rect x="491.3" y="307.0" width="31.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.3" y="318.0">de..</text>
</g>
<g>
<title>loopback_xmit (13 samples, 2.44%)</title><rect x="493.5" y="291.0" width="28.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.5" y="302.0">lo..</text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.19%)</title><rect x="500.2" y="275.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="503.2" y="286.0"></text>
</g>
<g>
<title>netif_rx (7 samples, 1.32%)</title><rect x="502.4" y="275.0" width="15.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="505.4" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (7 samples, 1.32%)</title><rect x="502.4" y="259.0" width="15.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="505.4" y="270.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.19%)</title><rect x="502.4" y="243.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="505.4" y="254.0"></text>
</g>
<g>
<title>enqueue_to_backlog (6 samples, 1.13%)</title><rect x="504.6" y="243.0" width="13.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="507.6" y="254.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.38%)</title><rect x="517.9" y="275.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="520.9" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 1.13%)</title><rect x="522.4" y="307.0" width="13.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="525.4" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.56%)</title><rect x="529.0" y="291.0" width="6.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="532.0" y="302.0"></text>
</g>
<g>
<title>skb_network_protocol (3 samples, 0.56%)</title><rect x="529.0" y="275.0" width="6.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="532.0" y="286.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (151 samples, 28.38%)</title><rect x="535.7" y="323.0" width="334.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="538.7" y="334.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq (149 samples, 28.01%)</title><rect x="537.9" y="307.0" width="330.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="540.9" y="318.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (144 samples, 27.07%)</title><rect x="549.0" y="291.0" width="319.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="552.0" y="302.0">do_softirq_own_stack</text>
</g>
<g>
<title>asm_call_on_stack (144 samples, 27.07%)</title><rect x="549.0" y="275.0" width="319.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="552.0" y="286.0">asm_call_on_stack</text>
</g>
<g>
<title>__softirqentry_text_start (144 samples, 27.07%)</title><rect x="549.0" y="259.0" width="319.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.0" y="270.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (138 samples, 25.94%)</title><rect x="562.3" y="243.0" width="306.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="565.3" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.19%)</title><rect x="571.2" y="227.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="574.2" y="238.0"></text>
</g>
<g>
<title>process_backlog (133 samples, 25.00%)</title><rect x="573.4" y="227.0" width="295.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="576.4" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (127 samples, 23.87%)</title><rect x="586.7" y="211.0" width="281.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="589.7" y="222.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.19%)</title><rect x="586.7" y="195.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="589.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv (126 samples, 23.68%)</title><rect x="588.9" y="195.0" width="279.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="591.9" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (124 samples, 23.31%)</title><rect x="591.1" y="179.0" width="275.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="594.1" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (122 samples, 22.93%)</title><rect x="595.6" y="163.0" width="270.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="598.6" y="174.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (122 samples, 22.93%)</title><rect x="595.6" y="147.0" width="270.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="598.6" y="158.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.38%)</title><rect x="595.6" y="131.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="598.6" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (120 samples, 22.56%)</title><rect x="600.0" y="131.0" width="266.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.0" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 1.69%)</title><rect x="608.9" y="115.0" width="19.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.9" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (3 samples, 0.56%)</title><rect x="622.2" y="99.0" width="6.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="625.2" y="110.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.19%)</title><rect x="628.8" y="115.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="631.8" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (104 samples, 19.55%)</title><rect x="631.1" y="115.0" width="230.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="634.1" y="126.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.19%)</title><rect x="631.1" y="99.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="634.1" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (103 samples, 19.36%)</title><rect x="633.3" y="99.0" width="228.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.3" y="110.0">tcp_rcv_established</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.19%)</title><rect x="637.7" y="83.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="640.7" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.19%)</title><rect x="639.9" y="83.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="642.9" y="94.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.19%)</title><rect x="639.9" y="67.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="642.9" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (65 samples, 12.22%)</title><rect x="642.1" y="83.0" width="144.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="645.1" y="94.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_common_lock (61 samples, 11.47%)</title><rect x="646.6" y="67.0" width="135.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="649.6" y="78.0">__wake_up_common_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.19%)</title><rect x="648.8" y="51.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="651.8" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (59 samples, 11.09%)</title><rect x="651.0" y="51.0" width="130.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="654.0" y="62.0">_raw_spin_unlock..</text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.38%)</title><rect x="781.9" y="67.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack (30 samples, 5.64%)</title><rect x="786.3" y="83.0" width="66.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="789.3" y="94.0">tcp_ack</text>
</g>
<g>
<title>__kfree_skb (11 samples, 2.07%)</title><rect x="801.8" y="67.0" width="24.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="804.8" y="78.0">_..</text>
</g>
<g>
<title>kfree (8 samples, 1.50%)</title><rect x="801.8" y="51.0" width="17.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="804.8" y="62.0"></text>
</g>
<g>
<title>__slab_free (3 samples, 0.56%)</title><rect x="804.1" y="35.0" width="6.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="807.1" y="46.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (4 samples, 0.75%)</title><rect x="810.7" y="35.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="813.7" y="46.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.38%)</title><rect x="819.6" y="51.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="822.6" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.19%)</title><rect x="824.0" y="51.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="827.0" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.19%)</title><rect x="826.2" y="67.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="829.2" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.19%)</title><rect x="828.5" y="67.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="831.5" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.19%)</title><rect x="830.7" y="67.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="833.7" y="78.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (1 samples, 0.19%)</title><rect x="830.7" y="51.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="833.7" y="62.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (3 samples, 0.56%)</title><rect x="832.9" y="67.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="835.9" y="78.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.19%)</title><rect x="839.5" y="67.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="842.5" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.19%)</title><rect x="841.8" y="67.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="844.8" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.19%)</title><rect x="844.0" y="67.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="847.0" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (2 samples, 0.38%)</title><rect x="846.2" y="67.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="849.2" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.19%)</title><rect x="850.6" y="67.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="853.6" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.19%)</title><rect x="852.9" y="83.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="855.9" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.19%)</title><rect x="855.1" y="83.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="858.1" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.19%)</title><rect x="855.1" y="67.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="858.1" y="78.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.19%)</title><rect x="855.1" y="51.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="858.1" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.38%)</title><rect x="857.3" y="83.0" width="4.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="860.3" y="94.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.38%)</title><rect x="861.7" y="115.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="864.7" y="126.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.19%)</title><rect x="866.2" y="179.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.2" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.constprop.0 (1 samples, 0.19%)</title><rect x="866.2" y="163.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="869.2" y="174.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.19%)</title><rect x="868.4" y="307.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="871.4" y="318.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.19%)</title><rect x="870.6" y="339.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="873.6" y="350.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.19%)</title><rect x="870.6" y="323.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="873.6" y="334.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.19%)</title><rect x="870.6" y="307.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.6" y="318.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.19%)</title><rect x="872.8" y="371.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="875.8" y="382.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.38%)</title><rect x="875.0" y="371.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="878.0" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.56%)</title><rect x="879.5" y="387.0" width="6.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="882.5" y="398.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.19%)</title><rect x="879.5" y="371.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="882.5" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.19%)</title><rect x="881.7" y="371.0" width="2.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="884.7" y="382.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.19%)</title><rect x="881.7" y="355.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="884.7" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.19%)</title><rect x="883.9" y="371.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="886.9" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (3 samples, 0.56%)</title><rect x="886.1" y="419.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="889.1" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (3 samples, 0.56%)</title><rect x="886.1" y="403.0" width="6.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="889.1" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 1.32%)</title><rect x="892.8" y="419.0" width="15.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="895.8" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 1.13%)</title><rect x="892.8" y="403.0" width="13.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="895.8" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.38%)</title><rect x="892.8" y="387.0" width="4.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="895.8" y="398.0"></text>
</g>
<g>
<title>kmalloc_slab (2 samples, 0.38%)</title><rect x="892.8" y="371.0" width="4.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="895.8" y="382.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.75%)</title><rect x="897.2" y="387.0" width="8.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.2" y="398.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.19%)</title><rect x="906.1" y="403.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="909.1" y="414.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (4 samples, 0.75%)</title><rect x="908.3" y="419.0" width="8.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="911.3" y="430.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.56%)</title><rect x="910.5" y="403.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="913.5" y="414.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.38%)</title><rect x="912.7" y="387.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="915.7" y="398.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.19%)</title><rect x="917.2" y="419.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.2" y="430.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.19%)</title><rect x="919.4" y="419.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="922.4" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.75%)</title><rect x="921.6" y="419.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.6" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.75%)</title><rect x="921.6" y="403.0" width="8.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="924.6" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.19%)</title><rect x="928.3" y="387.0" width="2.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="931.3" y="398.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.56%)</title><rect x="930.5" y="499.0" width="6.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="933.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 1.13%)</title><rect x="937.1" y="627.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="940.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.94%)</title><rect x="939.4" y="611.0" width="11.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="942.4" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.75%)</title><rect x="941.6" y="595.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="944.6" y="606.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.56%)</title><rect x="943.8" y="579.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="946.8" y="590.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.56%)</title><rect x="943.8" y="563.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="946.8" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.38%)</title><rect x="946.0" y="547.0" width="4.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="949.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (2 samples, 0.38%)</title><rect x="950.5" y="627.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="953.5" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceImpl.status (15 samples, 2.82%)</title><rect x="954.9" y="643.0" width="33.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="957.9" y="654.0">ru..</text>
</g>
<g>
<title>one/nio/http/Response.ok (15 samples, 2.82%)</title><rect x="954.9" y="627.0" width="33.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.9" y="638.0">on..</text>
</g>
<g>
<title>java/lang/String.getBytes (5 samples, 0.94%)</title><rect x="954.9" y="611.0" width="11.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="957.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.38%)</title><rect x="957.1" y="595.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.1" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.38%)</title><rect x="961.5" y="595.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.5" y="606.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.38%)</title><rect x="961.5" y="579.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.5" y="590.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.38%)</title><rect x="961.5" y="563.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.75%)</title><rect x="966.0" y="611.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (6 samples, 1.13%)</title><rect x="974.8" y="611.0" width="13.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="977.8" y="622.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.19%)</title><rect x="981.5" y="595.0" width="2.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="984.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.38%)</title><rect x="983.7" y="595.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="986.7" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (4 samples, 0.75%)</title><rect x="988.2" y="659.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="991.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.38%)</title><rect x="997.0" y="659.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1000.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.38%)</title><rect x="997.0" y="643.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1000.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.19%)</title><rect x="997.0" y="627.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1000.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.19%)</title><rect x="997.0" y="611.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1000.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.19%)</title><rect x="999.2" y="627.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.2" y="638.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.19%)</title><rect x="999.2" y="611.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.19%)</title><rect x="999.2" y="595.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 1.88%)</title><rect x="1001.5" y="691.0" width="22.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1004.5" y="702.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.19%)</title><rect x="1003.7" y="675.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1006.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.94%)</title><rect x="1005.9" y="675.0" width="11.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1008.9" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.94%)</title><rect x="1005.9" y="659.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1008.9" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.56%)</title><rect x="1017.0" y="675.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1020.0" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.38%)</title><rect x="1019.2" y="659.0" width="4.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1022.2" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.75%)</title><rect x="1023.6" y="691.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1026.6" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.56%)</title><rect x="1025.9" y="675.0" width="6.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1028.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (71 samples, 13.35%)</title><rect x="1032.5" y="707.0" width="157.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1035.5" y="718.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (70 samples, 13.16%)</title><rect x="1034.7" y="691.0" width="155.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1037.7" y="702.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (1 samples, 0.19%)</title><rect x="1045.8" y="675.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1048.8" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (21 samples, 3.95%)</title><rect x="1048.0" y="675.0" width="46.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1051.0" y="686.0">Java..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (14 samples, 2.63%)</title><rect x="1052.5" y="659.0" width="31.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1055.5" y="670.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk/lib/server/libjvm.so (3 samples, 0.56%)</title><rect x="1076.9" y="643.0" width="6.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1079.9" y="654.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.94%)</title><rect x="1083.5" y="659.0" width="11.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1086.5" y="670.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.19%)</title><rect x="1094.6" y="675.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1097.6" y="686.0"></text>
</g>
<g>
<title>__libc_recv (42 samples, 7.89%)</title><rect x="1096.8" y="675.0" width="93.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1099.8" y="686.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 6.77%)</title><rect x="1110.2" y="659.0" width="79.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1113.2" y="670.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (36 samples, 6.77%)</title><rect x="1110.2" y="643.0" width="79.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1113.2" y="654.0">do_syscal..</text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.38%)</title><rect x="1125.7" y="627.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1128.7" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.19%)</title><rect x="1127.9" y="611.0" width="2.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1130.9" y="622.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.19%)</title><rect x="1127.9" y="595.0" width="2.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1130.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (27 samples, 5.08%)</title><rect x="1130.1" y="627.0" width="59.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1133.1" y="638.0">__x64_..</text>
</g>
<g>
<title>__sys_recvfrom (27 samples, 5.08%)</title><rect x="1130.1" y="611.0" width="59.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1133.1" y="622.0">__sys_..</text>
</g>
<g>
<title>inet6_recvmsg (23 samples, 4.32%)</title><rect x="1134.5" y="595.0" width="51.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1137.5" y="606.0">inet6..</text>
</g>
<g>
<title>tcp_recvmsg (23 samples, 4.32%)</title><rect x="1134.5" y="579.0" width="51.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1137.5" y="590.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.75%)</title><rect x="1143.4" y="563.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1146.4" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (4 samples, 0.75%)</title><rect x="1143.4" y="547.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1146.4" y="558.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.75%)</title><rect x="1143.4" y="531.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1146.4" y="542.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.75%)</title><rect x="1152.3" y="563.0" width="8.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.3" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.75%)</title><rect x="1152.3" y="547.0" width="8.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1155.3" y="558.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.19%)</title><rect x="1158.9" y="531.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1161.9" y="542.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.19%)</title><rect x="1161.2" y="563.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1164.2" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.19%)</title><rect x="1161.2" y="547.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1164.2" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.75%)</title><rect x="1163.4" y="563.0" width="8.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1166.4" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.75%)</title><rect x="1163.4" y="547.0" width="8.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1166.4" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.19%)</title><rect x="1163.4" y="531.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1166.4" y="542.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.56%)</title><rect x="1165.6" y="531.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.6" y="542.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.56%)</title><rect x="1165.6" y="515.0" width="6.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1168.6" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.19%)</title><rect x="1170.0" y="499.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1173.0" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.19%)</title><rect x="1172.3" y="563.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1175.3" y="574.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.19%)</title><rect x="1172.3" y="547.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1175.3" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (5 samples, 0.94%)</title><rect x="1174.5" y="563.0" width="11.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1177.5" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (5 samples, 0.94%)</title><rect x="1174.5" y="547.0" width="11.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1177.5" y="558.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.56%)</title><rect x="1178.9" y="531.0" width="6.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1181.9" y="542.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.19%)</title><rect x="1183.3" y="515.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1186.3" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.38%)</title><rect x="1185.6" y="595.0" width="4.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1188.6" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.38%)</title><rect x="1185.6" y="579.0" width="4.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.6" y="590.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.19%)</title><rect x="1187.8" y="563.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1190.8" y="574.0"></text>
</g>
</g>
</svg>
