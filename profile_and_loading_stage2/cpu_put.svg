<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (1,479 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,445 samples, 97.70%)</title><rect x="10.0" y="755.0" width="1152.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="766.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (10 samples, 0.68%)</title><rect x="13.2" y="739.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="16.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (10 samples, 0.68%)</title><rect x="13.2" y="723.0" width="8.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="16.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.07%)</title><rect x="20.4" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.07%)</title><rect x="21.2" y="739.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (277 samples, 18.73%)</title><rect x="22.0" y="739.0" width="221.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.0" y="750.0">one/nio/net/NativeSelector.se..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (8 samples, 0.54%)</title><rect x="32.3" y="723.0" width="6.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (8 samples, 0.54%)</title><rect x="32.3" y="707.0" width="6.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (256 samples, 17.31%)</title><rect x="38.7" y="723.0" width="204.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.7" y="734.0">one/nio/net/NativeSelector...</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.41%)</title><rect x="52.3" y="707.0" width="4.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="55.3" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (10 samples, 0.68%)</title><rect x="57.1" y="707.0" width="8.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="60.1" y="718.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="60.3" y="691.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="63.3" y="702.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.34%)</title><rect x="61.1" y="691.0" width="4.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="64.1" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.47%)</title><rect x="65.1" y="707.0" width="5.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="68.1" y="718.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.41%)</title><rect x="70.6" y="707.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="73.6" y="718.0"></text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 0.07%)</title><rect x="75.4" y="707.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="78.4" y="718.0"></text>
</g>
<g>
<title>epoll_wait (208 samples, 14.06%)</title><rect x="76.2" y="707.0" width="166.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="79.2" y="718.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (171 samples, 11.56%)</title><rect x="105.7" y="691.0" width="136.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.7" y="702.0">entry_SYSCALL_64_..</text>
</g>
<g>
<title>do_syscall_64 (171 samples, 11.56%)</title><rect x="105.7" y="675.0" width="136.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.7" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (11 samples, 0.74%)</title><rect x="116.9" y="659.0" width="8.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="119.9" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (9 samples, 0.61%)</title><rect x="118.5" y="643.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="121.5" y="654.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="123.3" y="627.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="126.3" y="638.0"></text>
</g>
<g>
<title>path_put (2 samples, 0.14%)</title><rect x="124.1" y="627.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="127.1" y="638.0"></text>
</g>
<g>
<title>dput (2 samples, 0.14%)</title><rect x="124.1" y="611.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.1" y="622.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (143 samples, 9.67%)</title><rect x="125.7" y="659.0" width="114.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="128.7" y="670.0">__x64_sys_epol..</text>
</g>
<g>
<title>do_epoll_wait (143 samples, 9.67%)</title><rect x="125.7" y="643.0" width="114.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="128.7" y="654.0">do_epoll_wait</text>
</g>
<g>
<title>__fget_light (6 samples, 0.41%)</title><rect x="134.5" y="627.0" width="4.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="137.5" y="638.0"></text>
</g>
<g>
<title>__fget_files (6 samples, 0.41%)</title><rect x="134.5" y="611.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.5" y="622.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (1 samples, 0.07%)</title><rect x="139.2" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="142.2" y="638.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (53 samples, 3.58%)</title><rect x="140.0" y="627.0" width="42.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.0" y="638.0">ep_s..</text>
</g>
<g>
<title>_raw_write_unlock_irq (6 samples, 0.41%)</title><rect x="141.6" y="611.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="144.6" y="622.0"></text>
</g>
<g>
<title>ep_send_events_proc (39 samples, 2.64%)</title><rect x="146.4" y="611.0" width="31.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="149.4" y="622.0">ep..</text>
</g>
<g>
<title>ep_item_poll (36 samples, 2.43%)</title><rect x="148.8" y="595.0" width="28.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="151.8" y="606.0">ep..</text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.07%)</title><rect x="157.6" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="160.6" y="590.0"></text>
</g>
<g>
<title>sock_poll (24 samples, 1.62%)</title><rect x="158.4" y="579.0" width="19.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="161.4" y="590.0"></text>
</g>
<g>
<title>tcp_poll (12 samples, 0.81%)</title><rect x="168.0" y="563.0" width="9.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="171.0" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.20%)</title><rect x="175.2" y="547.0" width="2.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="178.2" y="558.0"></text>
</g>
<g>
<title>mutex_lock (6 samples, 0.41%)</title><rect x="177.5" y="611.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="180.5" y="622.0"></text>
</g>
<g>
<title>fput_many (4 samples, 0.27%)</title><rect x="182.3" y="627.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.3" y="638.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (68 samples, 4.60%)</title><rect x="185.5" y="627.0" width="54.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="188.5" y="638.0">sched..</text>
</g>
<g>
<title>schedule (66 samples, 4.46%)</title><rect x="187.1" y="611.0" width="52.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="190.1" y="622.0">sched..</text>
</g>
<g>
<title>__schedule (62 samples, 4.19%)</title><rect x="187.9" y="595.0" width="49.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="190.9" y="606.0">__sch..</text>
</g>
<g>
<title>finish_task_switch (55 samples, 3.72%)</title><rect x="193.5" y="579.0" width="43.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.5" y="590.0">fini..</text>
</g>
<g>
<title>_raw_spin_unlock_irq (53 samples, 3.58%)</title><rect x="195.1" y="563.0" width="42.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="198.1" y="574.0">_raw..</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="235.8" y="547.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="238.8" y="558.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="235.8" y="531.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="238.8" y="542.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="235.8" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="238.8" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="235.8" y="499.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="238.8" y="510.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="235.8" y="483.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="238.8" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="235.8" y="467.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="238.8" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.07%)</title><rect x="235.8" y="451.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="238.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="235.8" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="238.8" y="446.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.07%)</title><rect x="236.6" y="547.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="239.6" y="558.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="237.4" y="595.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="240.4" y="606.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.14%)</title><rect x="238.2" y="595.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="241.2" y="606.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.20%)</title><rect x="239.8" y="659.0" width="2.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="242.8" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.07%)</title><rect x="240.6" y="643.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="243.6" y="654.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.07%)</title><rect x="241.4" y="643.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="244.4" y="654.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.07%)</title><rect x="242.2" y="707.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="245.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,153 samples, 77.96%)</title><rect x="243.0" y="739.0" width="919.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.0" y="750.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,138 samples, 76.94%)</title><rect x="253.3" y="723.0" width="908.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.3" y="734.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (955 samples, 64.57%)</title><rect x="254.1" y="707.0" width="762.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="257.1" y="718.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (903 samples, 61.05%)</title><rect x="257.3" y="691.0" width="720.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="260.3" y="702.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (903 samples, 61.05%)</title><rect x="257.3" y="675.0" width="720.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.3" y="686.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_upsert.handleRequest (895 samples, 60.51%)</title><rect x="257.3" y="659.0" width="714.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.3" y="670.0">RequestHandler0_upsert.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (606 samples, 40.97%)</title><rect x="257.3" y="643.0" width="483.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="260.3" y="654.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.07%)</title><rect x="264.5" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.5" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="264.5" y="611.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.5" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="264.5" y="595.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (592 samples, 40.03%)</title><rect x="265.3" y="627.0" width="472.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.3" y="638.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (20 samples, 1.35%)</title><rect x="265.3" y="611.0" width="16.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="268.3" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.14%)</title><rect x="268.5" y="595.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="271.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.07%)</title><rect x="270.1" y="595.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.1" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (13 samples, 0.88%)</title><rect x="270.9" y="595.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="273.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.20%)</title><rect x="270.9" y="579.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="273.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (3 samples, 0.20%)</title><rect x="270.9" y="563.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.9" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (6 samples, 0.41%)</title><rect x="273.3" y="579.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="276.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.27%)</title><rect x="278.1" y="579.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.27%)</title><rect x="278.1" y="563.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.1" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.27%)</title><rect x="278.1" y="547.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="281.1" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (572 samples, 38.67%)</title><rect x="281.3" y="611.0" width="456.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="284.3" y="622.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (569 samples, 38.47%)</title><rect x="283.7" y="595.0" width="453.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="286.7" y="606.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (567 samples, 38.34%)</title><rect x="284.5" y="579.0" width="452.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.5" y="590.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (565 samples, 38.20%)</title><rect x="286.1" y="563.0" width="450.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.1" y="574.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 1.22%)</title><rect x="288.4" y="547.0" width="14.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="291.4" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.14%)</title><rect x="291.6" y="531.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="294.6" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (12 samples, 0.81%)</title><rect x="293.2" y="531.0" width="9.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="296.2" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.14%)</title><rect x="298.0" y="515.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="301.0" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.14%)</title><rect x="299.6" y="515.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="302.6" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.14%)</title><rect x="301.2" y="515.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="304.2" y="526.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.14%)</title><rect x="302.8" y="547.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="305.8" y="558.0"></text>
</g>
<g>
<title>__libc_send (541 samples, 36.58%)</title><rect x="304.4" y="547.0" width="431.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="307.4" y="558.0">__libc_send</text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.07%)</title><rect x="314.8" y="531.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="317.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (527 samples, 35.63%)</title><rect x="315.6" y="531.0" width="420.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="318.6" y="542.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (527 samples, 35.63%)</title><rect x="315.6" y="515.0" width="420.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="318.6" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (4 samples, 0.27%)</title><rect x="325.9" y="499.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.9" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.27%)</title><rect x="325.9" y="483.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="328.9" y="494.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="327.5" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="330.5" y="478.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="327.5" y="451.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="330.5" y="462.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="327.5" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="330.5" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="327.5" y="419.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="330.5" y="430.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="327.5" y="403.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.5" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="327.5" y="387.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="330.5" y="398.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.07%)</title><rect x="327.5" y="371.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="330.5" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="327.5" y="355.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="330.5" y="366.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.07%)</title><rect x="328.3" y="467.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="331.3" y="478.0"></text>
</g>
<g>
<title>__x64_sys_sendto (508 samples, 34.35%)</title><rect x="329.1" y="499.0" width="405.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.1" y="510.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (506 samples, 34.21%)</title><rect x="330.7" y="483.0" width="403.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="333.7" y="494.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (3 samples, 0.20%)</title><rect x="335.5" y="467.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.5" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (487 samples, 32.93%)</title><rect x="337.9" y="467.0" width="388.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="340.9" y="478.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.14%)</title><rect x="337.9" y="451.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="340.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (485 samples, 32.79%)</title><rect x="339.5" y="451.0" width="387.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="342.5" y="462.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.14%)</title><rect x="339.5" y="435.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="342.5" y="446.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.07%)</title><rect x="340.3" y="419.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="343.3" y="430.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.14%)</title><rect x="341.1" y="435.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="344.1" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.14%)</title><rect x="341.1" y="419.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.1" y="430.0"></text>
</g>
<g>
<title>release_sock (5 samples, 0.34%)</title><rect x="342.7" y="435.0" width="4.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="345.7" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.20%)</title><rect x="343.5" y="419.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="346.5" y="430.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="345.1" y="403.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="348.1" y="414.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.07%)</title><rect x="345.9" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="348.9" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (476 samples, 32.18%)</title><rect x="346.7" y="435.0" width="379.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="349.7" y="446.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (401 samples, 27.11%)</title><rect x="352.3" y="419.0" width="319.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="355.3" y="430.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (401 samples, 27.11%)</title><rect x="352.3" y="403.0" width="319.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="355.3" y="414.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (374 samples, 25.29%)</title><rect x="363.4" y="387.0" width="298.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="366.4" y="398.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (332 samples, 22.45%)</title><rect x="379.4" y="371.0" width="264.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="382.4" y="382.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.20%)</title><rect x="381.8" y="355.0" width="2.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="384.8" y="366.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.07%)</title><rect x="383.4" y="339.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="386.4" y="350.0"></text>
</g>
<g>
<title>__sk_dst_check (8 samples, 0.54%)</title><rect x="384.2" y="355.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="387.2" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (6 samples, 0.41%)</title><rect x="385.8" y="339.0" width="4.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="388.8" y="350.0"></text>
</g>
<g>
<title>ip_output (318 samples, 21.50%)</title><rect x="390.6" y="355.0" width="253.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="393.6" y="366.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.20%)</title><rect x="395.4" y="339.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.4" y="350.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.14%)</title><rect x="396.2" y="323.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="399.2" y="334.0"></text>
</g>
<g>
<title>ip_finish_output2 (301 samples, 20.35%)</title><rect x="397.7" y="339.0" width="240.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="400.7" y="350.0">ip_finish_output2</text>
</g>
<g>
<title>__dev_queue_xmit (31 samples, 2.10%)</title><rect x="404.1" y="323.0" width="24.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="407.1" y="334.0">_..</text>
</g>
<g>
<title>dev_hard_start_xmit (21 samples, 1.42%)</title><rect x="409.7" y="307.0" width="16.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="412.7" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (18 samples, 1.22%)</title><rect x="412.1" y="291.0" width="14.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.1" y="302.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.07%)</title><rect x="416.1" y="275.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="419.1" y="286.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.61%)</title><rect x="416.9" y="275.0" width="7.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="419.9" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.61%)</title><rect x="416.9" y="259.0" width="7.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="419.9" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (9 samples, 0.61%)</title><rect x="416.9" y="243.0" width="7.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="419.9" y="254.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.07%)</title><rect x="424.1" y="275.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.1" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.14%)</title><rect x="424.9" y="275.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="427.9" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.20%)</title><rect x="426.5" y="307.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.5" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.07%)</title><rect x="427.3" y="291.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="430.3" y="302.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.07%)</title><rect x="427.3" y="275.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="430.3" y="286.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.07%)</title><rect x="428.1" y="291.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="431.1" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (261 samples, 17.65%)</title><rect x="428.9" y="323.0" width="208.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="431.9" y="334.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq (259 samples, 17.51%)</title><rect x="429.7" y="307.0" width="206.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="432.7" y="318.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (249 samples, 16.84%)</title><rect x="437.6" y="291.0" width="198.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="440.6" y="302.0">do_softirq_own_stack</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (249 samples, 16.84%)</title><rect x="437.6" y="275.0" width="198.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="440.6" y="286.0">asm_call_sysvec_on_stack</text>
</g>
<g>
<title>__softirqentry_text_start (249 samples, 16.84%)</title><rect x="437.6" y="259.0" width="198.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.6" y="270.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (239 samples, 16.16%)</title><rect x="445.6" y="243.0" width="190.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="448.6" y="254.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.07%)</title><rect x="447.2" y="227.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="450.2" y="238.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.07%)</title><rect x="448.0" y="227.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="451.0" y="238.0"></text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.07%)</title><rect x="448.8" y="227.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="451.8" y="238.0"></text>
</g>
<g>
<title>process_backlog (234 samples, 15.82%)</title><rect x="449.6" y="227.0" width="186.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="452.6" y="238.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb_one_core (231 samples, 15.62%)</title><rect x="452.0" y="211.0" width="184.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.0" y="222.0">__netif_receive_skb_one_..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.41%)</title><rect x="452.8" y="195.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.8" y="206.0"></text>
</g>
<g>
<title>ip_rcv (224 samples, 15.15%)</title><rect x="457.6" y="195.0" width="178.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.6" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (212 samples, 14.33%)</title><rect x="457.6" y="179.0" width="169.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="460.6" y="190.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (208 samples, 14.06%)</title><rect x="460.8" y="163.0" width="165.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="463.8" y="174.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (207 samples, 14.00%)</title><rect x="461.6" y="147.0" width="165.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="464.6" y="158.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.14%)</title><rect x="464.8" y="131.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="467.8" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (201 samples, 13.59%)</title><rect x="466.4" y="131.0" width="160.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="469.4" y="142.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (14 samples, 0.95%)</title><rect x="471.1" y="115.0" width="11.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="474.1" y="126.0"></text>
</g>
<g>
<title>inet_ehashfn (4 samples, 0.27%)</title><rect x="479.1" y="99.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="482.1" y="110.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.07%)</title><rect x="482.3" y="115.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.3" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (4 samples, 0.27%)</title><rect x="483.1" y="115.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="486.1" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.07%)</title><rect x="484.7" y="99.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="487.7" y="110.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.07%)</title><rect x="484.7" y="83.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="487.7" y="94.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.07%)</title><rect x="485.5" y="99.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.5" y="110.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (172 samples, 11.63%)</title><rect x="486.3" y="115.0" width="137.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="489.3" y="126.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.07%)</title><rect x="487.1" y="99.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="490.1" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (170 samples, 11.49%)</title><rect x="487.9" y="99.0" width="135.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="490.9" y="110.0">tcp_rcv_established</text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.07%)</title><rect x="491.9" y="83.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="494.9" y="94.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.14%)</title><rect x="492.7" y="83.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="495.7" y="94.0"></text>
</g>
<g>
<title>ktime_get_seconds (2 samples, 0.14%)</title><rect x="494.3" y="83.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="497.3" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.54%)</title><rect x="495.9" y="83.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="498.9" y="94.0"></text>
</g>
<g>
<title>__mod_timer (7 samples, 0.47%)</title><rect x="496.7" y="67.0" width="5.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="499.7" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.47%)</title><rect x="496.7" y="51.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="499.7" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (80 samples, 5.41%)</title><rect x="502.3" y="83.0" width="63.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="505.3" y="94.0">sock_de..</text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.14%)</title><rect x="503.9" y="67.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="506.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (76 samples, 5.14%)</title><rect x="505.5" y="67.0" width="60.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="508.5" y="78.0">__wake..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (74 samples, 5.00%)</title><rect x="507.1" y="51.0" width="59.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="510.1" y="62.0">_raw_s..</text>
</g>
<g>
<title>tcp_ack (57 samples, 3.85%)</title><rect x="566.1" y="83.0" width="45.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="569.1" y="94.0">tcp_..</text>
</g>
<g>
<title>__kfree_skb (18 samples, 1.22%)</title><rect x="579.7" y="67.0" width="14.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="582.7" y="78.0"></text>
</g>
<g>
<title>kfree (8 samples, 0.54%)</title><rect x="579.7" y="51.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="582.7" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.14%)</title><rect x="582.0" y="35.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="585.0" y="46.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (3 samples, 0.20%)</title><rect x="583.6" y="35.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="586.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (9 samples, 0.61%)</title><rect x="586.0" y="51.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="589.0" y="62.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.07%)</title><rect x="593.2" y="51.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.2" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.14%)</title><rect x="594.0" y="67.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="597.0" y="78.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.07%)</title><rect x="595.6" y="67.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="598.6" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (8 samples, 0.54%)</title><rect x="596.4" y="67.0" width="6.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="599.4" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.14%)</title><rect x="597.2" y="51.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.2" y="62.0"></text>
</g>
<g>
<title>cache_from_obj (4 samples, 0.27%)</title><rect x="598.8" y="51.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="601.8" y="62.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (1 samples, 0.07%)</title><rect x="602.0" y="51.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="605.0" y="62.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.07%)</title><rect x="602.8" y="67.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.8" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (3 samples, 0.20%)</title><rect x="603.6" y="67.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="606.6" y="78.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.07%)</title><rect x="606.0" y="67.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="609.0" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.07%)</title><rect x="606.8" y="67.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.8" y="78.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.07%)</title><rect x="607.6" y="67.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="610.6" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (3 samples, 0.20%)</title><rect x="608.4" y="67.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="611.4" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.07%)</title><rect x="610.8" y="67.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="613.8" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.20%)</title><rect x="611.6" y="83.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="614.6" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.07%)</title><rect x="614.0" y="83.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="617.0" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.14%)</title><rect x="614.8" y="83.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="617.8" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (7 samples, 0.47%)</title><rect x="616.4" y="83.0" width="5.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="619.4" y="94.0"></text>
</g>
<g>
<title>ktime_get (5 samples, 0.34%)</title><rect x="618.0" y="67.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="621.0" y="78.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.20%)</title><rect x="619.5" y="51.0" width="2.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="622.5" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.07%)</title><rect x="621.9" y="83.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="624.9" y="94.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.07%)</title><rect x="622.7" y="83.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="625.7" y="94.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (3 samples, 0.20%)</title><rect x="623.5" y="115.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="626.5" y="126.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.07%)</title><rect x="625.9" y="115.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="628.9" y="126.0"></text>
</g>
<g>
<title>ip_rcv_core (8 samples, 0.54%)</title><rect x="626.7" y="179.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="629.7" y="190.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.07%)</title><rect x="632.3" y="163.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="635.3" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.27%)</title><rect x="633.1" y="179.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="636.1" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.constprop.0 (2 samples, 0.14%)</title><rect x="634.7" y="163.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="637.7" y="174.0"></text>
</g>
<g>
<title>preempt_schedule_thunk (1 samples, 0.07%)</title><rect x="636.3" y="307.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.3" y="318.0"></text>
</g>
<g>
<title>preempt_schedule (1 samples, 0.07%)</title><rect x="636.3" y="291.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="639.3" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="637.1" y="323.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="640.1" y="334.0"></text>
</g>
<g>
<title>ip_finish_output (8 samples, 0.54%)</title><rect x="637.9" y="339.0" width="6.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.9" y="350.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (8 samples, 0.54%)</title><rect x="637.9" y="323.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="640.9" y="334.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.07%)</title><rect x="641.9" y="307.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="644.9" y="318.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.14%)</title><rect x="642.7" y="307.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.7" y="318.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.14%)</title><rect x="644.3" y="371.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="647.3" y="382.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (6 samples, 0.41%)</title><rect x="645.9" y="371.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="648.9" y="382.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.07%)</title><rect x="650.7" y="371.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="653.7" y="382.0"></text>
</g>
<g>
<title>skb_clone (6 samples, 0.41%)</title><rect x="651.5" y="371.0" width="4.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="654.5" y="382.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.07%)</title><rect x="656.2" y="371.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="659.2" y="382.0"></text>
</g>
<g>
<title>tcp_options_write (2 samples, 0.14%)</title><rect x="657.0" y="371.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="660.0" y="382.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.07%)</title><rect x="658.6" y="371.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="661.6" y="382.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.07%)</title><rect x="659.4" y="371.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="662.4" y="382.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.14%)</title><rect x="660.2" y="371.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="663.2" y="382.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.27%)</title><rect x="661.8" y="387.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="664.8" y="398.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.20%)</title><rect x="662.6" y="371.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="665.6" y="382.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.07%)</title><rect x="665.0" y="387.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="668.0" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (8 samples, 0.54%)</title><rect x="665.8" y="387.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.8" y="398.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.07%)</title><rect x="667.4" y="371.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="670.4" y="382.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.20%)</title><rect x="668.2" y="371.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="671.2" y="382.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.14%)</title><rect x="668.2" y="355.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="671.2" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.07%)</title><rect x="669.0" y="339.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="672.0" y="350.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.07%)</title><rect x="669.8" y="355.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="672.8" y="366.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.07%)</title><rect x="670.6" y="371.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="673.6" y="382.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.07%)</title><rect x="671.4" y="371.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="674.4" y="382.0"></text>
</g>
<g>
<title>sk_page_frag_refill (6 samples, 0.41%)</title><rect x="672.2" y="419.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="675.2" y="430.0"></text>
</g>
<g>
<title>skb_page_frag_refill (5 samples, 0.34%)</title><rect x="673.0" y="403.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="676.0" y="414.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (29 samples, 1.96%)</title><rect x="677.0" y="419.0" width="23.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="680.0" y="430.0">s..</text>
</g>
<g>
<title>__alloc_skb (28 samples, 1.89%)</title><rect x="677.8" y="403.0" width="22.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="680.8" y="414.0">_..</text>
</g>
<g>
<title>__kmalloc_node_track_caller (16 samples, 1.08%)</title><rect x="677.8" y="387.0" width="12.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="680.8" y="398.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.0 (1 samples, 0.07%)</title><rect x="684.2" y="371.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="687.2" y="382.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.14%)</title><rect x="685.0" y="371.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="688.0" y="382.0"></text>
</g>
<g>
<title>memset (1 samples, 0.07%)</title><rect x="686.6" y="371.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="689.6" y="382.0"></text>
</g>
<g>
<title>memset_erms (4 samples, 0.27%)</title><rect x="687.4" y="371.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="690.4" y="382.0"></text>
</g>
<g>
<title>__ksize (4 samples, 0.27%)</title><rect x="690.6" y="387.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="693.6" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (8 samples, 0.54%)</title><rect x="693.7" y="387.0" width="6.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="696.7" y="398.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (12 samples, 0.81%)</title><rect x="700.1" y="419.0" width="9.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="703.1" y="430.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.34%)</title><rect x="700.9" y="403.0" width="4.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="703.9" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.34%)</title><rect x="700.9" y="387.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.9" y="398.0"></text>
</g>
<g>
<title>_copy_from_iter_full (6 samples, 0.41%)</title><rect x="704.9" y="403.0" width="4.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="707.9" y="414.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.14%)</title><rect x="706.5" y="387.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="709.5" y="398.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.14%)</title><rect x="708.1" y="387.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="711.1" y="398.0"></text>
</g>
<g>
<title>skb_entail (6 samples, 0.41%)</title><rect x="709.7" y="419.0" width="4.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="712.7" y="430.0"></text>
</g>
<g>
<title>tcp_chrono_start (2 samples, 0.14%)</title><rect x="712.9" y="403.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="715.9" y="414.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.07%)</title><rect x="714.5" y="419.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="717.5" y="430.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.14%)</title><rect x="715.3" y="419.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="718.3" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.61%)</title><rect x="716.9" y="419.0" width="7.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="719.9" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.54%)</title><rect x="717.7" y="403.0" width="6.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="720.7" y="414.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.27%)</title><rect x="720.9" y="387.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="723.9" y="398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.20%)</title><rect x="724.1" y="419.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="727.1" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (10 samples, 0.68%)</title><rect x="726.5" y="467.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="729.5" y="478.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.54%)</title><rect x="728.1" y="451.0" width="6.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="731.1" y="462.0"></text>
</g>
<g>
<title>__fget_files (6 samples, 0.41%)</title><rect x="729.6" y="435.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="732.6" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.14%)</title><rect x="734.4" y="499.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="737.4" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.07%)</title><rect x="734.4" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="737.4" y="494.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.07%)</title><rect x="735.2" y="483.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="738.2" y="494.0"></text>
</g>
<g>
<title>send@plt (1 samples, 0.07%)</title><rect x="736.0" y="547.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="739.0" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.07%)</title><rect x="736.8" y="579.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="739.8" y="590.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.07%)</title><rect x="736.8" y="563.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="739.8" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.20%)</title><rect x="737.6" y="627.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.07%)</title><rect x="739.2" y="611.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="742.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.07%)</title><rect x="739.2" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="742.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.07%)</title><rect x="740.0" y="627.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.0" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.07%)</title><rect x="740.0" y="611.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.0" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (8 samples, 0.54%)</title><rect x="740.8" y="643.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.54%)</title><rect x="740.8" y="627.0" width="6.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.07%)</title><rect x="740.8" y="611.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.20%)</title><rect x="741.6" y="611.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="744.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.20%)</title><rect x="741.6" y="595.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="744.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="741.6" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.6" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.07%)</title><rect x="741.6" y="563.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="744.6" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.14%)</title><rect x="742.4" y="579.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.4" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="743.2" y="563.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="746.2" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="743.2" y="547.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="746.2" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="743.2" y="531.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="746.2" y="542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="743.2" y="515.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="746.2" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="743.2" y="499.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="746.2" y="510.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.07%)</title><rect x="743.2" y="483.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="746.2" y="494.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.07%)</title><rect x="743.2" y="467.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="746.2" y="478.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.07%)</title><rect x="744.0" y="611.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="747.0" y="622.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.20%)</title><rect x="744.8" y="611.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="747.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.20%)</title><rect x="744.8" y="595.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="747.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.20%)</title><rect x="744.8" y="579.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="747.8" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.20%)</title><rect x="744.8" y="563.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="747.8" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceImpl.upsert (281 samples, 19.00%)</title><rect x="747.2" y="643.0" width="224.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.2" y="654.0">ru/mail/polis/service/gogun/Se..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (266 samples, 17.99%)</title><rect x="747.2" y="627.0" width="212.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="750.2" y="638.0">ru/mail/polis/dao/gogun/DAOI..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (77 samples, 5.21%)</title><rect x="747.2" y="611.0" width="61.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.2" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (77 samples, 5.21%)</title><rect x="747.2" y="595.0" width="61.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="750.2" y="606.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (77 samples, 5.21%)</title><rect x="747.2" y="579.0" width="61.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="750.2" y="590.0">java/u..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.20%)</title><rect x="747.2" y="563.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.2" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.20%)</title><rect x="747.2" y="547.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="750.2" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.14%)</title><rect x="748.0" y="531.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="751.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.07%)</title><rect x="749.6" y="563.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="752.6" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.07%)</title><rect x="749.6" y="547.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="752.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (67 samples, 4.53%)</title><rect x="750.4" y="563.0" width="53.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="753.4" y="574.0">java/..</text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.07%)</title><rect x="783.1" y="547.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="786.1" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.07%)</title><rect x="783.9" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="786.9" y="558.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="783.9" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="786.9" y="542.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.07%)</title><rect x="783.9" y="515.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.9" y="526.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.07%)</title><rect x="783.9" y="499.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="786.9" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.07%)</title><rect x="783.9" y="483.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.9" y="494.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.07%)</title><rect x="783.9" y="467.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="786.9" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.07%)</title><rect x="783.9" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="786.9" y="462.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.07%)</title><rect x="783.9" y="435.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="786.9" y="446.0"></text>
</g>
<g>
<title>__run_timers (1 samples, 0.07%)</title><rect x="783.9" y="419.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.9" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.07%)</title><rect x="784.7" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.7" y="558.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.07%)</title><rect x="785.5" y="547.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="788.5" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.14%)</title><rect x="786.3" y="547.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (1 samples, 0.07%)</title><rect x="787.9" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.07%)</title><rect x="788.7" y="547.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.7" y="558.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.14%)</title><rect x="789.5" y="547.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="792.5" y="558.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.07%)</title><rect x="791.1" y="547.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="794.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.14%)</title><rect x="791.9" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.9" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.14%)</title><rect x="793.5" y="547.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="796.5" y="558.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.07%)</title><rect x="795.1" y="547.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="798.1" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.20%)</title><rect x="795.9" y="547.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.9" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.14%)</title><rect x="798.3" y="547.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="801.3" y="558.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.14%)</title><rect x="799.9" y="547.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="802.9" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.14%)</title><rect x="801.5" y="547.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="804.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (1 samples, 0.07%)</title><rect x="803.0" y="547.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="806.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$NonfairSync.readerShouldBlock (5 samples, 0.34%)</title><rect x="803.8" y="563.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.8" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive (5 samples, 0.34%)</title><rect x="803.8" y="547.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.07%)</title><rect x="807.8" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="810.8" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.07%)</title><rect x="807.8" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.8" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.07%)</title><rect x="807.8" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="810.8" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.07%)</title><rect x="807.8" y="515.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="810.8" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (1 samples, 0.07%)</title><rect x="807.8" y="499.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="810.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (8 samples, 0.54%)</title><rect x="808.6" y="611.0" width="6.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.6" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (8 samples, 0.54%)</title><rect x="808.6" y="595.0" width="6.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (8 samples, 0.54%)</title><rect x="808.6" y="579.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (5 samples, 0.34%)</title><rect x="811.0" y="563.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.0" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (5 samples, 0.34%)</title><rect x="811.0" y="547.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="814.0" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (5 samples, 0.34%)</title><rect x="811.0" y="531.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.0" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (181 samples, 12.24%)</title><rect x="815.0" y="611.0" width="144.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="818.0" y="622.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.14%)</title><rect x="816.6" y="595.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.14%)</title><rect x="816.6" y="579.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.6" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.34%)</title><rect x="818.2" y="595.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.2" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.27%)</title><rect x="819.0" y="579.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.0" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.27%)</title><rect x="819.0" y="563.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="822.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (167 samples, 11.29%)</title><rect x="822.2" y="595.0" width="133.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.2" y="606.0">java/util/concurr..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (166 samples, 11.22%)</title><rect x="823.0" y="579.0" width="132.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="826.0" y="590.0">java/util/concur..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (7 samples, 0.47%)</title><rect x="830.2" y="563.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="833.2" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.07%)</title><rect x="830.2" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="833.2" y="558.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.41%)</title><rect x="831.0" y="547.0" width="4.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="834.0" y="558.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (4 samples, 0.27%)</title><rect x="831.8" y="531.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.20%)</title><rect x="832.6" y="515.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.6" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.07%)</title><rect x="835.0" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="838.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (78 samples, 5.27%)</title><rect x="835.8" y="563.0" width="62.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.8" y="574.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.20%)</title><rect x="898.0" y="563.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="901.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.14%)</title><rect x="898.8" y="547.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.14%)</title><rect x="898.8" y="531.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.8" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.07%)</title><rect x="899.6" y="515.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.6" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.07%)</title><rect x="899.6" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="902.6" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (68 samples, 4.60%)</title><rect x="900.4" y="563.0" width="54.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="903.4" y="574.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (65 samples, 4.39%)</title><rect x="902.8" y="547.0" width="51.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.8" y="558.0">java/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (45 samples, 3.04%)</title><rect x="918.7" y="531.0" width="35.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.7" y="542.0">jav..</text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.14%)</title><rect x="921.9" y="515.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="924.9" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.14%)</title><rect x="923.5" y="515.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="926.5" y="526.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (31 samples, 2.10%)</title><rect x="925.1" y="515.0" width="24.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="928.1" y="526.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (27 samples, 1.83%)</title><rect x="928.3" y="499.0" width="21.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.3" y="510.0">j..</text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.14%)</title><rect x="937.9" y="483.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.9" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="939.5" y="483.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="942.5" y="494.0"></text>
</g>
<g>
<title>vectorizedMismatch (12 samples, 0.81%)</title><rect x="940.3" y="483.0" width="9.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="943.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.41%)</title><rect x="949.9" y="515.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="952.9" y="526.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (5 samples, 0.34%)</title><rect x="949.9" y="499.0" width="3.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="952.9" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.07%)</title><rect x="953.8" y="499.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="956.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (1 samples, 0.07%)</title><rect x="954.6" y="563.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.6" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.20%)</title><rect x="955.4" y="595.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="958.4" y="606.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.20%)</title><rect x="955.4" y="579.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="958.4" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (2 samples, 0.14%)</title><rect x="957.8" y="595.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="960.8" y="606.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.14%)</title><rect x="957.8" y="579.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="960.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceImpl.getBuffer (15 samples, 1.01%)</title><rect x="959.4" y="627.0" width="12.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="962.4" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 1.01%)</title><rect x="959.4" y="611.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="962.4" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (15 samples, 1.01%)</title><rect x="959.4" y="595.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="962.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (15 samples, 1.01%)</title><rect x="959.4" y="579.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.4" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (15 samples, 1.01%)</title><rect x="959.4" y="563.0" width="12.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.4" y="574.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.81%)</title><rect x="961.8" y="547.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.8" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.41%)</title><rect x="962.6" y="531.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="965.6" y="542.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.27%)</title><rect x="967.4" y="531.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.4" y="542.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.07%)</title><rect x="970.6" y="531.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="973.6" y="542.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.34%)</title><rect x="971.4" y="659.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="974.4" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.34%)</title><rect x="971.4" y="643.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.14%)</title><rect x="971.4" y="627.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.14%)</title><rect x="971.4" y="611.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="974.4" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.20%)</title><rect x="973.0" y="627.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="976.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.20%)</title><rect x="973.0" y="611.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="976.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.14%)</title><rect x="973.8" y="595.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="976.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.20%)</title><rect x="975.4" y="659.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="978.4" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.20%)</title><rect x="975.4" y="643.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.4" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.20%)</title><rect x="975.4" y="627.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="978.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.07%)</title><rect x="975.4" y="611.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="978.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.14%)</title><rect x="976.2" y="611.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="979.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.07%)</title><rect x="977.0" y="595.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 1.28%)</title><rect x="977.8" y="691.0" width="15.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="980.8" y="702.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.07%)</title><rect x="979.4" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="982.4" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="979.4" y="659.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="982.4" y="670.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.07%)</title><rect x="979.4" y="643.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="982.4" y="654.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.07%)</title><rect x="979.4" y="627.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="982.4" y="638.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="979.4" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="982.4" y="622.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="979.4" y="595.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="982.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.07%)</title><rect x="979.4" y="579.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="982.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.81%)</title><rect x="980.2" y="675.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="983.2" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.81%)</title><rect x="980.2" y="659.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.2" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.07%)</title><rect x="986.6" y="643.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="989.6" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.07%)</title><rect x="986.6" y="627.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="989.6" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="986.6" y="611.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="989.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="986.6" y="595.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="989.6" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="986.6" y="579.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="989.6" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.07%)</title><rect x="986.6" y="563.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.6" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.07%)</title><rect x="986.6" y="547.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="989.6" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.07%)</title><rect x="987.3" y="643.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="990.3" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.07%)</title><rect x="987.3" y="627.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="990.3" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.07%)</title><rect x="987.3" y="611.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="990.3" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.07%)</title><rect x="987.3" y="595.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="990.3" y="606.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="987.3" y="579.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="990.3" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.07%)</title><rect x="987.3" y="563.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="990.3" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.07%)</title><rect x="987.3" y="547.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="990.3" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.07%)</title><rect x="987.3" y="531.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="990.3" y="542.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.07%)</title><rect x="987.3" y="515.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="990.3" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.07%)</title><rect x="987.3" y="499.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="990.3" y="510.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.07%)</title><rect x="987.3" y="483.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="990.3" y="494.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.07%)</title><rect x="987.3" y="467.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="990.3" y="478.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.14%)</title><rect x="988.1" y="643.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.14%)</title><rect x="988.1" y="627.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.14%)</title><rect x="988.1" y="611.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="991.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (4 samples, 0.27%)</title><rect x="989.7" y="675.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="992.7" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.07%)</title><rect x="992.1" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="995.1" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.14%)</title><rect x="992.9" y="691.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="995.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="993.7" y="675.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.07%)</title><rect x="993.7" y="659.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="996.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.20%)</title><rect x="994.5" y="691.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="997.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.81%)</title><rect x="996.9" y="691.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="999.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (9 samples, 0.61%)</title><rect x="996.9" y="675.0" width="7.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="999.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.14%)</title><rect x="996.9" y="659.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="999.9" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.47%)</title><rect x="998.5" y="659.0" width="5.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1001.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.34%)</title><rect x="1000.1" y="643.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1003.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (5 samples, 0.34%)</title><rect x="1000.1" y="627.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1003.1" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (5 samples, 0.34%)</title><rect x="1000.1" y="611.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1003.1" y="622.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.07%)</title><rect x="1003.3" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1006.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.20%)</title><rect x="1004.1" y="675.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1007.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.20%)</title><rect x="1004.1" y="659.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1007.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.14%)</title><rect x="1004.1" y="643.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1007.1" y="654.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.14%)</title><rect x="1004.1" y="627.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1007.1" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.07%)</title><rect x="1005.7" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1008.7" y="654.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.81%)</title><rect x="1006.5" y="691.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1009.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.81%)</title><rect x="1006.5" y="675.0" width="9.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1009.5" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.34%)</title><rect x="1011.3" y="659.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.34%)</title><rect x="1011.3" y="643.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (5 samples, 0.34%)</title><rect x="1011.3" y="627.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1014.3" y="638.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.07%)</title><rect x="1015.3" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1018.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (182 samples, 12.31%)</title><rect x="1016.1" y="707.0" width="145.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1019.1" y="718.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (182 samples, 12.31%)</title><rect x="1016.1" y="691.0" width="145.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.1" y="702.0">one/nio/net/Native..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (28 samples, 1.89%)</title><rect x="1028.0" y="675.0" width="22.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1031.0" y="686.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.20%)</title><rect x="1030.4" y="659.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1033.4" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.14%)</title><rect x="1032.8" y="659.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1035.8" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (9 samples, 0.61%)</title><rect x="1034.4" y="659.0" width="7.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1037.4" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 0.74%)</title><rect x="1041.6" y="659.0" width="8.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1044.6" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.07%)</title><rect x="1044.8" y="643.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.8" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (4 samples, 0.27%)</title><rect x="1045.6" y="643.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1048.6" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.14%)</title><rect x="1048.8" y="643.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1051.8" y="654.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.07%)</title><rect x="1050.4" y="675.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1053.4" y="686.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.07%)</title><rect x="1051.2" y="675.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1054.2" y="686.0"></text>
</g>
<g>
<title>__libc_recv (135 samples, 9.13%)</title><rect x="1052.0" y="675.0" width="107.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1055.0" y="686.0">__libc_recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (124 samples, 8.38%)</title><rect x="1060.8" y="659.0" width="98.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1063.8" y="670.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (124 samples, 8.38%)</title><rect x="1060.8" y="643.0" width="98.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1063.8" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (4 samples, 0.27%)</title><rect x="1075.9" y="627.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1078.9" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.20%)</title><rect x="1076.7" y="611.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1079.7" y="622.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.07%)</title><rect x="1078.3" y="595.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1081.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (93 samples, 6.29%)</title><rect x="1079.1" y="627.0" width="74.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.1" y="638.0">__x64_sy..</text>
</g>
<g>
<title>__sys_recvfrom (89 samples, 6.02%)</title><rect x="1082.3" y="611.0" width="71.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1085.3" y="622.0">__sys_re..</text>
</g>
<g>
<title>fput_many (1 samples, 0.07%)</title><rect x="1085.5" y="595.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1088.5" y="606.0"></text>
</g>
<g>
<title>import_single_range (7 samples, 0.47%)</title><rect x="1086.3" y="595.0" width="5.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1089.3" y="606.0"></text>
</g>
<g>
<title>inet6_recvmsg (71 samples, 4.80%)</title><rect x="1091.9" y="595.0" width="56.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1094.9" y="606.0">inet6_..</text>
</g>
<g>
<title>tcp_recvmsg (66 samples, 4.46%)</title><rect x="1095.9" y="579.0" width="52.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1098.9" y="590.0">tcp_r..</text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.54%)</title><rect x="1109.4" y="563.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1112.4" y="574.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.14%)</title><rect x="1109.4" y="547.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1112.4" y="558.0"></text>
</g>
<g>
<title>skb_release_head_state (6 samples, 0.41%)</title><rect x="1111.0" y="547.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1114.0" y="558.0"></text>
</g>
<g>
<title>dst_release (4 samples, 0.27%)</title><rect x="1111.0" y="531.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1114.0" y="542.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.14%)</title><rect x="1114.2" y="531.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1117.2" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.27%)</title><rect x="1115.8" y="563.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1118.8" y="574.0"></text>
</g>
<g>
<title>__this_cpu_preempt_check (1 samples, 0.07%)</title><rect x="1116.6" y="547.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1119.6" y="558.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.07%)</title><rect x="1117.4" y="547.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1120.4" y="558.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.07%)</title><rect x="1118.2" y="547.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1121.2" y="558.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.07%)</title><rect x="1119.0" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.0" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (6 samples, 0.41%)</title><rect x="1119.8" y="563.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1122.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (5 samples, 0.34%)</title><rect x="1120.6" y="547.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1123.6" y="558.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.07%)</title><rect x="1123.8" y="531.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1126.8" y="542.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.07%)</title><rect x="1124.6" y="563.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1127.6" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.07%)</title><rect x="1124.6" y="547.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1127.6" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (22 samples, 1.49%)</title><rect x="1125.4" y="563.0" width="17.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.4" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (22 samples, 1.49%)</title><rect x="1125.4" y="547.0" width="17.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1128.4" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (12 samples, 0.81%)</title><rect x="1130.2" y="531.0" width="9.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1133.2" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (10 samples, 0.68%)</title><rect x="1131.8" y="515.0" width="7.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1134.8" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.27%)</title><rect x="1139.7" y="531.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1142.7" y="542.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.27%)</title><rect x="1139.7" y="515.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1142.7" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.14%)</title><rect x="1140.5" y="499.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1143.5" y="510.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.07%)</title><rect x="1142.1" y="499.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.1" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.07%)</title><rect x="1142.9" y="563.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.9" y="574.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (6 samples, 0.41%)</title><rect x="1143.7" y="563.0" width="4.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1146.7" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.20%)</title><rect x="1146.1" y="547.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1149.1" y="558.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.20%)</title><rect x="1146.1" y="531.0" width="2.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1149.1" y="542.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.14%)</title><rect x="1146.9" y="515.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1149.9" y="526.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.07%)</title><rect x="1148.5" y="595.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1151.5" y="606.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.34%)</title><rect x="1149.3" y="595.0" width="4.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1152.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.34%)</title><rect x="1149.3" y="579.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1152.3" y="590.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.27%)</title><rect x="1150.1" y="563.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1153.1" y="574.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.07%)</title><rect x="1153.3" y="627.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1156.3" y="638.0"></text>
</g>
<g>
<title>preempt_schedule_irq (1 samples, 0.07%)</title><rect x="1153.3" y="611.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1156.3" y="622.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.07%)</title><rect x="1153.3" y="595.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.3" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.07%)</title><rect x="1153.3" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1156.3" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.07%)</title><rect x="1153.3" y="563.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.3" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (7 samples, 0.47%)</title><rect x="1154.1" y="627.0" width="5.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.1" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.14%)</title><rect x="1157.3" y="611.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1160.3" y="622.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.07%)</title><rect x="1158.9" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1161.9" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.07%)</title><rect x="1159.7" y="675.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1162.7" y="686.0"></text>
</g>
<g>
<title>recv@plt (1 samples, 0.07%)</title><rect x="1160.5" y="675.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1163.5" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.14%)</title><rect x="1161.3" y="723.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.3" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.07%)</title><rect x="1162.1" y="707.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1165.1" y="718.0"></text>
</g>
<g>
<title>start_thread (34 samples, 2.30%)</title><rect x="1162.9" y="755.0" width="27.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1165.9" y="766.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (34 samples, 2.30%)</title><rect x="1162.9" y="739.0" width="27.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1165.9" y="750.0">t..</text>
</g>
<g>
<title>Thread::call_run() (34 samples, 2.30%)</title><rect x="1162.9" y="723.0" width="27.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.9" y="734.0">T..</text>
</g>
<g>
<title>GangWorker::loop() (34 samples, 2.30%)</title><rect x="1162.9" y="707.0" width="27.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="718.0">G..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (34 samples, 2.30%)</title><rect x="1162.9" y="691.0" width="27.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.9" y="702.0">G..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (34 samples, 2.30%)</title><rect x="1162.9" y="675.0" width="27.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.9" y="686.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (32 samples, 2.16%)</title><rect x="1163.7" y="659.0" width="25.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.7" y="670.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (23 samples, 1.56%)</title><rect x="1170.9" y="643.0" width="18.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.9" y="654.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.07%)</title><rect x="1181.2" y="627.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.2" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (9 samples, 0.61%)</title><rect x="1182.0" y="627.0" width="7.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.0" y="638.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.07%)</title><rect x="1189.2" y="659.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1192.2" y="670.0"></text>
</g>
</g>
</svg>
