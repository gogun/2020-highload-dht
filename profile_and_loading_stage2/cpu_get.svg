<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="789"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="789"> </text>
<g id="frames">
<g>
<title>all (5,802 samples, 100.00%)</title><rect x="10.0" y="755.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="766.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (4 samples, 0.07%)</title><rect x="10.0" y="739.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (4 samples, 0.07%)</title><rect x="10.0" y="723.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (5,798 samples, 99.93%)</title><rect x="10.8" y="739.0" width="1179.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.8" y="750.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.07%)</title><rect x="11.0" y="723.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="14.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.07%)</title><rect x="11.0" y="707.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.0" y="718.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.07%)</title><rect x="11.0" y="691.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="14.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="11.0" y="675.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="14.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="11.0" y="659.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="14.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 0.07%)</title><rect x="11.0" y="643.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="14.0" y="654.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 0.07%)</title><rect x="11.0" y="627.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="14.0" y="638.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (2 samples, 0.03%)</title><rect x="11.4" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="14.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5,793 samples, 99.84%)</title><rect x="11.8" y="723.0" width="1178.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.8" y="734.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5,792 samples, 99.83%)</title><rect x="12.0" y="707.0" width="1178.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="15.0" y="718.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5,790 samples, 99.79%)</title><rect x="12.0" y="691.0" width="1177.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="15.0" y="702.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,789 samples, 99.78%)</title><rect x="12.0" y="675.0" width="1177.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="15.0" y="686.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,788 samples, 99.76%)</title><rect x="12.2" y="659.0" width="1177.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="15.2" y="670.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_get.handleRequest (5,788 samples, 99.76%)</title><rect x="12.2" y="643.0" width="1177.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.2" y="654.0">RequestHandler1_get.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 0.34%)</title><rect x="12.4" y="627.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.4" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 0.34%)</title><rect x="12.4" y="611.0" width="4.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="15.4" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 0.33%)</title><rect x="12.6" y="595.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.6" y="606.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (19 samples, 0.33%)</title><rect x="12.6" y="579.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="15.6" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (19 samples, 0.33%)</title><rect x="12.6" y="563.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.6" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (19 samples, 0.33%)</title><rect x="12.6" y="547.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="15.6" y="558.0"></text>
</g>
<g>
<title>__libc_send (18 samples, 0.31%)</title><rect x="12.8" y="531.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="15.8" y="542.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.29%)</title><rect x="13.1" y="515.0" width="3.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="16.1" y="526.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.29%)</title><rect x="13.1" y="499.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="16.1" y="510.0"></text>
</g>
<g>
<title>__x64_sys_sendto (17 samples, 0.29%)</title><rect x="13.1" y="483.0" width="3.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.1" y="494.0"></text>
</g>
<g>
<title>__sys_sendto (17 samples, 0.29%)</title><rect x="13.1" y="467.0" width="3.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="16.1" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (16 samples, 0.28%)</title><rect x="13.3" y="451.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.3" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (15 samples, 0.26%)</title><rect x="13.5" y="435.0" width="3.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="16.5" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (15 samples, 0.26%)</title><rect x="13.5" y="419.0" width="3.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.5" y="430.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (14 samples, 0.24%)</title><rect x="13.5" y="403.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="16.5" y="414.0"></text>
</g>
<g>
<title>tcp_write_xmit (14 samples, 0.24%)</title><rect x="13.5" y="387.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="16.5" y="398.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (14 samples, 0.24%)</title><rect x="13.5" y="371.0" width="2.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.5" y="382.0"></text>
</g>
<g>
<title>__ip_queue_xmit (12 samples, 0.21%)</title><rect x="13.5" y="355.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="16.5" y="366.0"></text>
</g>
<g>
<title>ip_output (11 samples, 0.19%)</title><rect x="13.7" y="339.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="16.7" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (10 samples, 0.17%)</title><rect x="13.7" y="323.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="16.7" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (10 samples, 0.17%)</title><rect x="13.7" y="307.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="16.7" y="318.0"></text>
</g>
<g>
<title>do_softirq (10 samples, 0.17%)</title><rect x="13.7" y="291.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.7" y="302.0"></text>
</g>
<g>
<title>do_softirq_own_stack (10 samples, 0.17%)</title><rect x="13.7" y="275.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="16.7" y="286.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (10 samples, 0.17%)</title><rect x="13.7" y="259.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="16.7" y="270.0"></text>
</g>
<g>
<title>__softirqentry_text_start (10 samples, 0.17%)</title><rect x="13.7" y="243.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="16.7" y="254.0"></text>
</g>
<g>
<title>net_rx_action (9 samples, 0.16%)</title><rect x="13.9" y="227.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="16.9" y="238.0"></text>
</g>
<g>
<title>process_backlog (9 samples, 0.16%)</title><rect x="13.9" y="211.0" width="1.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="16.9" y="222.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (9 samples, 0.16%)</title><rect x="13.9" y="195.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="16.9" y="206.0"></text>
</g>
<g>
<title>ip_rcv (9 samples, 0.16%)</title><rect x="13.9" y="179.0" width="1.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="16.9" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver (9 samples, 0.16%)</title><rect x="13.9" y="163.0" width="1.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="16.9" y="174.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (9 samples, 0.16%)</title><rect x="13.9" y="147.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="16.9" y="158.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (9 samples, 0.16%)</title><rect x="13.9" y="131.0" width="1.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="16.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 0.14%)</title><rect x="14.1" y="115.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="17.1" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.10%)</title><rect x="14.5" y="99.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="17.5" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.10%)</title><rect x="14.5" y="83.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="17.5" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 0.09%)</title><rect x="14.5" y="67.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="17.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (4 samples, 0.07%)</title><rect x="14.7" y="51.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="17.7" y="62.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="14.7" y="35.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="17.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceImpl.get (5,766 samples, 99.38%)</title><rect x="16.7" y="627.0" width="1172.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.7" y="638.0">ru/mail/polis/service/gogun/ServiceImpl.get</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (5,766 samples, 99.38%)</title><rect x="16.7" y="611.0" width="1172.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.7" y="622.0">ru/mail/polis/dao/DAO.get</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (9 samples, 0.16%)</title><rect x="16.7" y="595.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.7" y="606.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (9 samples, 0.16%)</title><rect x="16.7" y="579.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (9 samples, 0.16%)</title><rect x="16.7" y="563.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.7" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (9 samples, 0.16%)</title><rect x="16.7" y="547.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.7" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (9 samples, 0.16%)</title><rect x="16.7" y="531.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.7" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.16%)</title><rect x="16.7" y="515.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="19.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (8 samples, 0.14%)</title><rect x="16.9" y="499.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.9" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (8 samples, 0.14%)</title><rect x="16.9" y="483.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="19.9" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (8 samples, 0.14%)</title><rect x="16.9" y="467.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="19.9" y="478.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (8 samples, 0.14%)</title><rect x="16.9" y="451.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.9" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.14%)</title><rect x="16.9" y="435.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="19.9" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (8 samples, 0.14%)</title><rect x="16.9" y="419.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="19.9" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (8 samples, 0.14%)</title><rect x="16.9" y="403.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.9" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (8 samples, 0.14%)</title><rect x="16.9" y="387.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (8 samples, 0.14%)</title><rect x="16.9" y="371.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="19.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (8 samples, 0.14%)</title><rect x="16.9" y="355.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="19.9" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (3 samples, 0.05%)</title><rect x="16.9" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="19.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.05%)</title><rect x="16.9" y="323.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.9" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.05%)</title><rect x="16.9" y="307.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.05%)</title><rect x="16.9" y="291.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="19.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.03%)</title><rect x="17.1" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="20.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.03%)</title><rect x="17.1" y="259.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.1" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="17.1" y="243.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.1" y="254.0"></text>
</g>
<g>
<title>pread (2 samples, 0.03%)</title><rect x="17.1" y="227.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="20.1" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5 samples, 0.09%)</title><rect x="17.5" y="339.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="20.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5 samples, 0.09%)</title><rect x="17.5" y="323.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (3 samples, 0.05%)</title><rect x="17.7" y="307.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="20.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3 samples, 0.05%)</title><rect x="17.7" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="20.7" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3 samples, 0.05%)</title><rect x="17.7" y="275.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="20.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.05%)</title><rect x="17.7" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="20.7" y="270.0"></text>
</g>
<g>
<title>pread (3 samples, 0.05%)</title><rect x="17.7" y="243.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="20.7" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="17.7" y="227.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="20.7" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="17.7" y="211.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="20.7" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (2 samples, 0.03%)</title><rect x="17.9" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="20.9" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.iterator (5,756 samples, 99.21%)</title><rect x="18.7" y="595.0" width="1170.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="21.7" y="606.0">ru/mail/polis/dao/gogun/DAOImpl.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (5,755 samples, 99.19%)</title><rect x="18.9" y="579.0" width="1170.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.9" y="590.0">ru/mail/polis/dao/gogun/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (399 samples, 6.88%)</title><rect x="19.2" y="563.0" width="81.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="22.2" y="574.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (399 samples, 6.88%)</title><rect x="19.2" y="547.0" width="81.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.2" y="558.0">com/googl..</text>
</g>
<g>
<title>java/util/PriorityQueue.add (392 samples, 6.76%)</title><rect x="20.6" y="531.0" width="79.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.6" y="542.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (392 samples, 6.76%)</title><rect x="20.6" y="515.0" width="79.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="23.6" y="526.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (392 samples, 6.76%)</title><rect x="20.6" y="499.0" width="79.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.6" y="510.0">java/util..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (392 samples, 6.76%)</title><rect x="20.6" y="483.0" width="79.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.6" y="494.0">java/util..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (392 samples, 6.76%)</title><rect x="20.6" y="467.0" width="79.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="23.6" y="478.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (392 samples, 6.76%)</title><rect x="20.6" y="451.0" width="79.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.6" y="462.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (385 samples, 6.64%)</title><rect x="20.6" y="435.0" width="78.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.6" y="446.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (8 samples, 0.14%)</title><rect x="20.6" y="419.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.6" y="430.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (3 samples, 0.05%)</title><rect x="20.6" y="403.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable$$Lambda$121/1514974045.apply (3 samples, 0.05%)</title><rect x="20.6" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="23.6" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.lambda$iterator$0 (3 samples, 0.05%)</title><rect x="20.6" y="371.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.6" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.&lt;init&gt; (2 samples, 0.03%)</title><rect x="20.8" y="355.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.8" y="366.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.09%)</title><rect x="21.2" y="403.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="24.2" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (5 samples, 0.09%)</title><rect x="21.2" y="387.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (4 samples, 0.07%)</title><rect x="21.4" y="371.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.4" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (3 samples, 0.05%)</title><rect x="21.6" y="355.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.6" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (377 samples, 6.50%)</title><rect x="22.2" y="419.0" width="76.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.2" y="430.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (377 samples, 6.50%)</title><rect x="22.2" y="403.0" width="76.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="25.2" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (377 samples, 6.50%)</title><rect x="22.2" y="387.0" width="76.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.2" y="398.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="22.2" y="371.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="25.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (183 samples, 3.15%)</title><rect x="22.8" y="371.0" width="37.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="25.8" y="382.0">ru/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (183 samples, 3.15%)</title><rect x="22.8" y="355.0" width="37.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.8" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (183 samples, 3.15%)</title><rect x="22.8" y="339.0" width="37.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.8" y="350.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.09%)</title><rect x="22.8" y="323.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.09%)</title><rect x="22.8" y="307.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.8" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (2 samples, 0.03%)</title><rect x="23.0" y="291.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.0" y="302.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.03%)</title><rect x="23.4" y="291.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.4" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.03%)</title><rect x="23.4" y="275.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="26.4" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.03%)</title><rect x="23.4" y="259.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (168 samples, 2.90%)</title><rect x="24.0" y="323.0" width="34.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="27.0" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (21 samples, 0.36%)</title><rect x="24.0" y="307.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (21 samples, 0.36%)</title><rect x="24.0" y="291.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="27.0" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (21 samples, 0.36%)</title><rect x="24.0" y="275.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (21 samples, 0.36%)</title><rect x="24.0" y="259.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.0" y="270.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.03%)</title><rect x="27.3" y="243.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.3" y="254.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="27.9" y="243.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="30.9" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (140 samples, 2.41%)</title><rect x="28.3" y="307.0" width="28.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="31.3" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (140 samples, 2.41%)</title><rect x="28.3" y="291.0" width="28.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="31.3" y="302.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (140 samples, 2.41%)</title><rect x="28.3" y="275.0" width="28.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.3" y="286.0">su..</text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="30.1" y="259.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="33.1" y="270.0"></text>
</g>
<g>
<title>pread (129 samples, 2.22%)</title><rect x="30.5" y="259.0" width="26.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="33.5" y="270.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (107 samples, 1.84%)</title><rect x="35.0" y="243.0" width="21.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="38.0" y="254.0">e..</text>
</g>
<g>
<title>do_syscall_64 (107 samples, 1.84%)</title><rect x="35.0" y="227.0" width="21.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="38.0" y="238.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (6 samples, 0.10%)</title><rect x="40.1" y="211.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.1" y="222.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.05%)</title><rect x="40.7" y="195.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="43.7" y="206.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (71 samples, 1.22%)</title><rect x="41.3" y="211.0" width="14.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="44.3" y="222.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.09%)</title><rect x="41.9" y="195.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="44.9" y="206.0"></text>
</g>
<g>
<title>__fget_files (5 samples, 0.09%)</title><rect x="41.9" y="179.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.9" y="190.0"></text>
</g>
<g>
<title>vfs_read (62 samples, 1.07%)</title><rect x="43.2" y="195.0" width="12.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="46.2" y="206.0"></text>
</g>
<g>
<title>fsnotify (5 samples, 0.09%)</title><rect x="43.6" y="179.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="46.6" y="190.0"></text>
</g>
<g>
<title>fsnotify_parent (8 samples, 0.14%)</title><rect x="44.6" y="179.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="47.6" y="190.0"></text>
</g>
<g>
<title>new_sync_read (45 samples, 0.78%)</title><rect x="46.2" y="179.0" width="9.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="49.2" y="190.0"></text>
</g>
<g>
<title>shmem_file_read_iter (40 samples, 0.69%)</title><rect x="47.2" y="163.0" width="8.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="50.2" y="174.0"></text>
</g>
<g>
<title>copy_page_to_iter (7 samples, 0.12%)</title><rect x="49.3" y="147.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="52.3" y="158.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="49.5" y="131.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="52.5" y="142.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (4 samples, 0.07%)</title><rect x="49.9" y="131.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="52.9" y="142.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (19 samples, 0.33%)</title><rect x="50.7" y="147.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.7" y="158.0"></text>
</g>
<g>
<title>find_lock_entry (18 samples, 0.31%)</title><rect x="50.9" y="131.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.9" y="142.0"></text>
</g>
<g>
<title>find_get_entry (13 samples, 0.22%)</title><rect x="51.5" y="115.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="54.5" y="126.0"></text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.03%)</title><rect x="52.1" y="99.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="55.1" y="110.0"></text>
</g>
<g>
<title>xas_load (8 samples, 0.14%)</title><rect x="52.5" y="99.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="55.5" y="110.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="53.7" y="83.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="56.7" y="94.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.03%)</title><rect x="54.1" y="115.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.1" y="126.0"></text>
</g>
<g>
<title>touch_atime (2 samples, 0.03%)</title><rect x="54.5" y="147.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.5" y="158.0"></text>
</g>
<g>
<title>unlock_page (2 samples, 0.03%)</title><rect x="54.9" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.9" y="158.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.03%)</title><rect x="55.4" y="179.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="58.4" y="190.0"></text>
</g>
<g>
<title>syscall_trace_enter (5 samples, 0.09%)</title><rect x="55.8" y="211.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="58.8" y="222.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.03%)</title><rect x="56.2" y="195.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.2" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.07%)</title><rect x="56.8" y="307.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="59.8" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="56.8" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.8" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="56.8" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.03%)</title><rect x="57.2" y="291.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="60.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.05%)</title><rect x="57.6" y="307.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.6" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.05%)</title><rect x="57.6" y="291.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="60.6" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.05%)</title><rect x="57.6" y="275.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.6" y="286.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.05%)</title><rect x="57.6" y="259.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (9 samples, 0.16%)</title><rect x="58.2" y="323.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="61.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (190 samples, 3.27%)</title><rect x="60.2" y="371.0" width="38.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="63.2" y="382.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (190 samples, 3.27%)</title><rect x="60.2" y="355.0" width="38.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.2" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (9 samples, 0.16%)</title><rect x="60.6" y="339.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="63.6" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (8 samples, 0.14%)</title><rect x="60.8" y="323.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.09%)</title><rect x="61.5" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="64.5" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.09%)</title><rect x="61.5" y="291.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.5" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.09%)</title><rect x="61.5" y="275.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="64.5" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.05%)</title><rect x="62.5" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="65.5" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.05%)</title><rect x="62.5" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (169 samples, 2.91%)</title><rect x="63.1" y="339.0" width="34.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.1" y="350.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.03%)</title><rect x="63.1" y="323.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.1" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="63.1" y="307.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (145 samples, 2.50%)</title><rect x="63.5" y="323.0" width="29.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="66.5" y="334.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (145 samples, 2.50%)</title><rect x="63.5" y="307.0" width="29.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.5" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (145 samples, 2.50%)</title><rect x="63.5" y="291.0" width="29.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.5" y="302.0">su..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="64.7" y="275.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="67.7" y="286.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="65.1" y="275.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="68.1" y="286.0"></text>
</g>
<g>
<title>pread (135 samples, 2.33%)</title><rect x="65.5" y="275.0" width="27.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="68.5" y="286.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (110 samples, 1.90%)</title><rect x="70.6" y="259.0" width="22.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="73.6" y="270.0">e..</text>
</g>
<g>
<title>do_syscall_64 (110 samples, 1.90%)</title><rect x="70.6" y="243.0" width="22.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="73.6" y="254.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (8 samples, 0.14%)</title><rect x="76.7" y="227.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="79.7" y="238.0"></text>
</g>
<g>
<title>__audit_syscall_exit (8 samples, 0.14%)</title><rect x="76.7" y="211.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.7" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (68 samples, 1.17%)</title><rect x="78.3" y="227.0" width="13.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.3" y="238.0"></text>
</g>
<g>
<title>__fget_light (10 samples, 0.17%)</title><rect x="79.1" y="211.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="82.1" y="222.0"></text>
</g>
<g>
<title>__fget_files (9 samples, 0.16%)</title><rect x="79.4" y="195.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="82.4" y="206.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.03%)</title><rect x="81.2" y="211.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="84.2" y="222.0"></text>
</g>
<g>
<title>vfs_read (52 samples, 0.90%)</title><rect x="81.6" y="211.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="84.6" y="222.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.07%)</title><rect x="82.2" y="195.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="85.2" y="206.0"></text>
</g>
<g>
<title>fsnotify_parent (3 samples, 0.05%)</title><rect x="83.0" y="195.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.0" y="206.0"></text>
</g>
<g>
<title>new_sync_read (41 samples, 0.71%)</title><rect x="83.6" y="195.0" width="8.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.6" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (35 samples, 0.60%)</title><rect x="84.8" y="179.0" width="7.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="87.8" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.09%)</title><rect x="86.7" y="163.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="89.7" y="174.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="86.9" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="89.9" y="158.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="87.3" y="147.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.3" y="158.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (9 samples, 0.16%)</title><rect x="87.7" y="163.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="90.7" y="174.0"></text>
</g>
<g>
<title>find_lock_entry (8 samples, 0.14%)</title><rect x="87.9" y="147.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="90.9" y="158.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.10%)</title><rect x="87.9" y="131.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.9" y="142.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.05%)</title><rect x="88.5" y="115.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.5" y="126.0"></text>
</g>
<g>
<title>page_mapping (2 samples, 0.03%)</title><rect x="89.1" y="131.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="92.1" y="142.0"></text>
</g>
<g>
<title>touch_atime (9 samples, 0.16%)</title><rect x="89.5" y="163.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.5" y="174.0"></text>
</g>
<g>
<title>atime_needs_update (8 samples, 0.14%)</title><rect x="89.7" y="147.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.7" y="158.0"></text>
</g>
<g>
<title>current_time (6 samples, 0.10%)</title><rect x="90.1" y="131.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="93.1" y="142.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.03%)</title><rect x="90.9" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="93.9" y="126.0"></text>
</g>
<g>
<title>unlock_page (3 samples, 0.05%)</title><rect x="91.4" y="163.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.4" y="174.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.07%)</title><rect x="92.2" y="227.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="95.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (20 samples, 0.34%)</title><rect x="93.0" y="323.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="96.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (7 samples, 0.12%)</title><rect x="93.2" y="307.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="96.2" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (5 samples, 0.09%)</title><rect x="93.6" y="291.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="96.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (12 samples, 0.21%)</title><rect x="94.6" y="307.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="97.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.03%)</title><rect x="96.6" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="97.0" y="323.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="100.0" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="97.0" y="307.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="100.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.03%)</title><rect x="97.0" y="291.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.0" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="97.0" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (4 samples, 0.07%)</title><rect x="97.5" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="100.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (3 samples, 0.05%)</title><rect x="98.3" y="339.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.3" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$144/1104147917.compare (7 samples, 0.12%)</title><rect x="98.9" y="435.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="101.9" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (7 samples, 0.12%)</title><rect x="98.9" y="419.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="101.9" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$142/1038855882.compare (7 samples, 0.12%)</title><rect x="98.9" y="403.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.9" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (7 samples, 0.12%)</title><rect x="98.9" y="387.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.10%)</title><rect x="98.9" y="371.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="101.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.10%)</title><rect x="98.9" y="355.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="101.9" y="366.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.10%)</title><rect x="98.9" y="339.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="101.9" y="350.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.05%)</title><rect x="99.5" y="323.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="102.5" y="334.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (5,345 samples, 92.12%)</title><rect x="100.3" y="563.0" width="1087.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="103.3" y="574.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$133/1594018767.accept (5,341 samples, 92.05%)</title><rect x="101.1" y="547.0" width="1086.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.1" y="558.0">ru/mail/polis/dao/gogun/DAOImpl$$Lambda$133/1594018767.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (5,340 samples, 92.04%)</title><rect x="101.3" y="531.0" width="1086.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.3" y="542.0">ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (5,339 samples, 92.02%)</title><rect x="101.5" y="515.0" width="1085.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="104.5" y="526.0">ru/mail/polis/dao/gogun/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (5,338 samples, 92.00%)</title><rect x="101.5" y="499.0" width="1085.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.5" y="510.0">ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (5,337 samples, 91.99%)</title><rect x="101.7" y="483.0" width="1085.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.7" y="494.0">ru/mail/polis/dao/gogun/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (63 samples, 1.09%)</title><rect x="101.7" y="467.0" width="12.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.7" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (10 samples, 0.17%)</title><rect x="102.9" y="451.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.9" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.10%)</title><rect x="103.8" y="435.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.8" y="446.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (45 samples, 0.78%)</title><rect x="105.0" y="451.0" width="9.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.0" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (21 samples, 0.36%)</title><rect x="109.9" y="435.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.9" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (12 samples, 0.21%)</title><rect x="111.7" y="419.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.7" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="114.1" y="451.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.1" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.03%)</title><rect x="114.1" y="435.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (5,274 samples, 90.90%)</title><rect x="114.5" y="467.0" width="1072.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.5" y="478.0">ru/mail/polis/dao/gogun/SSTable.key</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (194 samples, 3.34%)</title><rect x="115.1" y="451.0" width="39.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.1" y="462.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (167 samples, 2.88%)</title><rect x="120.6" y="435.0" width="34.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="123.6" y="446.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (151 samples, 2.60%)</title><rect x="123.9" y="419.0" width="30.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.9" y="430.0">ja..</text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (106 samples, 1.83%)</title><rect x="133.0" y="403.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="136.0" y="414.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (33 samples, 0.57%)</title><rect x="140.2" y="387.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.2" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (33 samples, 0.57%)</title><rect x="140.2" y="371.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (29 samples, 0.50%)</title><rect x="141.0" y="355.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="144.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (38 samples, 0.65%)</title><rect x="146.9" y="387.0" width="7.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (16 samples, 0.28%)</title><rect x="151.3" y="371.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.3" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (16 samples, 0.28%)</title><rect x="151.3" y="355.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.03%)</title><rect x="154.6" y="451.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.6" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (4 samples, 0.07%)</title><rect x="155.0" y="451.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.0" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (3 samples, 0.05%)</title><rect x="155.2" y="435.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="158.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (5,071 samples, 87.40%)</title><rect x="155.8" y="451.0" width="1031.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.8" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (5,026 samples, 86.63%)</title><rect x="162.7" y="435.0" width="1022.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="165.7" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (293 samples, 5.05%)</title><rect x="170.5" y="419.0" width="59.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="173.5" y="430.0">sun/ni..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (267 samples, 4.60%)</title><rect x="175.8" y="403.0" width="54.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="178.8" y="414.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (14 samples, 0.24%)</title><rect x="196.3" y="387.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.3" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel$1.&lt;init&gt; (49 samples, 0.84%)</title><rect x="199.1" y="387.0" width="10.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.1" y="398.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (47 samples, 0.81%)</title><rect x="199.5" y="371.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="202.5" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (103 samples, 1.78%)</title><rect x="209.1" y="387.0" width="21.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="212.1" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (73 samples, 1.26%)</title><rect x="215.0" y="371.0" width="14.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="218.0" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (71 samples, 1.22%)</title><rect x="215.4" y="355.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="218.4" y="366.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (56 samples, 0.97%)</title><rect x="217.9" y="339.0" width="11.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="220.9" y="350.0"></text>
</g>
<g>
<title>unsafe_arraycopy (3 samples, 0.05%)</title><rect x="229.2" y="339.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="232.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (61 samples, 1.05%)</title><rect x="230.1" y="419.0" width="12.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="233.1" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (60 samples, 1.03%)</title><rect x="230.3" y="403.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="233.3" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (42 samples, 0.72%)</title><rect x="233.9" y="387.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.9" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (40 samples, 0.69%)</title><rect x="233.9" y="371.0" width="8.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="236.9" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (40 samples, 0.69%)</title><rect x="233.9" y="355.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="236.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaLangAccess (2 samples, 0.03%)</title><rect x="242.1" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="245.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (4 samples, 0.07%)</title><rect x="242.5" y="419.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="245.5" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4,427 samples, 76.30%)</title><rect x="243.3" y="419.0" width="900.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="246.3" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.05%)</title><rect x="247.3" y="403.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="250.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (137 samples, 2.36%)</title><rect x="248.2" y="403.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="251.2" y="414.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (10 samples, 0.17%)</title><rect x="249.4" y="387.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.4" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.16%)</title><rect x="249.6" y="371.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (3 samples, 0.05%)</title><rect x="250.8" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="253.8" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (121 samples, 2.09%)</title><rect x="251.4" y="387.0" width="24.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="254.4" y="398.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (10 samples, 0.17%)</title><rect x="260.2" y="371.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="263.2" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.03%)</title><rect x="261.2" y="355.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.2" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.05%)</title><rect x="261.6" y="355.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.6" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (2 samples, 0.03%)</title><rect x="261.8" y="339.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="264.8" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="261.8" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.8" y="334.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (7 samples, 0.12%)</title><rect x="262.2" y="371.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.2" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (60 samples, 1.03%)</title><rect x="263.8" y="371.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.8" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="269.9" y="355.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (28 samples, 0.48%)</title><rect x="270.3" y="355.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.3" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (27 samples, 0.47%)</title><rect x="270.5" y="339.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.5" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (10 samples, 0.17%)</title><rect x="270.7" y="323.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (6 samples, 0.10%)</title><rect x="271.5" y="307.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.5" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (16 samples, 0.28%)</title><rect x="272.8" y="323.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="275.8" y="334.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (5 samples, 0.09%)</title><rect x="274.6" y="307.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="277.6" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (2 samples, 0.03%)</title><rect x="275.6" y="307.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="278.6" y="318.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (6 samples, 0.10%)</title><rect x="276.0" y="403.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (3,916 samples, 67.49%)</title><rect x="277.2" y="403.0" width="796.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="280.2" y="414.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/Buffer.limit (3 samples, 0.05%)</title><rect x="277.6" y="387.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.6" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (41 samples, 0.71%)</title><rect x="278.3" y="387.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.3" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (40 samples, 0.69%)</title><rect x="278.5" y="371.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="281.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (39 samples, 0.67%)</title><rect x="278.7" y="355.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="281.7" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (39 samples, 0.67%)</title><rect x="278.7" y="339.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="281.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (3,870 samples, 66.70%)</title><rect x="286.6" y="387.0" width="787.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.6" y="398.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3,870 samples, 66.70%)</title><rect x="286.6" y="371.0" width="787.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.6" y="382.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (13 samples, 0.22%)</title><rect x="310.2" y="355.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="313.2" y="366.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (64 samples, 1.10%)</title><rect x="312.8" y="355.0" width="13.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="315.8" y="366.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (51 samples, 0.88%)</title><rect x="325.8" y="355.0" width="10.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="328.8" y="366.0"></text>
</g>
<g>
<title>fdval (21 samples, 0.36%)</title><rect x="336.2" y="355.0" width="4.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="339.2" y="366.0"></text>
</g>
<g>
<title>pread (3,605 samples, 62.13%)</title><rect x="340.5" y="355.0" width="733.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="343.5" y="366.0">pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2,875 samples, 49.55%)</title><rect x="489.0" y="339.0" width="584.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="492.0" y="350.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (2,875 samples, 49.55%)</title><rect x="489.0" y="323.0" width="584.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="492.0" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (161 samples, 2.77%)</title><rect x="617.1" y="307.0" width="32.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="620.1" y="318.0">__..</text>
</g>
<g>
<title>__audit_syscall_exit (141 samples, 2.43%)</title><rect x="621.2" y="291.0" width="28.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="624.2" y="302.0">__..</text>
</g>
<g>
<title>kfree (29 samples, 0.50%)</title><rect x="638.4" y="275.0" width="5.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="641.4" y="286.0"></text>
</g>
<g>
<title>mntput (3 samples, 0.05%)</title><rect x="644.3" y="275.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.3" y="286.0"></text>
</g>
<g>
<title>path_put (10 samples, 0.17%)</title><rect x="644.9" y="275.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.9" y="286.0"></text>
</g>
<g>
<title>dput (4 samples, 0.07%)</title><rect x="646.2" y="259.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.2" y="270.0"></text>
</g>
<g>
<title>unroll_tree_refs (14 samples, 0.24%)</title><rect x="647.0" y="275.0" width="2.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="650.0" y="286.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1,923 samples, 33.14%)</title><rect x="649.8" y="307.0" width="391.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.8" y="318.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fget_light (175 samples, 3.02%)</title><rect x="669.4" y="291.0" width="35.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.4" y="302.0">__f..</text>
</g>
<g>
<title>__fget_files (143 samples, 2.46%)</title><rect x="675.9" y="275.0" width="29.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="678.9" y="286.0">__..</text>
</g>
<g>
<title>__rcu_read_lock (4 samples, 0.07%)</title><rect x="703.3" y="259.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="706.3" y="270.0"></text>
</g>
<g>
<title>__rcu_read_unlock (4 samples, 0.07%)</title><rect x="704.1" y="259.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="707.1" y="270.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="704.9" y="291.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="707.9" y="302.0"></text>
</g>
<g>
<title>fput_many (44 samples, 0.76%)</title><rect x="705.6" y="291.0" width="8.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="708.6" y="302.0"></text>
</g>
<g>
<title>vfs_read (1,605 samples, 27.66%)</title><rect x="714.5" y="291.0" width="326.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="717.5" y="302.0">vfs_read</text>
</g>
<g>
<title>fsnotify (105 samples, 1.81%)</title><rect x="729.8" y="275.0" width="21.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="732.8" y="286.0">f..</text>
</g>
<g>
<title>fsnotify_parent (93 samples, 1.60%)</title><rect x="751.1" y="275.0" width="18.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="754.1" y="286.0"></text>
</g>
<g>
<title>new_sync_read (1,197 samples, 20.63%)</title><rect x="770.0" y="275.0" width="243.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="773.0" y="286.0">new_sync_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.03%)</title><rect x="803.0" y="259.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="806.0" y="270.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (9 samples, 0.16%)</title><rect x="803.4" y="259.0" width="1.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="806.4" y="270.0"></text>
</g>
<g>
<title>iov_iter_init (6 samples, 0.10%)</title><rect x="805.2" y="259.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="808.2" y="270.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1,018 samples, 17.55%)</title><rect x="806.4" y="259.0" width="207.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="809.4" y="270.0">shmem_file_read_iter</text>
</g>
<g>
<title>copy_page_to_iter (250 samples, 4.31%)</title><rect x="844.1" y="243.0" width="50.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="847.1" y="254.0">copy_..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (36 samples, 0.62%)</title><rect x="858.1" y="227.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="861.1" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (145 samples, 2.50%)</title><rect x="865.4" y="227.0" width="29.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.4" y="238.0">co..</text>
</g>
<g>
<title>shmem_getpage_gfp (434 samples, 7.48%)</title><rect x="894.9" y="243.0" width="88.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="897.9" y="254.0">shmem_getp..</text>
</g>
<g>
<title>find_lock_entry (359 samples, 6.19%)</title><rect x="910.2" y="227.0" width="73.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="913.2" y="238.0">find_loc..</text>
</g>
<g>
<title>find_get_entry (268 samples, 4.62%)</title><rect x="921.1" y="211.0" width="54.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="924.1" y="222.0">find_..</text>
</g>
<g>
<title>PageHuge (2 samples, 0.03%)</title><rect x="950.2" y="195.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="953.2" y="206.0"></text>
</g>
<g>
<title>__rcu_read_lock (11 samples, 0.19%)</title><rect x="950.6" y="195.0" width="2.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="953.6" y="206.0"></text>
</g>
<g>
<title>__rcu_read_unlock (3 samples, 0.05%)</title><rect x="952.9" y="195.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="955.9" y="206.0"></text>
</g>
<g>
<title>xas_load (109 samples, 1.88%)</title><rect x="953.5" y="195.0" width="22.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="956.5" y="206.0">x..</text>
</g>
<g>
<title>xas_start (29 samples, 0.50%)</title><rect x="969.7" y="179.0" width="5.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="972.7" y="190.0"></text>
</g>
<g>
<title>page_mapping (35 samples, 0.60%)</title><rect x="975.6" y="211.0" width="7.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="978.6" y="222.0"></text>
</g>
<g>
<title>wait_on_page_bit_common (2 samples, 0.03%)</title><rect x="982.8" y="211.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="985.8" y="222.0"></text>
</g>
<g>
<title>touch_atime (101 samples, 1.74%)</title><rect x="983.2" y="243.0" width="20.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="986.2" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (68 samples, 1.17%)</title><rect x="989.9" y="227.0" width="13.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="992.9" y="238.0"></text>
</g>
<g>
<title>current_time (39 samples, 0.67%)</title><rect x="995.8" y="211.0" width="7.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="998.8" y="222.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (10 samples, 0.17%)</title><rect x="1001.7" y="195.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1004.7" y="206.0"></text>
</g>
<g>
<title>unlock_page (48 samples, 0.83%)</title><rect x="1003.7" y="243.0" width="9.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1006.7" y="254.0"></text>
</g>
<g>
<title>rw_verify_area (12 samples, 0.21%)</title><rect x="1013.5" y="275.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1016.5" y="286.0"></text>
</g>
<g>
<title>security_file_permission (123 samples, 2.12%)</title><rect x="1015.9" y="275.0" width="25.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1018.9" y="286.0">s..</text>
</g>
<g>
<title>fsnotify_parent (90 samples, 1.55%)</title><rect x="1022.6" y="259.0" width="18.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1025.6" y="270.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (3 samples, 0.05%)</title><rect x="1041.1" y="307.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1044.1" y="318.0"></text>
</g>
<g>
<title>syscall_trace_enter (157 samples, 2.71%)</title><rect x="1041.7" y="307.0" width="32.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1044.7" y="318.0">sy..</text>
</g>
<g>
<title>__audit_syscall_entry (63 samples, 1.09%)</title><rect x="1059.2" y="291.0" width="12.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1062.2" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (8 samples, 0.14%)</title><rect x="1072.0" y="291.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1075.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (3 samples, 0.05%)</title><rect x="1073.7" y="403.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1076.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (222 samples, 3.83%)</title><rect x="1074.3" y="403.0" width="45.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1077.3" y="414.0">sun/..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (74 samples, 1.28%)</title><rect x="1079.2" y="387.0" width="15.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.2" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (62 samples, 1.07%)</title><rect x="1081.6" y="371.0" width="12.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1084.6" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (43 samples, 0.74%)</title><rect x="1085.3" y="355.0" width="8.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1088.3" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.nextIndex (3 samples, 0.05%)</title><rect x="1093.4" y="339.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1096.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.05%)</title><rect x="1094.2" y="387.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.2" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (116 samples, 2.00%)</title><rect x="1094.8" y="387.0" width="23.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1097.8" y="398.0">s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1116.0" y="371.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.0" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.07%)</title><rect x="1116.4" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1119.4" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (4 samples, 0.07%)</title><rect x="1116.4" y="355.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1119.4" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.07%)</title><rect x="1116.4" y="339.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1119.4" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (4 samples, 0.07%)</title><rect x="1116.4" y="323.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1119.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.07%)</title><rect x="1117.2" y="371.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1120.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.03%)</title><rect x="1118.0" y="371.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (5 samples, 0.09%)</title><rect x="1118.4" y="387.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1121.4" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (119 samples, 2.05%)</title><rect x="1119.4" y="403.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1122.4" y="414.0">s..</text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="1121.1" y="387.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.1" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (71 samples, 1.22%)</title><rect x="1121.5" y="387.0" width="14.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.5" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (56 samples, 0.97%)</title><rect x="1124.1" y="371.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1127.1" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (44 samples, 0.76%)</title><rect x="1126.5" y="355.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1129.5" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (2 samples, 0.03%)</title><rect x="1135.5" y="371.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1138.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (28 samples, 0.48%)</title><rect x="1135.9" y="387.0" width="5.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1138.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (10 samples, 0.17%)</title><rect x="1141.6" y="387.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (4 samples, 0.07%)</title><rect x="1142.8" y="371.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1145.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (158 samples, 2.72%)</title><rect x="1143.6" y="419.0" width="32.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1146.6" y="430.0">su..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.07%)</title><rect x="1161.9" y="403.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.9" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.05%)</title><rect x="1162.1" y="387.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.1" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.03%)</title><rect x="1162.7" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1165.7" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="1162.7" y="387.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1165.7" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (2 samples, 0.03%)</title><rect x="1162.7" y="371.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.7" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (3 samples, 0.05%)</title><rect x="1163.2" y="403.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (3 samples, 0.05%)</title><rect x="1163.8" y="403.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1166.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (56 samples, 0.97%)</title><rect x="1164.4" y="403.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.4" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (45 samples, 0.78%)</title><rect x="1175.8" y="419.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.8" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.07%)</title><rect x="1184.1" y="403.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.1" y="414.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.03%)</title><rect x="1184.5" y="387.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeDispatcher.needsPositionLock (11 samples, 0.19%)</title><rect x="1184.9" y="435.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1187.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (8 samples, 0.14%)</title><rect x="1187.6" y="563.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (8 samples, 0.14%)</title><rect x="1187.6" y="547.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1190.6" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (8 samples, 0.14%)</title><rect x="1187.6" y="531.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (7 samples, 0.12%)</title><rect x="1187.8" y="515.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1190.8" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (7 samples, 0.12%)</title><rect x="1187.8" y="499.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1190.8" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (7 samples, 0.12%)</title><rect x="1187.8" y="483.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1190.8" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (7 samples, 0.12%)</title><rect x="1187.8" y="467.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.8" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.12%)</title><rect x="1187.8" y="451.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.8" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (7 samples, 0.12%)</title><rect x="1187.8" y="435.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1190.8" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (6 samples, 0.10%)</title><rect x="1187.8" y="419.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (6 samples, 0.10%)</title><rect x="1187.8" y="403.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1190.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (6 samples, 0.10%)</title><rect x="1187.8" y="387.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1190.8" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (6 samples, 0.10%)</title><rect x="1187.8" y="371.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.8" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (4 samples, 0.07%)</title><rect x="1187.8" y="355.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (4 samples, 0.07%)</title><rect x="1187.8" y="339.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (4 samples, 0.07%)</title><rect x="1187.8" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1190.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (4 samples, 0.07%)</title><rect x="1187.8" y="307.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1190.8" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.03%)</title><rect x="1187.8" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1190.8" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.03%)</title><rect x="1187.8" y="275.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1190.8" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.03%)</title><rect x="1188.2" y="291.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.03%)</title><rect x="1188.2" y="275.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.2" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="1188.2" y="259.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.2" y="270.0"></text>
</g>
<g>
<title>pread (2 samples, 0.03%)</title><rect x="1188.2" y="243.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1191.2" y="254.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2 samples, 0.03%)</title><rect x="1188.6" y="355.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1191.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2 samples, 0.03%)</title><rect x="1188.6" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1191.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (2 samples, 0.03%)</title><rect x="1188.6" y="323.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1191.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.03%)</title><rect x="1188.6" y="307.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1191.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (2 samples, 0.03%)</title><rect x="1188.6" y="291.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1191.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.03%)</title><rect x="1188.6" y="275.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1191.6" y="286.0"></text>
</g>
<g>
<title>pread (2 samples, 0.03%)</title><rect x="1188.6" y="259.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1191.6" y="270.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.03%)</title><rect x="1189.6" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1192.6" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.03%)</title><rect x="1189.6" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1192.6" y="686.0"></text>
</g>
</g>
</svg>
