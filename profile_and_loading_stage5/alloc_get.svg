<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550"
	 xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="533"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="533"> </text>
<g id="frames">
<g>
<title>all (35,950 samples, 100.00%)</title><rect x="10.0" y="499.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="510.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (21,620 samples, 60.14%)</title><rect x="10.0" y="483.0" width="709.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="494.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (21,620 samples, 60.14%)</title><rect x="10.0" y="467.0" width="709.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="478.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (21,620 samples, 60.14%)</title><rect x="10.0" y="451.0" width="709.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="462.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (38 samples, 0.11%)</title><rect x="10.0" y="435.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="13.0" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (38 samples, 0.11%)</title><rect x="10.0" y="419.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (38 samples, 0.11%)</title><rect x="10.0" y="403.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (38 samples, 0.11%)</title><rect x="10.0" y="387.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.0" y="398.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (38 samples, 0.11%)</title><rect x="10.0" y="371.0" width="1.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="13.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$81/1300379497.run (21,582 samples, 60.03%)</title><rect x="11.2" y="435.0" width="708.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.2" y="446.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$81/1300379497.run</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (21,582 samples, 60.03%)</title><rect x="11.2" y="419.0" width="708.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.2" y="430.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (21,582 samples, 60.03%)</title><rect x="11.2" y="403.0" width="708.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="14.2" y="414.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>java/lang/String.getBytes (255 samples, 0.71%)</title><rect x="11.3" y="387.0" width="8.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.3" y="398.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (255 samples, 0.71%)</title><rect x="11.3" y="371.0" width="8.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.3" y="382.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (255 samples, 0.71%)</title><rect x="11.3" y="355.0" width="8.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="14.3" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (255 samples, 0.71%)</title><rect x="11.3" y="339.0" width="8.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.3" y="350.0"></text>
</g>
<g>
<title>byte[] (255 samples, 0.71%)</title><rect x="11.3" y="323.0" width="8.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="14.3" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (32 samples, 0.09%)</title><rect x="19.7" y="387.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="22.7" y="398.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (32 samples, 0.09%)</title><rect x="19.7" y="371.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="22.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$85/1012089178.get$Lambda (8 samples, 0.02%)</title><rect x="19.8" y="355.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="22.8" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$85 (8 samples, 0.02%)</title><rect x="19.8" y="339.0" width="0.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="22.8" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$90/848607392.get$Lambda (15 samples, 0.04%)</title><rect x="20.1" y="355.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.1" y="366.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$90 (15 samples, 0.04%)</title><rect x="20.1" y="339.0" width="0.5" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="23.1" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (22 samples, 0.06%)</title><rect x="20.9" y="387.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.9" y="398.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.06%)</title><rect x="20.9" y="371.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.9" y="382.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (22 samples, 0.06%)</title><rect x="20.9" y="355.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="23.9" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.05%)</title><rect x="21.0" y="339.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="24.0" y="350.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.05%)</title><rect x="21.0" y="323.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="24.0" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (8,147 samples, 22.66%)</title><rect x="21.7" y="387.0" width="267.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="24.7" y="398.0">ru/mail/polis/service/gogun/AsyncSer..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (44 samples, 0.12%)</title><rect x="21.9" y="371.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.9" y="382.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1781241150.invoke (44 samples, 0.12%)</title><rect x="21.9" y="355.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="24.9" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (44 samples, 0.12%)</title><rect x="21.9" y="339.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="24.9" y="350.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (19 samples, 0.05%)</title><rect x="21.9" y="323.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.9" y="334.0"></text>
</g>
<g>
<title>java.lang.String (19 samples, 0.05%)</title><rect x="21.9" y="307.0" width="0.6" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="24.9" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (25 samples, 0.07%)</title><rect x="22.5" y="323.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="25.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (25 samples, 0.07%)</title><rect x="22.5" y="307.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="25.5" y="318.0"></text>
</g>
<g>
<title>byte[] (25 samples, 0.07%)</title><rect x="22.5" y="291.0" width="0.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="25.5" y="302.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,067 samples, 8.53%)</title><rect x="23.3" y="371.0" width="100.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.3" y="382.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3,067 samples, 8.53%)</title><rect x="23.3" y="355.0" width="100.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.3" y="366.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (9 samples, 0.03%)</title><rect x="23.3" y="339.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="26.3" y="350.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (2,626 samples, 7.30%)</title><rect x="23.6" y="339.0" width="86.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.6" y="350.0">one/nio/ht..</text>
</g>
<g>
<title>byte[] (816 samples, 2.27%)</title><rect x="23.6" y="323.0" width="26.8" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="26.6" y="334.0">b..</text>
</g>
<g>
<title>byte[] (1,810 samples, 5.03%)</title><rect x="50.4" y="323.0" width="59.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="53.4" y="334.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (358 samples, 1.00%)</title><rect x="109.8" y="339.0" width="11.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.8" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.05%)</title><rect x="110.0" y="323.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.05%)</title><rect x="110.0" y="307.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.0" y="318.0"></text>
</g>
<g>
<title>java.lang.String (10 samples, 0.03%)</title><rect x="110.0" y="291.0" width="0.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="113.0" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (9 samples, 0.03%)</title><rect x="110.4" y="291.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="113.4" y="302.0"></text>
</g>
<g>
<title>byte[] (9 samples, 0.03%)</title><rect x="110.4" y="275.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="113.4" y="286.0"></text>
</g>
<g>
<title>one.nio.http.Response (8 samples, 0.02%)</title><rect x="110.7" y="323.0" width="0.2" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="113.7" y="334.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (281 samples, 0.78%)</title><rect x="110.9" y="323.0" width="9.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.9" y="334.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (281 samples, 0.78%)</title><rect x="110.9" y="307.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.9" y="318.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (281 samples, 0.78%)</title><rect x="110.9" y="291.0" width="9.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.9" y="302.0"></text>
</g>
<g>
<title>char[] (190 samples, 0.53%)</title><rect x="110.9" y="275.0" width="6.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="113.9" y="286.0"></text>
</g>
<g>
<title>java.lang.String (34 samples, 0.09%)</title><rect x="117.2" y="275.0" width="1.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="120.2" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.16%)</title><rect x="118.3" y="275.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.3" y="286.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (57 samples, 0.16%)</title><rect x="118.3" y="259.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.3" y="270.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (57 samples, 0.16%)</title><rect x="118.3" y="243.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="121.3" y="254.0"></text>
</g>
<g>
<title>byte[] (57 samples, 0.16%)</title><rect x="118.3" y="227.0" width="1.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="121.3" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (18 samples, 0.05%)</title><rect x="120.4" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.4" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.05%)</title><rect x="120.4" y="307.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="123.4" y="318.0"></text>
</g>
<g>
<title>java.lang.String[] (18 samples, 0.05%)</title><rect x="120.4" y="291.0" width="0.6" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="123.4" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (18 samples, 0.05%)</title><rect x="121.0" y="323.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.0" y="334.0"></text>
</g>
<g>
<title>java/lang/String.substring (18 samples, 0.05%)</title><rect x="121.0" y="307.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.0" y="318.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.05%)</title><rect x="121.0" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.0" y="302.0"></text>
</g>
<g>
<title>java.lang.String (11 samples, 0.03%)</title><rect x="121.0" y="275.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="124.0" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (45 samples, 0.13%)</title><rect x="121.6" y="339.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.6" y="350.0"></text>
</g>
<g>
<title>one.nio.util.ByteArrayBuilder (10 samples, 0.03%)</title><rect x="121.6" y="323.0" width="0.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="124.6" y="334.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (35 samples, 0.10%)</title><rect x="121.9" y="323.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="124.9" y="334.0"></text>
</g>
<g>
<title>byte[] (35 samples, 0.10%)</title><rect x="121.9" y="307.0" width="1.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="124.9" y="318.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (19 samples, 0.05%)</title><rect x="123.0" y="339.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.0" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (19 samples, 0.05%)</title><rect x="123.0" y="323.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="126.0" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (19 samples, 0.05%)</title><rect x="123.0" y="307.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="126.0" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.04%)</title><rect x="123.2" y="291.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.2" y="302.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="123.2" y="275.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="126.2" y="286.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (10 samples, 0.03%)</title><rect x="123.7" y="339.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.7" y="350.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (10 samples, 0.03%)</title><rect x="123.7" y="323.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.7" y="334.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (10 samples, 0.03%)</title><rect x="123.7" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.7" y="318.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (10 samples, 0.03%)</title><rect x="123.7" y="291.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="126.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (23 samples, 0.06%)</title><rect x="124.0" y="371.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="127.0" y="382.0"></text>
</g>
<g>
<title>java/lang/String.substring (23 samples, 0.06%)</title><rect x="124.0" y="355.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.0" y="366.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (23 samples, 0.06%)</title><rect x="124.0" y="339.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.0" y="350.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.02%)</title><rect x="124.0" y="323.0" width="0.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="127.0" y="334.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (15 samples, 0.04%)</title><rect x="124.3" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.3" y="334.0"></text>
</g>
<g>
<title>byte[] (15 samples, 0.04%)</title><rect x="124.3" y="307.0" width="0.5" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="127.3" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (4,982 samples, 13.86%)</title><rect x="124.8" y="371.0" width="163.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.8" y="382.0">ru/mail/polis/service..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/517933573.linkToTargetMethod (14 samples, 0.04%)</title><rect x="124.8" y="355.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="127.8" y="366.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/89702273.invoke (14 samples, 0.04%)</title><rect x="124.8" y="339.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.8" y="350.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="124.8" y="323.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="127.8" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (17 samples, 0.05%)</title><rect x="125.2" y="355.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="128.2" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (13 samples, 0.04%)</title><rect x="125.3" y="339.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.3" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (4,947 samples, 13.76%)</title><rect x="125.8" y="355.0" width="162.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.8" y="366.0">ru/mail/polis/dao/DAO..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (278 samples, 0.77%)</title><rect x="125.8" y="339.0" width="9.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.8" y="350.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (261 samples, 0.73%)</title><rect x="125.8" y="323.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.8" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (98 samples, 0.27%)</title><rect x="125.8" y="307.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.8" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (98 samples, 0.27%)</title><rect x="125.8" y="291.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.8" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (98 samples, 0.27%)</title><rect x="125.8" y="275.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.8" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.27%)</title><rect x="125.8" y="259.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.8" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (98 samples, 0.27%)</title><rect x="125.8" y="243.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.8" y="254.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (98 samples, 0.27%)</title><rect x="125.8" y="227.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="128.8" y="238.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (98 samples, 0.27%)</title><rect x="125.8" y="211.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.8" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (98 samples, 0.27%)</title><rect x="125.8" y="195.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="128.8" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (98 samples, 0.27%)</title><rect x="125.8" y="179.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.8" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (98 samples, 0.27%)</title><rect x="125.8" y="163.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.8" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (98 samples, 0.27%)</title><rect x="125.8" y="147.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.8" y="158.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (98 samples, 0.27%)</title><rect x="125.8" y="131.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.8" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (98 samples, 0.27%)</title><rect x="125.8" y="115.0" width="3.2" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="128.8" y="126.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (163 samples, 0.45%)</title><rect x="129.0" y="307.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.0" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (163 samples, 0.45%)</title><rect x="129.0" y="291.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.0" y="302.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (163 samples, 0.45%)</title><rect x="129.0" y="275.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.0" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (163 samples, 0.45%)</title><rect x="129.0" y="259.0" width="5.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.0" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (163 samples, 0.45%)</title><rect x="129.0" y="243.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.0" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (163 samples, 0.45%)</title><rect x="129.0" y="227.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.0" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (112 samples, 0.31%)</title><rect x="129.0" y="211.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.0" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (112 samples, 0.31%)</title><rect x="129.0" y="195.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (112 samples, 0.31%)</title><rect x="129.0" y="179.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (112 samples, 0.31%)</title><rect x="129.0" y="163.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.0" y="174.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (66 samples, 0.18%)</title><rect x="129.0" y="147.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="132.0" y="158.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (39 samples, 0.11%)</title><rect x="129.0" y="131.0" width="1.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="132.0" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.08%)</title><rect x="130.3" y="131.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="133.3" y="142.0"></text>
</g>
<g>
<title>byte[] (27 samples, 0.08%)</title><rect x="130.3" y="115.0" width="0.9" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="133.3" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (10 samples, 0.03%)</title><rect x="131.4" y="147.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="134.4" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (25 samples, 0.07%)</title><rect x="131.7" y="147.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="134.7" y="158.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (25 samples, 0.07%)</title><rect x="131.7" y="131.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.7" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (13 samples, 0.04%)</title><rect x="131.7" y="115.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="134.7" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.03%)</title><rect x="132.1" y="115.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="135.1" y="126.0"></text>
</g>
<g>
<title>byte[] (12 samples, 0.03%)</title><rect x="132.1" y="99.0" width="0.4" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="135.1" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (51 samples, 0.14%)</title><rect x="132.7" y="211.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="135.7" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (51 samples, 0.14%)</title><rect x="132.7" y="195.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="135.7" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (51 samples, 0.14%)</title><rect x="132.7" y="179.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.7" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (51 samples, 0.14%)</title><rect x="132.7" y="163.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (51 samples, 0.14%)</title><rect x="132.7" y="147.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (51 samples, 0.14%)</title><rect x="132.7" y="131.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="135.7" y="142.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (51 samples, 0.14%)</title><rect x="132.7" y="115.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (51 samples, 0.14%)</title><rect x="132.7" y="99.0" width="1.6" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="135.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$142/1356646997.apply (17 samples, 0.05%)</title><rect x="134.3" y="323.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="137.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (17 samples, 0.05%)</title><rect x="134.3" y="307.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.3" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (17 samples, 0.05%)</title><rect x="134.3" y="291.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="137.3" y="302.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (17 samples, 0.05%)</title><rect x="134.3" y="275.0" width="0.6" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="137.3" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (4,669 samples, 12.99%)</title><rect x="134.9" y="339.0" width="153.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.9" y="350.0">ru/mail/polis/dao/g..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1,168 samples, 3.25%)</title><rect x="134.9" y="323.0" width="38.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="137.9" y="334.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1,163 samples, 3.24%)</title><rect x="135.1" y="307.0" width="38.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.1" y="318.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (48 samples, 0.13%)</title><rect x="135.2" y="291.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="138.2" y="302.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (48 samples, 0.13%)</title><rect x="135.2" y="275.0" width="1.5" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="138.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1,104 samples, 3.07%)</title><rect x="137.0" y="291.0" width="36.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.0" y="302.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1,104 samples, 3.07%)</title><rect x="137.0" y="275.0" width="36.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.0" y="286.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (18 samples, 0.05%)</title><rect x="137.0" y="259.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="140.0" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (18 samples, 0.05%)</title><rect x="137.0" y="243.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="140.0" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (18 samples, 0.05%)</title><rect x="137.0" y="227.0" width="0.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="140.0" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1,086 samples, 3.02%)</title><rect x="137.6" y="259.0" width="35.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="140.6" y="270.0">jav..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1,086 samples, 3.02%)</title><rect x="137.6" y="243.0" width="35.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.6" y="254.0">jav..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,086 samples, 3.02%)</title><rect x="137.6" y="227.0" width="35.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.6" y="238.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (1,086 samples, 3.02%)</title><rect x="137.6" y="211.0" width="35.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.6" y="222.0">com..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (924 samples, 2.57%)</title><rect x="137.6" y="195.0" width="30.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="140.6" y="206.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (924 samples, 2.57%)</title><rect x="137.6" y="179.0" width="30.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.6" y="190.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (924 samples, 2.57%)</title><rect x="137.6" y="163.0" width="30.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.6" y="174.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (924 samples, 2.57%)</title><rect x="137.6" y="147.0" width="30.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.6" y="158.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (545 samples, 1.52%)</title><rect x="137.6" y="131.0" width="17.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="140.6" y="142.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (341 samples, 0.95%)</title><rect x="137.6" y="115.0" width="11.2" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="140.6" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (204 samples, 0.57%)</title><rect x="148.8" y="115.0" width="6.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.8" y="126.0"></text>
</g>
<g>
<title>byte[] (204 samples, 0.57%)</title><rect x="148.8" y="99.0" width="6.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="151.8" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (43 samples, 0.12%)</title><rect x="155.5" y="131.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="158.5" y="142.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (48 samples, 0.13%)</title><rect x="156.9" y="131.0" width="1.6" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="159.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (259 samples, 0.72%)</title><rect x="158.5" y="131.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="161.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (259 samples, 0.72%)</title><rect x="158.5" y="115.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="161.5" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (107 samples, 0.30%)</title><rect x="158.5" y="99.0" width="3.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="161.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (152 samples, 0.42%)</title><rect x="162.0" y="99.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.0" y="110.0"></text>
</g>
<g>
<title>byte[] (152 samples, 0.42%)</title><rect x="162.0" y="83.0" width="5.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="165.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (29 samples, 0.08%)</title><rect x="167.0" y="131.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="170.0" y="142.0"></text>
</g>
<g>
<title>java/util/Optional.of (29 samples, 0.08%)</title><rect x="167.0" y="115.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="170.0" y="126.0"></text>
</g>
<g>
<title>java.util.Optional (29 samples, 0.08%)</title><rect x="167.0" y="99.0" width="0.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="170.0" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (162 samples, 0.45%)</title><rect x="167.9" y="195.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="170.9" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (162 samples, 0.45%)</title><rect x="167.9" y="179.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.9" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (162 samples, 0.45%)</title><rect x="167.9" y="163.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="170.9" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (162 samples, 0.45%)</title><rect x="167.9" y="147.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="170.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (162 samples, 0.45%)</title><rect x="167.9" y="131.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="170.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (162 samples, 0.45%)</title><rect x="167.9" y="115.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.9" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (162 samples, 0.45%)</title><rect x="167.9" y="99.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.9" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (162 samples, 0.45%)</title><rect x="167.9" y="83.0" width="5.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="170.9" y="94.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3,300 samples, 9.18%)</title><rect x="173.4" y="323.0" width="108.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="176.4" y="334.0">java/lang/Ite..</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (19 samples, 0.05%)</title><rect x="173.4" y="307.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="176.4" y="318.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (9 samples, 0.03%)</title><rect x="173.4" y="291.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="176.4" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (10 samples, 0.03%)</title><rect x="173.7" y="291.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="176.7" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (10 samples, 0.03%)</title><rect x="173.7" y="275.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="176.7" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (10 samples, 0.03%)</title><rect x="173.7" y="259.0" width="0.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="176.7" y="270.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (14 samples, 0.04%)</title><rect x="174.1" y="307.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="177.1" y="318.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (14 samples, 0.04%)</title><rect x="174.1" y="291.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.1" y="302.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (14 samples, 0.04%)</title><rect x="174.1" y="275.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="177.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$134/306575228.accept (3,267 samples, 9.09%)</title><rect x="174.5" y="307.0" width="107.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.5" y="318.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (3,267 samples, 9.09%)</title><rect x="174.5" y="291.0" width="107.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="177.5" y="302.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (3,267 samples, 9.09%)</title><rect x="174.5" y="275.0" width="107.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="177.5" y="286.0">ru/mail/polis..</text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.SSTable$1 (54 samples, 0.15%)</title><rect x="174.5" y="259.0" width="1.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="177.5" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (3,213 samples, 8.94%)</title><rect x="176.3" y="259.0" width="105.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="179.3" y="270.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (3,213 samples, 8.94%)</title><rect x="176.3" y="243.0" width="105.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="179.3" y="254.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (3,213 samples, 8.94%)</title><rect x="176.3" y="227.0" width="105.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.3" y="238.0">ru/mail/polis..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3,213 samples, 8.94%)</title><rect x="176.3" y="211.0" width="105.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="179.3" y="222.0">java/nio/Byte..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (1,225 samples, 3.41%)</title><rect x="176.3" y="195.0" width="40.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="179.3" y="206.0">jav..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1,988 samples, 5.53%)</title><rect x="216.5" y="195.0" width="65.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="219.5" y="206.0">java/ni..</text>
</g>
<g>
<title>byte[] (1,988 samples, 5.53%)</title><rect x="216.5" y="179.0" width="65.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="219.5" y="190.0">byte[]</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (23 samples, 0.06%)</title><rect x="281.7" y="323.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="284.7" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (23 samples, 0.06%)</title><rect x="281.7" y="307.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="284.7" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$131/1390384753.get$Lambda (17 samples, 0.05%)</title><rect x="281.7" y="291.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="284.7" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.DAOImpl$$Lambda$131 (17 samples, 0.05%)</title><rect x="281.7" y="275.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="284.7" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (29 samples, 0.08%)</title><rect x="282.5" y="323.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.5" y="334.0"></text>
</g>
<g>
<title>java.lang.Object[] (29 samples, 0.08%)</title><rect x="282.5" y="307.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="285.5" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (106 samples, 0.29%)</title><rect x="283.5" y="323.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.5" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (103 samples, 0.29%)</title><rect x="283.5" y="307.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="286.5" y="318.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (103 samples, 0.29%)</title><rect x="283.5" y="291.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.5" y="302.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (41 samples, 0.11%)</title><rect x="283.5" y="275.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.5" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (41 samples, 0.11%)</title><rect x="283.5" y="259.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.5" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (41 samples, 0.11%)</title><rect x="283.5" y="243.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.5" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.11%)</title><rect x="283.5" y="227.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.5" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (41 samples, 0.11%)</title><rect x="283.5" y="211.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.5" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (41 samples, 0.11%)</title><rect x="283.5" y="195.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="286.5" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (41 samples, 0.11%)</title><rect x="283.5" y="179.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (41 samples, 0.11%)</title><rect x="283.5" y="163.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="286.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (41 samples, 0.11%)</title><rect x="283.5" y="147.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.5" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (41 samples, 0.11%)</title><rect x="283.5" y="131.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (41 samples, 0.11%)</title><rect x="283.5" y="115.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (41 samples, 0.11%)</title><rect x="283.5" y="99.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="286.5" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (41 samples, 0.11%)</title><rect x="283.5" y="83.0" width="1.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="286.5" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (62 samples, 0.17%)</title><rect x="284.9" y="275.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="287.9" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (62 samples, 0.17%)</title><rect x="284.9" y="259.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.9" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (62 samples, 0.17%)</title><rect x="284.9" y="243.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (62 samples, 0.17%)</title><rect x="284.9" y="227.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.9" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.17%)</title><rect x="284.9" y="211.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.9" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (62 samples, 0.17%)</title><rect x="284.9" y="195.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (49 samples, 0.14%)</title><rect x="284.9" y="179.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="287.9" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (49 samples, 0.14%)</title><rect x="284.9" y="163.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="287.9" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (49 samples, 0.14%)</title><rect x="284.9" y="147.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="287.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (49 samples, 0.14%)</title><rect x="284.9" y="131.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.9" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (37 samples, 0.10%)</title><rect x="284.9" y="115.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="287.9" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (19 samples, 0.05%)</title><rect x="284.9" y="99.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="287.9" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (18 samples, 0.05%)</title><rect x="285.5" y="99.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.5" y="110.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.05%)</title><rect x="285.5" y="83.0" width="0.6" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="288.5" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (8 samples, 0.02%)</title><rect x="286.2" y="115.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8 samples, 0.02%)</title><rect x="286.2" y="99.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="289.2" y="110.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (13 samples, 0.04%)</title><rect x="286.5" y="179.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.5" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (13 samples, 0.04%)</title><rect x="286.5" y="163.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.5" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (13 samples, 0.04%)</title><rect x="286.5" y="147.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.5" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (13 samples, 0.04%)</title><rect x="286.5" y="131.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.5" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (13 samples, 0.04%)</title><rect x="286.5" y="115.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.5" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (13 samples, 0.04%)</title><rect x="286.5" y="99.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="289.5" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (13 samples, 0.04%)</title><rect x="286.5" y="83.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (13 samples, 0.04%)</title><rect x="286.5" y="67.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="289.5" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (37 samples, 0.10%)</title><rect x="286.9" y="323.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="289.9" y="334.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (9 samples, 0.03%)</title><rect x="287.2" y="307.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.2" y="318.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (9 samples, 0.03%)</title><rect x="287.2" y="291.0" width="0.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="290.2" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.05%)</title><rect x="287.6" y="307.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.6" y="318.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.05%)</title><rect x="287.6" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.6" y="302.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (17 samples, 0.05%)</title><rect x="287.6" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.6" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (17 samples, 0.05%)</title><rect x="287.6" y="259.0" width="0.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="290.6" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (25 samples, 0.07%)</title><rect x="288.3" y="371.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="291.3" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.07%)</title><rect x="288.3" y="355.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="291.3" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (25 samples, 0.07%)</title><rect x="288.3" y="339.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.3" y="350.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (25 samples, 0.07%)</title><rect x="288.3" y="323.0" width="0.8" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="291.3" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (30 samples, 0.08%)</title><rect x="289.1" y="387.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="292.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (30 samples, 0.08%)</title><rect x="289.1" y="371.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.1" y="382.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (13 samples, 0.04%)</title><rect x="289.2" y="355.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.2" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (8 samples, 0.02%)</title><rect x="289.3" y="339.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.3" y="350.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (15 samples, 0.04%)</title><rect x="289.6" y="355.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="292.6" y="366.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (13 samples, 0.04%)</title><rect x="289.7" y="339.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.7" y="350.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (13 samples, 0.04%)</title><rect x="289.7" y="323.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.7" y="334.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (11 samples, 0.03%)</title><rect x="289.7" y="307.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.7" y="318.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (11 samples, 0.03%)</title><rect x="289.7" y="291.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="292.7" y="302.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (11 samples, 0.03%)</title><rect x="289.7" y="275.0" width="0.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="292.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (8 samples, 0.02%)</title><rect x="290.1" y="387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (8 samples, 0.02%)</title><rect x="290.1" y="371.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.1" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (39 samples, 0.11%)</title><rect x="290.3" y="387.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="293.3" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (39 samples, 0.11%)</title><rect x="290.3" y="371.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.3" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (31 samples, 0.09%)</title><rect x="290.6" y="355.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="293.6" y="366.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (10 samples, 0.03%)</title><rect x="290.7" y="339.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.7" y="350.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (17 samples, 0.05%)</title><rect x="291.1" y="339.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.1" y="350.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (15 samples, 0.04%)</title><rect x="291.1" y="323.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.1" y="334.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (15 samples, 0.04%)</title><rect x="291.1" y="307.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.1" y="318.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (14 samples, 0.04%)</title><rect x="291.2" y="291.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="294.2" y="302.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.04%)</title><rect x="291.2" y="275.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="294.2" y="286.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (14 samples, 0.04%)</title><rect x="291.2" y="259.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="294.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (38 samples, 0.11%)</title><rect x="291.6" y="387.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="294.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (38 samples, 0.11%)</title><rect x="291.6" y="371.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="294.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (38 samples, 0.11%)</title><rect x="291.6" y="355.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="294.6" y="366.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (38 samples, 0.11%)</title><rect x="291.6" y="339.0" width="1.3" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="294.6" y="350.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (13,002 samples, 36.17%)</title><rect x="292.9" y="387.0" width="426.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.9" y="398.0">ru/mail/polis/service/gogun/ServiceUtils.selector</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (123 samples, 0.34%)</title><rect x="292.9" y="371.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.9" y="382.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (100 samples, 0.28%)</title><rect x="292.9" y="355.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="295.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (73 samples, 0.20%)</title><rect x="292.9" y="339.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.9" y="350.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (73 samples, 0.20%)</title><rect x="292.9" y="323.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.9" y="334.0"></text>
</g>
<g>
<title>byte[] (73 samples, 0.20%)</title><rect x="292.9" y="307.0" width="2.4" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="295.9" y="318.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (27 samples, 0.08%)</title><rect x="295.3" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="298.3" y="350.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (27 samples, 0.08%)</title><rect x="295.3" y="323.0" width="0.9" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="298.3" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (23 samples, 0.06%)</title><rect x="296.2" y="355.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="299.2" y="366.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (23 samples, 0.06%)</title><rect x="296.2" y="339.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="299.2" y="350.0"></text>
</g>
<g>
<title>java.lang.String[] (23 samples, 0.06%)</title><rect x="296.2" y="323.0" width="0.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="299.2" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$108/13738514.get (64 samples, 0.18%)</title><rect x="296.9" y="371.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="299.9" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/MergeResponses.mergeGetResponses (64 samples, 0.18%)</title><rect x="296.9" y="355.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="299.9" y="366.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (10 samples, 0.03%)</title><rect x="296.9" y="339.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.9" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (33 samples, 0.09%)</title><rect x="297.3" y="339.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="300.3" y="350.0"></text>
</g>
<g>
<title>java/lang/String.substring (33 samples, 0.09%)</title><rect x="297.3" y="323.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.3" y="334.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (33 samples, 0.09%)</title><rect x="297.3" y="307.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="300.3" y="318.0"></text>
</g>
<g>
<title>java.lang.String (15 samples, 0.04%)</title><rect x="297.3" y="291.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="300.3" y="302.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (18 samples, 0.05%)</title><rect x="297.8" y="291.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.8" y="302.0"></text>
</g>
<g>
<title>byte[] (18 samples, 0.05%)</title><rect x="297.8" y="275.0" width="0.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="300.8" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (20 samples, 0.06%)</title><rect x="298.4" y="339.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="301.4" y="350.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (18 samples, 0.05%)</title><rect x="298.4" y="323.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="301.4" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$90/848607392.get (12,815 samples, 35.65%)</title><rect x="299.0" y="371.0" width="420.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="302.0" y="382.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$90/84..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$3 (12,815 samples, 35.65%)</title><rect x="299.0" y="355.0" width="420.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.0" y="366.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handle..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (12,815 samples, 35.65%)</title><rect x="299.0" y="339.0" width="420.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.0" y="350.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/517933573.linkToTargetMethod (18 samples, 0.05%)</title><rect x="299.0" y="323.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.0" y="334.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/89702273.invoke (18 samples, 0.05%)</title><rect x="299.0" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.0" y="318.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (18 samples, 0.05%)</title><rect x="299.0" y="291.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="302.0" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (13 samples, 0.04%)</title><rect x="299.2" y="275.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (13 samples, 0.04%)</title><rect x="299.2" y="259.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="302.2" y="270.0"></text>
</g>
<g>
<title>byte[] (13 samples, 0.04%)</title><rect x="299.2" y="243.0" width="0.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="302.2" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Response.ok (49 samples, 0.14%)</title><rect x="299.6" y="323.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="302.6" y="334.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (43 samples, 0.12%)</title><rect x="299.8" y="307.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="302.8" y="318.0"></text>
</g>
<g>
<title>byte[] (19 samples, 0.05%)</title><rect x="299.8" y="291.0" width="0.6" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="302.8" y="302.0"></text>
</g>
<g>
<title>java.lang.String[] (16 samples, 0.04%)</title><rect x="300.4" y="291.0" width="0.5" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="303.4" y="302.0"></text>
</g>
<g>
<title>java.lang.String (8 samples, 0.02%)</title><rect x="300.9" y="291.0" width="0.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="303.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (12,734 samples, 35.42%)</title><rect x="301.2" y="323.0" width="418.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.2" y="334.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (974 samples, 2.71%)</title><rect x="301.2" y="307.0" width="32.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="304.2" y="318.0">ru..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (906 samples, 2.52%)</title><rect x="301.2" y="291.0" width="29.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="304.2" y="302.0">co..</text>
</g>
<g>
<title>java/util/AbstractQueue.remove (290 samples, 0.81%)</title><rect x="301.2" y="275.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.2" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (290 samples, 0.81%)</title><rect x="301.2" y="259.0" width="9.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="304.2" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (290 samples, 0.81%)</title><rect x="301.2" y="243.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.2" y="254.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (290 samples, 0.81%)</title><rect x="301.2" y="227.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.2" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (290 samples, 0.81%)</title><rect x="301.2" y="211.0" width="9.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.2" y="222.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (290 samples, 0.81%)</title><rect x="301.2" y="195.0" width="9.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.2" y="206.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (290 samples, 0.81%)</title><rect x="301.2" y="179.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (290 samples, 0.81%)</title><rect x="301.2" y="163.0" width="9.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="304.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (290 samples, 0.81%)</title><rect x="301.2" y="147.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.2" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (290 samples, 0.81%)</title><rect x="301.2" y="131.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (290 samples, 0.81%)</title><rect x="301.2" y="115.0" width="9.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.2" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (290 samples, 0.81%)</title><rect x="301.2" y="99.0" width="9.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="304.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (290 samples, 0.81%)</title><rect x="301.2" y="83.0" width="9.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="304.2" y="94.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (616 samples, 1.71%)</title><rect x="310.7" y="275.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.7" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (616 samples, 1.71%)</title><rect x="310.7" y="259.0" width="20.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.7" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (616 samples, 1.71%)</title><rect x="310.7" y="243.0" width="20.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="313.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (616 samples, 1.71%)</title><rect x="310.7" y="227.0" width="20.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="313.7" y="238.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (616 samples, 1.71%)</title><rect x="310.7" y="211.0" width="20.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="313.7" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (616 samples, 1.71%)</title><rect x="310.7" y="195.0" width="20.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="313.7" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (411 samples, 1.14%)</title><rect x="310.7" y="179.0" width="13.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.7" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (411 samples, 1.14%)</title><rect x="310.7" y="163.0" width="13.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="313.7" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (411 samples, 1.14%)</title><rect x="310.7" y="147.0" width="13.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="313.7" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (411 samples, 1.14%)</title><rect x="310.7" y="131.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.7" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (249 samples, 0.69%)</title><rect x="310.7" y="115.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="313.7" y="126.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (169 samples, 0.47%)</title><rect x="310.7" y="99.0" width="5.6" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="313.7" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (80 samples, 0.22%)</title><rect x="316.3" y="99.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.3" y="110.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.22%)</title><rect x="316.3" y="83.0" width="2.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="319.3" y="94.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (24 samples, 0.07%)</title><rect x="318.9" y="115.0" width="0.8" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="321.9" y="126.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (16 samples, 0.04%)</title><rect x="319.7" y="115.0" width="0.5" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="322.7" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (102 samples, 0.28%)</title><rect x="320.2" y="115.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="323.2" y="126.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (102 samples, 0.28%)</title><rect x="320.2" y="99.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="323.2" y="110.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (36 samples, 0.10%)</title><rect x="320.2" y="83.0" width="1.2" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="323.2" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (66 samples, 0.18%)</title><rect x="321.4" y="83.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="324.4" y="94.0"></text>
</g>
<g>
<title>byte[] (66 samples, 0.18%)</title><rect x="321.4" y="67.0" width="2.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="324.4" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (20 samples, 0.06%)</title><rect x="323.6" y="115.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="326.6" y="126.0"></text>
</g>
<g>
<title>java/util/Optional.of (20 samples, 0.06%)</title><rect x="323.6" y="99.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="326.6" y="110.0"></text>
</g>
<g>
<title>java.util.Optional (20 samples, 0.06%)</title><rect x="323.6" y="83.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="326.6" y="94.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (205 samples, 0.57%)</title><rect x="324.2" y="179.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="327.2" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (205 samples, 0.57%)</title><rect x="324.2" y="163.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="327.2" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (205 samples, 0.57%)</title><rect x="324.2" y="147.0" width="6.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="327.2" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (205 samples, 0.57%)</title><rect x="324.2" y="131.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="327.2" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (205 samples, 0.57%)</title><rect x="324.2" y="115.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="327.2" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (205 samples, 0.57%)</title><rect x="324.2" y="99.0" width="6.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="327.2" y="110.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (205 samples, 0.57%)</title><rect x="324.2" y="83.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.2" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (205 samples, 0.57%)</title><rect x="324.2" y="67.0" width="6.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="327.2" y="78.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$142/1356646997.apply (68 samples, 0.19%)</title><rect x="330.9" y="291.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.9" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (68 samples, 0.19%)</title><rect x="330.9" y="275.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.9" y="286.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (68 samples, 0.19%)</title><rect x="330.9" y="259.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="333.9" y="270.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (68 samples, 0.19%)</title><rect x="330.9" y="243.0" width="2.3" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="333.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (11,760 samples, 32.71%)</title><rect x="333.2" y="307.0" width="386.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="336.2" y="318.0">ru/mail/polis/dao/gogun/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2,322 samples, 6.46%)</title><rect x="333.2" y="291.0" width="76.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="336.2" y="302.0">com/goog..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator (11 samples, 0.03%)</title><rect x="333.2" y="275.0" width="0.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="336.2" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2,311 samples, 6.43%)</title><rect x="333.5" y="275.0" width="75.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="336.5" y="286.0">com/goog..</text>
</g>
<g>
<title>com.google.common.collect.Iterators$MergingIterator$1 (11 samples, 0.03%)</title><rect x="333.5" y="259.0" width="0.4" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="336.5" y="270.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (77 samples, 0.21%)</title><rect x="333.9" y="259.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="336.9" y="270.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$PeekingImpl (77 samples, 0.21%)</title><rect x="333.9" y="243.0" width="2.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="336.9" y="254.0"></text>
</g>
<g>
<title>java.util.PriorityQueue (9 samples, 0.03%)</title><rect x="336.4" y="259.0" width="0.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="339.4" y="270.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (12 samples, 0.03%)</title><rect x="336.7" y="259.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="339.7" y="270.0"></text>
</g>
<g>
<title>java.lang.Object[] (12 samples, 0.03%)</title><rect x="336.7" y="243.0" width="0.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="339.7" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2,202 samples, 6.13%)</title><rect x="337.1" y="259.0" width="72.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="340.1" y="270.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2,202 samples, 6.13%)</title><rect x="337.1" y="243.0" width="72.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="340.1" y="254.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (56 samples, 0.16%)</title><rect x="337.1" y="227.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="340.1" y="238.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (56 samples, 0.16%)</title><rect x="337.1" y="211.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="340.1" y="222.0"></text>
</g>
<g>
<title>java.lang.Object[] (56 samples, 0.16%)</title><rect x="337.1" y="195.0" width="1.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="340.1" y="206.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2,146 samples, 5.97%)</title><rect x="339.0" y="227.0" width="70.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="342.0" y="238.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2,146 samples, 5.97%)</title><rect x="339.0" y="211.0" width="70.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="342.0" y="222.0">java/uti..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,146 samples, 5.97%)</title><rect x="339.0" y="195.0" width="70.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="342.0" y="206.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2,146 samples, 5.97%)</title><rect x="339.0" y="179.0" width="70.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.0" y="190.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (1,696 samples, 4.72%)</title><rect x="339.0" y="163.0" width="55.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.0" y="174.0">com/g..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (1,696 samples, 4.72%)</title><rect x="339.0" y="147.0" width="55.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="342.0" y="158.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (1,696 samples, 4.72%)</title><rect x="339.0" y="131.0" width="55.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="342.0" y="142.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (1,696 samples, 4.72%)</title><rect x="339.0" y="115.0" width="55.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.0" y="126.0">ru/ma..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1,044 samples, 2.90%)</title><rect x="339.0" y="99.0" width="34.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="342.0" y="110.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (661 samples, 1.84%)</title><rect x="339.0" y="83.0" width="21.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="342.0" y="94.0">j..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (383 samples, 1.07%)</title><rect x="360.7" y="83.0" width="12.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.7" y="94.0"></text>
</g>
<g>
<title>byte[] (383 samples, 1.07%)</title><rect x="360.7" y="67.0" width="12.5" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="363.7" y="78.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Row (76 samples, 0.21%)</title><rect x="373.2" y="99.0" width="2.5" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="376.2" y="110.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (84 samples, 0.23%)</title><rect x="375.7" y="99.0" width="2.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="378.7" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (434 samples, 1.21%)</title><rect x="378.5" y="99.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="381.5" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (434 samples, 1.21%)</title><rect x="378.5" y="83.0" width="14.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.5" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (150 samples, 0.42%)</title><rect x="378.5" y="67.0" width="4.9" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="381.5" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (284 samples, 0.79%)</title><rect x="383.4" y="67.0" width="9.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="386.4" y="78.0"></text>
</g>
<g>
<title>byte[] (284 samples, 0.79%)</title><rect x="383.4" y="51.0" width="9.3" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="386.4" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (58 samples, 0.16%)</title><rect x="392.7" y="99.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.7" y="110.0"></text>
</g>
<g>
<title>java/util/Optional.of (58 samples, 0.16%)</title><rect x="392.7" y="83.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="395.7" y="94.0"></text>
</g>
<g>
<title>java.util.Optional (58 samples, 0.16%)</title><rect x="392.7" y="67.0" width="1.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="395.7" y="78.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (450 samples, 1.25%)</title><rect x="394.6" y="163.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.6" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (450 samples, 1.25%)</title><rect x="394.6" y="147.0" width="14.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.6" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (450 samples, 1.25%)</title><rect x="394.6" y="131.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.6" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (450 samples, 1.25%)</title><rect x="394.6" y="115.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="397.6" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (450 samples, 1.25%)</title><rect x="394.6" y="99.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.6" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (450 samples, 1.25%)</title><rect x="394.6" y="83.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.6" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (450 samples, 1.25%)</title><rect x="394.6" y="67.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.6" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (450 samples, 1.25%)</title><rect x="394.6" y="51.0" width="14.8" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="397.6" y="62.0"></text>
</g>
<g>
<title>java.util.ArrayList (12 samples, 0.03%)</title><rect x="409.4" y="291.0" width="0.4" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="412.4" y="302.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8,939 samples, 24.87%)</title><rect x="409.8" y="291.0" width="293.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.8" y="302.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (23 samples, 0.06%)</title><rect x="409.8" y="275.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.8" y="286.0"></text>
</g>
<g>
<title>java.util.AbstractMap$2$1 (10 samples, 0.03%)</title><rect x="409.8" y="259.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="412.8" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (13 samples, 0.04%)</title><rect x="410.1" y="259.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.1" y="270.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (13 samples, 0.04%)</title><rect x="410.1" y="243.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.1" y="254.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator (13 samples, 0.04%)</title><rect x="410.1" y="227.0" width="0.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="413.1" y="238.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (16 samples, 0.04%)</title><rect x="410.5" y="275.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.5" y="286.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (16 samples, 0.04%)</title><rect x="410.5" y="259.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="413.5" y="270.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (16 samples, 0.04%)</title><rect x="410.5" y="243.0" width="0.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="413.5" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$134/306575228.accept (8,900 samples, 24.76%)</title><rect x="411.1" y="275.0" width="292.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.1" y="286.0">ru/mail/polis/dao/gogun/DAOImpl$$Lambda..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (8,900 samples, 24.76%)</title><rect x="411.1" y="259.0" width="292.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="414.1" y="270.0">ru/mail/polis/dao/gogun/DAOImpl.lambda$..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (8,900 samples, 24.76%)</title><rect x="411.1" y="243.0" width="292.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.1" y="254.0">ru/mail/polis/dao/gogun/SSTable.iterator</text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.SSTable$1 (99 samples, 0.28%)</title><rect x="411.1" y="227.0" width="3.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="414.1" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (8,801 samples, 24.48%)</title><rect x="414.3" y="227.0" width="288.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.3" y="238.0">ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (8,801 samples, 24.48%)</title><rect x="414.3" y="211.0" width="288.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.3" y="222.0">ru/mail/polis/dao/gogun/SSTable.binaryS..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (8,801 samples, 24.48%)</title><rect x="414.3" y="195.0" width="288.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.3" y="206.0">ru/mail/polis/dao/gogun/SSTable.key</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (8,801 samples, 24.48%)</title><rect x="414.3" y="179.0" width="288.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="417.3" y="190.0">java/nio/ByteBuffer.allocate</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,358 samples, 9.34%)</title><rect x="414.3" y="163.0" width="110.2" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="417.3" y="174.0">java.nio.Heap..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5,443 samples, 15.14%)</title><rect x="524.5" y="163.0" width="178.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.5" y="174.0">java/nio/HeapByteBuffer..</text>
</g>
<g>
<title>byte[] (5,443 samples, 15.14%)</title><rect x="524.5" y="147.0" width="178.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="527.5" y="158.0">byte[]</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (14 samples, 0.04%)</title><rect x="703.2" y="291.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="706.2" y="302.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (14 samples, 0.04%)</title><rect x="703.2" y="275.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$134/306575228.get$Lambda (9 samples, 0.03%)</title><rect x="703.4" y="259.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="706.4" y="270.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.DAOImpl$$Lambda$134 (9 samples, 0.03%)</title><rect x="703.4" y="243.0" width="0.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="706.4" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (14 samples, 0.04%)</title><rect x="703.7" y="291.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="706.7" y="302.0"></text>
</g>
<g>
<title>java.lang.Object[] (14 samples, 0.04%)</title><rect x="703.7" y="275.0" width="0.4" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="706.7" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (405 samples, 1.13%)</title><rect x="704.1" y="291.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="707.1" y="302.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.Iters$CollapseEqualsIterator (8 samples, 0.02%)</title><rect x="704.1" y="275.0" width="0.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="707.1" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (397 samples, 1.10%)</title><rect x="704.4" y="275.0" width="13.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="707.4" y="286.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (397 samples, 1.10%)</title><rect x="704.4" y="259.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="707.4" y="270.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (139 samples, 0.39%)</title><rect x="704.4" y="243.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="707.4" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (139 samples, 0.39%)</title><rect x="704.4" y="227.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.4" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (139 samples, 0.39%)</title><rect x="704.4" y="211.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="707.4" y="222.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (139 samples, 0.39%)</title><rect x="704.4" y="195.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.4" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (139 samples, 0.39%)</title><rect x="704.4" y="179.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="707.4" y="190.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (139 samples, 0.39%)</title><rect x="704.4" y="163.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="707.4" y="174.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (139 samples, 0.39%)</title><rect x="704.4" y="147.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="707.4" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (139 samples, 0.39%)</title><rect x="704.4" y="131.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="707.4" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (139 samples, 0.39%)</title><rect x="704.4" y="115.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="707.4" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (139 samples, 0.39%)</title><rect x="704.4" y="99.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="707.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (139 samples, 0.39%)</title><rect x="704.4" y="83.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="707.4" y="94.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (139 samples, 0.39%)</title><rect x="704.4" y="67.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="707.4" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (139 samples, 0.39%)</title><rect x="704.4" y="51.0" width="4.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="707.4" y="62.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (258 samples, 0.72%)</title><rect x="708.9" y="243.0" width="8.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.9" y="254.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (258 samples, 0.72%)</title><rect x="708.9" y="227.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.9" y="238.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (258 samples, 0.72%)</title><rect x="708.9" y="211.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.9" y="222.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (258 samples, 0.72%)</title><rect x="708.9" y="195.0" width="8.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.9" y="206.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (258 samples, 0.72%)</title><rect x="708.9" y="179.0" width="8.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.9" y="190.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (258 samples, 0.72%)</title><rect x="708.9" y="163.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.9" y="174.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (187 samples, 0.52%)</title><rect x="708.9" y="147.0" width="6.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (187 samples, 0.52%)</title><rect x="708.9" y="131.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.9" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (187 samples, 0.52%)</title><rect x="708.9" y="115.0" width="6.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="711.9" y="126.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (187 samples, 0.52%)</title><rect x="708.9" y="99.0" width="6.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="711.9" y="110.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (118 samples, 0.33%)</title><rect x="708.9" y="83.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.9" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (76 samples, 0.21%)</title><rect x="708.9" y="67.0" width="2.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="711.9" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (42 samples, 0.12%)</title><rect x="711.4" y="67.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.4" y="78.0"></text>
</g>
<g>
<title>byte[] (42 samples, 0.12%)</title><rect x="711.4" y="51.0" width="1.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="714.4" y="62.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (9 samples, 0.03%)</title><rect x="713.0" y="83.0" width="0.3" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="716.0" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (45 samples, 0.13%)</title><rect x="713.3" y="83.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.3" y="94.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (45 samples, 0.13%)</title><rect x="713.3" y="67.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="716.3" y="78.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (22 samples, 0.06%)</title><rect x="713.3" y="51.0" width="0.8" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="716.3" y="62.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.06%)</title><rect x="714.1" y="51.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="717.1" y="62.0"></text>
</g>
<g>
<title>byte[] (23 samples, 0.06%)</title><rect x="714.1" y="35.0" width="0.7" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="717.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (8 samples, 0.02%)</title><rect x="714.8" y="83.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.8" y="94.0"></text>
</g>
<g>
<title>java/util/Optional.of (8 samples, 0.02%)</title><rect x="714.8" y="67.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="717.8" y="78.0"></text>
</g>
<g>
<title>java.util.Optional (8 samples, 0.02%)</title><rect x="714.8" y="51.0" width="0.3" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="717.8" y="62.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (71 samples, 0.20%)</title><rect x="715.1" y="147.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.1" y="158.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (71 samples, 0.20%)</title><rect x="715.1" y="131.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.1" y="142.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (71 samples, 0.20%)</title><rect x="715.1" y="115.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.1" y="126.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (71 samples, 0.20%)</title><rect x="715.1" y="99.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="718.1" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (71 samples, 0.20%)</title><rect x="715.1" y="83.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="718.1" y="94.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (71 samples, 0.20%)</title><rect x="715.1" y="67.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.1" y="78.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (71 samples, 0.20%)</title><rect x="715.1" y="51.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.1" y="62.0"></text>
</g>
<g>
<title>java.nio.HeapByteBufferR (71 samples, 0.20%)</title><rect x="715.1" y="35.0" width="2.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="718.1" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (54 samples, 0.15%)</title><rect x="717.4" y="291.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.4" y="302.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (14 samples, 0.04%)</title><rect x="717.4" y="275.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="720.4" y="286.0"></text>
</g>
<g>
<title>com.google.common.collect.Iterators$6 (14 samples, 0.04%)</title><rect x="717.4" y="259.0" width="0.5" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="720.4" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (15 samples, 0.04%)</title><rect x="717.9" y="275.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.9" y="286.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator (15 samples, 0.04%)</title><rect x="717.9" y="259.0" width="0.5" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="720.9" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (22 samples, 0.06%)</title><rect x="718.5" y="275.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.5" y="286.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (22 samples, 0.06%)</title><rect x="718.5" y="259.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.5" y="270.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (22 samples, 0.06%)</title><rect x="718.5" y="243.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="721.5" y="254.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentSkipListMap$SubMap (22 samples, 0.06%)</title><rect x="718.5" y="227.0" width="0.7" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="721.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getArray (14 samples, 0.04%)</title><rect x="719.2" y="323.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.2" y="334.0"></text>
</g>
<g>
<title>byte[] (14 samples, 0.04%)</title><rect x="719.2" y="307.0" width="0.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="722.2" y="318.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (14,330 samples, 39.86%)</title><rect x="719.6" y="483.0" width="470.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.6" y="494.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (356 samples, 0.99%)</title><rect x="719.6" y="467.0" width="11.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="722.6" y="478.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (356 samples, 0.99%)</title><rect x="719.6" y="451.0" width="11.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="722.6" y="462.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (13,974 samples, 38.87%)</title><rect x="731.3" y="467.0" width="458.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.3" y="478.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (13,974 samples, 38.87%)</title><rect x="731.3" y="451.0" width="458.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="734.3" y="462.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13,974 samples, 38.87%)</title><rect x="731.3" y="435.0" width="458.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.3" y="446.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2,686 samples, 7.47%)</title><rect x="731.3" y="419.0" width="88.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.3" y="430.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2,686 samples, 7.47%)</title><rect x="731.3" y="403.0" width="88.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="734.3" y="414.0">one/nio/ht..</text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (1,433 samples, 3.99%)</title><rect x="731.3" y="387.0" width="47.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="734.3" y="398.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (758 samples, 2.11%)</title><rect x="731.3" y="371.0" width="24.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="734.3" y="382.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (758 samples, 2.11%)</title><rect x="731.3" y="355.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.3" y="366.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (758 samples, 2.11%)</title><rect x="731.3" y="339.0" width="24.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="734.3" y="350.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (758 samples, 2.11%)</title><rect x="731.3" y="323.0" width="24.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="734.3" y="334.0">j..</text>
</g>
<g>
<title>java.lang.String (188 samples, 0.52%)</title><rect x="731.3" y="307.0" width="6.2" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="734.3" y="318.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (570 samples, 1.59%)</title><rect x="737.5" y="307.0" width="18.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.5" y="318.0"></text>
</g>
<g>
<title>byte[] (570 samples, 1.59%)</title><rect x="737.5" y="291.0" width="18.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="740.5" y="302.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (675 samples, 1.88%)</title><rect x="756.2" y="371.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.2" y="382.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (675 samples, 1.88%)</title><rect x="756.2" y="355.0" width="22.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.2" y="366.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (675 samples, 1.88%)</title><rect x="756.2" y="339.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.2" y="350.0">j..</text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (675 samples, 1.88%)</title><rect x="756.2" y="323.0" width="22.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="759.2" y="334.0">j..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$81/1300379497.get$Lambda (675 samples, 1.88%)</title><rect x="756.2" y="307.0" width="22.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="759.2" y="318.0">r..</text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$81 (675 samples, 1.88%)</title><rect x="756.2" y="291.0" width="22.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="759.2" y="302.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1,253 samples, 3.49%)</title><rect x="778.4" y="387.0" width="41.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.4" y="398.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (1,253 samples, 3.49%)</title><rect x="778.4" y="371.0" width="41.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.4" y="382.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1,253 samples, 3.49%)</title><rect x="778.4" y="355.0" width="41.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.4" y="366.0">jav..</text>
</g>
<g>
<title>java.lang.String (479 samples, 1.33%)</title><rect x="778.4" y="339.0" width="15.7" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="781.4" y="350.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (774 samples, 2.15%)</title><rect x="794.1" y="339.0" width="25.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="797.1" y="350.0">j..</text>
</g>
<g>
<title>byte[] (774 samples, 2.15%)</title><rect x="794.1" y="323.0" width="25.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="797.1" y="334.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5,315 samples, 14.78%)</title><rect x="819.5" y="419.0" width="174.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.5" y="430.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one.nio.http.Request (803 samples, 2.23%)</title><rect x="819.5" y="403.0" width="26.3" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="822.5" y="414.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1,566 samples, 4.36%)</title><rect x="845.8" y="403.0" width="51.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.8" y="414.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (1,191 samples, 3.31%)</title><rect x="845.8" y="387.0" width="39.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="848.8" y="398.0">jav..</text>
</g>
<g>
<title>java.lang.String[] (375 samples, 1.04%)</title><rect x="884.9" y="387.0" width="12.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="887.9" y="398.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,946 samples, 8.19%)</title><rect x="897.2" y="403.0" width="96.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.2" y="414.0">one/nio/uti..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (2,946 samples, 8.19%)</title><rect x="897.2" y="387.0" width="96.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="900.2" y="398.0">one/nio/uti..</text>
</g>
<g>
<title>char[] (1,505 samples, 4.19%)</title><rect x="897.2" y="371.0" width="49.4" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="900.2" y="382.0">char[]</text>
</g>
<g>
<title>char[] (43 samples, 0.12%)</title><rect x="946.6" y="371.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="949.6" y="382.0"></text>
</g>
<g>
<title>java.lang.String (213 samples, 0.59%)</title><rect x="948.1" y="371.0" width="7.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="951.1" y="382.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,185 samples, 3.30%)</title><rect x="955.1" y="371.0" width="38.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="958.1" y="382.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,185 samples, 3.30%)</title><rect x="955.1" y="355.0" width="38.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.1" y="366.0">jav..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,185 samples, 3.30%)</title><rect x="955.1" y="339.0" width="38.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.1" y="350.0">jav..</text>
</g>
<g>
<title>byte[] (1,185 samples, 3.30%)</title><rect x="955.1" y="323.0" width="38.8" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="958.1" y="334.0">byt..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,973 samples, 16.61%)</title><rect x="993.9" y="419.0" width="196.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.9" y="430.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (5,973 samples, 16.61%)</title><rect x="993.9" y="403.0" width="196.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="996.9" y="414.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (2,979 samples, 8.29%)</title><rect x="993.9" y="387.0" width="97.8" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="996.9" y="398.0">char[]</text>
</g>
<g>
<title>char[] (359 samples, 1.00%)</title><rect x="1091.7" y="387.0" width="11.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1094.7" y="398.0"></text>
</g>
<g>
<title>java.lang.String (725 samples, 2.02%)</title><rect x="1103.5" y="387.0" width="23.8" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="1106.5" y="398.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,910 samples, 5.31%)</title><rect x="1127.3" y="387.0" width="62.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.3" y="398.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1,910 samples, 5.31%)</title><rect x="1127.3" y="371.0" width="62.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1130.3" y="382.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1,910 samples, 5.31%)</title><rect x="1127.3" y="355.0" width="62.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1130.3" y="366.0">java/l..</text>
</g>
<g>
<title>byte[] (1,905 samples, 5.30%)</title><rect x="1127.3" y="339.0" width="62.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1130.3" y="350.0">byte[]</text>
</g>
</g>
</svg>
