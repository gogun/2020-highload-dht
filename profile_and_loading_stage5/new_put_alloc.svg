<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390"
	 xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="373"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="373"> </text>
<g id="frames">
<g>
<title>all (122,150 samples, 100.00%)</title><rect x="10.0" y="339.0" width="1180.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="13.0" y="350.0">all</text>
</g>
<g>
<title>java/lang/Thread.run (75,019 samples, 61.42%)</title><rect x="10.0" y="323.0" width="724.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="334.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (75,019 samples, 61.42%)</title><rect x="10.0" y="307.0" width="724.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="318.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (75,019 samples, 61.42%)</title><rect x="10.0" y="291.0" width="724.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="302.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,733 samples, 3.06%)</title><rect x="10.0" y="275.0" width="36.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="286.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3,733 samples, 3.06%)</title><rect x="10.0" y="259.0" width="36.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="13.0" y="270.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3,629 samples, 2.97%)</title><rect x="10.0" y="243.0" width="35.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="13.0" y="254.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3,629 samples, 2.97%)</title><rect x="10.0" y="227.0" width="35.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="238.0">jav..</text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (3,629 samples, 2.97%)</title><rect x="10.0" y="211.0" width="35.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="13.0" y="222.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (104 samples, 0.09%)</title><rect x="45.1" y="243.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.1" y="254.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (104 samples, 0.09%)</title><rect x="45.1" y="227.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="48.1" y="238.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (104 samples, 0.09%)</title><rect x="45.1" y="211.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="48.1" y="222.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (104 samples, 0.09%)</title><rect x="45.1" y="195.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="48.1" y="206.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (104 samples, 0.09%)</title><rect x="45.1" y="179.0" width="1.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="48.1" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$78/1542953385.run (71,286 samples, 58.36%)</title><rect x="46.1" y="275.0" width="688.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.1" y="286.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$78/1542953385.run</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (71,286 samples, 58.36%)</title><rect x="46.1" y="259.0" width="688.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.1" y="270.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (71,286 samples, 58.36%)</title><rect x="46.1" y="243.0" width="688.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="49.1" y="254.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>java.util.ArrayList (85 samples, 0.07%)</title><rect x="46.1" y="227.0" width="0.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="49.1" y="238.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3,578 samples, 2.93%)</title><rect x="46.9" y="227.0" width="34.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="49.9" y="238.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encode (3,578 samples, 2.93%)</title><rect x="46.9" y="211.0" width="34.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="49.9" y="222.0">ja..</text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3,578 samples, 2.93%)</title><rect x="46.9" y="195.0" width="34.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.9" y="206.0">ja..</text>
</g>
<g>
<title>java/util/Arrays.copyOf (3,578 samples, 2.93%)</title><rect x="46.9" y="179.0" width="34.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.9" y="190.0">ja..</text>
</g>
<g>
<title>byte[] (3,578 samples, 2.93%)</title><rect x="46.9" y="163.0" width="34.5" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="49.9" y="174.0">by..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (69 samples, 0.06%)</title><rect x="81.4" y="227.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.4" y="238.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (69 samples, 0.06%)</title><rect x="81.4" y="211.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$110/9840105.get$Lambda (26 samples, 0.02%)</title><rect x="81.9" y="195.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.9" y="206.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$110 (26 samples, 0.02%)</title><rect x="81.9" y="179.0" width="0.2" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="84.9" y="190.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (239 samples, 0.20%)</title><rect x="82.1" y="227.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.1" y="238.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (239 samples, 0.20%)</title><rect x="82.1" y="211.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="85.1" y="222.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (239 samples, 0.20%)</title><rect x="82.1" y="195.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.1" y="206.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (239 samples, 0.20%)</title><rect x="82.1" y="179.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="85.1" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (239 samples, 0.20%)</title><rect x="82.1" y="163.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="85.1" y="174.0"></text>
</g>
<g>
<title>java.lang.Object[] (239 samples, 0.20%)</title><rect x="82.1" y="147.0" width="2.3" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="85.1" y="158.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (167 samples, 0.14%)</title><rect x="84.4" y="227.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="87.4" y="238.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (116 samples, 0.09%)</title><rect x="84.4" y="211.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.4" y="222.0"></text>
</g>
<g>
<title>java.util.HashMap$KeyIterator (116 samples, 0.09%)</title><rect x="84.4" y="195.0" width="1.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="87.4" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (51 samples, 0.04%)</title><rect x="85.5" y="211.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.5" y="222.0"></text>
</g>
<g>
<title>java.util.HashMap$KeySet (51 samples, 0.04%)</title><rect x="85.5" y="195.0" width="0.5" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="88.5" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3,669 samples, 3.00%)</title><rect x="86.0" y="227.0" width="35.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.0" y="238.0">one..</text>
</g>
<g>
<title>java/lang/String.substring (3,669 samples, 3.00%)</title><rect x="86.0" y="211.0" width="35.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.0" y="222.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3,669 samples, 3.00%)</title><rect x="86.0" y="195.0" width="35.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.0" y="206.0">jav..</text>
</g>
<g>
<title>java.lang.String (1,365 samples, 1.12%)</title><rect x="86.0" y="179.0" width="13.2" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="89.0" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2,304 samples, 1.89%)</title><rect x="99.2" y="179.0" width="22.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.2" y="190.0">j..</text>
</g>
<g>
<title>byte[] (2,304 samples, 1.89%)</title><rect x="99.2" y="163.0" width="22.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="102.2" y="174.0">b..</text>
</g>
<g>
<title>ru.mail.polis.service.gogun.ResponseMerger (37 samples, 0.03%)</title><rect x="121.5" y="227.0" width="0.3" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="124.5" y="238.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (30,076 samples, 24.62%)</title><rect x="121.8" y="227.0" width="290.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="124.8" y="238.0">ru/mail/polis/service/gogun/AsyncServic..</text>
</g>
<g>
<title>java/lang/String.getBytes (325 samples, 0.27%)</title><rect x="121.8" y="211.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.8" y="222.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (325 samples, 0.27%)</title><rect x="121.8" y="195.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="124.8" y="206.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (325 samples, 0.27%)</title><rect x="121.8" y="179.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="124.8" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (325 samples, 0.27%)</title><rect x="121.8" y="163.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.8" y="174.0"></text>
</g>
<g>
<title>byte[] (325 samples, 0.27%)</title><rect x="121.8" y="147.0" width="3.2" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="124.8" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (466 samples, 0.38%)</title><rect x="125.0" y="211.0" width="4.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.0" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/825962150.invoke (466 samples, 0.38%)</title><rect x="125.0" y="195.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.0" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (466 samples, 0.38%)</title><rect x="125.0" y="179.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.0" y="190.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (133 samples, 0.11%)</title><rect x="125.0" y="163.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.0" y="174.0"></text>
</g>
<g>
<title>java.lang.String (133 samples, 0.11%)</title><rect x="125.0" y="147.0" width="1.3" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="128.0" y="158.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (333 samples, 0.27%)</title><rect x="126.3" y="163.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="129.3" y="174.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (333 samples, 0.27%)</title><rect x="126.3" y="147.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="129.3" y="158.0"></text>
</g>
<g>
<title>byte[] (333 samples, 0.27%)</title><rect x="126.3" y="131.0" width="3.2" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="129.3" y="142.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (27,192 samples, 22.26%)</title><rect x="129.5" y="211.0" width="262.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.5" y="222.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (27,192 samples, 22.26%)</title><rect x="129.5" y="195.0" width="262.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.5" y="206.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one.nio.http.HttpClient$ResponseReader (260 samples, 0.21%)</title><rect x="129.5" y="179.0" width="2.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="132.5" y="190.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (23,631 samples, 19.35%)</title><rect x="132.0" y="179.0" width="228.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.0" y="190.0">one/nio/http/HttpClient$Respon..</text>
</g>
<g>
<title>byte[] (6,719 samples, 5.50%)</title><rect x="132.0" y="163.0" width="64.9" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="135.0" y="174.0">byte[]</text>
</g>
<g>
<title>byte[] (16,912 samples, 13.85%)</title><rect x="196.9" y="163.0" width="163.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="199.9" y="174.0">byte[]</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1,989 samples, 1.63%)</title><rect x="360.3" y="179.0" width="19.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="363.3" y="190.0"></text>
</g>
<g>
<title>byte[] (43 samples, 0.04%)</title><rect x="360.3" y="163.0" width="0.4" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="363.3" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (136 samples, 0.11%)</title><rect x="360.7" y="163.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="363.7" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (136 samples, 0.11%)</title><rect x="360.7" y="147.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="363.7" y="158.0"></text>
</g>
<g>
<title>java.lang.String (56 samples, 0.05%)</title><rect x="360.7" y="131.0" width="0.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="363.7" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (80 samples, 0.07%)</title><rect x="361.2" y="131.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.2" y="142.0"></text>
</g>
<g>
<title>byte[] (80 samples, 0.07%)</title><rect x="361.2" y="115.0" width="0.8" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="364.2" y="126.0"></text>
</g>
<g>
<title>one.nio.http.Response (68 samples, 0.06%)</title><rect x="362.0" y="163.0" width="0.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="365.0" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1,501 samples, 1.23%)</title><rect x="362.7" y="163.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="365.7" y="174.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,501 samples, 1.23%)</title><rect x="362.7" y="147.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="365.7" y="158.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1,501 samples, 1.23%)</title><rect x="362.7" y="131.0" width="14.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.7" y="142.0"></text>
</g>
<g>
<title>char[] (825 samples, 0.68%)</title><rect x="362.7" y="115.0" width="7.9" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="365.7" y="126.0"></text>
</g>
<g>
<title>java.lang.String (306 samples, 0.25%)</title><rect x="370.6" y="115.0" width="3.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="373.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (370 samples, 0.30%)</title><rect x="373.6" y="115.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="376.6" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (370 samples, 0.30%)</title><rect x="373.6" y="99.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="376.6" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (370 samples, 0.30%)</title><rect x="373.6" y="83.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="376.6" y="94.0"></text>
</g>
<g>
<title>byte[] (370 samples, 0.30%)</title><rect x="373.6" y="67.0" width="3.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="376.6" y="78.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (72 samples, 0.06%)</title><rect x="377.2" y="163.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="380.2" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (72 samples, 0.06%)</title><rect x="377.2" y="147.0" width="0.7" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="380.2" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (169 samples, 0.14%)</title><rect x="377.9" y="163.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.9" y="174.0"></text>
</g>
<g>
<title>java/lang/String.substring (169 samples, 0.14%)</title><rect x="377.9" y="147.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="380.9" y="158.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (169 samples, 0.14%)</title><rect x="377.9" y="131.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.9" y="142.0"></text>
</g>
<g>
<title>java.lang.String (67 samples, 0.05%)</title><rect x="377.9" y="115.0" width="0.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="380.9" y="126.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (102 samples, 0.08%)</title><rect x="378.5" y="115.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="381.5" y="126.0"></text>
</g>
<g>
<title>byte[] (102 samples, 0.08%)</title><rect x="378.5" y="99.0" width="1.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="381.5" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1,032 samples, 0.84%)</title><rect x="379.5" y="179.0" width="10.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.5" y="190.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1,032 samples, 0.84%)</title><rect x="379.5" y="163.0" width="10.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="382.5" y="174.0"></text>
</g>
<g>
<title>byte[] (1,032 samples, 0.84%)</title><rect x="379.5" y="147.0" width="10.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="382.5" y="158.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (200 samples, 0.16%)</title><rect x="389.5" y="179.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.5" y="190.0"></text>
</g>
<g>
<title>java/lang/String.substring (200 samples, 0.16%)</title><rect x="389.5" y="163.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="392.5" y="174.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (200 samples, 0.16%)</title><rect x="389.5" y="147.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.5" y="158.0"></text>
</g>
<g>
<title>java.lang.String (70 samples, 0.06%)</title><rect x="389.5" y="131.0" width="0.6" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="392.5" y="142.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (130 samples, 0.11%)</title><rect x="390.1" y="131.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="393.1" y="142.0"></text>
</g>
<g>
<title>byte[] (130 samples, 0.11%)</title><rect x="390.1" y="115.0" width="1.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="393.1" y="126.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (80 samples, 0.07%)</title><rect x="391.4" y="179.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.4" y="190.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (80 samples, 0.07%)</title><rect x="391.4" y="163.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="394.4" y="174.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (80 samples, 0.07%)</title><rect x="391.4" y="147.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="394.4" y="158.0"></text>
</g>
<g>
<title>java.util.LinkedList$Node (80 samples, 0.07%)</title><rect x="391.4" y="131.0" width="0.8" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="394.4" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (537 samples, 0.44%)</title><rect x="392.2" y="211.0" width="5.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="395.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.substring (537 samples, 0.44%)</title><rect x="392.2" y="195.0" width="5.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.2" y="206.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (537 samples, 0.44%)</title><rect x="392.2" y="179.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String (225 samples, 0.18%)</title><rect x="392.2" y="163.0" width="2.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="395.2" y="174.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (312 samples, 0.26%)</title><rect x="394.3" y="163.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="397.3" y="174.0"></text>
</g>
<g>
<title>byte[] (312 samples, 0.26%)</title><rect x="394.3" y="147.0" width="3.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="397.3" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (1,101 samples, 0.90%)</title><rect x="397.3" y="211.0" width="10.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.3" y="222.0"></text>
</g>
<g>
<title>one.nio.http.Response (88 samples, 0.07%)</title><rect x="397.3" y="195.0" width="0.9" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="400.3" y="206.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (395 samples, 0.32%)</title><rect x="398.2" y="195.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="401.2" y="206.0"></text>
</g>
<g>
<title>byte[] (156 samples, 0.13%)</title><rect x="398.2" y="179.0" width="1.5" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="401.2" y="190.0"></text>
</g>
<g>
<title>java.lang.String[] (129 samples, 0.11%)</title><rect x="399.7" y="179.0" width="1.3" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="402.7" y="190.0"></text>
</g>
<g>
<title>java.lang.String (110 samples, 0.09%)</title><rect x="401.0" y="179.0" width="1.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="404.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (472 samples, 0.39%)</title><rect x="402.0" y="195.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.0" y="206.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (464 samples, 0.38%)</title><rect x="402.1" y="179.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.1" y="190.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (333 samples, 0.27%)</title><rect x="402.1" y="163.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="405.1" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (333 samples, 0.27%)</title><rect x="402.1" y="147.0" width="3.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="405.1" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (74 samples, 0.06%)</title><rect x="405.3" y="163.0" width="0.7" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="408.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (57 samples, 0.05%)</title><rect x="406.0" y="163.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.0" y="174.0"></text>
</g>
<g>
<title>java/util/Optional.of (57 samples, 0.05%)</title><rect x="406.0" y="147.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.0" y="158.0"></text>
</g>
<g>
<title>java.util.Optional (57 samples, 0.05%)</title><rect x="406.0" y="131.0" width="0.6" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="409.0" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (146 samples, 0.12%)</title><rect x="406.6" y="195.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.6" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (146 samples, 0.12%)</title><rect x="406.6" y="179.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="409.6" y="190.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (146 samples, 0.12%)</title><rect x="406.6" y="163.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="409.6" y="174.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (146 samples, 0.12%)</title><rect x="406.6" y="147.0" width="1.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="409.6" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (455 samples, 0.37%)</title><rect x="408.0" y="211.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.0" y="222.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (455 samples, 0.37%)</title><rect x="408.0" y="195.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="411.0" y="206.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (455 samples, 0.37%)</title><rect x="408.0" y="179.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="411.0" y="190.0"></text>
</g>
<g>
<title>java.nio.HeapByteBuffer (455 samples, 0.37%)</title><rect x="408.0" y="163.0" width="4.4" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="411.0" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (112 samples, 0.09%)</title><rect x="412.4" y="227.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.4" y="238.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (92 samples, 0.08%)</title><rect x="412.6" y="211.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="415.6" y="222.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (37 samples, 0.03%)</title><rect x="412.6" y="195.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.6" y="206.0"></text>
</g>
<g>
<title>java.lang.String[] (37 samples, 0.03%)</title><rect x="412.6" y="179.0" width="0.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="415.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (55 samples, 0.05%)</title><rect x="412.9" y="195.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.9" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (55 samples, 0.05%)</title><rect x="412.9" y="179.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.9" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (55 samples, 0.05%)</title><rect x="412.9" y="163.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.9" y="174.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (55 samples, 0.05%)</title><rect x="412.9" y="147.0" width="0.6" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="415.9" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.primaryFor (1,561 samples, 1.28%)</title><rect x="413.5" y="227.0" width="15.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.5" y="238.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (32 samples, 0.03%)</title><rect x="413.5" y="211.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="416.5" y="222.0"></text>
</g>
<g>
<title>java.lang.Integer (32 samples, 0.03%)</title><rect x="413.5" y="195.0" width="0.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="416.5" y="206.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (76 samples, 0.06%)</title><rect x="414.0" y="211.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.0" y="222.0"></text>
</g>
<g>
<title>java.util.HashMap (76 samples, 0.06%)</title><rect x="414.0" y="195.0" width="0.7" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="417.0" y="206.0"></text>
</g>
<g>
<title>java/util/HashSet.add (609 samples, 0.50%)</title><rect x="414.7" y="211.0" width="5.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="417.7" y="222.0"></text>
</g>
<g>
<title>java/util/HashMap.put (609 samples, 0.50%)</title><rect x="414.7" y="195.0" width="5.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="417.7" y="206.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (609 samples, 0.50%)</title><rect x="414.7" y="179.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.7" y="190.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (306 samples, 0.25%)</title><rect x="414.7" y="163.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.7" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (306 samples, 0.25%)</title><rect x="414.7" y="147.0" width="3.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="417.7" y="158.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (303 samples, 0.25%)</title><rect x="417.7" y="163.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.7" y="174.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (303 samples, 0.25%)</title><rect x="417.7" y="147.0" width="2.9" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="420.7" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (97 samples, 0.08%)</title><rect x="420.6" y="211.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="423.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (97 samples, 0.08%)</title><rect x="420.6" y="195.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.6" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap (97 samples, 0.08%)</title><rect x="420.6" y="179.0" width="1.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="423.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (560 samples, 0.46%)</title><rect x="421.6" y="211.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="424.6" y="222.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (78 samples, 0.06%)</title><rect x="421.6" y="195.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.6" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap (78 samples, 0.06%)</title><rect x="421.6" y="179.0" width="0.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="424.6" y="190.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (482 samples, 0.39%)</title><rect x="422.3" y="195.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="425.3" y="206.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (430 samples, 0.35%)</title><rect x="422.3" y="179.0" width="4.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.3" y="190.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (96 samples, 0.08%)</title><rect x="422.3" y="163.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.3" y="174.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (96 samples, 0.08%)</title><rect x="422.3" y="147.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.3" y="158.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (96 samples, 0.08%)</title><rect x="422.3" y="131.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.3" y="142.0"></text>
</g>
<g>
<title>java.util.TreeMap$NavigableSubMap$SubMapEntryIterator (96 samples, 0.08%)</title><rect x="422.3" y="115.0" width="0.9" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="425.3" y="126.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (334 samples, 0.27%)</title><rect x="423.2" y="163.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="426.2" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (334 samples, 0.27%)</title><rect x="423.2" y="147.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.2" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$Entry (334 samples, 0.27%)</title><rect x="423.2" y="131.0" width="3.3" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="426.2" y="142.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.size (52 samples, 0.04%)</title><rect x="426.5" y="179.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.5" y="190.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.size (52 samples, 0.04%)</title><rect x="426.5" y="163.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.5" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (52 samples, 0.04%)</title><rect x="426.5" y="147.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="429.5" y="158.0"></text>
</g>
<g>
<title>java.util.TreeMap$AscendingSubMap$AscendingEntrySetView (52 samples, 0.04%)</title><rect x="426.5" y="131.0" width="0.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="429.5" y="142.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (163 samples, 0.13%)</title><rect x="427.0" y="211.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.0" y="222.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (104 samples, 0.09%)</title><rect x="427.0" y="195.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.0" y="206.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (104 samples, 0.09%)</title><rect x="427.0" y="179.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.0" y="190.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeyIterator (104 samples, 0.09%)</title><rect x="427.0" y="163.0" width="1.0" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="430.0" y="174.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (59 samples, 0.05%)</title><rect x="428.0" y="195.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="431.0" y="206.0"></text>
</g>
<g>
<title>java.util.TreeMap$KeySet (59 samples, 0.05%)</title><rect x="428.0" y="179.0" width="0.5" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="431.0" y="190.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (3,286 samples, 2.69%)</title><rect x="428.5" y="227.0" width="31.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="431.5" y="238.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,286 samples, 2.69%)</title><rect x="428.5" y="211.0" width="31.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.5" y="222.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3,286 samples, 2.69%)</title><rect x="428.5" y="195.0" width="31.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="431.5" y="206.0">ja..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (3,286 samples, 2.69%)</title><rect x="428.5" y="179.0" width="31.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="431.5" y="190.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (28,407 samples, 23.26%)</title><rect x="460.3" y="227.0" width="274.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.3" y="238.0">ru/mail/polis/service/gogun/ServiceUt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8,740 samples, 7.16%)</title><rect x="460.3" y="211.0" width="84.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.3" y="222.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8,740 samples, 7.16%)</title><rect x="460.3" y="195.0" width="84.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="463.3" y="206.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6,123 samples, 5.01%)</title><rect x="460.3" y="179.0" width="59.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="463.3" y="190.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (6,123 samples, 5.01%)</title><rect x="460.3" y="163.0" width="59.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="463.3" y="174.0">one/ni..</text>
</g>
<g>
<title>byte[] (3,358 samples, 2.75%)</title><rect x="460.3" y="147.0" width="32.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="463.3" y="158.0">by..</text>
</g>
<g>
<title>byte[] (2,765 samples, 2.26%)</title><rect x="492.7" y="147.0" width="26.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="495.7" y="158.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (2,617 samples, 2.14%)</title><rect x="519.4" y="179.0" width="25.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.4" y="190.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2,617 samples, 2.14%)</title><rect x="519.4" y="163.0" width="25.3" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="522.4" y="174.0">o..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$104/10587719.get (202 samples, 0.17%)</title><rect x="544.7" y="211.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="547.7" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ResponseMerger.mergePutResponses (202 samples, 0.17%)</title><rect x="544.7" y="195.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.7" y="206.0"></text>
</g>
<g>
<title>one.nio.http.Response (37 samples, 0.03%)</title><rect x="544.7" y="179.0" width="0.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="547.7" y="190.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (165 samples, 0.14%)</title><rect x="545.1" y="179.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="548.1" y="190.0"></text>
</g>
<g>
<title>byte[] (67 samples, 0.05%)</title><rect x="545.1" y="163.0" width="0.6" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="548.1" y="174.0"></text>
</g>
<g>
<title>java.lang.String[] (56 samples, 0.05%)</title><rect x="545.7" y="163.0" width="0.6" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="548.7" y="174.0"></text>
</g>
<g>
<title>java.lang.String (42 samples, 0.03%)</title><rect x="546.3" y="163.0" width="0.4" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="549.3" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$85/701717217.get (19,465 samples, 15.94%)</title><rect x="546.7" y="211.0" width="188.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="549.7" y="222.0">ru/mail/polis/service/go..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$2 (19,465 samples, 15.94%)</title><rect x="546.7" y="195.0" width="188.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="549.7" y="206.0">ru/mail/polis/service/go..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (19,465 samples, 15.94%)</title><rect x="546.7" y="179.0" width="188.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.7" y="190.0">ru/mail/polis/service/go..</text>
</g>
<g>
<title>one.nio.http.Response (1,559 samples, 1.28%)</title><rect x="546.7" y="163.0" width="15.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="549.7" y="174.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6,559 samples, 5.37%)</title><rect x="561.7" y="163.0" width="63.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.7" y="174.0">one/nio..</text>
</g>
<g>
<title>byte[] (2,713 samples, 2.22%)</title><rect x="561.7" y="147.0" width="26.2" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="564.7" y="158.0">b..</text>
</g>
<g>
<title>java.lang.String[] (2,155 samples, 1.76%)</title><rect x="587.9" y="147.0" width="20.9" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="590.9" y="158.0"></text>
</g>
<g>
<title>java.lang.String (1,691 samples, 1.38%)</title><rect x="608.8" y="147.0" width="16.3" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="611.8" y="158.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (8,573 samples, 7.02%)</title><rect x="625.1" y="163.0" width="82.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="628.1" y="174.0">ru/mail/p..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (177 samples, 0.14%)</title><rect x="625.1" y="147.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.1" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (177 samples, 0.14%)</title><rect x="625.1" y="131.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="628.1" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (177 samples, 0.14%)</title><rect x="625.1" y="115.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.1" y="126.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (163 samples, 0.13%)</title><rect x="625.1" y="99.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="628.1" y="110.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (163 samples, 0.13%)</title><rect x="625.1" y="83.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.1" y="94.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (82 samples, 0.07%)</title><rect x="625.1" y="67.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.1" y="78.0"></text>
</g>
<g>
<title>java.lang.ThreadLocal$ThreadLocalMap$Entry (82 samples, 0.07%)</title><rect x="625.1" y="51.0" width="0.8" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="628.1" y="62.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (81 samples, 0.07%)</title><rect x="625.9" y="67.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="628.9" y="78.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (81 samples, 0.07%)</title><rect x="625.9" y="51.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.9" y="62.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter (81 samples, 0.07%)</title><rect x="625.9" y="35.0" width="0.8" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="628.9" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (8,396 samples, 6.87%)</title><rect x="626.8" y="147.0" width="81.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.8" y="158.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5,981 samples, 4.90%)</title><rect x="626.8" y="131.0" width="57.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.8" y="142.0">java/n..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (5,981 samples, 4.90%)</title><rect x="626.8" y="115.0" width="57.8" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="629.8" y="126.0">java.n..</text>
</g>
<g>
<title>ru.mail.polis.dao.gogun.Value (1,433 samples, 1.17%)</title><rect x="684.6" y="131.0" width="13.8" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="687.6" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (982 samples, 0.80%)</title><rect x="698.4" y="131.0" width="9.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="701.4" y="142.0"></text>
</g>
<g>
<title>java/util/Optional.of (982 samples, 0.80%)</title><rect x="698.4" y="115.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.4" y="126.0"></text>
</g>
<g>
<title>java.util.Optional (982 samples, 0.80%)</title><rect x="698.4" y="99.0" width="9.5" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="701.4" y="110.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (2,774 samples, 2.27%)</title><rect x="707.9" y="163.0" width="26.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.9" y="174.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,774 samples, 2.27%)</title><rect x="707.9" y="147.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.9" y="158.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2,774 samples, 2.27%)</title><rect x="707.9" y="131.0" width="26.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.9" y="142.0">j..</text>
</g>
<g>
<title>java.nio.HeapByteBuffer (2,774 samples, 2.27%)</title><rect x="707.9" y="115.0" width="26.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="710.9" y="126.0">j..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (47,131 samples, 38.58%)</title><rect x="734.7" y="323.0" width="455.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="737.7" y="334.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1,719 samples, 1.41%)</title><rect x="734.7" y="307.0" width="16.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.7" y="318.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1,719 samples, 1.41%)</title><rect x="734.7" y="291.0" width="16.6" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="737.7" y="302.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (45,412 samples, 37.18%)</title><rect x="751.3" y="307.0" width="438.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.3" y="318.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (45,412 samples, 37.18%)</title><rect x="751.3" y="291.0" width="438.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.3" y="302.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (45,412 samples, 37.18%)</title><rect x="751.3" y="275.0" width="438.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.3" y="286.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (7,377 samples, 6.04%)</title><rect x="751.3" y="259.0" width="71.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="754.3" y="270.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (7,377 samples, 6.04%)</title><rect x="751.3" y="243.0" width="71.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.3" y="254.0">one/nio/..</text>
</g>
<g>
<title>RequestHandler0_handleHttpPath.handleRequest (4,588 samples, 3.76%)</title><rect x="751.3" y="227.0" width="44.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.3" y="238.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (2,802 samples, 2.29%)</title><rect x="751.3" y="211.0" width="27.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="754.3" y="222.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2,802 samples, 2.29%)</title><rect x="751.3" y="195.0" width="27.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="754.3" y="206.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,802 samples, 2.29%)</title><rect x="751.3" y="179.0" width="27.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="754.3" y="190.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,802 samples, 2.29%)</title><rect x="751.3" y="163.0" width="27.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="754.3" y="174.0">j..</text>
</g>
<g>
<title>java.lang.String (1,175 samples, 0.96%)</title><rect x="751.3" y="147.0" width="11.4" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="754.3" y="158.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,627 samples, 1.33%)</title><rect x="762.7" y="147.0" width="15.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="765.7" y="158.0"></text>
</g>
<g>
<title>byte[] (1,627 samples, 1.33%)</title><rect x="762.7" y="131.0" width="15.7" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="765.7" y="142.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (1,786 samples, 1.46%)</title><rect x="778.4" y="211.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.4" y="222.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (1,786 samples, 1.46%)</title><rect x="778.4" y="195.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="781.4" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1,752 samples, 1.43%)</title><rect x="778.4" y="179.0" width="16.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.4" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1,752 samples, 1.43%)</title><rect x="778.4" y="163.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.4" y="174.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$78/1542953385.get$Lambda (1,752 samples, 1.43%)</title><rect x="778.4" y="147.0" width="16.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.4" y="158.0"></text>
</g>
<g>
<title>ru.mail.polis.service.gogun.AsyncServiceImpl$$Lambda$78 (1,752 samples, 1.43%)</title><rect x="778.4" y="131.0" width="16.9" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="781.4" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (34 samples, 0.03%)</title><rect x="795.3" y="179.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.3" y="190.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (34 samples, 0.03%)</title><rect x="795.3" y="163.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.3" y="174.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (34 samples, 0.03%)</title><rect x="795.3" y="147.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="798.3" y="158.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (34 samples, 0.03%)</title><rect x="795.3" y="131.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="798.3" y="142.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (34 samples, 0.03%)</title><rect x="795.3" y="115.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.3" y="126.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (34 samples, 0.03%)</title><rect x="795.3" y="99.0" width="0.3" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="798.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2,789 samples, 2.28%)</title><rect x="795.6" y="227.0" width="27.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.6" y="238.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,789 samples, 2.28%)</title><rect x="795.6" y="211.0" width="27.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="798.6" y="222.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,789 samples, 2.28%)</title><rect x="795.6" y="195.0" width="27.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="798.6" y="206.0">j..</text>
</g>
<g>
<title>java.lang.String (1,271 samples, 1.04%)</title><rect x="795.6" y="179.0" width="12.3" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="798.6" y="190.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,518 samples, 1.24%)</title><rect x="807.9" y="179.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="810.9" y="190.0"></text>
</g>
<g>
<title>byte[] (1,518 samples, 1.24%)</title><rect x="807.9" y="163.0" width="14.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="810.9" y="174.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14,219 samples, 11.64%)</title><rect x="822.6" y="259.0" width="137.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="825.6" y="270.0">one/nio/http/Http..</text>
</g>
<g>
<title>one.nio.http.Request (2,224 samples, 1.82%)</title><rect x="822.6" y="243.0" width="21.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="825.6" y="254.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4,673 samples, 3.83%)</title><rect x="844.1" y="243.0" width="45.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.1" y="254.0">one/..</text>
</g>
<g>
<title>java.lang.String[] (3,574 samples, 2.93%)</title><rect x="844.1" y="227.0" width="34.5" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="847.1" y="238.0">ja..</text>
</g>
<g>
<title>java.lang.String[] (1,099 samples, 0.90%)</title><rect x="878.6" y="227.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="881.6" y="238.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,322 samples, 5.99%)</title><rect x="889.2" y="243.0" width="70.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.2" y="254.0">one/nio/..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (7,322 samples, 5.99%)</title><rect x="889.2" y="227.0" width="70.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.2" y="238.0">one/nio/..</text>
</g>
<g>
<title>char[] (3,694 samples, 3.02%)</title><rect x="889.2" y="211.0" width="35.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="892.2" y="222.0">cha..</text>
</g>
<g>
<title>char[] (244 samples, 0.20%)</title><rect x="924.9" y="211.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="927.9" y="222.0"></text>
</g>
<g>
<title>java.lang.String (989 samples, 0.81%)</title><rect x="927.2" y="211.0" width="9.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="930.2" y="222.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,395 samples, 1.96%)</title><rect x="936.8" y="211.0" width="23.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.8" y="222.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2,395 samples, 1.96%)</title><rect x="936.8" y="195.0" width="23.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="939.8" y="206.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2,395 samples, 1.96%)</title><rect x="936.8" y="179.0" width="23.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="939.8" y="190.0">j..</text>
</g>
<g>
<title>byte[] (2,395 samples, 1.96%)</title><rect x="936.8" y="163.0" width="23.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="939.8" y="174.0">b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1,572 samples, 1.29%)</title><rect x="959.9" y="259.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.9" y="270.0"></text>
</g>
<g>
<title>byte[] (1,572 samples, 1.29%)</title><rect x="959.9" y="243.0" width="15.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="962.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2,492 samples, 2.04%)</title><rect x="975.1" y="259.0" width="24.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="978.1" y="270.0">o..</text>
</g>
<g>
<title>java/lang/String.substring (2,492 samples, 2.04%)</title><rect x="975.1" y="243.0" width="24.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="978.1" y="254.0">j..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2,492 samples, 2.04%)</title><rect x="975.1" y="227.0" width="24.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="978.1" y="238.0">j..</text>
</g>
<g>
<title>java.lang.String (1,154 samples, 0.94%)</title><rect x="975.1" y="211.0" width="11.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="978.1" y="222.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1,338 samples, 1.10%)</title><rect x="986.3" y="211.0" width="12.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.3" y="222.0"></text>
</g>
<g>
<title>byte[] (1,338 samples, 1.10%)</title><rect x="986.3" y="195.0" width="12.9" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="989.3" y="206.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (19,752 samples, 16.17%)</title><rect x="999.2" y="259.0" width="190.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1002.2" y="270.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>one/nio/util/Utf8.read (19,752 samples, 16.17%)</title><rect x="999.2" y="243.0" width="190.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.2" y="254.0">one/nio/util/Utf8.read</text>
</g>
<g>
<title>char[] (8,351 samples, 6.84%)</title><rect x="999.2" y="227.0" width="80.7" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1002.2" y="238.0">char[]</text>
</g>
<g>
<title>char[] (511 samples, 0.42%)</title><rect x="1079.9" y="227.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1082.9" y="238.0"></text>
</g>
<g>
<title>java.lang.String (3,870 samples, 3.17%)</title><rect x="1084.8" y="227.0" width="37.4" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1087.8" y="238.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,020 samples, 5.75%)</title><rect x="1122.2" y="227.0" width="67.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1125.2" y="238.0">java/la..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7,020 samples, 5.75%)</title><rect x="1122.2" y="211.0" width="67.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1125.2" y="222.0">java/la..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7,020 samples, 5.75%)</title><rect x="1122.2" y="195.0" width="67.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1125.2" y="206.0">java/la..</text>
</g>
<g>
<title>byte[] (7,006 samples, 5.74%)</title><rect x="1122.2" y="179.0" width="67.7" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1125.2" y="190.0">byte[]</text>
</g>
</g>
</svg>
