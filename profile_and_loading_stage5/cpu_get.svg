<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822"
	 xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (4,303 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.02%)</title><rect x="10.0" y="755.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>[not_walkable_Java] (12 samples, 0.28%)</title><rect x="10.3" y="755.0" width="3.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.3" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (9 samples, 0.21%)</title><rect x="10.3" y="739.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.3" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="12.7" y="739.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.7" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="13.6" y="755.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="16.6" y="766.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="13.6" y="739.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4,194 samples, 97.47%)</title><rect x="13.8" y="755.0" width="1150.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="16.8" y="766.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4,194 samples, 97.47%)</title><rect x="13.8" y="739.0" width="1150.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="16.8" y="750.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4,194 samples, 97.47%)</title><rect x="13.8" y="723.0" width="1150.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="16.8" y="734.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.02%)</title><rect x="14.1" y="707.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="14.1" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="14.1" y="675.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="17.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (46 samples, 1.07%)</title><rect x="14.4" y="707.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (45 samples, 1.05%)</title><rect x="14.7" y="691.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.dequeue (1 samples, 0.02%)</title><rect x="14.7" y="675.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (37 samples, 0.86%)</title><rect x="14.9" y="675.0" width="10.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="17.9" y="686.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="14.9" y="659.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="17.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.02%)</title><rect x="15.2" y="659.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="18.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.02%)</title><rect x="15.5" y="659.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="18.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="15.5" y="643.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="18.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="15.5" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="18.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="15.5" y="611.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="15.5" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="18.5" y="606.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="15.5" y="579.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="18.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="15.5" y="563.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="18.5" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="15.5" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="18.5" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="15.5" y="531.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="18.5" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="15.5" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="18.5" y="526.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="15.5" y="499.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="18.5" y="510.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.02%)</title><rect x="15.5" y="483.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="18.5" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="15.5" y="467.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="18.5" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="15.5" y="451.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="18.5" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.02%)</title><rect x="15.8" y="659.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="18.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="15.8" y="643.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="18.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (33 samples, 0.77%)</title><rect x="16.0" y="659.0" width="9.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="19.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (33 samples, 0.77%)</title><rect x="16.0" y="643.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.0" y="654.0"></text>
</g>
<g>
<title>Unsafe_Park (11 samples, 0.26%)</title><rect x="16.9" y="627.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="19.9" y="638.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="17.7" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.7" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.07%)</title><rect x="18.0" y="611.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="21.0" y="622.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="18.5" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.5" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.07%)</title><rect x="18.8" y="611.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="21.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="18.8" y="595.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="21.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="18.8" y="579.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="21.8" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="19.3" y="563.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="22.3" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="19.6" y="611.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="22.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.42%)</title><rect x="19.9" y="627.0" width="4.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="22.9" y="638.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (18 samples, 0.42%)</title><rect x="19.9" y="611.0" width="4.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.28%)</title><rect x="21.5" y="595.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="24.5" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.28%)</title><rect x="21.5" y="579.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="24.5" y="590.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.07%)</title><rect x="21.8" y="563.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="24.8" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.05%)</title><rect x="22.1" y="547.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="25.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.19%)</title><rect x="22.6" y="563.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="25.6" y="574.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.16%)</title><rect x="22.9" y="547.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="25.9" y="558.0"></text>
</g>
<g>
<title>futex_wait (5 samples, 0.12%)</title><rect x="23.4" y="531.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.4" y="542.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.09%)</title><rect x="23.7" y="515.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="26.7" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="24.0" y="499.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="27.0" y="510.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="24.0" y="483.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.0" y="494.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="24.3" y="499.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.3" y="510.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.02%)</title><rect x="24.5" y="499.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="27.5" y="510.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="24.8" y="627.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="27.8" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.16%)</title><rect x="25.1" y="675.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.16%)</title><rect x="25.1" y="659.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.16%)</title><rect x="25.1" y="643.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="25.1" y="627.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.14%)</title><rect x="25.4" y="627.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.14%)</title><rect x="25.4" y="611.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.05%)</title><rect x="25.4" y="595.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="28.4" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="25.4" y="579.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="28.4" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="25.6" y="579.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="28.6" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.09%)</title><rect x="25.9" y="595.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="28.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.09%)</title><rect x="25.9" y="579.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="28.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.09%)</title><rect x="25.9" y="563.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="28.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.07%)</title><rect x="26.2" y="547.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.2" y="558.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.07%)</title><rect x="26.2" y="531.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="29.2" y="542.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.07%)</title><rect x="26.2" y="515.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="29.2" y="526.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.07%)</title><rect x="26.2" y="499.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="29.2" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.07%)</title><rect x="26.2" y="483.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="29.2" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="26.2" y="467.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="29.2" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$81/1300379497.run (4,146 samples, 96.35%)</title><rect x="27.0" y="707.0" width="1136.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.0" y="718.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$81/1300379497.run</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (4,146 samples, 96.35%)</title><rect x="27.0" y="691.0" width="1136.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="30.0" y="702.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (4,146 samples, 96.35%)</title><rect x="27.0" y="675.0" width="1136.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="30.0" y="686.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (2 samples, 0.05%)</title><rect x="27.0" y="659.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="30.0" y="670.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (2 samples, 0.05%)</title><rect x="27.0" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="30.0" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.removeIf (1 samples, 0.02%)</title><rect x="27.6" y="659.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="30.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.removeIf (1 samples, 0.02%)</title><rect x="27.6" y="643.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="30.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="27.8" y="659.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="30.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="27.8" y="643.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="30.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="27.8" y="627.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="30.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (1,415 samples, 32.88%)</title><rect x="28.1" y="659.0" width="388.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="31.1" y="670.0">ru/mail/polis/service/gogun/AsyncServiceImpl.proxy</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="28.4" y="643.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.4" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="28.4" y="627.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.4" y="638.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="28.4" y="611.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="31.4" y="622.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="28.6" y="643.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="31.6" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (109 samples, 2.53%)</title><rect x="28.9" y="643.0" width="29.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.9" y="654.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (109 samples, 2.53%)</title><rect x="28.9" y="627.0" width="29.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.9" y="638.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (31 samples, 0.72%)</title><rect x="29.2" y="611.0" width="8.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.2" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="30.0" y="595.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="33.0" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="30.0" y="579.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="33.0" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="30.0" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="33.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="30.0" y="547.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="33.0" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.02%)</title><rect x="30.0" y="531.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="33.0" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (27 samples, 0.63%)</title><rect x="30.3" y="595.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="33.3" y="606.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="30.3" y="579.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="33.3" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="30.3" y="563.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="33.3" y="574.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="30.6" y="579.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="33.6" y="590.0"></text>
</g>
<g>
<title>__libc_recv (25 samples, 0.58%)</title><rect x="30.8" y="579.0" width="6.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="33.8" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.53%)</title><rect x="31.4" y="563.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="34.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.53%)</title><rect x="31.4" y="547.0" width="6.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="34.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (22 samples, 0.51%)</title><rect x="31.7" y="531.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="34.7" y="542.0"></text>
</g>
<g>
<title>__sys_recvfrom (22 samples, 0.51%)</title><rect x="31.7" y="515.0" width="6.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="34.7" y="526.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="31.7" y="499.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="34.7" y="510.0"></text>
</g>
<g>
<title>inet6_recvmsg (21 samples, 0.49%)</title><rect x="31.9" y="499.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="34.9" y="510.0"></text>
</g>
<g>
<title>tcp_recvmsg (21 samples, 0.49%)</title><rect x="31.9" y="483.0" width="5.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.9" y="494.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="32.5" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="35.5" y="478.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="32.5" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="35.5" y="462.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="32.8" y="435.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="35.8" y="446.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.07%)</title><rect x="33.0" y="467.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="36.0" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.07%)</title><rect x="33.0" y="451.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="36.0" y="462.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.07%)</title><rect x="33.0" y="435.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.0" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="33.0" y="419.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="36.0" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="33.0" y="403.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="36.0" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.05%)</title><rect x="33.3" y="419.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.3" y="430.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.05%)</title><rect x="33.3" y="403.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.3" y="414.0"></text>
</g>
<g>
<title>do_softirq (2 samples, 0.05%)</title><rect x="33.3" y="387.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="36.3" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.05%)</title><rect x="33.3" y="371.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="36.3" y="382.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (2 samples, 0.05%)</title><rect x="33.3" y="355.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="36.3" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="33.3" y="339.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.05%)</title><rect x="33.3" y="323.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="36.3" y="334.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="33.3" y="307.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.3" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.05%)</title><rect x="33.3" y="291.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="36.3" y="302.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.05%)</title><rect x="33.3" y="275.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="36.3" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.05%)</title><rect x="33.3" y="259.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="36.3" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.05%)</title><rect x="33.3" y="243.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.3" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.05%)</title><rect x="33.3" y="227.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="36.3" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="33.3" y="211.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="36.3" y="222.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="33.3" y="195.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="36.3" y="206.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="33.3" y="179.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="36.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="33.6" y="195.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.6" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="33.6" y="179.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="36.6" y="190.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.02%)</title><rect x="33.6" y="163.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.6" y="174.0"></text>
</g>
<g>
<title>sk_wait_data (9 samples, 0.21%)</title><rect x="33.9" y="467.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="36.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.05%)</title><rect x="33.9" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="36.9" y="462.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="34.1" y="435.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="37.1" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="34.4" y="451.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="37.4" y="462.0"></text>
</g>
<g>
<title>wait_woken (4 samples, 0.09%)</title><rect x="35.2" y="451.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="38.2" y="462.0"></text>
</g>
<g>
<title>schedule_timeout (4 samples, 0.09%)</title><rect x="35.2" y="435.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="38.2" y="446.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.02%)</title><rect x="35.2" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="38.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="35.2" y="403.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.2" y="414.0"></text>
</g>
<g>
<title>del_timer_sync (3 samples, 0.07%)</title><rect x="35.5" y="419.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="38.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="35.5" y="403.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="38.5" y="414.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.07%)</title><rect x="36.3" y="467.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="39.3" y="478.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.07%)</title><rect x="36.3" y="451.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="39.3" y="462.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="36.3" y="435.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="39.3" y="446.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="36.3" y="419.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="39.3" y="430.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.05%)</title><rect x="36.6" y="435.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="39.6" y="446.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="36.6" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="39.6" y="430.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="36.9" y="403.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="39.9" y="414.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="37.1" y="467.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="40.1" y="478.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="37.4" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="40.4" y="478.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="37.4" y="451.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="40.4" y="462.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="37.4" y="435.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="40.4" y="446.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="37.4" y="419.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="40.4" y="430.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.19%)</title><rect x="37.7" y="611.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="38.0" y="595.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.0" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="38.0" y="579.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.0" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (2 samples, 0.05%)</title><rect x="38.2" y="595.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="41.2" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="38.2" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="41.2" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="38.2" y="563.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="41.2" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="38.8" y="595.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.02%)</title><rect x="39.1" y="595.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="42.1" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.05%)</title><rect x="39.3" y="595.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="39.3" y="579.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.3" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="39.3" y="563.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.3" y="574.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="39.6" y="547.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.6" y="558.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="39.6" y="531.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="42.6" y="542.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="39.6" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.6" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (6 samples, 0.14%)</title><rect x="39.9" y="611.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="42.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.07%)</title><rect x="40.7" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.7" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="41.0" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="41.0" y="563.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.0" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="41.0" y="547.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.0" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.02%)</title><rect x="41.5" y="611.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.5" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (6 samples, 0.14%)</title><rect x="41.8" y="611.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="44.8" y="622.0"></text>
</g>
<g>
<title>__setsockopt (6 samples, 0.14%)</title><rect x="41.8" y="595.0" width="1.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="44.8" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.12%)</title><rect x="42.1" y="579.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 0.12%)</title><rect x="42.1" y="563.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="45.1" y="574.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (4 samples, 0.09%)</title><rect x="42.4" y="547.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="45.4" y="558.0"></text>
</g>
<g>
<title>__sys_setsockopt (4 samples, 0.09%)</title><rect x="42.4" y="531.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="45.4" y="542.0"></text>
</g>
<g>
<title>sock_setsockopt (3 samples, 0.07%)</title><rect x="42.4" y="515.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="45.4" y="526.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.02%)</title><rect x="42.4" y="499.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="45.4" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="42.6" y="499.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="45.6" y="510.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="42.9" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="45.9" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="42.9" y="483.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="45.9" y="494.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="42.9" y="467.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.9" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="43.2" y="515.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="46.2" y="526.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="43.2" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.2" y="510.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.02%)</title><rect x="43.2" y="483.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.2" y="494.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (56 samples, 1.30%)</title><rect x="43.5" y="611.0" width="15.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.5" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.02%)</title><rect x="43.5" y="595.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="46.5" y="606.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="43.5" y="579.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="46.5" y="590.0"></text>
</g>
<g>
<title>__libc_send (55 samples, 1.28%)</title><rect x="43.7" y="595.0" width="15.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="46.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 1.28%)</title><rect x="43.7" y="579.0" width="15.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (55 samples, 1.28%)</title><rect x="43.7" y="563.0" width="15.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sendto (55 samples, 1.28%)</title><rect x="43.7" y="547.0" width="15.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="46.7" y="558.0"></text>
</g>
<g>
<title>__sys_sendto (55 samples, 1.28%)</title><rect x="43.7" y="531.0" width="15.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="46.7" y="542.0"></text>
</g>
<g>
<title>sock_sendmsg (55 samples, 1.28%)</title><rect x="43.7" y="515.0" width="15.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="46.7" y="526.0"></text>
</g>
<g>
<title>tcp_sendmsg (55 samples, 1.28%)</title><rect x="43.7" y="499.0" width="15.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="46.7" y="510.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="43.7" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="46.7" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="43.7" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="46.7" y="478.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (54 samples, 1.25%)</title><rect x="44.0" y="483.0" width="14.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.0" y="494.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (43 samples, 1.00%)</title><rect x="44.6" y="467.0" width="11.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="47.6" y="478.0"></text>
</g>
<g>
<title>tcp_write_xmit (43 samples, 1.00%)</title><rect x="44.6" y="451.0" width="11.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.6" y="462.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (42 samples, 0.98%)</title><rect x="44.8" y="435.0" width="11.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="47.8" y="446.0"></text>
</g>
<g>
<title>__ip_queue_xmit (39 samples, 0.91%)</title><rect x="45.1" y="419.0" width="10.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="48.1" y="430.0"></text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.05%)</title><rect x="45.1" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.1" y="414.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="45.1" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="48.1" y="398.0"></text>
</g>
<g>
<title>ip_output (37 samples, 0.86%)</title><rect x="45.6" y="403.0" width="10.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="48.6" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (35 samples, 0.81%)</title><rect x="45.9" y="387.0" width="9.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="48.9" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.09%)</title><rect x="46.2" y="371.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="49.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.05%)</title><rect x="46.5" y="355.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="49.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.05%)</title><rect x="46.5" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="49.5" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="46.5" y="323.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="49.5" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="46.7" y="323.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="49.7" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="47.0" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="50.0" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="47.0" y="339.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="50.0" y="350.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 0.70%)</title><rect x="47.3" y="371.0" width="8.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.3" y="382.0"></text>
</g>
<g>
<title>do_softirq (29 samples, 0.67%)</title><rect x="47.3" y="355.0" width="7.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.3" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (28 samples, 0.65%)</title><rect x="47.6" y="339.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="50.6" y="350.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (28 samples, 0.65%)</title><rect x="47.6" y="323.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="50.6" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (28 samples, 0.65%)</title><rect x="47.6" y="307.0" width="7.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="50.6" y="318.0"></text>
</g>
<g>
<title>net_rx_action (27 samples, 0.63%)</title><rect x="47.8" y="291.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="50.8" y="302.0"></text>
</g>
<g>
<title>process_backlog (26 samples, 0.60%)</title><rect x="48.1" y="275.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.1" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (26 samples, 0.60%)</title><rect x="48.1" y="259.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="51.1" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="48.1" y="243.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv (25 samples, 0.58%)</title><rect x="48.4" y="243.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="51.4" y="254.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="48.4" y="227.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (22 samples, 0.51%)</title><rect x="48.7" y="227.0" width="6.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (22 samples, 0.51%)</title><rect x="48.7" y="211.0" width="6.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.7" y="222.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="48.7" y="195.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.7" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (21 samples, 0.49%)</title><rect x="48.9" y="195.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="51.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (21 samples, 0.49%)</title><rect x="48.9" y="179.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.9" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="48.9" y="163.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (20 samples, 0.46%)</title><rect x="49.2" y="163.0" width="5.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="52.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (20 samples, 0.46%)</title><rect x="49.2" y="147.0" width="5.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="52.2" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (16 samples, 0.37%)</title><rect x="49.2" y="131.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="52.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_common_lock (16 samples, 0.37%)</title><rect x="49.2" y="115.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="52.2" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (15 samples, 0.35%)</title><rect x="49.5" y="99.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="52.5" y="110.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.07%)</title><rect x="53.6" y="131.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="56.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="53.9" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="56.9" y="126.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="53.9" y="99.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="56.9" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (1 samples, 0.02%)</title><rect x="54.2" y="115.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="57.2" y="126.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="54.2" y="99.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="57.2" y="110.0"></text>
</g>
<g>
<title>tcp_grow_window (1 samples, 0.02%)</title><rect x="54.4" y="131.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="57.4" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core (1 samples, 0.02%)</title><rect x="54.7" y="227.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="57.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="55.0" y="227.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="58.0" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.constprop.0 (1 samples, 0.02%)</title><rect x="55.0" y="211.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="58.0" y="222.0"></text>
</g>
<g>
<title>preempt_schedule_thunk (1 samples, 0.02%)</title><rect x="55.2" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="58.2" y="366.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.02%)</title><rect x="55.2" y="339.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="58.2" y="350.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="55.5" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="58.5" y="398.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="55.5" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="58.5" y="382.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="55.8" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="58.8" y="430.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.02%)</title><rect x="56.1" y="419.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="59.1" y="430.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.09%)</title><rect x="56.3" y="467.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="59.3" y="478.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.09%)</title><rect x="56.3" y="451.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="59.3" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.02%)</title><rect x="56.3" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.3" y="446.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.02%)</title><rect x="56.6" y="435.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.6" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="56.9" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="59.9" y="446.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (1 samples, 0.02%)</title><rect x="57.4" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.4" y="478.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="57.4" y="451.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="60.4" y="462.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="57.4" y="435.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.4" y="446.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.02%)</title><rect x="57.7" y="467.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="60.7" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="58.0" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="61.0" y="478.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="58.0" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="61.0" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="58.3" y="435.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.3" y="446.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="58.5" y="467.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="61.5" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="58.8" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="61.8" y="654.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="58.8" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="58.8" y="611.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.8" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="58.8" y="595.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.8" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="58.8" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="61.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (1,301 samples, 30.23%)</title><rect x="59.1" y="643.0" width="356.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.1" y="654.0">ru/mail/polis/service/gogun/AsyncServiceImpl.han..</text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (1,301 samples, 30.23%)</title><rect x="59.1" y="627.0" width="356.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.1" y="638.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (39 samples, 0.91%)</title><rect x="59.1" y="611.0" width="10.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.1" y="622.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (38 samples, 0.88%)</title><rect x="59.1" y="595.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.1" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.05%)</title><rect x="59.1" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="62.1" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.05%)</title><rect x="59.1" y="563.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="62.1" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (2 samples, 0.05%)</title><rect x="59.1" y="547.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.1" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.05%)</title><rect x="59.1" y="531.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="62.1" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (2 samples, 0.05%)</title><rect x="59.1" y="515.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.1" y="526.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (2 samples, 0.05%)</title><rect x="59.1" y="499.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.1" y="510.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.05%)</title><rect x="59.1" y="483.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.1" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (2 samples, 0.05%)</title><rect x="59.1" y="467.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.1" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.05%)</title><rect x="59.1" y="451.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.1" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (2 samples, 0.05%)</title><rect x="59.1" y="435.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="62.1" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (1 samples, 0.02%)</title><rect x="59.4" y="419.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="62.4" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="59.4" y="403.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.4" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.4" y="387.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="62.4" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.4" y="371.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.4" y="355.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.4" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.4" y="339.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.4" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="59.4" y="323.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="62.4" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="59.4" y="307.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.4" y="318.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (36 samples, 0.84%)</title><rect x="59.6" y="579.0" width="9.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.6" y="590.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (36 samples, 0.84%)</title><rect x="59.6" y="563.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (36 samples, 0.84%)</title><rect x="59.6" y="547.0" width="9.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (36 samples, 0.84%)</title><rect x="59.6" y="531.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.6" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (35 samples, 0.81%)</title><rect x="59.9" y="515.0" width="9.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="62.9" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (35 samples, 0.81%)</title><rect x="59.9" y="499.0" width="9.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (33 samples, 0.77%)</title><rect x="59.9" y="483.0" width="9.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.9" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (33 samples, 0.77%)</title><rect x="59.9" y="467.0" width="9.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="62.9" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (33 samples, 0.77%)</title><rect x="59.9" y="451.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="62.9" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (33 samples, 0.77%)</title><rect x="59.9" y="435.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (21 samples, 0.49%)</title><rect x="59.9" y="419.0" width="5.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="62.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="59.9" y="403.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.9" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.9" y="387.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="62.9" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.9" y="371.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="59.9" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="62.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="59.9" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="62.9" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="59.9" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="62.9" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="59.9" y="307.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="62.9" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (20 samples, 0.46%)</title><rect x="60.2" y="403.0" width="5.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.2" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (19 samples, 0.44%)</title><rect x="60.5" y="387.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="63.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (17 samples, 0.40%)</title><rect x="60.7" y="371.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="63.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (16 samples, 0.37%)</title><rect x="60.7" y="355.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="63.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (16 samples, 0.37%)</title><rect x="60.7" y="339.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="63.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (16 samples, 0.37%)</title><rect x="60.7" y="323.0" width="4.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="63.7" y="334.0"></text>
</g>
<g>
<title>pread (15 samples, 0.35%)</title><rect x="61.0" y="307.0" width="4.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="64.0" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.26%)</title><rect x="62.1" y="291.0" width="3.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="65.1" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.26%)</title><rect x="62.1" y="275.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.1" y="286.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (10 samples, 0.23%)</title><rect x="62.4" y="259.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="65.4" y="270.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="62.9" y="243.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="65.9" y="254.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="63.2" y="243.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="66.2" y="254.0"></text>
</g>
<g>
<title>vfs_read (6 samples, 0.14%)</title><rect x="63.5" y="243.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="66.5" y="254.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.12%)</title><rect x="63.7" y="227.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="66.7" y="238.0"></text>
</g>
<g>
<title>shmem_file_read_iter (5 samples, 0.12%)</title><rect x="63.7" y="211.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="66.7" y="222.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.07%)</title><rect x="64.0" y="195.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="67.0" y="206.0"></text>
</g>
<g>
<title>find_lock_entry (3 samples, 0.07%)</title><rect x="64.0" y="179.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="67.0" y="190.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.07%)</title><rect x="64.0" y="163.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="67.0" y="174.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="64.3" y="147.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="67.3" y="158.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.02%)</title><rect x="64.6" y="147.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="67.6" y="158.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="64.8" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="67.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="65.1" y="355.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.1" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="65.1" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="68.1" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="65.1" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="68.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="65.4" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.4" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="65.4" y="355.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.4" y="366.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.02%)</title><rect x="65.4" y="339.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="68.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (12 samples, 0.28%)</title><rect x="65.7" y="419.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (12 samples, 0.28%)</title><rect x="65.7" y="403.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.7" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (1 samples, 0.02%)</title><rect x="65.7" y="387.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.7" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (1 samples, 0.02%)</title><rect x="65.7" y="371.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (11 samples, 0.26%)</title><rect x="65.9" y="387.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (10 samples, 0.23%)</title><rect x="65.9" y="371.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (10 samples, 0.23%)</title><rect x="65.9" y="355.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (10 samples, 0.23%)</title><rect x="65.9" y="339.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.9" y="350.0"></text>
</g>
<g>
<title>pread (9 samples, 0.21%)</title><rect x="66.2" y="323.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="69.2" y="334.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.19%)</title><rect x="66.5" y="307.0" width="2.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.5" y="318.0"></text>
</g>
<g>
<title>do_syscall_64 (8 samples, 0.19%)</title><rect x="66.5" y="291.0" width="2.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="69.5" y="302.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (4 samples, 0.09%)</title><rect x="67.3" y="275.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.3" y="286.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.02%)</title><rect x="67.3" y="259.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="70.3" y="270.0"></text>
</g>
<g>
<title>vfs_read (3 samples, 0.07%)</title><rect x="67.6" y="259.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.6" y="270.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="67.6" y="243.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="70.6" y="254.0"></text>
</g>
<g>
<title>new_sync_read (2 samples, 0.05%)</title><rect x="67.9" y="243.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.9" y="254.0"></text>
</g>
<g>
<title>shmem_file_read_iter (2 samples, 0.05%)</title><rect x="67.9" y="227.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.9" y="238.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="68.1" y="211.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="71.1" y="222.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="68.1" y="195.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="71.1" y="206.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.02%)</title><rect x="68.4" y="275.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="71.4" y="286.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="68.4" y="259.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="71.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="68.7" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.7" y="382.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="68.7" y="355.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.7" y="366.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (2 samples, 0.05%)</title><rect x="69.0" y="483.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.0" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.05%)</title><rect x="69.0" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.0" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (2 samples, 0.05%)</title><rect x="69.0" y="451.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.0" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (2 samples, 0.05%)</title><rect x="69.0" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.0" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="69.0" y="419.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="72.0" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="69.0" y="403.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.0" y="414.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="69.0" y="387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.0" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (1 samples, 0.02%)</title><rect x="69.2" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.2" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (1 samples, 0.02%)</title><rect x="69.2" y="403.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.2" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="69.2" y="387.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="72.2" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="69.2" y="371.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.2" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="69.2" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.2" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="69.2" y="339.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.2" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.02%)</title><rect x="69.5" y="595.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="72.5" y="606.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="69.5" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (1,262 samples, 29.33%)</title><rect x="69.8" y="611.0" width="346.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.8" y="622.0">ru/mail/polis/dao/gogun/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (127 samples, 2.95%)</title><rect x="69.8" y="595.0" width="34.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="72.8" y="606.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (127 samples, 2.95%)</title><rect x="69.8" y="579.0" width="34.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="72.8" y="590.0">co..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="70.6" y="563.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="73.6" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="70.6" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="73.6" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="70.6" y="531.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="73.6" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="70.6" y="515.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="73.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="70.6" y="499.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="73.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="70.6" y="483.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="73.6" y="494.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="70.6" y="467.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="73.6" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="70.6" y="451.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="73.6" y="462.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="70.6" y="435.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="73.6" y="446.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (123 samples, 2.86%)</title><rect x="70.9" y="563.0" width="33.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="73.9" y="574.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (123 samples, 2.86%)</title><rect x="70.9" y="547.0" width="33.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="73.9" y="558.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.grow (2 samples, 0.05%)</title><rect x="70.9" y="531.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="73.9" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (121 samples, 2.81%)</title><rect x="71.4" y="531.0" width="33.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.4" y="542.0">ja..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (121 samples, 2.81%)</title><rect x="71.4" y="515.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.4" y="526.0">ja..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (121 samples, 2.81%)</title><rect x="71.4" y="499.0" width="33.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.4" y="510.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (121 samples, 2.81%)</title><rect x="71.4" y="483.0" width="33.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="74.4" y="494.0">co..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (120 samples, 2.79%)</title><rect x="71.4" y="467.0" width="32.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.4" y="478.0">co..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (120 samples, 2.79%)</title><rect x="71.4" y="451.0" width="32.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.4" y="462.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (120 samples, 2.79%)</title><rect x="71.4" y="435.0" width="32.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.4" y="446.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (120 samples, 2.79%)</title><rect x="71.4" y="419.0" width="32.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="74.4" y="430.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.07%)</title><rect x="71.4" y="403.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.4" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="71.4" y="387.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="74.4" y="398.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="71.4" y="371.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="74.4" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="71.7" y="387.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="72.0" y="371.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (54 samples, 1.25%)</title><rect x="72.2" y="403.0" width="14.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.2" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.05%)</title><rect x="72.5" y="387.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="75.5" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="72.5" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.5" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="72.8" y="355.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.8" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="72.8" y="339.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="75.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="72.8" y="323.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.8" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="72.8" y="307.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.8" y="318.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="72.8" y="291.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="75.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (51 samples, 1.19%)</title><rect x="73.1" y="387.0" width="14.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (51 samples, 1.19%)</title><rect x="73.1" y="371.0" width="14.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.1" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="73.1" y="355.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="73.1" y="339.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="76.1" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="73.1" y="323.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.07%)</title><rect x="73.3" y="355.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.3" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (3 samples, 0.07%)</title><rect x="73.3" y="339.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.3" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.05%)</title><rect x="73.6" y="323.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.6" y="334.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.05%)</title><rect x="73.6" y="307.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.6" y="318.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.05%)</title><rect x="73.6" y="291.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.6" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (46 samples, 1.07%)</title><rect x="74.2" y="355.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.2" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.14%)</title><rect x="74.2" y="339.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.2" y="350.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.12%)</title><rect x="74.2" y="323.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.2" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="74.2" y="307.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.2" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="74.2" y="291.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.2" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (1 samples, 0.02%)</title><rect x="74.2" y="275.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.2" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (4 samples, 0.09%)</title><rect x="74.4" y="307.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.4" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (4 samples, 0.09%)</title><rect x="74.4" y="291.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.4" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.09%)</title><rect x="74.4" y="275.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="77.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.02%)</title><rect x="74.4" y="259.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.4" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.02%)</title><rect x="74.4" y="243.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.4" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.07%)</title><rect x="74.7" y="259.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.7" y="270.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.05%)</title><rect x="75.0" y="243.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.0" y="254.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="75.0" y="227.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="78.0" y="238.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.isDirect (1 samples, 0.02%)</title><rect x="75.5" y="323.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.5" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (37 samples, 0.86%)</title><rect x="75.8" y="339.0" width="10.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="78.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (37 samples, 0.86%)</title><rect x="75.8" y="323.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (36 samples, 0.84%)</title><rect x="76.1" y="307.0" width="9.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="79.1" y="318.0"></text>
</g>
<g>
<title>pread (34 samples, 0.79%)</title><rect x="76.6" y="291.0" width="9.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="79.6" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 0.72%)</title><rect x="77.5" y="275.0" width="8.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="80.5" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 0.72%)</title><rect x="77.5" y="259.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="80.5" y="270.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (22 samples, 0.51%)</title><rect x="79.9" y="243.0" width="6.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="82.9" y="254.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="80.2" y="227.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="83.2" y="238.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.05%)</title><rect x="80.2" y="211.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="83.2" y="222.0"></text>
</g>
<g>
<title>vfs_read (19 samples, 0.44%)</title><rect x="80.8" y="227.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="83.8" y="238.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.02%)</title><rect x="81.3" y="211.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="84.3" y="222.0"></text>
</g>
<g>
<title>new_sync_read (16 samples, 0.37%)</title><rect x="81.6" y="211.0" width="4.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="84.6" y="222.0"></text>
</g>
<g>
<title>shmem_file_read_iter (15 samples, 0.35%)</title><rect x="81.8" y="195.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="84.8" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.05%)</title><rect x="83.2" y="179.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="86.2" y="190.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="83.5" y="163.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.5" y="174.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (7 samples, 0.16%)</title><rect x="83.8" y="179.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="86.8" y="190.0"></text>
</g>
<g>
<title>find_lock_entry (6 samples, 0.14%)</title><rect x="84.0" y="163.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="87.0" y="174.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.12%)</title><rect x="84.3" y="147.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="87.3" y="158.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.02%)</title><rect x="85.4" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="88.4" y="142.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.02%)</title><rect x="85.7" y="179.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="88.7" y="190.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (3 samples, 0.07%)</title><rect x="86.0" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.0" y="350.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="86.2" y="323.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="86.8" y="355.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (63 samples, 1.46%)</title><rect x="87.1" y="403.0" width="17.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (63 samples, 1.46%)</title><rect x="87.1" y="387.0" width="17.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.1" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="87.1" y="371.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="90.1" y="382.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="87.1" y="355.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.1" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="87.1" y="339.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.1" y="350.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="87.1" y="323.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="90.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="87.1" y="307.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="90.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (60 samples, 1.39%)</title><rect x="87.3" y="371.0" width="16.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.05%)</title><rect x="87.3" y="355.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="90.3" y="366.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="87.6" y="339.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="90.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (55 samples, 1.28%)</title><rect x="87.9" y="355.0" width="15.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (55 samples, 1.28%)</title><rect x="87.9" y="339.0" width="15.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="90.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (55 samples, 1.28%)</title><rect x="87.9" y="323.0" width="15.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="90.9" y="334.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="88.2" y="307.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="91.2" y="318.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="88.4" y="307.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="91.4" y="318.0"></text>
</g>
<g>
<title>pread (52 samples, 1.21%)</title><rect x="88.7" y="307.0" width="14.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="91.7" y="318.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.98%)</title><rect x="91.4" y="291.0" width="11.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="94.4" y="302.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.98%)</title><rect x="91.4" y="275.0" width="11.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="94.4" y="286.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.02%)</title><rect x="95.0" y="259.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="98.0" y="270.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (26 samples, 0.60%)</title><rect x="95.3" y="259.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="98.3" y="270.0"></text>
</g>
<g>
<title>fput_many (2 samples, 0.05%)</title><rect x="95.8" y="243.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="98.8" y="254.0"></text>
</g>
<g>
<title>vfs_read (22 samples, 0.51%)</title><rect x="96.4" y="243.0" width="6.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="99.4" y="254.0"></text>
</g>
<g>
<title>new_sync_read (17 samples, 0.40%)</title><rect x="97.2" y="227.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="100.2" y="238.0"></text>
</g>
<g>
<title>shmem_file_read_iter (17 samples, 0.40%)</title><rect x="97.2" y="211.0" width="4.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="100.2" y="222.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.05%)</title><rect x="98.3" y="195.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="101.3" y="206.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="98.6" y="179.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="101.6" y="190.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (10 samples, 0.23%)</title><rect x="98.8" y="195.0" width="2.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.8" y="206.0"></text>
</g>
<g>
<title>find_lock_entry (9 samples, 0.21%)</title><rect x="99.1" y="179.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="102.1" y="190.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.14%)</title><rect x="99.7" y="163.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="102.7" y="174.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.09%)</title><rect x="100.2" y="147.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="103.2" y="158.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.02%)</title><rect x="101.0" y="131.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="104.0" y="142.0"></text>
</g>
<g>
<title>page_mapping (1 samples, 0.02%)</title><rect x="101.3" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="104.3" y="174.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="101.6" y="195.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="104.6" y="206.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="101.9" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.9" y="238.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.02%)</title><rect x="102.1" y="211.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.1" y="222.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="102.4" y="259.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="105.4" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.07%)</title><rect x="103.0" y="355.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="103.0" y="339.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.0" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="103.5" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="103.8" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.8" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="103.8" y="355.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.02%)</title><rect x="104.1" y="371.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="107.1" y="382.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (1 samples, 0.02%)</title><rect x="104.3" y="467.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="107.3" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.02%)</title><rect x="104.3" y="451.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="107.3" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (1 samples, 0.02%)</title><rect x="104.3" y="435.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.3" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.02%)</title><rect x="104.3" y="419.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="107.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (1 samples, 0.02%)</title><rect x="104.3" y="403.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (1 samples, 0.02%)</title><rect x="104.3" y="387.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="107.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="104.3" y="371.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.3" y="382.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1,115 samples, 25.91%)</title><rect x="104.6" y="595.0" width="305.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="107.6" y="606.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.02%)</title><rect x="104.6" y="579.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="107.6" y="590.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="104.6" y="563.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="107.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.02%)</title><rect x="104.6" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$134/306575228.accept (1,114 samples, 25.89%)</title><rect x="104.9" y="579.0" width="305.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.9" y="590.0">ru/mail/polis/dao/gogun/DAOImpl$$Lambda$1..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (1,114 samples, 25.89%)</title><rect x="104.9" y="563.0" width="305.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="107.9" y="574.0">ru/mail/polis/dao/gogun/DAOImpl.lambda$ro..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (1,114 samples, 25.89%)</title><rect x="104.9" y="547.0" width="305.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="107.9" y="558.0">ru/mail/polis/dao/gogun/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (1,114 samples, 25.89%)</title><rect x="104.9" y="531.0" width="305.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.9" y="542.0">ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (1,114 samples, 25.89%)</title><rect x="104.9" y="515.0" width="305.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.9" y="526.0">ru/mail/polis/dao/gogun/SSTable.binarySea..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.16%)</title><rect x="105.7" y="499.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.7" y="510.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="106.0" y="483.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.0" y="494.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.09%)</title><rect x="106.3" y="483.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="109.3" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="106.8" y="467.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="109.8" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.02%)</title><rect x="107.1" y="467.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="110.1" y="478.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="107.4" y="483.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="110.4" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="107.4" y="467.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (1,104 samples, 25.66%)</title><rect x="107.6" y="499.0" width="302.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.6" y="510.0">ru/mail/polis/dao/gogun/SSTable.key</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (17 samples, 0.40%)</title><rect x="108.7" y="483.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.7" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.05%)</title><rect x="109.0" y="467.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="112.0" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.05%)</title><rect x="109.0" y="451.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="112.0" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.05%)</title><rect x="109.0" y="435.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="112.0" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="109.0" y="419.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="112.0" y="430.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="109.0" y="403.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="112.0" y="414.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="109.3" y="403.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="112.3" y="414.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="109.3" y="387.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="112.3" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (14 samples, 0.33%)</title><rect x="109.5" y="467.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.5" y="478.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="110.6" y="451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="113.6" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="110.6" y="435.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="113.6" y="446.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="110.6" y="419.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="113.6" y="430.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="110.6" y="403.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="113.6" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="110.6" y="387.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="113.6" y="398.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="110.6" y="371.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="113.6" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.21%)</title><rect x="110.9" y="451.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.9" y="462.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (7 samples, 0.16%)</title><rect x="111.5" y="435.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="114.5" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.14%)</title><rect x="111.7" y="419.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.7" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (6 samples, 0.14%)</title><rect x="111.7" y="403.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.7" y="414.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.14%)</title><rect x="111.7" y="387.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="114.7" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (5 samples, 0.12%)</title><rect x="113.4" y="483.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.4" y="494.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (4 samples, 0.09%)</title><rect x="113.7" y="467.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.02%)</title><rect x="114.5" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.5" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1,078 samples, 25.05%)</title><rect x="114.8" y="483.0" width="295.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.8" y="494.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (1,074 samples, 24.96%)</title><rect x="115.9" y="467.0" width="294.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="118.9" y="478.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.02%)</title><rect x="118.3" y="451.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.3" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (1 samples, 0.02%)</title><rect x="118.6" y="451.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.6" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (16 samples, 0.37%)</title><rect x="118.9" y="451.0" width="4.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.9" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (16 samples, 0.37%)</title><rect x="118.9" y="435.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.9" y="446.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.05%)</title><rect x="121.1" y="419.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.1" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (6 samples, 0.14%)</title><rect x="121.6" y="419.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="124.6" y="430.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.12%)</title><rect x="121.9" y="403.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.9" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.12%)</title><rect x="121.9" y="387.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (14 samples, 0.33%)</title><rect x="123.3" y="451.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.3" y="462.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (14 samples, 0.33%)</title><rect x="123.3" y="435.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="126.3" y="446.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (12 samples, 0.28%)</title><rect x="123.8" y="419.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="126.8" y="430.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (11 samples, 0.26%)</title><rect x="123.8" y="403.0" width="3.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="126.8" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (11 samples, 0.26%)</title><rect x="123.8" y="387.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.8" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaLangAccess (1 samples, 0.02%)</title><rect x="126.8" y="403.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="129.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOStatus.normalize (1 samples, 0.02%)</title><rect x="127.1" y="451.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.1" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (992 samples, 23.05%)</title><rect x="127.4" y="451.0" width="272.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.4" y="462.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="129.6" y="435.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="132.6" y="446.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="129.6" y="419.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="132.6" y="430.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (41 samples, 0.95%)</title><rect x="129.8" y="435.0" width="11.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.8" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="130.4" y="419.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="133.4" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="130.4" y="403.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="133.4" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (37 samples, 0.86%)</title><rect x="130.9" y="419.0" width="10.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="133.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.05%)</title><rect x="131.5" y="403.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.5" y="414.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (1 samples, 0.02%)</title><rect x="131.8" y="387.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="134.8" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.02%)</title><rect x="132.0" y="403.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="135.0" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (32 samples, 0.74%)</title><rect x="132.3" y="403.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="135.3" y="414.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (30 samples, 0.70%)</title><rect x="132.9" y="387.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="135.9" y="398.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (30 samples, 0.70%)</title><rect x="132.9" y="371.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="135.9" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (8 samples, 0.19%)</title><rect x="132.9" y="355.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.9" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (7 samples, 0.16%)</title><rect x="132.9" y="339.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="135.9" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.02%)</title><rect x="134.8" y="339.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.02%)</title><rect x="134.8" y="323.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.8" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (22 samples, 0.51%)</title><rect x="135.0" y="355.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="138.0" y="366.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (20 samples, 0.46%)</title><rect x="135.6" y="339.0" width="5.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.6" y="350.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.19%)</title><rect x="137.0" y="323.0" width="2.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="140.0" y="334.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="139.2" y="323.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="142.2" y="334.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (5 samples, 0.12%)</title><rect x="139.7" y="323.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="142.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (880 samples, 20.45%)</title><rect x="141.1" y="435.0" width="241.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.1" y="446.0">sun/nio/ch/IOUtil.readIntoNative..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (877 samples, 20.38%)</title><rect x="141.9" y="419.0" width="240.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="144.9" y="430.0">sun/nio/ch/FileDispatcherImpl.pr..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (865 samples, 20.10%)</title><rect x="145.2" y="403.0" width="237.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="148.2" y="414.0">sun/nio/ch/FileDispatcherImpl.p..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.02%)</title><rect x="151.2" y="387.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="154.2" y="398.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.16%)</title><rect x="151.5" y="387.0" width="1.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="154.5" y="398.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (15 samples, 0.35%)</title><rect x="153.4" y="387.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="156.4" y="398.0"></text>
</g>
<g>
<title>fdval (3 samples, 0.07%)</title><rect x="157.5" y="387.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="160.5" y="398.0"></text>
</g>
<g>
<title>pread (817 samples, 18.99%)</title><rect x="158.4" y="387.0" width="224.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="161.4" y="398.0">pread</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (669 samples, 15.55%)</title><rect x="198.9" y="371.0" width="183.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="201.9" y="382.0">entry_SYSCALL_64_after_h..</text>
</g>
<g>
<title>do_syscall_64 (669 samples, 15.55%)</title><rect x="198.9" y="355.0" width="183.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="201.9" y="366.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (27 samples, 0.63%)</title><rect x="236.8" y="339.0" width="7.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="239.8" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_exit (22 samples, 0.51%)</title><rect x="238.2" y="323.0" width="6.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="241.2" y="334.0"></text>
</g>
<g>
<title>kfree (7 samples, 0.16%)</title><rect x="240.6" y="307.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="243.6" y="318.0"></text>
</g>
<g>
<title>mntput (2 samples, 0.05%)</title><rect x="242.5" y="307.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="245.5" y="318.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.02%)</title><rect x="243.1" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="246.1" y="318.0"></text>
</g>
<g>
<title>unroll_tree_refs (3 samples, 0.07%)</title><rect x="243.4" y="307.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="246.4" y="318.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (465 samples, 10.81%)</title><rect x="244.2" y="339.0" width="127.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="247.2" y="350.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fget_light (43 samples, 1.00%)</title><rect x="249.9" y="323.0" width="11.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="252.9" y="334.0"></text>
</g>
<g>
<title>__fget_files (36 samples, 0.84%)</title><rect x="251.9" y="307.0" width="9.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="254.9" y="318.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="260.9" y="291.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="263.9" y="302.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.05%)</title><rect x="261.2" y="291.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.2" y="302.0"></text>
</g>
<g>
<title>fput_many (15 samples, 0.35%)</title><rect x="261.7" y="323.0" width="4.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="264.7" y="334.0"></text>
</g>
<g>
<title>vfs_read (386 samples, 8.97%)</title><rect x="265.9" y="323.0" width="105.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="268.9" y="334.0">vfs_read</text>
</g>
<g>
<title>fsnotify (15 samples, 0.35%)</title><rect x="270.8" y="307.0" width="4.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.8" y="318.0"></text>
</g>
<g>
<title>fsnotify_parent (25 samples, 0.58%)</title><rect x="274.9" y="307.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.9" y="318.0"></text>
</g>
<g>
<title>new_sync_read (304 samples, 7.06%)</title><rect x="281.8" y="307.0" width="83.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="284.8" y="318.0">new_sync_..</text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="291.1" y="291.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="294.1" y="302.0"></text>
</g>
<g>
<title>shmem_file_read_iter (269 samples, 6.25%)</title><rect x="291.4" y="291.0" width="73.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="294.4" y="302.0">shmem_fi..</text>
</g>
<g>
<title>copy_page_to_iter (59 samples, 1.37%)</title><rect x="304.0" y="275.0" width="16.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="307.0" y="286.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.12%)</title><rect x="309.7" y="259.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="312.7" y="270.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (33 samples, 0.77%)</title><rect x="311.1" y="259.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="314.1" y="270.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (124 samples, 2.88%)</title><rect x="320.2" y="275.0" width="34.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.2" y="286.0">sh..</text>
</g>
<g>
<title>find_lock_entry (105 samples, 2.44%)</title><rect x="325.4" y="259.0" width="28.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="328.4" y="270.0">fi..</text>
</g>
<g>
<title>find_get_entry (82 samples, 1.91%)</title><rect x="329.5" y="243.0" width="22.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="332.5" y="254.0">f..</text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.05%)</title><rect x="341.5" y="227.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="344.5" y="238.0"></text>
</g>
<g>
<title>xas_load (36 samples, 0.84%)</title><rect x="342.1" y="227.0" width="9.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="345.1" y="238.0"></text>
</g>
<g>
<title>xas_start (5 samples, 0.12%)</title><rect x="350.6" y="211.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="353.6" y="222.0"></text>
</g>
<g>
<title>page_mapping (8 samples, 0.19%)</title><rect x="352.0" y="243.0" width="2.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="355.0" y="254.0"></text>
</g>
<g>
<title>touch_atime (28 samples, 0.65%)</title><rect x="354.2" y="275.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="357.2" y="286.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.02%)</title><rect x="356.1" y="259.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="359.1" y="270.0"></text>
</g>
<g>
<title>atime_needs_update (20 samples, 0.46%)</title><rect x="356.3" y="259.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="359.3" y="270.0"></text>
</g>
<g>
<title>current_time (11 samples, 0.26%)</title><rect x="358.8" y="243.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="361.8" y="254.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (2 samples, 0.05%)</title><rect x="361.3" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="364.3" y="238.0"></text>
</g>
<g>
<title>unlock_page (11 samples, 0.26%)</title><rect x="361.8" y="275.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="364.8" y="286.0"></text>
</g>
<g>
<title>wake_up_page_bit (1 samples, 0.02%)</title><rect x="364.9" y="275.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="367.9" y="286.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.02%)</title><rect x="365.1" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="368.1" y="318.0"></text>
</g>
<g>
<title>security_file_permission (23 samples, 0.53%)</title><rect x="365.4" y="307.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="368.4" y="318.0"></text>
</g>
<g>
<title>fsnotify_parent (19 samples, 0.44%)</title><rect x="366.5" y="291.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="369.5" y="302.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="371.7" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="374.7" y="350.0"></text>
</g>
<g>
<title>syscall_trace_enter (38 samples, 0.88%)</title><rect x="372.0" y="339.0" width="10.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="375.0" y="350.0"></text>
</g>
<g>
<title>__audit_syscall_entry (10 samples, 0.23%)</title><rect x="378.3" y="323.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="381.3" y="334.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (5 samples, 0.12%)</title><rect x="381.0" y="323.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (49 samples, 1.14%)</title><rect x="382.4" y="435.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="385.4" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.12%)</title><rect x="389.8" y="419.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="392.8" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.07%)</title><rect x="390.1" y="403.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="393.1" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.02%)</title><rect x="390.6" y="387.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="393.6" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="390.9" y="403.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="393.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (17 samples, 0.40%)</title><rect x="391.2" y="419.0" width="4.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.2" y="430.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.12%)</title><rect x="394.5" y="403.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="397.5" y="414.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (5 samples, 0.12%)</title><rect x="394.5" y="387.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="397.5" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="395.0" y="371.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.0" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.05%)</title><rect x="395.3" y="355.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (13 samples, 0.30%)</title><rect x="395.8" y="435.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.8" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.26%)</title><rect x="396.1" y="419.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="399.1" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.05%)</title><rect x="398.0" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.0" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.05%)</title><rect x="398.6" y="403.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="401.6" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.02%)</title><rect x="398.9" y="387.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="401.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (1 samples, 0.02%)</title><rect x="399.1" y="419.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="402.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (32 samples, 0.74%)</title><rect x="399.4" y="451.0" width="8.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.4" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="402.7" y="435.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="405.7" y="446.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="403.0" y="419.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="406.0" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (18 samples, 0.42%)</title><rect x="403.2" y="435.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="406.2" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (8 samples, 0.19%)</title><rect x="408.2" y="451.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.2" y="462.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.07%)</title><rect x="409.5" y="435.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="412.5" y="446.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="409.5" y="419.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="412.5" y="430.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.02%)</title><rect x="409.5" y="403.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="412.5" y="414.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.05%)</title><rect x="409.8" y="419.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="412.8" y="430.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="410.1" y="403.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="413.1" y="414.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="410.4" y="595.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="410.4" y="579.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="410.4" y="563.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="410.4" y="547.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.4" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.02%)</title><rect x="410.4" y="531.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (13 samples, 0.30%)</title><rect x="410.6" y="595.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="413.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (13 samples, 0.30%)</title><rect x="410.6" y="579.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.6" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (13 samples, 0.30%)</title><rect x="410.6" y="563.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.6" y="574.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (13 samples, 0.30%)</title><rect x="410.6" y="547.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.6" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (13 samples, 0.30%)</title><rect x="410.6" y="531.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.6" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (13 samples, 0.30%)</title><rect x="410.6" y="515.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="413.6" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (13 samples, 0.30%)</title><rect x="410.6" y="499.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="413.6" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.30%)</title><rect x="410.6" y="483.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.6" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (13 samples, 0.30%)</title><rect x="410.6" y="467.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="413.6" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (10 samples, 0.23%)</title><rect x="410.6" y="451.0" width="2.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (10 samples, 0.23%)</title><rect x="410.6" y="435.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.6" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (10 samples, 0.23%)</title><rect x="410.6" y="419.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.6" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (10 samples, 0.23%)</title><rect x="410.6" y="403.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.6" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (7 samples, 0.16%)</title><rect x="410.6" y="387.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.6" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="410.6" y="371.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.6" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="410.6" y="355.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="410.6" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="413.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (6 samples, 0.14%)</title><rect x="410.9" y="371.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.9" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (6 samples, 0.14%)</title><rect x="410.9" y="355.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="413.9" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (5 samples, 0.12%)</title><rect x="411.2" y="339.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.2" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (4 samples, 0.09%)</title><rect x="411.2" y="323.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="414.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (4 samples, 0.09%)</title><rect x="411.2" y="307.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="414.2" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (4 samples, 0.09%)</title><rect x="411.2" y="291.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.2" y="302.0"></text>
</g>
<g>
<title>pread (4 samples, 0.09%)</title><rect x="411.2" y="275.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="414.2" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.07%)</title><rect x="411.5" y="259.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="414.5" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.07%)</title><rect x="411.5" y="243.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="414.5" y="254.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.02%)</title><rect x="412.0" y="227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="415.0" y="238.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="412.0" y="211.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="415.0" y="222.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="412.0" y="195.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="415.0" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.02%)</title><rect x="412.0" y="179.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="415.0" y="190.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (1 samples, 0.02%)</title><rect x="412.0" y="163.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="415.0" y="174.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.02%)</title><rect x="412.0" y="147.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="415.0" y="158.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.02%)</title><rect x="412.0" y="131.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="415.0" y="142.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.02%)</title><rect x="412.0" y="115.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="415.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="412.3" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (3 samples, 0.07%)</title><rect x="412.6" y="387.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (3 samples, 0.07%)</title><rect x="412.6" y="371.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.6" y="382.0"></text>
</g>
<g>
<title>ThreadSafepointState::handle_polling_page_exception() (1 samples, 0.02%)</title><rect x="412.6" y="355.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="415.6" y="366.0"></text>
</g>
<g>
<title>Method::result_type() const (1 samples, 0.02%)</title><rect x="412.6" y="339.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="415.6" y="350.0"></text>
</g>
<g>
<title>SignatureIterator::iterate_returntype() (1 samples, 0.02%)</title><rect x="412.6" y="323.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="415.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1 samples, 0.02%)</title><rect x="412.8" y="355.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1 samples, 0.02%)</title><rect x="412.8" y="339.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="415.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1 samples, 0.02%)</title><rect x="412.8" y="323.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.02%)</title><rect x="412.8" y="307.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.8" y="318.0"></text>
</g>
<g>
<title>pread (1 samples, 0.02%)</title><rect x="412.8" y="291.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="415.8" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="412.8" y="275.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.8" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="412.8" y="259.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="415.8" y="270.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (1 samples, 0.02%)</title><rect x="412.8" y="243.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="415.8" y="254.0"></text>
</g>
<g>
<title>vfs_read (1 samples, 0.02%)</title><rect x="412.8" y="227.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="415.8" y="238.0"></text>
</g>
<g>
<title>new_sync_read (1 samples, 0.02%)</title><rect x="412.8" y="211.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="415.8" y="222.0"></text>
</g>
<g>
<title>shmem_file_read_iter (1 samples, 0.02%)</title><rect x="412.8" y="195.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="415.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="413.1" y="355.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.1" y="366.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="413.1" y="339.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="416.1" y="350.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="413.1" y="323.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="416.1" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (3 samples, 0.07%)</title><rect x="413.4" y="451.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.4" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (3 samples, 0.07%)</title><rect x="413.4" y="435.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.4" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (3 samples, 0.07%)</title><rect x="413.4" y="419.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.4" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (3 samples, 0.07%)</title><rect x="413.4" y="403.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="416.4" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="413.7" y="387.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="413.7" y="371.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.7" y="382.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.02%)</title><rect x="413.7" y="355.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="416.7" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="413.7" y="339.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="416.7" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="413.7" y="323.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.7" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (1 samples, 0.02%)</title><rect x="413.9" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.9" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (1 samples, 0.02%)</title><rect x="413.9" y="371.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.9" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="413.9" y="355.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.9" y="366.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="413.9" y="339.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="416.9" y="350.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="413.9" y="323.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="416.9" y="334.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="413.9" y="307.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="416.9" y="318.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="413.9" y="291.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="416.9" y="302.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="413.9" y="275.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="416.9" y="286.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="413.9" y="259.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="416.9" y="270.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="413.9" y="243.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="416.9" y="254.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$134/306575228.accept (1 samples, 0.02%)</title><rect x="414.2" y="595.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.2" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (5 samples, 0.12%)</title><rect x="414.5" y="595.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="417.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (4 samples, 0.09%)</title><rect x="414.5" y="579.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="417.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (4 samples, 0.09%)</title><rect x="414.5" y="563.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.09%)</title><rect x="414.5" y="547.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.5" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.09%)</title><rect x="414.5" y="531.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="417.5" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.09%)</title><rect x="414.5" y="515.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="414.5" y="499.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.5" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="414.5" y="483.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.5" y="494.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="414.5" y="467.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.5" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.07%)</title><rect x="414.8" y="499.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="417.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.02%)</title><rect x="415.6" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="418.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.02%)</title><rect x="415.6" y="563.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.02%)</title><rect x="415.6" y="547.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.6" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="415.6" y="531.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="418.6" y="542.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="415.6" y="515.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="418.6" y="526.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="415.6" y="499.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="418.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="415.6" y="483.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="418.6" y="494.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="415.6" y="467.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="418.6" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="415.6" y="451.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="418.6" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.isMe (1 samples, 0.02%)</title><rect x="415.9" y="643.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (41 samples, 0.95%)</title><rect x="416.1" y="659.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (41 samples, 0.95%)</title><rect x="416.1" y="643.0" width="11.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.1" y="654.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.02%)</title><rect x="416.1" y="627.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="419.1" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (40 samples, 0.93%)</title><rect x="416.4" y="627.0" width="11.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="419.4" y="638.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (40 samples, 0.93%)</title><rect x="416.4" y="611.0" width="11.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.4" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (38 samples, 0.88%)</title><rect x="416.7" y="595.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (7 samples, 0.16%)</title><rect x="417.2" y="579.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (7 samples, 0.16%)</title><rect x="417.2" y="563.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (4 samples, 0.09%)</title><rect x="418.1" y="547.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="421.1" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (6 samples, 0.14%)</title><rect x="419.1" y="579.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="422.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (6 samples, 0.14%)</title><rect x="419.1" y="563.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.1" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (23 samples, 0.53%)</title><rect x="420.8" y="579.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="423.8" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (20 samples, 0.46%)</title><rect x="421.6" y="563.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="426.8" y="547.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="429.8" y="558.0"></text>
</g>
<g>
<title>java/lang/Integer.compareTo (1 samples, 0.02%)</title><rect x="426.8" y="531.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.8" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$108/13738514.get (1 samples, 0.02%)</title><rect x="427.1" y="595.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.1" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="427.1" y="579.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.1" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (1 samples, 0.02%)</title><rect x="427.4" y="659.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="430.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.get (1 samples, 0.02%)</title><rect x="427.4" y="643.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.4" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (28 samples, 0.65%)</title><rect x="427.6" y="659.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.6" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.getReplNodes (28 samples, 0.65%)</title><rect x="427.6" y="643.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="430.6" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (28 samples, 0.65%)</title><rect x="427.6" y="627.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.6" y="638.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.05%)</title><rect x="427.6" y="611.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="430.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.05%)</title><rect x="427.6" y="595.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="430.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.05%)</title><rect x="427.6" y="579.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.05%)</title><rect x="427.6" y="563.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="430.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (26 samples, 0.60%)</title><rect x="428.2" y="611.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.2" y="622.0"></text>
</g>
<g>
<title>java/util/TreeSet.addAll (26 samples, 0.60%)</title><rect x="428.2" y="595.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="431.2" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (25 samples, 0.58%)</title><rect x="428.2" y="579.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="431.2" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (3 samples, 0.07%)</title><rect x="429.0" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.0" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.07%)</title><rect x="429.0" y="547.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.0" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (3 samples, 0.07%)</title><rect x="429.0" y="531.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.0" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (4 samples, 0.09%)</title><rect x="429.8" y="563.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.8" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (4 samples, 0.09%)</title><rect x="429.8" y="547.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (15 samples, 0.35%)</title><rect x="430.9" y="563.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.9" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (14 samples, 0.33%)</title><rect x="431.2" y="547.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.2" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (1 samples, 0.02%)</title><rect x="435.1" y="579.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.1" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="435.1" y="563.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.1" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (2,657 samples, 61.75%)</title><rect x="435.3" y="659.0" width="728.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.3" y="670.0">ru/mail/polis/service/gogun/ServiceUtils.selector</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (101 samples, 2.35%)</title><rect x="435.6" y="643.0" width="27.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.6" y="654.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="435.9" y="627.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.9" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="435.9" y="611.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.9" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="435.9" y="595.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (99 samples, 2.30%)</title><rect x="436.1" y="627.0" width="27.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="439.1" y="638.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.09%)</title><rect x="436.1" y="611.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="439.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.07%)</title><rect x="436.4" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.02%)</title><rect x="436.4" y="579.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="439.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="436.7" y="579.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.7" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="436.7" y="563.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="439.7" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.05%)</title><rect x="436.7" y="547.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="439.7" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (95 samples, 2.21%)</title><rect x="437.2" y="611.0" width="26.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="440.2" y="622.0">o..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="437.5" y="595.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="440.5" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="437.5" y="579.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="440.5" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="437.5" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="440.5" y="574.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="437.5" y="547.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="440.5" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (93 samples, 2.16%)</title><rect x="437.8" y="595.0" width="25.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="440.8" y="606.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (93 samples, 2.16%)</title><rect x="437.8" y="579.0" width="25.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.8" y="590.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (93 samples, 2.16%)</title><rect x="437.8" y="563.0" width="25.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.8" y="574.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.07%)</title><rect x="438.3" y="547.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="441.3" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="438.6" y="531.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="441.6" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="438.9" y="531.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="441.9" y="542.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="439.2" y="547.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="442.2" y="558.0"></text>
</g>
<g>
<title>__libc_send (87 samples, 2.02%)</title><rect x="439.4" y="547.0" width="23.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="442.4" y="558.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.93%)</title><rect x="440.5" y="531.0" width="22.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="443.5" y="542.0">e..</text>
</g>
<g>
<title>do_syscall_64 (83 samples, 1.93%)</title><rect x="440.5" y="515.0" width="22.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="443.5" y="526.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (80 samples, 1.86%)</title><rect x="441.1" y="499.0" width="21.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="444.1" y="510.0">_..</text>
</g>
<g>
<title>__sys_sendto (80 samples, 1.86%)</title><rect x="441.1" y="483.0" width="21.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="444.1" y="494.0">_..</text>
</g>
<g>
<title>sock_sendmsg (76 samples, 1.77%)</title><rect x="441.6" y="467.0" width="20.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="444.6" y="478.0"></text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.02%)</title><rect x="441.6" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="444.6" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.02%)</title><rect x="441.9" y="451.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="444.9" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg (74 samples, 1.72%)</title><rect x="442.2" y="451.0" width="20.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="445.2" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (74 samples, 1.72%)</title><rect x="442.2" y="435.0" width="20.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.2" y="446.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (57 samples, 1.32%)</title><rect x="442.7" y="419.0" width="15.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="445.7" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (57 samples, 1.32%)</title><rect x="442.7" y="403.0" width="15.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="445.7" y="414.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (54 samples, 1.25%)</title><rect x="443.3" y="387.0" width="14.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="446.3" y="398.0"></text>
</g>
<g>
<title>__ip_queue_xmit (52 samples, 1.21%)</title><rect x="443.6" y="371.0" width="14.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="446.6" y="382.0"></text>
</g>
<g>
<title>ip_output (51 samples, 1.19%)</title><rect x="443.8" y="355.0" width="14.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="446.8" y="366.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.02%)</title><rect x="443.8" y="339.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="446.8" y="350.0"></text>
</g>
<g>
<title>ip_finish_output2 (49 samples, 1.14%)</title><rect x="444.1" y="339.0" width="13.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="447.1" y="350.0"></text>
</g>
<g>
<title>__dev_queue_xmit (7 samples, 0.16%)</title><rect x="444.4" y="323.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="447.4" y="334.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="445.5" y="307.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="448.5" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="445.5" y="291.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="448.5" y="302.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="445.5" y="275.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="448.5" y="286.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="445.7" y="307.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="448.7" y="318.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="446.0" y="307.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="449.0" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="446.0" y="291.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.0" y="302.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (41 samples, 0.95%)</title><rect x="446.3" y="323.0" width="11.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="449.3" y="334.0"></text>
</g>
<g>
<title>do_softirq (41 samples, 0.95%)</title><rect x="446.3" y="307.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="449.3" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (41 samples, 0.95%)</title><rect x="446.3" y="291.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="449.3" y="302.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (41 samples, 0.95%)</title><rect x="446.3" y="275.0" width="11.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.3" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (41 samples, 0.95%)</title><rect x="446.3" y="259.0" width="11.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="449.3" y="270.0"></text>
</g>
<g>
<title>net_rx_action (38 samples, 0.88%)</title><rect x="447.1" y="243.0" width="10.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="450.1" y="254.0"></text>
</g>
<g>
<title>process_backlog (37 samples, 0.86%)</title><rect x="447.4" y="227.0" width="10.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="450.4" y="238.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (37 samples, 0.86%)</title><rect x="447.4" y="211.0" width="10.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="450.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv (36 samples, 0.84%)</title><rect x="447.7" y="195.0" width="9.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="450.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver (35 samples, 0.81%)</title><rect x="447.7" y="179.0" width="9.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="450.7" y="190.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (35 samples, 0.81%)</title><rect x="447.7" y="163.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="450.7" y="174.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (35 samples, 0.81%)</title><rect x="447.7" y="147.0" width="9.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="450.7" y="158.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="447.9" y="131.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="450.9" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (33 samples, 0.77%)</title><rect x="448.2" y="131.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.2" y="142.0"></text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="448.2" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="451.2" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="448.5" y="115.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="451.5" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (31 samples, 0.72%)</title><rect x="448.8" y="115.0" width="8.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="451.8" y="126.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="448.8" y="99.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="451.8" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (30 samples, 0.70%)</title><rect x="449.0" y="99.0" width="8.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="452.0" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.05%)</title><rect x="449.3" y="83.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="452.3" y="94.0"></text>
</g>
<g>
<title>__mod_timer (2 samples, 0.05%)</title><rect x="449.3" y="67.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.3" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="449.3" y="51.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="452.3" y="62.0"></text>
</g>
<g>
<title>sock_def_readable (18 samples, 0.42%)</title><rect x="449.9" y="83.0" width="4.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="452.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (17 samples, 0.40%)</title><rect x="450.1" y="67.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.1" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.37%)</title><rect x="450.4" y="51.0" width="4.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="453.4" y="62.0"></text>
</g>
<g>
<title>tcp_ack (8 samples, 0.19%)</title><rect x="454.8" y="83.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="457.8" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="455.6" y="67.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="458.6" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="455.6" y="51.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.6" y="62.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (1 samples, 0.02%)</title><rect x="455.6" y="35.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="458.6" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="455.9" y="51.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="458.9" y="62.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="456.2" y="67.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="459.2" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (1 samples, 0.02%)</title><rect x="456.4" y="67.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="459.4" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="456.7" y="67.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="459.7" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="457.0" y="83.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.0" y="94.0"></text>
</g>
<g>
<title>ip_rcv_core (1 samples, 0.02%)</title><rect x="457.3" y="179.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="460.3" y="190.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="457.5" y="339.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="460.5" y="350.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.02%)</title><rect x="457.5" y="323.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="460.5" y="334.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="457.5" y="307.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="460.5" y="318.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.02%)</title><rect x="457.8" y="371.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="460.8" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="458.1" y="387.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="461.1" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="458.1" y="371.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="461.1" y="382.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.02%)</title><rect x="458.1" y="355.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="461.1" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="458.1" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="461.1" y="350.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.21%)</title><rect x="458.4" y="419.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.4" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.21%)</title><rect x="458.4" y="403.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="461.4" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.07%)</title><rect x="458.4" y="387.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="461.4" y="398.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.02%)</title><rect x="458.6" y="371.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.6" y="382.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.02%)</title><rect x="458.9" y="371.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="461.9" y="382.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.07%)</title><rect x="459.2" y="387.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="462.2" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="460.0" y="387.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="463.0" y="398.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.02%)</title><rect x="460.6" y="371.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="463.6" y="382.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.05%)</title><rect x="460.8" y="419.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="463.8" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.05%)</title><rect x="461.4" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="464.4" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="461.4" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="464.4" y="414.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="461.9" y="419.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="464.9" y="430.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="462.2" y="419.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="465.2" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="462.5" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="465.5" y="478.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="462.5" y="451.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="465.5" y="462.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.05%)</title><rect x="462.5" y="435.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="465.5" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.02%)</title><rect x="463.0" y="499.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="466.0" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$108/13738514.get (1 samples, 0.02%)</title><rect x="463.3" y="643.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.3" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$90/848607392.get (2,554 samples, 59.35%)</title><rect x="463.6" y="643.0" width="700.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="466.6" y="654.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$90/848607392.get</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (1 samples, 0.02%)</title><rect x="464.1" y="627.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$3 (2,551 samples, 59.28%)</title><rect x="464.4" y="627.0" width="699.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.4" y="638.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$3</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet (2,551 samples, 59.28%)</title><rect x="464.4" y="611.0" width="699.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="467.4" y="622.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleGet</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/517933573.linkToTargetMethod (1 samples, 0.02%)</title><rect x="464.4" y="595.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="467.4" y="606.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/89702273.invoke (1 samples, 0.02%)</title><rect x="464.4" y="579.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.4" y="590.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/637076005.invoke (1 samples, 0.02%)</title><rect x="464.4" y="563.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.4" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="464.4" y="547.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="467.4" y="558.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.02%)</title><rect x="464.4" y="531.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.4" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.getValue (2,548 samples, 59.21%)</title><rect x="464.7" y="595.0" width="698.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.7" y="606.0">ru/mail/polis/dao/DAO.getValue</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (63 samples, 1.46%)</title><rect x="464.7" y="579.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="467.7" y="590.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (61 samples, 1.42%)</title><rect x="465.2" y="563.0" width="16.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.2" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.07%)</title><rect x="465.2" y="547.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.2" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.07%)</title><rect x="465.2" y="531.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftDownUsingComparator (3 samples, 0.07%)</title><rect x="465.2" y="515.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.2" y="526.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.07%)</title><rect x="465.2" y="499.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.2" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (3 samples, 0.07%)</title><rect x="465.2" y="483.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.2" y="494.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (2 samples, 0.05%)</title><rect x="465.5" y="467.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.5" y="478.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (2 samples, 0.05%)</title><rect x="465.5" y="451.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.5" y="462.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (2 samples, 0.05%)</title><rect x="465.5" y="435.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.5" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.02%)</title><rect x="465.8" y="419.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.8" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (1 samples, 0.02%)</title><rect x="465.8" y="403.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.8" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (1 samples, 0.02%)</title><rect x="465.8" y="387.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.8" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="465.8" y="371.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="468.8" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="465.8" y="355.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="468.8" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="465.8" y="339.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="468.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="465.8" y="323.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.8" y="334.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="465.8" y="307.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.8" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="465.8" y="291.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="468.8" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="465.8" y="275.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.8" y="286.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (58 samples, 1.35%)</title><rect x="466.0" y="547.0" width="15.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.0" y="558.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (58 samples, 1.35%)</title><rect x="466.0" y="531.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="469.0" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.grow (1 samples, 0.02%)</title><rect x="466.0" y="515.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.0" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (57 samples, 1.32%)</title><rect x="466.3" y="515.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.3" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (57 samples, 1.32%)</title><rect x="466.3" y="499.0" width="15.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="469.3" y="510.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 1.32%)</title><rect x="466.3" y="483.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.3" y="494.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (57 samples, 1.32%)</title><rect x="466.3" y="467.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.3" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (57 samples, 1.32%)</title><rect x="466.3" y="451.0" width="15.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.3" y="462.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (57 samples, 1.32%)</title><rect x="466.3" y="435.0" width="15.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (57 samples, 1.32%)</title><rect x="466.3" y="419.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.3" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (57 samples, 1.32%)</title><rect x="466.3" y="403.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.3" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (16 samples, 0.37%)</title><rect x="466.3" y="387.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="469.3" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.02%)</title><rect x="466.3" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.3" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.35%)</title><rect x="466.6" y="371.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.35%)</title><rect x="466.6" y="355.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.35%)</title><rect x="466.6" y="339.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (15 samples, 0.35%)</title><rect x="466.6" y="323.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.6" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (15 samples, 0.35%)</title><rect x="466.6" y="307.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.6" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (15 samples, 0.35%)</title><rect x="466.6" y="291.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.6" y="302.0"></text>
</g>
<g>
<title>pread (15 samples, 0.35%)</title><rect x="466.6" y="275.0" width="4.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="469.6" y="286.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.28%)</title><rect x="467.4" y="259.0" width="3.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.4" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.28%)</title><rect x="467.4" y="243.0" width="3.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="470.4" y="254.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.05%)</title><rect x="467.7" y="227.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="470.7" y="238.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="468.0" y="211.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="471.0" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (7 samples, 0.16%)</title><rect x="468.2" y="227.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="471.2" y="238.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="468.5" y="211.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="471.5" y="222.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.05%)</title><rect x="468.5" y="195.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="471.5" y="206.0"></text>
</g>
<g>
<title>vfs_read (4 samples, 0.09%)</title><rect x="469.1" y="211.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="472.1" y="222.0"></text>
</g>
<g>
<title>new_sync_read (3 samples, 0.07%)</title><rect x="469.3" y="195.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="472.3" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (3 samples, 0.07%)</title><rect x="469.3" y="179.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="472.3" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.05%)</title><rect x="469.6" y="163.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="472.6" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.05%)</title><rect x="469.6" y="147.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="472.6" y="158.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="470.2" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="473.2" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (41 samples, 0.95%)</title><rect x="470.7" y="387.0" width="11.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.7" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (41 samples, 0.95%)</title><rect x="470.7" y="371.0" width="11.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="473.7" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="470.7" y="355.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.7" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="470.7" y="339.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (3 samples, 0.07%)</title><rect x="471.0" y="355.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.0" y="366.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.05%)</title><rect x="471.3" y="339.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="474.3" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="471.5" y="323.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/SharedSecrets.getJavaLangAccess (1 samples, 0.02%)</title><rect x="471.5" y="307.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (34 samples, 0.79%)</title><rect x="471.8" y="355.0" width="9.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="474.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (32 samples, 0.74%)</title><rect x="471.8" y="339.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (32 samples, 0.74%)</title><rect x="471.8" y="323.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.8" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (32 samples, 0.74%)</title><rect x="471.8" y="307.0" width="8.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="474.8" y="318.0"></text>
</g>
<g>
<title>pread (31 samples, 0.72%)</title><rect x="472.1" y="291.0" width="8.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="475.1" y="302.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.53%)</title><rect x="474.3" y="275.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="477.3" y="286.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.53%)</title><rect x="474.3" y="259.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="477.3" y="270.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (12 samples, 0.28%)</title><rect x="476.7" y="243.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="479.7" y="254.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="476.7" y="227.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="479.7" y="238.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.07%)</title><rect x="476.7" y="211.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="479.7" y="222.0"></text>
</g>
<g>
<title>vfs_read (9 samples, 0.21%)</title><rect x="477.6" y="227.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="480.6" y="238.0"></text>
</g>
<g>
<title>new_sync_read (7 samples, 0.16%)</title><rect x="478.1" y="211.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="481.1" y="222.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="478.4" y="195.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="481.4" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (5 samples, 0.12%)</title><rect x="478.7" y="195.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="481.7" y="206.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="478.7" y="179.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="481.7" y="190.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (3 samples, 0.07%)</title><rect x="478.9" y="179.0" width="0.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="481.9" y="190.0"></text>
</g>
<g>
<title>find_lock_entry (2 samples, 0.05%)</title><rect x="479.2" y="163.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="482.2" y="174.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.05%)</title><rect x="479.2" y="147.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="482.2" y="158.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.05%)</title><rect x="479.2" y="131.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="482.2" y="142.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="479.8" y="179.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.8" y="190.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="479.8" y="163.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="482.8" y="174.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="480.0" y="243.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="483.0" y="254.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="480.3" y="227.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="483.3" y="238.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.05%)</title><rect x="480.6" y="339.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (2 samples, 0.05%)</title><rect x="480.6" y="323.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="483.6" y="334.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="480.8" y="307.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="483.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (2 samples, 0.05%)</title><rect x="481.1" y="355.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="481.4" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="484.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (1 samples, 0.02%)</title><rect x="481.7" y="355.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.7" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.rowIterator (2,485 samples, 57.75%)</title><rect x="481.9" y="579.0" width="681.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.9" y="590.0">ru/mail/polis/dao/gogun/DAOImpl.rowIterator</text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (282 samples, 6.55%)</title><rect x="481.9" y="563.0" width="77.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.9" y="574.0">com/googl..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (282 samples, 6.55%)</title><rect x="481.9" y="547.0" width="77.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.9" y="558.0">com/googl..</text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="482.2" y="531.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.2" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (277 samples, 6.44%)</title><rect x="482.5" y="531.0" width="76.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.5" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.offer (277 samples, 6.44%)</title><rect x="482.5" y="515.0" width="76.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.5" y="526.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (277 samples, 6.44%)</title><rect x="482.5" y="499.0" width="76.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="485.5" y="510.0">java/uti..</text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (277 samples, 6.44%)</title><rect x="482.5" y="483.0" width="76.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="485.5" y="494.0">java/uti..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (275 samples, 6.39%)</title><rect x="483.0" y="467.0" width="75.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="486.0" y="478.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (275 samples, 6.39%)</title><rect x="483.0" y="451.0" width="75.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="486.0" y="462.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (274 samples, 6.37%)</title><rect x="483.0" y="435.0" width="75.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="486.0" y="446.0">com/goog..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (1 samples, 0.02%)</title><rect x="483.0" y="419.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.0" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="483.0" y="403.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.0" y="414.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="483.0" y="387.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.0" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.02%)</title><rect x="483.0" y="371.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.0" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (1 samples, 0.02%)</title><rect x="483.0" y="355.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="486.0" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (273 samples, 6.34%)</title><rect x="483.3" y="419.0" width="74.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.3" y="430.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (273 samples, 6.34%)</title><rect x="483.3" y="403.0" width="74.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="486.3" y="414.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (273 samples, 6.34%)</title><rect x="483.3" y="387.0" width="74.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.3" y="398.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.09%)</title><rect x="483.3" y="371.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="486.3" y="382.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="483.6" y="355.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="486.6" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="483.6" y="339.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="486.6" y="350.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="483.6" y="323.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.6" y="334.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="483.9" y="307.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="486.9" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="483.9" y="291.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="486.9" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="483.9" y="275.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.9" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (1 samples, 0.02%)</title><rect x="484.1" y="323.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="487.1" y="334.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (130 samples, 3.02%)</title><rect x="484.4" y="371.0" width="35.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="487.4" y="382.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (4 samples, 0.09%)</title><rect x="484.4" y="355.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="487.4" y="366.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="485.0" y="339.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.0" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="485.0" y="323.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.0" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (1 samples, 0.02%)</title><rect x="485.5" y="355.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="488.5" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (1 samples, 0.02%)</title><rect x="485.5" y="339.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="488.5" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (125 samples, 2.90%)</title><rect x="485.8" y="355.0" width="34.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.8" y="366.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (125 samples, 2.90%)</title><rect x="485.8" y="339.0" width="34.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.8" y="350.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="486.1" y="323.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.09%)</title><rect x="486.3" y="323.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.3" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.09%)</title><rect x="486.3" y="307.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.3" y="318.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (3 samples, 0.07%)</title><rect x="486.6" y="291.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="489.6" y="302.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (3 samples, 0.07%)</title><rect x="486.6" y="275.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="489.6" y="286.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (3 samples, 0.07%)</title><rect x="486.6" y="259.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="489.6" y="270.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.02%)</title><rect x="487.4" y="323.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.4" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (115 samples, 2.67%)</title><rect x="487.7" y="323.0" width="31.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.7" y="334.0">su..</text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (6 samples, 0.14%)</title><rect x="487.7" y="307.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="490.7" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="488.0" y="291.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.0" y="302.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="488.0" y="275.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="491.0" y="286.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (4 samples, 0.09%)</title><rect x="488.3" y="291.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.3" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.05%)</title><rect x="488.3" y="275.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.3" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.05%)</title><rect x="488.8" y="275.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="491.8" y="286.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.05%)</title><rect x="488.8" y="259.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.8" y="270.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.05%)</title><rect x="488.8" y="243.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="491.8" y="254.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.02%)</title><rect x="488.8" y="227.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="491.8" y="238.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.02%)</title><rect x="488.8" y="211.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="491.8" y="222.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (1 samples, 0.02%)</title><rect x="489.1" y="227.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.1" y="238.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (1 samples, 0.02%)</title><rect x="489.1" y="211.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="492.1" y="222.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="489.1" y="195.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="492.1" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (101 samples, 2.35%)</title><rect x="489.3" y="307.0" width="27.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="492.3" y="318.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (101 samples, 2.35%)</title><rect x="489.3" y="291.0" width="27.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="492.3" y="302.0">s..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (101 samples, 2.35%)</title><rect x="489.3" y="275.0" width="27.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="492.3" y="286.0">s..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (1 samples, 0.02%)</title><rect x="489.9" y="259.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="492.9" y="270.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="490.2" y="259.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="493.2" y="270.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="490.4" y="259.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.4" y="270.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="490.4" y="243.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="493.4" y="254.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="490.4" y="227.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="493.4" y="238.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="490.4" y="211.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.4" y="222.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="490.4" y="195.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.4" y="206.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="490.4" y="179.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="493.4" y="190.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="490.4" y="163.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="493.4" y="174.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="490.4" y="147.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="493.4" y="158.0"></text>
</g>
<g>
<title>pread (96 samples, 2.23%)</title><rect x="490.7" y="259.0" width="26.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="493.7" y="270.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (73 samples, 1.70%)</title><rect x="497.0" y="243.0" width="20.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="500.0" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (73 samples, 1.70%)</title><rect x="497.0" y="227.0" width="20.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="500.0" y="238.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (5 samples, 0.12%)</title><rect x="502.0" y="211.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="505.0" y="222.0"></text>
</g>
<g>
<title>__audit_syscall_exit (4 samples, 0.09%)</title><rect x="502.2" y="195.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="505.2" y="206.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="502.5" y="179.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="505.5" y="190.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.02%)</title><rect x="503.1" y="179.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="506.1" y="190.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (46 samples, 1.07%)</title><rect x="503.3" y="211.0" width="12.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="506.3" y="222.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="503.9" y="195.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="506.9" y="206.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.09%)</title><rect x="503.9" y="179.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="506.9" y="190.0"></text>
</g>
<g>
<title>vfs_read (40 samples, 0.93%)</title><rect x="505.0" y="195.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.0" y="206.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.09%)</title><rect x="505.3" y="179.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="508.3" y="190.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.02%)</title><rect x="506.4" y="179.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.4" y="190.0"></text>
</g>
<g>
<title>new_sync_read (32 samples, 0.74%)</title><rect x="506.6" y="179.0" width="8.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="509.6" y="190.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="508.0" y="163.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="511.0" y="174.0"></text>
</g>
<g>
<title>shmem_file_read_iter (26 samples, 0.60%)</title><rect x="508.3" y="163.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="511.3" y="174.0"></text>
</g>
<g>
<title>copy_page_to_iter (5 samples, 0.12%)</title><rect x="508.8" y="147.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="511.8" y="158.0"></text>
</g>
<g>
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="509.1" y="131.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="512.1" y="142.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.02%)</title><rect x="509.1" y="115.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="512.1" y="126.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="509.1" y="99.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="512.1" y="110.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="509.1" y="83.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="512.1" y="94.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="509.1" y="67.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="512.1" y="78.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="509.1" y="51.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="512.1" y="62.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.07%)</title><rect x="509.4" y="131.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.4" y="142.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (17 samples, 0.40%)</title><rect x="510.2" y="147.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="513.2" y="158.0"></text>
</g>
<g>
<title>find_lock_entry (15 samples, 0.35%)</title><rect x="510.7" y="131.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="513.7" y="142.0"></text>
</g>
<g>
<title>find_get_entry (13 samples, 0.30%)</title><rect x="511.3" y="115.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="514.3" y="126.0"></text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.05%)</title><rect x="513.2" y="99.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="516.2" y="110.0"></text>
</g>
<g>
<title>xas_load (4 samples, 0.09%)</title><rect x="513.8" y="99.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="516.8" y="110.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="514.9" y="147.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.9" y="158.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="514.9" y="131.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="517.9" y="142.0"></text>
</g>
<g>
<title>wake_up_page_bit (1 samples, 0.02%)</title><rect x="515.1" y="147.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="518.1" y="158.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="515.1" y="131.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="518.1" y="142.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.05%)</title><rect x="515.4" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.4" y="190.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.02%)</title><rect x="515.7" y="163.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.7" y="174.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="515.9" y="211.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="518.9" y="222.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="515.9" y="195.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.9" y="206.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="515.9" y="179.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="518.9" y="190.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="515.9" y="163.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="518.9" y="174.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="515.9" y="147.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="518.9" y="158.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="515.9" y="131.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.9" y="142.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="515.9" y="115.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="518.9" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="515.9" y="99.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="518.9" y="110.0"></text>
</g>
<g>
<title>syscall_trace_enter (3 samples, 0.07%)</title><rect x="516.2" y="211.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="519.2" y="222.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.02%)</title><rect x="516.8" y="195.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="519.8" y="206.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.09%)</title><rect x="517.0" y="307.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="520.0" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.05%)</title><rect x="517.3" y="291.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="520.3" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="517.6" y="275.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.6" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (1 samples, 0.02%)</title><rect x="517.9" y="291.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.9" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (4 samples, 0.09%)</title><rect x="518.1" y="307.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="518.4" y="291.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.4" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.05%)</title><rect x="518.7" y="275.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (3 samples, 0.07%)</title><rect x="519.2" y="323.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="522.2" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (2 samples, 0.05%)</title><rect x="519.5" y="307.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.5" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (139 samples, 3.23%)</title><rect x="520.1" y="371.0" width="38.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.1" y="382.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (139 samples, 3.23%)</title><rect x="520.1" y="355.0" width="38.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.1" y="366.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (7 samples, 0.16%)</title><rect x="520.1" y="339.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="523.1" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (7 samples, 0.16%)</title><rect x="520.1" y="323.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="523.1" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="521.7" y="307.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="524.7" y="318.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="521.7" y="291.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="524.7" y="302.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="521.7" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="524.7" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (2 samples, 0.05%)</title><rect x="522.0" y="339.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.0" y="350.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (2 samples, 0.05%)</title><rect x="522.0" y="323.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="525.0" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (120 samples, 2.79%)</title><rect x="522.5" y="339.0" width="32.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="525.5" y="350.0">su..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (103 samples, 2.39%)</title><rect x="522.5" y="323.0" width="28.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="525.5" y="334.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (103 samples, 2.39%)</title><rect x="522.5" y="307.0" width="28.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="525.5" y="318.0">su..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (103 samples, 2.39%)</title><rect x="522.5" y="291.0" width="28.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.5" y="302.0">su..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="523.9" y="275.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="526.9" y="286.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.05%)</title><rect x="524.2" y="275.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="527.2" y="286.0"></text>
</g>
<g>
<title>pread (95 samples, 2.21%)</title><rect x="524.7" y="275.0" width="26.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="527.7" y="286.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 1.77%)</title><rect x="529.9" y="259.0" width="20.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="532.9" y="270.0"></text>
</g>
<g>
<title>do_syscall_64 (76 samples, 1.77%)</title><rect x="529.9" y="243.0" width="20.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="532.9" y="254.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.02%)</title><rect x="536.0" y="227.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="539.0" y="238.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (46 samples, 1.07%)</title><rect x="536.2" y="227.0" width="12.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.2" y="238.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.09%)</title><rect x="537.3" y="211.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="540.3" y="222.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.09%)</title><rect x="537.3" y="195.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="540.3" y="206.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.07%)</title><rect x="538.4" y="211.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="541.4" y="222.0"></text>
</g>
<g>
<title>vfs_read (35 samples, 0.81%)</title><rect x="539.3" y="211.0" width="9.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="542.3" y="222.0"></text>
</g>
<g>
<title>fsnotify (4 samples, 0.09%)</title><rect x="540.4" y="195.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="543.4" y="206.0"></text>
</g>
<g>
<title>fsnotify_parent (2 samples, 0.05%)</title><rect x="541.5" y="195.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="544.5" y="206.0"></text>
</g>
<g>
<title>new_sync_read (20 samples, 0.46%)</title><rect x="542.0" y="195.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="545.0" y="206.0"></text>
</g>
<g>
<title>shmem_file_read_iter (16 samples, 0.37%)</title><rect x="543.1" y="179.0" width="4.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="546.1" y="190.0"></text>
</g>
<g>
<title>copy_page_to_iter (3 samples, 0.07%)</title><rect x="543.9" y="163.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="546.9" y="174.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.07%)</title><rect x="543.9" y="147.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="546.9" y="158.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (9 samples, 0.21%)</title><rect x="544.7" y="163.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="547.7" y="174.0"></text>
</g>
<g>
<title>find_lock_entry (8 samples, 0.19%)</title><rect x="545.0" y="147.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="548.0" y="158.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.12%)</title><rect x="545.6" y="131.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.6" y="142.0"></text>
</g>
<g>
<title>PageHuge (1 samples, 0.02%)</title><rect x="546.1" y="115.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="549.1" y="126.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.02%)</title><rect x="546.4" y="115.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="549.4" y="126.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.02%)</title><rect x="546.7" y="115.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="549.7" y="126.0"></text>
</g>
<g>
<title>page_mapping (1 samples, 0.02%)</title><rect x="546.9" y="131.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="549.9" y="142.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="547.2" y="163.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.2" y="174.0"></text>
</g>
<g>
<title>security_file_permission (5 samples, 0.12%)</title><rect x="547.5" y="195.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="550.5" y="206.0"></text>
</g>
<g>
<title>fsnotify_parent (4 samples, 0.09%)</title><rect x="547.8" y="179.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="550.8" y="190.0"></text>
</g>
<g>
<title>syscall_trace_enter (7 samples, 0.16%)</title><rect x="548.9" y="227.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="551.9" y="238.0"></text>
</g>
<g>
<title>__audit_syscall_entry (4 samples, 0.09%)</title><rect x="549.4" y="211.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="552.4" y="222.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="550.5" y="211.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="553.5" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (17 samples, 0.40%)</title><rect x="550.8" y="323.0" width="4.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="553.8" y="334.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (5 samples, 0.12%)</title><rect x="551.1" y="307.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.1" y="318.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.05%)</title><rect x="551.9" y="291.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.9" y="302.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.02%)</title><rect x="552.1" y="275.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="555.1" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (11 samples, 0.26%)</title><rect x="552.4" y="307.0" width="3.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.4" y="318.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="554.9" y="291.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="557.9" y="302.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="555.2" y="291.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="558.2" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (8 samples, 0.19%)</title><rect x="555.4" y="339.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.4" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (5 samples, 0.12%)</title><rect x="556.3" y="323.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="559.3" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (2 samples, 0.05%)</title><rect x="557.6" y="339.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="560.6" y="350.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (1 samples, 0.02%)</title><rect x="558.2" y="435.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="561.2" y="446.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.02%)</title><rect x="558.2" y="419.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="561.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (1 samples, 0.02%)</title><rect x="558.2" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="561.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.02%)</title><rect x="558.2" y="387.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.2" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (1 samples, 0.02%)</title><rect x="558.2" y="371.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="561.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.hasNext (3 samples, 0.07%)</title><rect x="558.5" y="531.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="561.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2,157 samples, 50.13%)</title><rect x="559.3" y="563.0" width="591.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="562.3" y="574.0">java/lang/Iterable.forEach</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl$$Lambda$134/306575228.accept (2,157 samples, 50.13%)</title><rect x="559.3" y="547.0" width="591.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="562.3" y="558.0">ru/mail/polis/dao/gogun/DAOImpl$$Lambda$134/306575228.accept</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7 (2,157 samples, 50.13%)</title><rect x="559.3" y="531.0" width="591.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="562.3" y="542.0">ru/mail/polis/dao/gogun/DAOImpl.lambda$rowIterator$7</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.iterator (2,156 samples, 50.10%)</title><rect x="559.6" y="515.0" width="591.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.6" y="526.0">ru/mail/polis/dao/gogun/SSTable.iterator</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt; (2,156 samples, 50.10%)</title><rect x="559.6" y="499.0" width="591.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="562.6" y="510.0">ru/mail/polis/dao/gogun/SSTable$1.&lt;init&gt;</text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.binarySearch (2,156 samples, 50.10%)</title><rect x="559.6" y="483.0" width="591.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.6" y="494.0">ru/mail/polis/dao/gogun/SSTable.binarySearch</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 0.46%)</title><rect x="560.6" y="467.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.6" y="478.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.14%)</title><rect x="560.9" y="451.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="563.9" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.05%)</title><rect x="561.5" y="435.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="564.5" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (2 samples, 0.05%)</title><rect x="562.0" y="435.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="565.0" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="562.6" y="451.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.6" y="462.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.21%)</title><rect x="562.8" y="451.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.8" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.base (1 samples, 0.02%)</title><rect x="563.7" y="435.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.7" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="563.9" y="435.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.9" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="564.5" y="419.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.5" y="430.0"></text>
</g>
<g>
<title>vectorizedMismatch (2 samples, 0.05%)</title><rect x="564.8" y="435.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="567.8" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="565.3" y="451.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.3" y="462.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.02%)</title><rect x="565.3" y="435.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="568.3" y="446.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="565.6" y="435.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="568.6" y="446.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="565.9" y="435.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.9" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (2,132 samples, 49.55%)</title><rect x="566.1" y="467.0" width="584.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.1" y="478.0">ru/mail/polis/dao/gogun/SSTable.key</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="567.8" y="451.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="570.8" y="462.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="567.8" y="435.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="570.8" y="446.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="567.8" y="419.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.8" y="430.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="567.8" y="403.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.8" y="414.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="567.8" y="387.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="570.8" y="398.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="567.8" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="570.8" y="382.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.02%)</title><rect x="567.8" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="570.8" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.88%)</title><rect x="568.1" y="451.0" width="10.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="571.1" y="462.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="568.6" y="435.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="571.6" y="446.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="568.6" y="419.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="571.6" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="568.6" y="403.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="571.6" y="414.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="568.6" y="387.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="571.6" y="398.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.81%)</title><rect x="568.9" y="435.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.9" y="446.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="570.8" y="419.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="573.8" y="430.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="570.8" y="403.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="573.8" y="414.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="570.8" y="387.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="573.8" y="398.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="570.8" y="371.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="573.8" y="382.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="570.8" y="355.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="573.8" y="366.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="570.8" y="339.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="573.8" y="350.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.63%)</title><rect x="571.1" y="419.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.1" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (13 samples, 0.30%)</title><rect x="574.9" y="403.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="577.9" y="414.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.16%)</title><rect x="575.7" y="387.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="578.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (7 samples, 0.16%)</title><rect x="575.7" y="371.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.7" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (6 samples, 0.14%)</title><rect x="576.0" y="355.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="579.0" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.07%)</title><rect x="577.7" y="387.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.7" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="577.9" y="371.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="580.9" y="382.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="577.9" y="355.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (1 samples, 0.02%)</title><rect x="578.5" y="451.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="581.5" y="462.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.getInt (9 samples, 0.21%)</title><rect x="578.7" y="451.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="581.7" y="462.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getIntUnaligned (8 samples, 0.19%)</title><rect x="579.0" y="435.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.0" y="446.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (4 samples, 0.09%)</title><rect x="580.1" y="419.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="583.1" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (2,077 samples, 48.27%)</title><rect x="581.2" y="451.0" width="569.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.2" y="462.0">sun/nio/ch/FileChannelImpl.read</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (2,068 samples, 48.06%)</title><rect x="583.7" y="435.0" width="567.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="586.7" y="446.0">sun/nio/ch/FileChannelImpl.readInternal</text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (1 samples, 0.02%)</title><rect x="588.3" y="419.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="591.3" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (39 samples, 0.91%)</title><rect x="588.6" y="419.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="591.6" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (39 samples, 0.91%)</title><rect x="588.6" y="403.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="591.6" y="414.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.09%)</title><rect x="594.1" y="387.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="597.1" y="398.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (15 samples, 0.35%)</title><rect x="595.2" y="387.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.2" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (11 samples, 0.26%)</title><rect x="596.3" y="371.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="599.3" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (11 samples, 0.26%)</title><rect x="596.3" y="355.0" width="3.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="599.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (30 samples, 0.70%)</title><rect x="599.3" y="419.0" width="8.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.3" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (30 samples, 0.70%)</title><rect x="599.3" y="403.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.3" y="414.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (22 samples, 0.51%)</title><rect x="601.5" y="387.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.5" y="398.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (19 samples, 0.44%)</title><rect x="602.3" y="371.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.3" y="382.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (19 samples, 0.44%)</title><rect x="602.3" y="355.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="605.3" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (1,896 samples, 44.06%)</title><rect x="607.5" y="419.0" width="520.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="610.5" y="430.0">sun/nio/ch/IOUtil.read</text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.02%)</title><rect x="610.0" y="403.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.0" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="610.0" y="387.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.0" y="398.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="610.3" y="403.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.3" y="414.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (113 samples, 2.63%)</title><rect x="610.8" y="403.0" width="31.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.8" y="414.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.09%)</title><rect x="616.6" y="387.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.6" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.05%)</title><rect x="617.1" y="371.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.1" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (87 samples, 2.02%)</title><rect x="617.7" y="387.0" width="23.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.7" y="398.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (10 samples, 0.23%)</title><rect x="619.6" y="371.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="622.6" y="382.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.14%)</title><rect x="620.7" y="355.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="623.7" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getByte (2 samples, 0.05%)</title><rect x="621.8" y="339.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="624.8" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="622.1" y="323.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="625.1" y="334.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="622.1" y="307.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="625.1" y="318.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.ix (2 samples, 0.05%)</title><rect x="622.3" y="371.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="625.3" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (5 samples, 0.12%)</title><rect x="622.9" y="371.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.9" y="382.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="624.0" y="355.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.0" y="366.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="624.0" y="339.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="627.0" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (63 samples, 1.46%)</title><rect x="624.3" y="371.0" width="17.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="627.3" y="382.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (56 samples, 1.30%)</title><rect x="626.2" y="355.0" width="15.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="629.2" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (54 samples, 1.25%)</title><rect x="626.7" y="339.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.7" y="350.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (16 samples, 0.37%)</title><rect x="626.7" y="323.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="629.7" y="334.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (12 samples, 0.28%)</title><rect x="627.0" y="307.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.0" y="318.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (3 samples, 0.07%)</title><rect x="630.3" y="307.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.3" y="318.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.05%)</title><rect x="630.6" y="291.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.6" y="302.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (38 samples, 0.88%)</title><rect x="631.1" y="323.0" width="10.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="634.1" y="334.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (33 samples, 0.77%)</title><rect x="632.5" y="307.0" width="9.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.5" y="318.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="633.6" y="291.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="636.6" y="302.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (14 samples, 0.33%)</title><rect x="633.9" y="291.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="636.9" y="302.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.14%)</title><rect x="637.7" y="291.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="640.7" y="302.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (6 samples, 0.14%)</title><rect x="639.4" y="291.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="642.4" y="302.0"></text>
</g>
<g>
<title>unsafe_arraycopy (2 samples, 0.05%)</title><rect x="641.0" y="291.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="644.0" y="302.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.isDirect (1 samples, 0.02%)</title><rect x="641.5" y="387.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.5" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="641.8" y="403.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.8" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (1,659 samples, 38.55%)</title><rect x="642.1" y="403.0" width="454.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="645.1" y="414.0">sun/nio/ch/IOUtil.readIntoNativeBuffer</text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="642.6" y="387.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.6" y="398.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.address (1 samples, 0.02%)</title><rect x="642.9" y="387.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.9" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (1,655 samples, 38.46%)</title><rect x="643.2" y="387.0" width="453.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="646.2" y="398.0">sun/nio/ch/FileDispatcherImpl.pread</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1,640 samples, 38.11%)</title><rect x="647.3" y="371.0" width="449.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="650.3" y="382.0">sun/nio/ch/FileDispatcherImpl.pread0</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_pread0 (5 samples, 0.12%)</title><rect x="658.0" y="355.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="661.0" y="366.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (33 samples, 0.77%)</title><rect x="659.4" y="355.0" width="9.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="662.4" y="366.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (22 samples, 0.51%)</title><rect x="668.4" y="355.0" width="6.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="671.4" y="366.0"></text>
</g>
<g>
<title>convertReturnVal (2 samples, 0.05%)</title><rect x="674.5" y="355.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="677.5" y="366.0"></text>
</g>
<g>
<title>fdval (6 samples, 0.14%)</title><rect x="675.0" y="355.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="678.0" y="366.0"></text>
</g>
<g>
<title>pread (1,533 samples, 35.63%)</title><rect x="676.6" y="355.0" width="420.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="679.6" y="366.0">pread</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="763.6" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="766.6" y="350.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="763.6" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="766.6" y="334.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="763.6" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="766.6" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="763.6" y="291.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="766.6" y="302.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="763.6" y="275.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="763.6" y="259.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="766.6" y="270.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="763.6" y="243.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.6" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="763.6" y="227.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="766.6" y="238.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1,215 samples, 28.24%)</title><rect x="763.9" y="339.0" width="333.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="766.9" y="350.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (1,215 samples, 28.24%)</title><rect x="763.9" y="323.0" width="333.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="766.9" y="334.0">do_syscall_64</text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="833.2" y="307.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.2" y="318.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="833.2" y="291.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="836.2" y="302.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.02%)</title><rect x="833.2" y="275.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="836.2" y="286.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (58 samples, 1.35%)</title><rect x="833.5" y="307.0" width="15.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="836.5" y="318.0"></text>
</g>
<g>
<title>__audit_syscall_exit (47 samples, 1.09%)</title><rect x="836.5" y="291.0" width="12.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="839.5" y="302.0"></text>
</g>
<g>
<title>kfree (10 samples, 0.23%)</title><rect x="843.7" y="275.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="846.7" y="286.0"></text>
</g>
<g>
<title>mntput (3 samples, 0.07%)</title><rect x="846.4" y="275.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.4" y="286.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.02%)</title><rect x="847.2" y="275.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="850.2" y="286.0"></text>
</g>
<g>
<title>unroll_tree_refs (7 samples, 0.16%)</title><rect x="847.5" y="275.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="850.5" y="286.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (844 samples, 19.61%)</title><rect x="849.4" y="307.0" width="231.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="852.4" y="318.0">__x64_sys_pread64</text>
</g>
<g>
<title>__fdget (3 samples, 0.07%)</title><rect x="861.5" y="291.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.5" y="302.0"></text>
</g>
<g>
<title>__fget_light (76 samples, 1.77%)</title><rect x="862.3" y="291.0" width="20.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="865.3" y="302.0"></text>
</g>
<g>
<title>__fget_files (67 samples, 1.56%)</title><rect x="864.8" y="275.0" width="18.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="867.8" y="286.0"></text>
</g>
<g>
<title>__rcu_read_lock (2 samples, 0.05%)</title><rect x="882.0" y="259.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="885.0" y="270.0"></text>
</g>
<g>
<title>__rcu_read_unlock (2 samples, 0.05%)</title><rect x="882.6" y="259.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="885.6" y="270.0"></text>
</g>
<g>
<title>fput_many (12 samples, 0.28%)</title><rect x="883.1" y="291.0" width="3.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.1" y="302.0"></text>
</g>
<g>
<title>vfs_read (709 samples, 16.48%)</title><rect x="886.4" y="291.0" width="194.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="889.4" y="302.0">vfs_read</text>
</g>
<g>
<title>fsnotify (38 samples, 0.88%)</title><rect x="896.9" y="275.0" width="10.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="899.9" y="286.0"></text>
</g>
<g>
<title>fsnotify_parent (47 samples, 1.09%)</title><rect x="907.3" y="275.0" width="12.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="910.3" y="286.0"></text>
</g>
<g>
<title>new_sync_read (533 samples, 12.39%)</title><rect x="920.2" y="275.0" width="146.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="923.2" y="286.0">new_sync_read</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="937.4" y="259.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="940.4" y="270.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (3 samples, 0.07%)</title><rect x="937.7" y="259.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.7" y="270.0"></text>
</g>
<g>
<title>iov_iter_init (5 samples, 0.12%)</title><rect x="938.5" y="259.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="941.5" y="270.0"></text>
</g>
<g>
<title>shmem_file_read_iter (461 samples, 10.71%)</title><rect x="939.9" y="259.0" width="126.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="942.9" y="270.0">shmem_file_read_..</text>
</g>
<g>
<title>copy_page_to_iter (101 samples, 2.35%)</title><rect x="961.0" y="243.0" width="27.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="964.0" y="254.0">c..</text>
</g>
<g>
<title>copy_user_enhanced_fast_string (15 samples, 0.35%)</title><rect x="966.8" y="227.0" width="4.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="969.8" y="238.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (65 samples, 1.51%)</title><rect x="970.9" y="227.0" width="17.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.9" y="238.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="988.4" y="211.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="991.4" y="222.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="988.4" y="195.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="991.4" y="206.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="988.4" y="179.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="991.4" y="190.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="988.4" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="991.4" y="174.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="988.4" y="147.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="991.4" y="158.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="988.4" y="131.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="991.4" y="142.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (208 samples, 4.83%)</title><rect x="988.7" y="243.0" width="57.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="991.7" y="254.0">shmem_..</text>
</g>
<g>
<title>find_lock_entry (178 samples, 4.14%)</title><rect x="996.9" y="227.0" width="48.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="999.9" y="238.0">find..</text>
</g>
<g>
<title>find_get_entry (136 samples, 3.16%)</title><rect x="1004.3" y="211.0" width="37.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1007.3" y="222.0">fin..</text>
</g>
<g>
<title>PageHuge (2 samples, 0.05%)</title><rect x="1026.0" y="195.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1029.0" y="206.0"></text>
</g>
<g>
<title>__rcu_read_lock (3 samples, 0.07%)</title><rect x="1026.6" y="195.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1029.6" y="206.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.02%)</title><rect x="1027.4" y="195.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1030.4" y="206.0"></text>
</g>
<g>
<title>xas_load (51 samples, 1.19%)</title><rect x="1027.7" y="195.0" width="13.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1030.7" y="206.0"></text>
</g>
<g>
<title>xas_start (11 samples, 0.26%)</title><rect x="1038.6" y="179.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1041.6" y="190.0"></text>
</g>
<g>
<title>page_mapping (15 samples, 0.35%)</title><rect x="1041.6" y="211.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.6" y="222.0"></text>
</g>
<g>
<title>touch_atime (54 samples, 1.25%)</title><rect x="1045.8" y="243.0" width="14.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1048.8" y="254.0"></text>
</g>
<g>
<title>atime_needs_update (41 samples, 0.95%)</title><rect x="1049.3" y="227.0" width="11.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1052.3" y="238.0"></text>
</g>
<g>
<title>current_time (26 samples, 0.60%)</title><rect x="1053.4" y="211.0" width="7.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1056.4" y="222.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (4 samples, 0.09%)</title><rect x="1059.5" y="195.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1062.5" y="206.0"></text>
</g>
<g>
<title>unlock_page (20 samples, 0.46%)</title><rect x="1060.6" y="243.0" width="5.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1063.6" y="254.0"></text>
</g>
<g>
<title>wake_up_page_bit (1 samples, 0.02%)</title><rect x="1066.0" y="243.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1069.0" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1066.0" y="227.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.0" y="238.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.07%)</title><rect x="1066.3" y="275.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1069.3" y="286.0"></text>
</g>
<g>
<title>security_file_permission (50 samples, 1.16%)</title><rect x="1067.1" y="275.0" width="13.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1070.1" y="286.0"></text>
</g>
<g>
<title>fsnotify_parent (35 samples, 0.81%)</title><rect x="1071.3" y="259.0" width="9.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1074.3" y="270.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1080.9" y="307.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1083.9" y="318.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.02%)</title><rect x="1081.1" y="307.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1084.1" y="318.0"></text>
</g>
<g>
<title>syscall_trace_enter (57 samples, 1.32%)</title><rect x="1081.4" y="307.0" width="15.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1084.4" y="318.0"></text>
</g>
<g>
<title>__audit_syscall_entry (20 samples, 0.46%)</title><rect x="1089.4" y="291.0" width="5.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1092.4" y="302.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (8 samples, 0.19%)</title><rect x="1094.8" y="291.0" width="2.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1097.8" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (90 samples, 2.09%)</title><rect x="1097.0" y="403.0" width="24.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1100.0" y="414.0">s..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (13 samples, 0.30%)</title><rect x="1109.4" y="387.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1112.4" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.09%)</title><rect x="1110.5" y="371.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1113.5" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (2 samples, 0.05%)</title><rect x="1111.0" y="355.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1114.0" y="366.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (5 samples, 0.12%)</title><rect x="1111.6" y="371.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1114.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$1.initialValue (1 samples, 0.02%)</title><rect x="1112.1" y="355.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1115.1" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (1 samples, 0.02%)</title><rect x="1112.1" y="339.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1115.1" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.05%)</title><rect x="1112.4" y="355.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1115.4" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (32 samples, 0.74%)</title><rect x="1112.9" y="387.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1115.9" y="398.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.limit (1 samples, 0.02%)</title><rect x="1120.6" y="371.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1123.6" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="1120.9" y="371.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1123.9" y="382.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="1120.9" y="355.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1123.9" y="366.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.rewind (1 samples, 0.02%)</title><rect x="1120.9" y="339.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1123.9" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.next (2 samples, 0.05%)</title><rect x="1121.2" y="371.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (21 samples, 0.49%)</title><rect x="1121.7" y="403.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1124.7" y="414.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (11 samples, 0.26%)</title><rect x="1122.8" y="387.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1125.8" y="398.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (3 samples, 0.07%)</title><rect x="1125.0" y="371.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1128.0" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerFirst (5 samples, 0.12%)</title><rect x="1125.8" y="387.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1128.8" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="1127.2" y="387.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1130.2" y="398.0"></text>
</g>
<g>
<title>java/nio/Buffer.capacity (1 samples, 0.02%)</title><rect x="1127.2" y="371.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1130.2" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (65 samples, 1.51%)</title><rect x="1127.5" y="419.0" width="17.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1130.5" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.09%)</title><rect x="1133.5" y="403.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1136.5" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="1133.8" y="387.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.8" y="398.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.02%)</title><rect x="1134.1" y="387.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.1" y="398.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="1134.1" y="371.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1137.1" y="382.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="1134.3" y="387.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.3" y="398.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1134.6" y="403.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1137.6" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1134.6" y="387.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1137.6" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (1 samples, 0.02%)</title><rect x="1134.9" y="403.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1137.9" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (37 samples, 0.86%)</title><rect x="1135.2" y="403.0" width="10.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1138.2" y="414.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.02%)</title><rect x="1145.0" y="387.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1148.0" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.remove (20 samples, 0.46%)</title><rect x="1145.3" y="419.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1148.3" y="430.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.05%)</title><rect x="1150.0" y="403.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.0" y="414.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.05%)</title><rect x="1150.0" y="387.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.0" y="398.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.02%)</title><rect x="1150.0" y="371.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1153.0" y="382.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1150.2" y="371.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1153.2" y="382.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1150.5" y="403.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.5" y="414.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1150.5" y="387.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.5" y="398.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1150.5" y="371.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.5" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.02%)</title><rect x="1150.5" y="355.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.5" y="366.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.02%)</title><rect x="1150.5" y="339.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.5" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1150.5" y="323.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1153.5" y="334.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1150.5" y="307.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1153.5" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1150.5" y="291.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1153.5" y="302.0"></text>
</g>
<g>
<title>java/util/HashSet.size (3 samples, 0.07%)</title><rect x="1150.8" y="563.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.8" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1150.8" y="547.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1153.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.02%)</title><rect x="1151.6" y="563.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1154.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.02%)</title><rect x="1151.6" y="547.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1154.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.02%)</title><rect x="1151.6" y="531.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1154.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="1151.6" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1154.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="1151.6" y="499.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1151.6" y="483.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1154.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (3 samples, 0.07%)</title><rect x="1151.9" y="563.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1154.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (3 samples, 0.07%)</title><rect x="1151.9" y="547.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1154.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.02%)</title><rect x="1151.9" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.9" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.02%)</title><rect x="1151.9" y="515.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1154.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="1151.9" y="499.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1154.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.05%)</title><rect x="1152.2" y="531.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1155.2" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.02%)</title><rect x="1152.2" y="515.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.2" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.02%)</title><rect x="1152.2" y="499.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1155.2" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="1152.4" y="515.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1155.4" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="1152.4" y="499.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1155.4" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="1152.4" y="483.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.4" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (32 samples, 0.74%)</title><rect x="1152.7" y="563.0" width="8.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1155.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (32 samples, 0.74%)</title><rect x="1152.7" y="547.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1155.7" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (32 samples, 0.74%)</title><rect x="1152.7" y="531.0" width="8.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1155.7" y="542.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (32 samples, 0.74%)</title><rect x="1152.7" y="515.0" width="8.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1155.7" y="526.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (32 samples, 0.74%)</title><rect x="1152.7" y="499.0" width="8.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.7" y="510.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (32 samples, 0.74%)</title><rect x="1152.7" y="483.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1155.7" y="494.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (32 samples, 0.74%)</title><rect x="1152.7" y="467.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1155.7" y="478.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.74%)</title><rect x="1152.7" y="451.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.7" y="462.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator$1.compare (32 samples, 0.74%)</title><rect x="1152.7" y="435.0" width="8.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.7" y="446.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.peek (31 samples, 0.72%)</title><rect x="1152.7" y="419.0" width="8.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1155.7" y="430.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (31 samples, 0.72%)</title><rect x="1152.7" y="403.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1155.7" y="414.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable$1.next (31 samples, 0.72%)</title><rect x="1152.7" y="387.0" width="8.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1155.7" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.row (31 samples, 0.72%)</title><rect x="1152.7" y="371.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1155.7" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/SSTable.key (15 samples, 0.35%)</title><rect x="1152.7" y="355.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.7" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (15 samples, 0.35%)</title><rect x="1152.7" y="339.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1155.7" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (15 samples, 0.35%)</title><rect x="1152.7" y="323.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1155.7" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (15 samples, 0.35%)</title><rect x="1152.7" y="307.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1155.7" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.33%)</title><rect x="1153.0" y="291.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.0" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.33%)</title><rect x="1153.0" y="275.0" width="3.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1156.0" y="286.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.33%)</title><rect x="1153.0" y="259.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1156.0" y="270.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="1153.0" y="243.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1156.0" y="254.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="1153.3" y="243.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1156.3" y="254.0"></text>
</g>
<g>
<title>pread (12 samples, 0.28%)</title><rect x="1153.5" y="243.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1156.5" y="254.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.26%)</title><rect x="1153.8" y="227.0" width="3.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.8" y="238.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.26%)</title><rect x="1153.8" y="211.0" width="3.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1156.8" y="222.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (9 samples, 0.21%)</title><rect x="1154.4" y="195.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1157.4" y="206.0"></text>
</g>
<g>
<title>vfs_read (8 samples, 0.19%)</title><rect x="1154.6" y="179.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.6" y="190.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.02%)</title><rect x="1154.6" y="163.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1157.6" y="174.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.02%)</title><rect x="1154.9" y="163.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1157.9" y="174.0"></text>
</g>
<g>
<title>new_sync_read (5 samples, 0.12%)</title><rect x="1155.2" y="163.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1158.2" y="174.0"></text>
</g>
<g>
<title>shmem_file_read_iter (3 samples, 0.07%)</title><rect x="1155.7" y="147.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1158.7" y="158.0"></text>
</g>
<g>
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="1156.0" y="131.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1159.0" y="142.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.02%)</title><rect x="1156.0" y="115.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1159.0" y="126.0"></text>
</g>
<g>
<title>touch_atime (1 samples, 0.02%)</title><rect x="1156.3" y="131.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1159.3" y="142.0"></text>
</g>
<g>
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="1156.3" y="115.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1159.3" y="126.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.02%)</title><rect x="1156.5" y="163.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1159.5" y="174.0"></text>
</g>
<g>
<title>fsnotify_parent (1 samples, 0.02%)</title><rect x="1156.5" y="147.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.read (16 samples, 0.37%)</title><rect x="1156.8" y="355.0" width="4.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1159.8" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.readInternal (16 samples, 0.37%)</title><rect x="1156.8" y="339.0" width="4.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1159.8" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (1 samples, 0.02%)</title><rect x="1156.8" y="323.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.8" y="334.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (1 samples, 0.02%)</title><rect x="1156.8" y="307.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1159.8" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (14 samples, 0.33%)</title><rect x="1157.1" y="323.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1160.1" y="334.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (14 samples, 0.33%)</title><rect x="1157.1" y="307.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1160.1" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread (14 samples, 0.33%)</title><rect x="1157.1" y="291.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1160.1" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.pread0 (14 samples, 0.33%)</title><rect x="1157.1" y="275.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1160.1" y="286.0"></text>
</g>
<g>
<title>pread (14 samples, 0.33%)</title><rect x="1157.1" y="259.0" width="3.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1160.1" y="270.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.33%)</title><rect x="1157.1" y="243.0" width="3.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1160.1" y="254.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.33%)</title><rect x="1157.1" y="227.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.1" y="238.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.05%)</title><rect x="1157.6" y="211.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1160.6" y="222.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="1157.9" y="195.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1160.9" y="206.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.02%)</title><rect x="1157.9" y="179.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.9" y="190.0"></text>
</g>
<g>
<title>__x64_sys_pread64 (8 samples, 0.19%)</title><rect x="1158.2" y="211.0" width="2.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1161.2" y="222.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="1158.2" y="195.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1161.2" y="206.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.02%)</title><rect x="1158.2" y="179.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1161.2" y="190.0"></text>
</g>
<g>
<title>vfs_read (7 samples, 0.16%)</title><rect x="1158.5" y="195.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1161.5" y="206.0"></text>
</g>
<g>
<title>fsnotify_parent (2 samples, 0.05%)</title><rect x="1158.7" y="179.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1161.7" y="190.0"></text>
</g>
<g>
<title>new_sync_read (4 samples, 0.09%)</title><rect x="1159.3" y="179.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.3" y="190.0"></text>
</g>
<g>
<title>shmem_file_read_iter (4 samples, 0.09%)</title><rect x="1159.3" y="163.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1162.3" y="174.0"></text>
</g>
<g>
<title>copy_page_to_iter (2 samples, 0.05%)</title><rect x="1159.6" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1162.6" y="158.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="1159.8" y="131.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1162.8" y="142.0"></text>
</g>
<g>
<title>shmem_getpage_gfp (1 samples, 0.02%)</title><rect x="1160.1" y="147.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1163.1" y="158.0"></text>
</g>
<g>
<title>find_lock_entry (1 samples, 0.02%)</title><rect x="1160.1" y="131.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1163.1" y="142.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.05%)</title><rect x="1160.4" y="211.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1163.4" y="222.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (1 samples, 0.02%)</title><rect x="1160.9" y="323.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1163.9" y="334.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$128/1595776295.compare (1 samples, 0.02%)</title><rect x="1161.2" y="419.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.2" y="430.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$thenComparing$36697e65$1 (1 samples, 0.02%)</title><rect x="1161.2" y="403.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.2" y="414.0"></text>
</g>
<g>
<title>java/util/Comparator$$Lambda$126/867201277.compare (1 samples, 0.02%)</title><rect x="1161.2" y="387.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1164.2" y="398.0"></text>
</g>
<g>
<title>java/util/Comparator.lambda$comparing$77a9974f$1 (1 samples, 0.02%)</title><rect x="1161.2" y="371.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.2" y="382.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row$$Lambda$125/2050677465.apply (1 samples, 0.02%)</title><rect x="1161.2" y="355.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.2" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Row.getKey (1 samples, 0.02%)</title><rect x="1161.2" y="339.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.2" y="350.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1161.2" y="323.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1164.2" y="334.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1161.2" y="307.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.2" y="318.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1161.2" y="291.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1164.2" y="302.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1161.2" y="275.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1164.2" y="286.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.iterator (7 samples, 0.16%)</title><rect x="1161.5" y="563.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1164.5" y="574.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.transform (1 samples, 0.02%)</title><rect x="1161.5" y="547.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1164.5" y="558.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1161.5" y="531.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1164.5" y="542.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1161.5" y="515.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.5" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$EntrySet.iterator (6 samples, 0.14%)</title><rect x="1161.8" y="547.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.8" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapEntryIterator.&lt;init&gt; (6 samples, 0.14%)</title><rect x="1161.8" y="531.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.14%)</title><rect x="1161.8" y="515.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1164.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.14%)</title><rect x="1161.8" y="499.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1164.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.14%)</title><rect x="1161.8" y="483.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1164.8" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (6 samples, 0.14%)</title><rect x="1161.8" y="467.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1164.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.02%)</title><rect x="1163.1" y="451.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.1" y="462.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1163.1" y="435.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1166.1" y="446.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.02%)</title><rect x="1163.1" y="419.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1166.1" y="430.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1163.1" y="403.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.1" y="414.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.02%)</title><rect x="1163.1" y="387.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1166.1" y="398.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.getData (1 samples, 0.02%)</title><rect x="1163.4" y="595.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1166.4" y="606.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="1163.4" y="579.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.4" y="590.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1163.4" y="563.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.4" y="574.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1163.4" y="547.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1166.4" y="558.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1163.4" y="531.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1166.4" y="542.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1163.4" y="515.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1166.4" y="526.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1163.4" y="499.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1166.4" y="510.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="1163.4" y="483.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1166.4" y="494.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="1163.4" y="467.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1166.4" y="478.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getArray (1 samples, 0.02%)</title><rect x="1163.7" y="595.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1166.7" y="606.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (95 samples, 2.21%)</title><rect x="1163.9" y="755.0" width="26.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1166.9" y="766.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.02%)</title><rect x="1163.9" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1166.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (36 samples, 0.84%)</title><rect x="1164.2" y="739.0" width="9.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1164.2" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1167.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.05%)</title><rect x="1164.2" y="707.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1167.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (34 samples, 0.79%)</title><rect x="1164.8" y="723.0" width="9.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1167.8" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="1165.0" y="707.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1168.0" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.05%)</title><rect x="1165.3" y="707.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1168.3" y="718.0"></text>
</g>
<g>
<title>epoll_wait (30 samples, 0.70%)</title><rect x="1165.9" y="707.0" width="8.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1168.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.60%)</title><rect x="1167.0" y="691.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 0.60%)</title><rect x="1167.0" y="675.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.0" y="686.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.02%)</title><rect x="1167.0" y="659.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1170.0" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="1167.0" y="643.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1170.0" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (25 samples, 0.58%)</title><rect x="1167.2" y="659.0" width="6.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1170.2" y="670.0"></text>
</g>
<g>
<title>do_epoll_wait (25 samples, 0.58%)</title><rect x="1167.2" y="643.0" width="6.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.2" y="654.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.05%)</title><rect x="1167.8" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1170.8" y="638.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (17 samples, 0.40%)</title><rect x="1168.3" y="627.0" width="4.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.3" y="638.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.02%)</title><rect x="1168.3" y="611.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1171.3" y="622.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (4 samples, 0.09%)</title><rect x="1168.6" y="611.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1171.6" y="622.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.26%)</title><rect x="1169.7" y="611.0" width="3.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1172.7" y="622.0"></text>
</g>
<g>
<title>ep_item_poll (9 samples, 0.21%)</title><rect x="1170.3" y="595.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1173.3" y="606.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.19%)</title><rect x="1170.5" y="579.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1173.5" y="590.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.07%)</title><rect x="1171.9" y="563.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1174.9" y="574.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="1172.7" y="611.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1175.7" y="622.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 0.09%)</title><rect x="1173.0" y="627.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1176.0" y="638.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.09%)</title><rect x="1173.0" y="611.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1176.0" y="622.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.05%)</title><rect x="1173.5" y="595.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1176.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1173.8" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1176.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.02%)</title><rect x="1173.8" y="563.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1176.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (58 samples, 1.35%)</title><rect x="1174.1" y="739.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1177.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (56 samples, 1.30%)</title><rect x="1174.6" y="723.0" width="15.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1177.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34 samples, 0.79%)</title><rect x="1174.9" y="707.0" width="9.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1177.9" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 0.65%)</title><rect x="1174.9" y="691.0" width="7.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1177.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 0.65%)</title><rect x="1174.9" y="675.0" width="7.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1177.9" y="686.0"></text>
</g>
<g>
<title>RequestHandler1_handleHttpPath.handleRequest (27 samples, 0.63%)</title><rect x="1174.9" y="659.0" width="7.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1177.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (1 samples, 0.02%)</title><rect x="1174.9" y="643.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1177.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.02%)</title><rect x="1174.9" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1177.9" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="1174.9" y="611.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (26 samples, 0.60%)</title><rect x="1175.2" y="643.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1178.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (26 samples, 0.60%)</title><rect x="1175.2" y="627.0" width="7.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1178.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (24 samples, 0.56%)</title><rect x="1175.7" y="611.0" width="6.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (23 samples, 0.53%)</title><rect x="1175.7" y="595.0" width="6.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.7" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (23 samples, 0.53%)</title><rect x="1175.7" y="579.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (23 samples, 0.53%)</title><rect x="1175.7" y="563.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.7" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (23 samples, 0.53%)</title><rect x="1175.7" y="547.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1178.7" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.53%)</title><rect x="1175.7" y="531.0" width="6.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1178.7" y="542.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.53%)</title><rect x="1175.7" y="515.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.7" y="526.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.14%)</title><rect x="1175.7" y="499.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1178.7" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="1176.0" y="483.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.0" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1176.6" y="483.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1179.6" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="1176.8" y="483.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.8" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1177.1" y="483.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1180.1" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (16 samples, 0.37%)</title><rect x="1177.4" y="499.0" width="4.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1180.4" y="510.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.35%)</title><rect x="1177.7" y="483.0" width="4.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1180.7" y="494.0"></text>
</g>
<g>
<title>do_syscall_64 (15 samples, 0.35%)</title><rect x="1177.7" y="467.0" width="4.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1180.7" y="478.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.33%)</title><rect x="1177.9" y="451.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.9" y="462.0"></text>
</g>
<g>
<title>do_futex (13 samples, 0.30%)</title><rect x="1178.2" y="435.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1181.2" y="446.0"></text>
</g>
<g>
<title>futex_wake (13 samples, 0.30%)</title><rect x="1178.2" y="419.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1181.2" y="430.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.05%)</title><rect x="1178.5" y="403.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1181.5" y="414.0"></text>
</g>
<g>
<title>wake_up_q (10 samples, 0.23%)</title><rect x="1179.0" y="403.0" width="2.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.0" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (10 samples, 0.23%)</title><rect x="1179.0" y="387.0" width="2.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1182.0" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.23%)</title><rect x="1179.0" y="371.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1182.0" y="382.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1181.8" y="499.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1184.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="1182.0" y="595.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1185.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="1182.3" y="659.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1185.3" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="1182.3" y="643.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1185.3" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="1182.3" y="627.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1185.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.05%)</title><rect x="1182.6" y="691.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1185.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1182.6" y="675.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1185.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1182.6" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1185.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="1182.6" y="643.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1185.6" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.05%)</title><rect x="1182.6" y="627.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1183.1" y="691.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1186.1" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="1183.1" y="675.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1186.1" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1183.1" y="659.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1186.1" y="670.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1183.1" y="643.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1186.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1183.1" y="627.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1186.1" y="638.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1183.1" y="611.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1186.1" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="1183.4" y="691.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1186.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.05%)</title><rect x="1183.7" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1186.7" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="1183.7" y="659.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.7" y="670.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1183.7" y="643.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.7" y="654.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1183.7" y="627.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1183.7" y="611.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.7" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1183.7" y="595.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.7" y="606.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.02%)</title><rect x="1183.7" y="579.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.7" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.02%)</title><rect x="1184.0" y="659.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.0" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.02%)</title><rect x="1184.0" y="643.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.0" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="1184.0" y="627.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.0" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="1184.0" y="611.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.0" y="622.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="1184.0" y="595.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.0" y="606.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.02%)</title><rect x="1184.0" y="579.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (21 samples, 0.49%)</title><rect x="1184.2" y="707.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (21 samples, 0.49%)</title><rect x="1184.2" y="691.0" width="5.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1187.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.12%)</title><rect x="1184.8" y="675.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1187.8" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1185.1" y="659.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.1" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="1185.3" y="659.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.02%)</title><rect x="1185.6" y="643.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.6" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="1185.9" y="643.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1188.9" y="654.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="1186.2" y="675.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.2" y="686.0"></text>
</g>
<g>
<title>__libc_recv (13 samples, 0.30%)</title><rect x="1186.4" y="675.0" width="3.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1189.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.28%)</title><rect x="1186.7" y="659.0" width="3.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1189.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.28%)</title><rect x="1186.7" y="643.0" width="3.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1189.7" y="654.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.02%)</title><rect x="1187.8" y="627.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1190.8" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.02%)</title><rect x="1187.8" y="611.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1190.8" y="622.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (7 samples, 0.16%)</title><rect x="1188.1" y="627.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1191.1" y="638.0"></text>
</g>
<g>
<title>__sys_recvfrom (7 samples, 0.16%)</title><rect x="1188.1" y="611.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.1" y="622.0"></text>
</g>
<g>
<title>inet6_recvmsg (5 samples, 0.12%)</title><rect x="1188.1" y="595.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1191.1" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (5 samples, 0.12%)</title><rect x="1188.1" y="579.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.1" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="1188.6" y="563.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1191.6" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="1188.6" y="547.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1191.6" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="1188.9" y="563.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.9" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="1188.9" y="547.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1191.9" y="558.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="1188.9" y="531.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.9" y="542.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="1188.9" y="515.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1191.9" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="1189.2" y="563.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1192.2" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="1189.5" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1192.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.05%)</title><rect x="1189.5" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1192.5" y="590.0"></text>
</g>
</g>
</svg>
