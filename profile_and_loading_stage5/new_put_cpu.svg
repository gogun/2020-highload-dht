<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822"
     xmlns="http://www.w3.org/2000/svg">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="805"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="805"> </text>
<g id="frames">
<g>
<title>all (2,996 samples, 100.00%)</title><rect x="10.0" y="771.0" width="1180.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="782.0">all</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.10%)</title><rect x="10.0" y="755.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.10%)</title><rect x="10.0" y="739.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.07%)</title><rect x="10.4" y="723.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="13.4" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="10.4" y="707.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="13.4" y="718.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) [clone .part.0] (1 samples, 0.03%)</title><rect x="10.8" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="13.8" y="718.0"></text>
</g>
<g>
<title>[no_Java_frame] (1 samples, 0.03%)</title><rect x="11.2" y="755.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="14.2" y="766.0"></text>
</g>
<g>
<title>[not_walkable_Java] (13 samples, 0.43%)</title><rect x="11.6" y="755.0" width="5.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="14.6" y="766.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (12 samples, 0.40%)</title><rect x="11.6" y="739.0" width="4.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.6" y="750.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="11.6" y="723.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.6" y="734.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (11 samples, 0.37%)</title><rect x="12.0" y="723.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.0" y="734.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (6 samples, 0.20%)</title><rect x="12.0" y="707.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.0" y="718.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.03%)</title><rect x="12.4" y="691.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="15.4" y="702.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.07%)</title><rect x="12.8" y="691.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="15.8" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="13.5" y="691.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.5" y="702.0"></text>
</g>
<g>
<title>asm_sysvec_irq_work (1 samples, 0.03%)</title><rect x="13.9" y="691.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="16.9" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="13.9" y="675.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="16.9" y="686.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="13.9" y="659.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="16.9" y="670.0"></text>
</g>
<g>
<title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="13.9" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="16.9" y="654.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.03%)</title><rect x="13.9" y="627.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="16.9" y="638.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="13.9" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="16.9" y="622.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="13.9" y="595.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="16.9" y="606.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="13.9" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="16.9" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="13.9" y="563.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="16.9" y="574.0"></text>
</g>
<g>
<title>tasklet_action_common.constprop.0 (1 samples, 0.03%)</title><rect x="13.9" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="16.9" y="558.0"></text>
</g>
<g>
<title>execlists_submission_tasklet?[i915] (1 samples, 0.03%)</title><rect x="13.9" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="16.9" y="542.0"></text>
</g>
<g>
<title>process_csb?[i915] (1 samples, 0.03%)</title><rect x="13.9" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="16.9" y="526.0"></text>
</g>
<g>
<title>execlists_schedule_out?[i915] (1 samples, 0.03%)</title><rect x="13.9" y="499.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="16.9" y="510.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.17%)</title><rect x="14.3" y="707.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="17.3" y="718.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.03%)</title><rect x="14.3" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="17.3" y="702.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (2 samples, 0.07%)</title><rect x="14.7" y="691.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.7" y="702.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.07%)</title><rect x="15.5" y="691.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.5" y="702.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="15.5" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="18.5" y="686.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.03%)</title><rect x="15.9" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="18.9" y="686.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.03%)</title><rect x="16.3" y="739.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.3" y="750.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="16.3" y="723.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="19.3" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="16.3" y="707.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.3" y="718.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="16.3" y="691.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.3" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="16.3" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="19.3" y="686.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="16.3" y="659.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="19.3" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="16.3" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="19.3" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="16.3" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="19.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.13%)</title><rect x="16.7" y="755.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="19.7" y="766.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.07%)</title><rect x="16.7" y="739.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="19.7" y="750.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="17.5" y="739.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="20.5" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="17.5" y="723.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="20.5" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="17.5" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="20.5" y="718.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="17.5" y="691.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="20.5" y="702.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="17.5" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="20.5" y="686.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="17.9" y="739.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="20.9" y="750.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 0.20%)</title><rect x="18.3" y="755.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.3" y="766.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="18.3" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="21.3" y="750.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (4 samples, 0.13%)</title><rect x="18.7" y="739.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="21.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="20.2" y="739.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="23.2" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="20.2" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.2" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="20.2" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="23.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="20.2" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="23.2" y="702.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="20.2" y="675.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="23.2" y="686.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="20.2" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="23.2" y="670.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="20.2" y="643.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="23.2" y="654.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,858 samples, 62.02%)</title><rect x="20.6" y="755.0" width="731.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.6" y="766.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,856 samples, 61.95%)</title><rect x="20.6" y="739.0" width="731.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.6" y="750.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,856 samples, 61.95%)</title><rect x="20.6" y="723.0" width="731.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.6" y="734.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (7 samples, 0.23%)</title><rect x="22.2" y="707.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.23%)</title><rect x="22.2" y="691.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.23%)</title><rect x="22.2" y="675.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.23%)</title><rect x="22.2" y="659.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="25.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (304 samples, 10.15%)</title><rect x="25.0" y="707.0" width="119.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="28.0" y="718.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (303 samples, 10.11%)</title><rect x="25.4" y="691.0" width="119.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="28.4" y="702.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (219 samples, 7.31%)</title><rect x="26.9" y="675.0" width="86.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="29.9" y="686.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.03%)</title><rect x="28.1" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.1" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="28.1" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="31.1" y="654.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="28.1" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="31.1" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="28.1" y="611.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.1" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="28.1" y="595.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="31.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (1 samples, 0.03%)</title><rect x="28.5" y="659.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="31.5" y="670.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.03%)</title><rect x="28.5" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="28.5" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="31.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (12 samples, 0.40%)</title><rect x="28.9" y="659.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="31.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.33%)</title><rect x="28.9" y="643.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.33%)</title><rect x="28.9" y="627.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="31.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="32.4" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="32.4" y="595.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="35.4" y="606.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="32.4" y="579.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="35.4" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="32.4" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.4" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="32.4" y="547.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.4" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="32.4" y="531.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="35.4" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="32.4" y="515.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.4" y="526.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="32.4" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.4" y="510.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="32.4" y="483.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="35.4" y="494.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="32.4" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.4" y="478.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="32.4" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="35.4" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.07%)</title><rect x="32.8" y="643.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="35.8" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.07%)</title><rect x="32.8" y="627.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="35.8" y="638.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (2 samples, 0.07%)</title><rect x="32.8" y="611.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="35.8" y="622.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (2 samples, 0.07%)</title><rect x="32.8" y="595.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="35.8" y="606.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (2 samples, 0.07%)</title><rect x="32.8" y="579.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="35.8" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (34 samples, 1.13%)</title><rect x="33.6" y="659.0" width="13.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="36.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (34 samples, 1.13%)</title><rect x="33.6" y="643.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="36.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (28 samples, 0.93%)</title><rect x="36.0" y="627.0" width="11.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="39.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (27 samples, 0.90%)</title><rect x="36.4" y="611.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="39.4" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.07%)</title><rect x="37.2" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="40.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.77%)</title><rect x="38.0" y="595.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="41.0" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.13%)</title><rect x="38.0" y="579.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="41.0" y="590.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="38.0" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="41.0" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="38.4" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="41.4" y="574.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="38.8" y="563.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="41.8" y="574.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="39.1" y="563.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="42.1" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (18 samples, 0.60%)</title><rect x="39.5" y="579.0" width="7.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="42.5" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.57%)</title><rect x="39.9" y="563.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="42.9" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.57%)</title><rect x="39.9" y="547.0" width="6.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="42.9" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.53%)</title><rect x="40.3" y="531.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="43.3" y="542.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.53%)</title><rect x="40.3" y="515.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="43.3" y="526.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.53%)</title><rect x="40.3" y="499.0" width="6.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="43.3" y="510.0"></text>
</g>
<g>
<title>wake_up_q (16 samples, 0.53%)</title><rect x="40.3" y="483.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="43.3" y="494.0"></text>
</g>
<g>
<title>try_to_wake_up (16 samples, 0.53%)</title><rect x="40.3" y="467.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.3" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (16 samples, 0.53%)</title><rect x="40.3" y="451.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="43.3" y="462.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="46.6" y="579.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="49.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.07%)</title><rect x="47.0" y="659.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="50.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (2 samples, 0.07%)</title><rect x="47.0" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="50.0" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.07%)</title><rect x="47.0" y="627.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="50.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (165 samples, 5.51%)</title><rect x="47.8" y="659.0" width="65.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="50.8" y="670.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (163 samples, 5.44%)</title><rect x="48.6" y="643.0" width="64.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="51.6" y="654.0">jdk/int..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="50.6" y="627.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="53.6" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.07%)</title><rect x="51.0" y="627.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="54.0" y="638.0"></text>
</g>
<g>
<title>Unsafe_Park (53 samples, 1.77%)</title><rect x="51.7" y="627.0" width="20.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="54.7" y="638.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.07%)</title><rect x="52.9" y="611.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="55.9" y="622.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 0.50%)</title><rect x="53.7" y="611.0" width="5.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="56.7" y="622.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (4 samples, 0.13%)</title><rect x="54.5" y="595.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="57.5" y="606.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.17%)</title><rect x="56.1" y="595.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="59.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.13%)</title><rect x="58.1" y="595.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="61.1" y="606.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="59.6" y="611.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="62.6" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.10%)</title><rect x="60.0" y="611.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="63.0" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="61.2" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="64.2" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="61.6" y="611.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="64.6" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.07%)</title><rect x="62.0" y="611.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="65.0" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.10%)</title><rect x="62.8" y="611.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="65.8" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (17 samples, 0.57%)</title><rect x="64.0" y="611.0" width="6.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="67.0" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.40%)</title><rect x="65.9" y="595.0" width="4.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.40%)</title><rect x="65.9" y="579.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="68.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.20%)</title><rect x="67.5" y="563.0" width="2.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="70.5" y="574.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.13%)</title><rect x="68.3" y="547.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="71.3" y="558.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.13%)</title><rect x="68.3" y="531.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="71.3" y="542.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="69.9" y="563.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="72.9" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="70.3" y="547.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="73.3" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="70.7" y="611.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.7" y="622.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="71.4" y="611.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="74.4" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="71.8" y="611.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="74.8" y="622.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="72.2" y="611.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="75.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 3.27%)</title><rect x="72.6" y="627.0" width="38.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="75.6" y="638.0">[un..</text>
</g>
<g>
<title>__condvar_dec_grefs (2 samples, 0.07%)</title><rect x="72.6" y="611.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="75.6" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (8 samples, 0.27%)</title><rect x="73.4" y="611.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="76.4" y="622.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="76.6" y="611.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="79.6" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.07%)</title><rect x="77.0" y="611.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="80.0" y="622.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (2 samples, 0.07%)</title><rect x="77.7" y="611.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="80.7" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (83 samples, 2.77%)</title><rect x="78.5" y="611.0" width="32.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="81.5" y="622.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 2.07%)</title><rect x="86.8" y="595.0" width="24.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="89.8" y="606.0">e..</text>
</g>
<g>
<title>do_syscall_64 (62 samples, 2.07%)</title><rect x="86.8" y="579.0" width="24.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="89.8" y="590.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (8 samples, 0.27%)</title><rect x="88.8" y="563.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.8" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_exit (5 samples, 0.17%)</title><rect x="90.0" y="547.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="93.0" y="558.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="91.1" y="531.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="94.1" y="542.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.03%)</title><rect x="91.5" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.5" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 1.50%)</title><rect x="91.9" y="563.0" width="17.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="94.9" y="574.0"></text>
</g>
<g>
<title>do_futex (42 samples, 1.40%)</title><rect x="93.1" y="547.0" width="16.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="96.1" y="558.0"></text>
</g>
<g>
<title>futex_wait (42 samples, 1.40%)</title><rect x="93.1" y="531.0" width="16.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="96.1" y="542.0"></text>
</g>
<g>
<title>futex_wait_queue_me (29 samples, 0.97%)</title><rect x="95.1" y="515.0" width="11.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="98.1" y="526.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.07%)</title><rect x="95.9" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="98.9" y="510.0"></text>
</g>
<g>
<title>schedule (25 samples, 0.83%)</title><rect x="96.6" y="499.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="99.6" y="510.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.80%)</title><rect x="97.0" y="483.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.0" y="494.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.60%)</title><rect x="99.4" y="467.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="102.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (14 samples, 0.47%)</title><rect x="101.0" y="451.0" width="5.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="104.0" y="462.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="105.3" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="108.3" y="446.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="105.3" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="108.3" y="430.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="105.3" y="403.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.3" y="414.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="105.3" y="387.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="108.3" y="398.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="105.3" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.3" y="382.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="105.3" y="355.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.3" y="366.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="105.3" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="108.3" y="350.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="105.3" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="108.3" y="334.0"></text>
</g>
<g>
<title>preempt_count_sub (2 samples, 0.07%)</title><rect x="105.7" y="435.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="108.7" y="446.0"></text>
</g>
<g>
<title>futex_wait_setup (8 samples, 0.27%)</title><rect x="106.5" y="515.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="109.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="107.3" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.3" y="510.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="107.3" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="110.3" y="494.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="107.3" y="467.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="110.3" y="478.0"></text>
</g>
<g>
<title>get_futex_value_locked (2 samples, 0.07%)</title><rect x="107.7" y="499.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="110.7" y="510.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.10%)</title><rect x="108.5" y="499.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="111.5" y="510.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.13%)</title><rect x="109.6" y="563.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="112.6" y="574.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="110.4" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="113.4" y="558.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="110.8" y="547.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="113.8" y="558.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="111.2" y="627.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="114.2" y="638.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.10%)</title><rect x="111.6" y="627.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="114.6" y="638.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="112.4" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.4" y="622.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="112.4" y="595.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.4" y="606.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="112.4" y="579.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="115.4" y="590.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="112.4" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="115.4" y="574.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="112.4" y="547.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="115.4" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="112.4" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="115.4" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="112.4" y="515.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="115.4" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="112.4" y="499.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="115.4" y="510.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="112.8" y="659.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.10%)</title><rect x="113.2" y="675.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.10%)</title><rect x="113.2" y="659.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.10%)</title><rect x="113.2" y="643.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.07%)</title><rect x="113.2" y="627.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.07%)</title><rect x="113.2" y="611.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.07%)</title><rect x="113.2" y="595.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="116.2" y="606.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="113.2" y="579.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="116.2" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="113.2" y="563.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="116.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="113.6" y="579.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="116.6" y="590.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="113.6" y="563.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="116.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="114.0" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="114.0" y="611.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (1 samples, 0.03%)</title><rect x="114.0" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="117.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (76 samples, 2.54%)</title><rect x="114.4" y="675.0" width="29.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.4" y="686.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (76 samples, 2.54%)</title><rect x="114.4" y="659.0" width="29.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="117.4" y="670.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (76 samples, 2.54%)</title><rect x="114.4" y="643.0" width="29.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.4" y="654.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (76 samples, 2.54%)</title><rect x="114.4" y="627.0" width="29.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.4" y="638.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.07%)</title><rect x="118.7" y="611.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="121.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (63 samples, 2.10%)</title><rect x="119.5" y="611.0" width="24.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.5" y="622.0">j..</text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.30%)</title><rect x="119.5" y="595.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="122.5" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.07%)</title><rect x="119.9" y="579.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="122.9" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="120.7" y="579.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="123.7" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="121.5" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="124.5" y="590.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.07%)</title><rect x="121.9" y="579.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="124.9" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="122.6" y="579.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="125.6" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (54 samples, 1.80%)</title><rect x="123.0" y="595.0" width="21.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="126.0" y="606.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.64%)</title><rect x="125.0" y="579.0" width="19.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="128.0" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (49 samples, 1.64%)</title><rect x="125.0" y="563.0" width="19.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="128.0" y="574.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="126.6" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="129.6" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="126.6" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="129.6" y="542.0"></text>
</g>
<g>
<title>__x64_sys_futex (44 samples, 1.47%)</title><rect x="127.0" y="547.0" width="17.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="130.0" y="558.0"></text>
</g>
<g>
<title>do_futex (44 samples, 1.47%)</title><rect x="127.0" y="531.0" width="17.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="130.0" y="542.0"></text>
</g>
<g>
<title>futex_wake (44 samples, 1.47%)</title><rect x="127.0" y="515.0" width="17.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="130.0" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.07%)</title><rect x="128.6" y="499.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="131.6" y="510.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="128.9" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="131.9" y="494.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="128.9" y="467.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="131.9" y="478.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.07%)</title><rect x="129.3" y="499.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.3" y="510.0"></text>
</g>
<g>
<title>wake_q_add_safe (1 samples, 0.03%)</title><rect x="130.1" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="133.1" y="510.0"></text>
</g>
<g>
<title>wake_up_q (35 samples, 1.17%)</title><rect x="130.5" y="499.0" width="13.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="133.5" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 1.17%)</title><rect x="130.5" y="483.0" width="13.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="133.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 1.17%)</title><rect x="130.5" y="467.0" width="13.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="133.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="144.3" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$78/1542953385.run (1,538 samples, 51.34%)</title><rect x="144.7" y="707.0" width="605.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.7" y="718.0">ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$78/1542953385.run</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1 (1,538 samples, 51.34%)</title><rect x="144.7" y="691.0" width="605.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.7" y="702.0">ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$execute$1</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (1 samples, 0.03%)</title><rect x="144.7" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="147.7" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (1 samples, 0.03%)</title><rect x="144.7" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="144.7" y="643.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="147.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="144.7" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="147.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="144.7" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="147.7" y="622.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.03%)</title><rect x="144.7" y="595.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="147.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (1,537 samples, 51.30%)</title><rect x="145.1" y="675.0" width="605.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="148.1" y="686.0">ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="151.0" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="154.0" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="151.0" y="643.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="154.0" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="151.0" y="627.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="154.0" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="151.0" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="154.0" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="151.0" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="154.0" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="151.0" y="579.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="154.0" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.07%)</title><rect x="151.4" y="659.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.4" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.07%)</title><rect x="151.4" y="643.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.4" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.07%)</title><rect x="151.4" y="627.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.4" y="638.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.07%)</title><rect x="151.4" y="611.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="154.4" y="622.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.07%)</title><rect x="151.4" y="595.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.4" y="606.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (7 samples, 0.23%)</title><rect x="152.2" y="659.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.2" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.03%)</title><rect x="153.0" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="156.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.13%)</title><rect x="153.4" y="643.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.4" y="654.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="154.9" y="659.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (11 samples, 0.37%)</title><rect x="155.3" y="659.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.27%)</title><rect x="156.1" y="643.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="159.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.27%)</title><rect x="156.1" y="627.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="159.3" y="643.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.3" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="159.3" y="627.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.3" y="638.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="159.3" y="611.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="162.3" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="159.7" y="659.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.7" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="160.1" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.1" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="160.8" y="659.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="163.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.proxy (716 samples, 23.90%)</title><rect x="161.2" y="659.0" width="282.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.2" y="670.0">ru/mail/polis/service/gogun/AsyncServi..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="163.6" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="166.6" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/825962150.invoke (1 samples, 0.03%)</title><rect x="163.6" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="166.6" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/985655350.invoke (1 samples, 0.03%)</title><rect x="163.6" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="166.6" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="163.6" y="595.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="163.6" y="579.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="166.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="163.6" y="563.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="166.6" y="574.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.17%)</title><rect x="164.0" y="643.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.0" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.17%)</title><rect x="164.0" y="627.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.17%)</title><rect x="164.0" y="611.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="167.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.13%)</title><rect x="164.4" y="595.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="167.4" y="606.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.10%)</title><rect x="164.8" y="579.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="167.8" y="590.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="166.0" y="643.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="169.0" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (638 samples, 21.30%)</title><rect x="166.4" y="643.0" width="251.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="169.4" y="654.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (638 samples, 21.30%)</title><rect x="166.4" y="627.0" width="251.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="169.4" y="638.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (164 samples, 5.47%)</title><rect x="168.7" y="611.0" width="64.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="171.7" y="622.0">one/nio..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.10%)</title><rect x="173.5" y="595.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="176.5" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.10%)</title><rect x="173.5" y="579.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="176.5" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.10%)</title><rect x="173.5" y="563.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="176.5" y="574.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="173.5" y="547.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="176.5" y="558.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.03%)</title><rect x="173.5" y="531.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="176.5" y="542.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.03%)</title><rect x="173.8" y="547.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="176.8" y="558.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.03%)</title><rect x="174.2" y="547.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="177.2" y="558.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (148 samples, 4.94%)</title><rect x="174.6" y="595.0" width="58.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="177.6" y="606.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.33%)</title><rect x="177.4" y="579.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="180.4" y="590.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.07%)</title><rect x="177.8" y="563.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="180.8" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.23%)</title><rect x="178.6" y="563.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="181.6" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.07%)</title><rect x="180.5" y="547.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="183.5" y="558.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.10%)</title><rect x="181.3" y="579.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="184.3" y="590.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="182.5" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="185.5" y="590.0"></text>
</g>
<g>
<title>__libc_recv (127 samples, 4.24%)</title><rect x="182.9" y="579.0" width="50.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="185.9" y="590.0">__lib..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (112 samples, 3.74%)</title><rect x="188.8" y="563.0" width="44.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="191.8" y="574.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (112 samples, 3.74%)</title><rect x="188.8" y="547.0" width="44.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.8" y="558.0">do_s..</text>
</g>
<g>
<title>__syscall_return_slowpath (3 samples, 0.10%)</title><rect x="191.6" y="531.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="194.6" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_exit (3 samples, 0.10%)</title><rect x="191.6" y="515.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="194.6" y="526.0"></text>
</g>
<g>
<title>path_put (1 samples, 0.03%)</title><rect x="192.4" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="195.4" y="510.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (101 samples, 3.37%)</title><rect x="192.8" y="531.0" width="39.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="195.8" y="542.0">__x..</text>
</g>
<g>
<title>__sys_recvfrom (99 samples, 3.30%)</title><rect x="193.5" y="515.0" width="39.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="196.5" y="526.0">__s..</text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="194.3" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.3" y="510.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="194.7" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="197.7" y="510.0"></text>
</g>
<g>
<title>inet6_recvmsg (93 samples, 3.10%)</title><rect x="195.1" y="499.0" width="36.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="198.1" y="510.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (91 samples, 3.04%)</title><rect x="195.9" y="483.0" width="35.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="198.9" y="494.0">tcp..</text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.10%)</title><rect x="197.9" y="467.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="200.9" y="478.0"></text>
</g>
<g>
<title>skb_release_head_state (3 samples, 0.10%)</title><rect x="197.9" y="451.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.9" y="462.0"></text>
</g>
<g>
<title>dst_release (3 samples, 0.10%)</title><rect x="197.9" y="435.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="200.9" y="446.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.0 (1 samples, 0.03%)</title><rect x="199.1" y="467.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="202.1" y="478.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.03%)</title><rect x="199.1" y="451.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="202.1" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.03%)</title><rect x="199.1" y="435.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="202.1" y="446.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (22 samples, 0.73%)</title><rect x="199.4" y="467.0" width="8.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="202.4" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (22 samples, 0.73%)</title><rect x="199.4" y="451.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.4" y="462.0"></text>
</g>
<g>
<title>ip_output (22 samples, 0.73%)</title><rect x="199.4" y="435.0" width="8.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="202.4" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.07%)</title><rect x="199.4" y="419.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="202.4" y="430.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.07%)</title><rect x="199.4" y="403.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="202.4" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (19 samples, 0.63%)</title><rect x="200.2" y="419.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="203.2" y="430.0"></text>
</g>
<g>
<title>__dev_queue_xmit (2 samples, 0.07%)</title><rect x="201.0" y="403.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="204.0" y="414.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="201.4" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.4" y="398.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="201.4" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.4" y="382.0"></text>
</g>
<g>
<title>__sock_wfree (1 samples, 0.03%)</title><rect x="201.4" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="204.4" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (15 samples, 0.50%)</title><rect x="201.8" y="403.0" width="5.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="204.8" y="414.0"></text>
</g>
<g>
<title>do_softirq (14 samples, 0.47%)</title><rect x="202.2" y="387.0" width="5.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="205.2" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (14 samples, 0.47%)</title><rect x="202.2" y="371.0" width="5.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.2" y="382.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (14 samples, 0.47%)</title><rect x="202.2" y="355.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="205.2" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (14 samples, 0.47%)</title><rect x="202.2" y="339.0" width="5.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="205.2" y="350.0"></text>
</g>
<g>
<title>net_rx_action (12 samples, 0.40%)</title><rect x="203.0" y="323.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="206.0" y="334.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="203.4" y="307.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="206.4" y="318.0"></text>
</g>
<g>
<title>process_backlog (10 samples, 0.33%)</title><rect x="203.8" y="307.0" width="3.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="206.8" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (8 samples, 0.27%)</title><rect x="204.6" y="291.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="207.6" y="302.0"></text>
</g>
<g>
<title>ip_rcv (8 samples, 0.27%)</title><rect x="204.6" y="275.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="207.6" y="286.0"></text>
</g>
<g>
<title>ip_local_deliver (7 samples, 0.23%)</title><rect x="204.6" y="259.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="207.6" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (7 samples, 0.23%)</title><rect x="204.6" y="243.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="207.6" y="254.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (7 samples, 0.23%)</title><rect x="204.6" y="227.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="207.6" y="238.0"></text>
</g>
<g>
<title>tcp_v4_rcv (7 samples, 0.23%)</title><rect x="204.6" y="211.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="207.6" y="222.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="204.6" y="195.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.20%)</title><rect x="205.0" y="195.0" width="2.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.0" y="206.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.20%)</title><rect x="205.0" y="179.0" width="2.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="208.0" y="190.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.13%)</title><rect x="205.0" y="163.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="208.0" y="174.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="205.4" y="147.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="208.4" y="158.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="205.4" y="131.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="208.4" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="205.7" y="147.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="208.7" y="158.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="206.1" y="147.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="209.1" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.07%)</title><rect x="206.5" y="163.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="209.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv_core (1 samples, 0.03%)</title><rect x="207.3" y="259.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="210.3" y="270.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="207.3" y="243.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="210.3" y="254.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.03%)</title><rect x="207.7" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="210.7" y="430.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="207.7" y="403.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="210.7" y="414.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="208.1" y="467.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="211.1" y="478.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.07%)</title><rect x="208.1" y="451.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.1" y="462.0"></text>
</g>
<g>
<title>sk_wait_data (43 samples, 1.44%)</title><rect x="208.9" y="467.0" width="16.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="211.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.13%)</title><rect x="209.3" y="451.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="212.3" y="462.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="210.5" y="435.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.5" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.17%)</title><rect x="210.9" y="451.0" width="1.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="213.9" y="462.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="212.8" y="451.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="215.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="213.2" y="435.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="216.2" y="446.0"></text>
</g>
<g>
<title>wait_woken (31 samples, 1.03%)</title><rect x="213.6" y="451.0" width="12.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.6" y="462.0"></text>
</g>
<g>
<title>schedule_timeout (28 samples, 0.93%)</title><rect x="214.8" y="435.0" width="11.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.8" y="446.0"></text>
</g>
<g>
<title>__mod_timer (10 samples, 0.33%)</title><rect x="215.2" y="419.0" width="3.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="218.2" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (10 samples, 0.33%)</title><rect x="215.2" y="403.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="218.2" y="414.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="218.7" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="221.7" y="398.0"></text>
</g>
<g>
<title>del_timer_sync (5 samples, 0.17%)</title><rect x="219.1" y="419.0" width="2.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="222.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="219.5" y="403.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="222.5" y="414.0"></text>
</g>
<g>
<title>lock_timer_base.constprop.0 (1 samples, 0.03%)</title><rect x="220.7" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="223.7" y="414.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.03%)</title><rect x="220.7" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="223.7" y="398.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.40%)</title><rect x="221.1" y="419.0" width="4.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="224.1" y="430.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.33%)</title><rect x="221.9" y="403.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="224.9" y="414.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.30%)</title><rect x="222.3" y="387.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="225.3" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (7 samples, 0.23%)</title><rect x="223.1" y="371.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="226.1" y="382.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (11 samples, 0.37%)</title><rect x="225.8" y="467.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.8" y="478.0"></text>
</g>
<g>
<title>__skb_datagram_iter (11 samples, 0.37%)</title><rect x="225.8" y="451.0" width="4.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="228.8" y="462.0"></text>
</g>
<g>
<title>_copy_to_iter (7 samples, 0.23%)</title><rect x="226.6" y="435.0" width="2.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="229.6" y="446.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (6 samples, 0.20%)</title><rect x="227.0" y="419.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="230.0" y="430.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.07%)</title><rect x="229.4" y="435.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.4" y="446.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.07%)</title><rect x="229.4" y="419.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.4" y="430.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.07%)</title><rect x="230.2" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="233.2" y="478.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="230.6" y="451.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="233.6" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.07%)</title><rect x="231.0" y="467.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="234.0" y="478.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="231.3" y="451.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="234.3" y="462.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="231.3" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="234.3" y="446.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="231.3" y="419.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="234.3" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.07%)</title><rect x="231.7" y="499.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="234.7" y="510.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.07%)</title><rect x="231.7" y="483.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="234.7" y="494.0"></text>
</g>
<g>
<title>__fget_files (2 samples, 0.07%)</title><rect x="231.7" y="467.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="234.7" y="478.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="232.5" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="235.5" y="542.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="232.5" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="235.5" y="526.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.03%)</title><rect x="232.9" y="595.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.9" y="606.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (32 samples, 1.07%)</title><rect x="233.3" y="611.0" width="12.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.3" y="622.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="234.5" y="595.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="237.5" y="606.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="234.5" y="579.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="237.5" y="590.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="234.5" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="237.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="234.5" y="547.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="237.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="234.9" y="595.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="237.9" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="235.7" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="238.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="235.7" y="579.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="238.7" y="590.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="236.1" y="563.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="239.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (13 samples, 0.43%)</title><rect x="236.5" y="595.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (12 samples, 0.40%)</title><rect x="236.9" y="579.0" width="4.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="239.9" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.37%)</title><rect x="237.3" y="563.0" width="4.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.3" y="574.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="241.2" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="244.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="241.2" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.2" y="542.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="241.2" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="244.2" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.13%)</title><rect x="241.6" y="595.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="244.6" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.03%)</title><rect x="243.2" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (4 samples, 0.13%)</title><rect x="243.6" y="595.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="244.7" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.7" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="244.7" y="563.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.7" y="574.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="244.7" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.7" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="244.7" y="531.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="247.7" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="244.7" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="247.7" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="244.7" y="499.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="247.7" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="244.7" y="483.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="247.7" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="244.7" y="467.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="247.7" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="244.7" y="451.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="247.7" y="462.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.07%)</title><rect x="245.1" y="595.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="245.1" y="579.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="248.1" y="590.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="245.1" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.1" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.charAt (1 samples, 0.03%)</title><rect x="245.5" y="563.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="248.5" y="574.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.checkIndex (1 samples, 0.03%)</title><rect x="245.5" y="547.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.5" y="558.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="245.5" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.5" y="542.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (30 samples, 1.00%)</title><rect x="245.9" y="611.0" width="11.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="248.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (14 samples, 0.47%)</title><rect x="248.3" y="595.0" width="5.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="251.3" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (9 samples, 0.30%)</title><rect x="248.3" y="579.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="251.3" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.17%)</title><rect x="251.8" y="579.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="254.8" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.17%)</title><rect x="251.8" y="563.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="254.8" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.17%)</title><rect x="251.8" y="547.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="254.8" y="558.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (10 samples, 0.33%)</title><rect x="253.8" y="595.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="256.8" y="606.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="256.2" y="579.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="259.2" y="590.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.10%)</title><rect x="256.6" y="579.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="259.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (11 samples, 0.37%)</title><rect x="257.7" y="611.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.7" y="622.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.13%)</title><rect x="259.7" y="595.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.7" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.13%)</title><rect x="259.7" y="579.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.7" y="590.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (2 samples, 0.07%)</title><rect x="260.5" y="563.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.5" y="574.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="261.3" y="595.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="264.3" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="261.3" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.3" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="261.3" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="264.3" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="261.3" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="264.3" y="558.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="261.7" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.7" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="261.7" y="547.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="264.7" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="261.7" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="264.7" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="261.7" y="515.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="264.7" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="261.7" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="264.7" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="261.7" y="483.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="264.7" y="494.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="261.7" y="467.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="264.7" y="478.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="262.1" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.1" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (51 samples, 1.70%)</title><rect x="262.5" y="611.0" width="20.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="265.5" y="622.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.03%)</title><rect x="262.9" y="595.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="265.9" y="606.0"></text>
</g>
<g>
<title>__setsockopt (49 samples, 1.64%)</title><rect x="263.3" y="595.0" width="19.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="266.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 1.50%)</title><rect x="264.8" y="579.0" width="17.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="267.8" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (45 samples, 1.50%)</title><rect x="264.8" y="563.0" width="17.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="267.8" y="574.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="268.4" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="271.4" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="268.4" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.4" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="268.4" y="515.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="271.4" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="268.4" y="499.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="271.4" y="510.0"></text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.07%)</title><rect x="268.8" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="271.8" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="269.2" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.2" y="542.0"></text>
</g>
<g>
<title>mntput (1 samples, 0.03%)</title><rect x="269.2" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.2" y="526.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (29 samples, 0.97%)</title><rect x="269.6" y="547.0" width="11.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="272.6" y="558.0"></text>
</g>
<g>
<title>__sys_setsockopt (28 samples, 0.93%)</title><rect x="269.9" y="531.0" width="11.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="272.9" y="542.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_setsockopt (3 samples, 0.10%)</title><rect x="270.3" y="515.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="273.3" y="526.0"></text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="271.1" y="499.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="274.1" y="510.0"></text>
</g>
<g>
<title>sock_setsockopt (19 samples, 0.63%)</title><rect x="271.5" y="515.0" width="7.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="274.5" y="526.0"></text>
</g>
<g>
<title>__get_user_4 (3 samples, 0.10%)</title><rect x="272.3" y="499.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.3" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.07%)</title><rect x="273.5" y="499.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="276.5" y="510.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="273.9" y="483.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="276.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="274.3" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.3" y="510.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.30%)</title><rect x="274.7" y="499.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="277.7" y="510.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.10%)</title><rect x="275.5" y="483.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="278.5" y="494.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="276.2" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="279.2" y="478.0"></text>
</g>
<g>
<title>tcp_release_cb (4 samples, 0.13%)</title><rect x="276.6" y="483.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="279.6" y="494.0"></text>
</g>
<g>
<title>sock_set_timeout (2 samples, 0.07%)</title><rect x="278.2" y="499.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="281.2" y="510.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.17%)</title><rect x="279.0" y="515.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="282.0" y="526.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.17%)</title><rect x="279.0" y="499.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="282.0" y="510.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.13%)</title><rect x="279.4" y="483.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="282.4" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (4 samples, 0.13%)</title><rect x="281.0" y="547.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="284.0" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_entry (3 samples, 0.10%)</title><rect x="281.4" y="531.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="284.4" y="542.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (337 samples, 11.25%)</title><rect x="282.6" y="611.0" width="132.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="285.6" y="622.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (11 samples, 0.37%)</title><rect x="283.3" y="595.0" width="4.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="286.3" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="284.1" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="287.1" y="590.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.07%)</title><rect x="284.5" y="579.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="287.5" y="590.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.20%)</title><rect x="285.3" y="579.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="288.3" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="286.5" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="289.5" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="286.9" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="289.9" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="287.3" y="563.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="290.3" y="574.0"></text>
</g>
<g>
<title>__libc_send (324 samples, 10.81%)</title><rect x="287.7" y="595.0" width="127.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="290.7" y="606.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (317 samples, 10.58%)</title><rect x="290.4" y="579.0" width="124.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="293.4" y="590.0">entry_SYSCALL_6..</text>
</g>
<g>
<title>do_syscall_64 (317 samples, 10.58%)</title><rect x="290.4" y="563.0" width="124.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="293.4" y="574.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="291.2" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="294.2" y="558.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="291.2" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="294.2" y="542.0"></text>
</g>
<g>
<title>__x64_sys_sendto (313 samples, 10.45%)</title><rect x="291.6" y="547.0" width="123.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="294.6" y="558.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (311 samples, 10.38%)</title><rect x="292.4" y="531.0" width="122.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="295.4" y="542.0">__sys_sendto</text>
</g>
<g>
<title>fput_many (1 samples, 0.03%)</title><rect x="294.0" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="297.0" y="526.0"></text>
</g>
<g>
<title>sock_sendmsg (305 samples, 10.18%)</title><rect x="294.4" y="515.0" width="120.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="297.4" y="526.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (1 samples, 0.03%)</title><rect x="294.4" y="499.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="297.4" y="510.0"></text>
</g>
<g>
<title>tcp_sendmsg (304 samples, 10.15%)</title><rect x="294.8" y="499.0" width="119.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.8" y="510.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="295.2" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="298.2" y="494.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="295.5" y="483.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.5" y="494.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="295.5" y="467.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="298.5" y="478.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="295.5" y="451.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="298.5" y="462.0"></text>
</g>
<g>
<title>release_sock (9 samples, 0.30%)</title><rect x="295.9" y="483.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="298.9" y="494.0"></text>
</g>
<g>
<title>__release_sock (7 samples, 0.23%)</title><rect x="295.9" y="467.0" width="2.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="298.9" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="295.9" y="451.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="298.9" y="462.0"></text>
</g>
<g>
<title>preempt_count_add (1 samples, 0.03%)</title><rect x="295.9" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="298.9" y="446.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 0.20%)</title><rect x="296.3" y="451.0" width="2.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="299.3" y="462.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 0.20%)</title><rect x="296.3" y="435.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="299.3" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="296.3" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="299.3" y="430.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.03%)</title><rect x="296.3" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="299.3" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="296.3" y="387.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="299.3" y="398.0"></text>
</g>
<g>
<title>tcp_ack (4 samples, 0.13%)</title><rect x="296.7" y="419.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="299.7" y="430.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="297.1" y="403.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="300.1" y="414.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="297.5" y="403.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.5" y="414.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (1 samples, 0.03%)</title><rect x="297.9" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="300.9" y="414.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="298.3" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="301.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.07%)</title><rect x="298.7" y="467.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="301.7" y="478.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.07%)</title><rect x="298.7" y="451.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="301.7" y="462.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (292 samples, 9.75%)</title><rect x="299.5" y="483.0" width="115.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="302.5" y="494.0">tcp_sendmsg_lo..</text>
</g>
<g>
<title>__tcp_push_pending_frames (246 samples, 8.21%)</title><rect x="301.5" y="467.0" width="96.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="304.5" y="478.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (246 samples, 8.21%)</title><rect x="301.5" y="451.0" width="96.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="304.5" y="462.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (227 samples, 7.58%)</title><rect x="303.8" y="435.0" width="89.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.8" y="446.0">__tcp_tran..</text>
</g>
<g>
<title>__ip_queue_xmit (214 samples, 7.14%)</title><rect x="305.8" y="419.0" width="84.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="308.8" y="430.0">__ip_queue..</text>
</g>
<g>
<title>__ip_local_out (3 samples, 0.10%)</title><rect x="307.4" y="403.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="310.4" y="414.0"></text>
</g>
<g>
<title>ip_send_check (3 samples, 0.10%)</title><rect x="307.4" y="387.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="310.4" y="398.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="308.5" y="403.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.5" y="414.0"></text>
</g>
<g>
<title>ip_output (205 samples, 6.84%)</title><rect x="308.9" y="403.0" width="80.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="311.9" y="414.0">ip_output</text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.07%)</title><rect x="309.7" y="387.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="312.7" y="398.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="310.1" y="371.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="313.1" y="382.0"></text>
</g>
<g>
<title>ip_finish_output2 (197 samples, 6.58%)</title><rect x="310.5" y="387.0" width="77.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="313.5" y="398.0">ip_finish..</text>
</g>
<g>
<title>__dev_queue_xmit (22 samples, 0.73%)</title><rect x="312.5" y="371.0" width="8.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="315.5" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (14 samples, 0.47%)</title><rect x="313.3" y="355.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="316.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (14 samples, 0.47%)</title><rect x="313.3" y="339.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="316.3" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.07%)</title><rect x="314.1" y="323.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="317.1" y="334.0"></text>
</g>
<g>
<title>netif_rx (9 samples, 0.30%)</title><rect x="314.8" y="323.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="317.8" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (9 samples, 0.30%)</title><rect x="314.8" y="307.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="317.8" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.23%)</title><rect x="315.6" y="291.0" width="2.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="318.6" y="302.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="318.4" y="323.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="321.4" y="334.0"></text>
</g>
<g>
<title>netdev_core_pick_tx (1 samples, 0.03%)</title><rect x="318.8" y="355.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="321.8" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.13%)</title><rect x="319.2" y="355.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="322.2" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.10%)</title><rect x="319.6" y="339.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="322.6" y="350.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="320.8" y="355.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.8" y="366.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (170 samples, 5.67%)</title><rect x="321.1" y="371.0" width="67.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.1" y="382.0">__local..</text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="321.1" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.1" y="366.0"></text>
</g>
<g>
<title>do_softirq (167 samples, 5.57%)</title><rect x="321.5" y="355.0" width="65.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.5" y="366.0">do_soft..</text>
</g>
<g>
<title>do_softirq_own_stack (165 samples, 5.51%)</title><rect x="322.3" y="339.0" width="65.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.3" y="350.0">do_soft..</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (165 samples, 5.51%)</title><rect x="322.3" y="323.0" width="65.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="325.3" y="334.0">asm_cal..</text>
</g>
<g>
<title>__softirqentry_text_start (165 samples, 5.51%)</title><rect x="322.3" y="307.0" width="65.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.3" y="318.0">__softi..</text>
</g>
<g>
<title>net_rx_action (158 samples, 5.27%)</title><rect x="325.1" y="291.0" width="62.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="328.1" y="302.0">net_rx..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.07%)</title><rect x="325.5" y="275.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="328.5" y="286.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="325.9" y="259.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="328.9" y="270.0"></text>
</g>
<g>
<title>process_backlog (155 samples, 5.17%)</title><rect x="326.3" y="275.0" width="61.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.3" y="286.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="327.8" y="259.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="330.8" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (150 samples, 5.01%)</title><rect x="328.2" y="259.0" width="59.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="331.2" y="270.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.07%)</title><rect x="328.2" y="243.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="331.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (148 samples, 4.94%)</title><rect x="329.0" y="243.0" width="58.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="332.0" y="254.0">ip_rcv</text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.03%)</title><rect x="329.0" y="227.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (144 samples, 4.81%)</title><rect x="329.4" y="227.0" width="56.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.4" y="238.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (143 samples, 4.77%)</title><rect x="329.8" y="211.0" width="56.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="332.8" y="222.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (141 samples, 4.71%)</title><rect x="330.6" y="195.0" width="55.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="333.6" y="206.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (140 samples, 4.67%)</title><rect x="331.0" y="179.0" width="55.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.0" y="190.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.20%)</title><rect x="332.2" y="163.0" width="2.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="335.2" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="334.1" y="147.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="337.1" y="158.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.10%)</title><rect x="334.5" y="163.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="337.5" y="174.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.03%)</title><rect x="335.3" y="147.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="338.3" y="158.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="335.7" y="163.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="338.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (127 samples, 4.24%)</title><rect x="336.1" y="163.0" width="50.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="339.1" y="174.0">tcp_v..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="336.1" y="147.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="339.1" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (126 samples, 4.21%)</title><rect x="336.5" y="147.0" width="49.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="339.5" y="158.0">tcp_r..</text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="338.5" y="131.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="341.5" y="142.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.03%)</title><rect x="338.5" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="341.5" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="338.5" y="99.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="341.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (83 samples, 2.77%)</title><rect x="338.9" y="131.0" width="32.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="341.9" y="142.0">so..</text>
</g>
<g>
<title>__wake_up_common_lock (81 samples, 2.70%)</title><rect x="339.7" y="115.0" width="31.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="342.7" y="126.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (80 samples, 2.67%)</title><rect x="340.1" y="99.0" width="31.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="343.1" y="110.0">_r..</text>
</g>
<g>
<title>tcp_ack (28 samples, 0.93%)</title><rect x="371.6" y="131.0" width="11.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="374.6" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.17%)</title><rect x="375.9" y="115.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="378.9" y="126.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.10%)</title><rect x="375.9" y="99.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="378.9" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="376.7" y="83.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.7" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.07%)</title><rect x="377.1" y="99.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="380.1" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.07%)</title><rect x="377.9" y="115.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="380.9" y="126.0"></text>
</g>
<g>
<title>kmem_cache_free (4 samples, 0.13%)</title><rect x="378.7" y="115.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="381.7" y="126.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="378.7" y="99.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="381.7" y="110.0"></text>
</g>
<g>
<title>cache_from_obj (2 samples, 0.07%)</title><rect x="379.4" y="99.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="382.4" y="110.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="380.2" y="115.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.2" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="380.6" y="115.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.6" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="381.0" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="384.0" y="126.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="381.4" y="115.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="384.4" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (1 samples, 0.03%)</title><rect x="381.8" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="384.8" y="126.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="382.2" y="115.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="385.2" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.07%)</title><rect x="382.6" y="131.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.6" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.03%)</title><rect x="383.4" y="131.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.4" y="142.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.10%)</title><rect x="383.8" y="131.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="386.8" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="384.6" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.6" y="126.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="384.6" y="99.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="387.6" y="110.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.07%)</title><rect x="385.0" y="131.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="388.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.03%)</title><rect x="385.7" y="131.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="388.7" y="142.0"></text>
</g>
<g>
<title>ip_rcv_core (2 samples, 0.07%)</title><rect x="386.1" y="227.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="389.1" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="386.9" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="389.9" y="238.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="387.3" y="355.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="390.3" y="366.0"></text>
</g>
<g>
<title>preempt_schedule_thunk (1 samples, 0.03%)</title><rect x="387.7" y="355.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="390.7" y="366.0"></text>
</g>
<g>
<title>preempt_schedule_common (1 samples, 0.03%)</title><rect x="387.7" y="339.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="390.7" y="350.0"></text>
</g>
<g>
<title>ip_finish_output (4 samples, 0.13%)</title><rect x="388.1" y="387.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.1" y="398.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 0.13%)</title><rect x="388.1" y="371.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="391.1" y="382.0"></text>
</g>
<g>
<title>preempt_count_add (2 samples, 0.07%)</title><rect x="388.9" y="355.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="391.9" y="366.0"></text>
</g>
<g>
<title>in_lock_functions (1 samples, 0.03%)</title><rect x="389.3" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="392.3" y="350.0"></text>
</g>
<g>
<title>rcu_read_unlock_special (1 samples, 0.03%)</title><rect x="389.7" y="403.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="392.7" y="414.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.10%)</title><rect x="390.1" y="419.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="393.1" y="430.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="391.3" y="419.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="394.3" y="430.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="391.6" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="394.6" y="430.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.07%)</title><rect x="392.0" y="419.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="395.0" y="430.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.03%)</title><rect x="392.8" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="395.8" y="430.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="393.2" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="396.2" y="446.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.13%)</title><rect x="393.6" y="435.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="396.6" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="394.4" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="397.4" y="430.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.03%)</title><rect x="394.4" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="394.4" y="387.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="397.4" y="398.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="394.8" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="397.8" y="430.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (6 samples, 0.20%)</title><rect x="395.2" y="435.0" width="2.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="398.2" y="446.0"></text>
</g>
<g>
<title>jiffies_to_usecs (3 samples, 0.10%)</title><rect x="395.6" y="419.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="398.6" y="430.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.07%)</title><rect x="396.8" y="419.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.8" y="430.0"></text>
</g>
<g>
<title>__mod_timer (1 samples, 0.03%)</title><rect x="397.2" y="403.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="400.2" y="414.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (2 samples, 0.07%)</title><rect x="397.6" y="435.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.6" y="446.0"></text>
</g>
<g>
<title>sk_page_frag_refill (4 samples, 0.13%)</title><rect x="398.3" y="467.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="401.3" y="478.0"></text>
</g>
<g>
<title>skb_page_frag_refill (4 samples, 0.13%)</title><rect x="398.3" y="451.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="401.3" y="462.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.03%)</title><rect x="399.5" y="435.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.5" y="446.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.03%)</title><rect x="399.5" y="419.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="402.5" y="430.0"></text>
</g>
<g>
<title>prep_new_page (1 samples, 0.03%)</title><rect x="399.5" y="403.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="402.5" y="414.0"></text>
</g>
<g>
<title>kernel_init_free_pages (1 samples, 0.03%)</title><rect x="399.5" y="387.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="402.5" y="398.0"></text>
</g>
<g>
<title>clear_page_erms (1 samples, 0.03%)</title><rect x="399.5" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="402.5" y="382.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (24 samples, 0.80%)</title><rect x="399.9" y="467.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="402.9" y="478.0"></text>
</g>
<g>
<title>__alloc_skb (24 samples, 0.80%)</title><rect x="399.9" y="451.0" width="9.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="402.9" y="462.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (12 samples, 0.40%)</title><rect x="401.1" y="435.0" width="4.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="404.1" y="446.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.0 (3 samples, 0.10%)</title><rect x="403.1" y="419.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="406.1" y="430.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.03%)</title><rect x="404.3" y="419.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="407.3" y="430.0"></text>
</g>
<g>
<title>memset_erms (3 samples, 0.10%)</title><rect x="404.6" y="419.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="407.6" y="430.0"></text>
</g>
<g>
<title>__ksize (3 samples, 0.10%)</title><rect x="405.8" y="435.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="408.8" y="446.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.20%)</title><rect x="407.0" y="435.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="410.0" y="446.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (1 samples, 0.03%)</title><rect x="409.0" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="412.0" y="430.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (4 samples, 0.13%)</title><rect x="409.4" y="467.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="412.4" y="478.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.10%)</title><rect x="409.4" y="451.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.4" y="462.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.10%)</title><rect x="409.4" y="435.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.4" y="446.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="410.6" y="451.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="413.6" y="462.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="410.6" y="435.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="413.6" y="446.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="410.9" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="413.9" y="478.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.07%)</title><rect x="411.3" y="467.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="414.3" y="478.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.17%)</title><rect x="412.1" y="467.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="415.1" y="478.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.17%)</title><rect x="412.1" y="451.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="415.1" y="462.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="413.7" y="435.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="416.7" y="446.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="413.7" y="419.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="416.7" y="430.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="413.7" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="416.7" y="414.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="413.7" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="416.7" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="413.7" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="416.7" y="382.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="413.7" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="416.7" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="413.7" y="339.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="416.7" y="350.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="413.7" y="323.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.7" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="413.7" y="307.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="416.7" y="318.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="414.1" y="467.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="417.1" y="478.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="414.5" y="515.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="417.5" y="526.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="414.5" y="499.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="417.5" y="510.0"></text>
</g>
<g>
<title>__fget_files (1 samples, 0.03%)</title><rect x="414.5" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="417.5" y="494.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="414.9" y="547.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="417.9" y="558.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (6 samples, 0.20%)</title><rect x="415.3" y="611.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="418.3" y="622.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.10%)</title><rect x="416.1" y="595.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="419.1" y="606.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.10%)</title><rect x="416.1" y="579.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="419.1" y="590.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (3 samples, 0.10%)</title><rect x="416.1" y="563.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="419.1" y="574.0"></text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.03%)</title><rect x="417.2" y="595.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="420.2" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.13%)</title><rect x="417.6" y="643.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.6" y="654.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="417.6" y="627.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="420.6" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="417.6" y="611.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.6" y="622.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="418.0" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="418.0" y="611.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.0" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="418.0" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="421.0" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="418.0" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="421.0" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="418.0" y="563.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="421.0" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="418.0" y="547.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="421.0" y="558.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="418.0" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="421.0" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="418.4" y="595.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="421.4" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="418.8" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="421.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.07%)</title><rect x="419.2" y="643.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="422.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (59 samples, 1.97%)</title><rect x="420.0" y="643.0" width="23.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="423.0" y="654.0">r..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="420.0" y="627.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="420.0" y="611.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="423.0" y="622.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.03%)</title><rect x="420.0" y="595.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="423.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (58 samples, 1.94%)</title><rect x="420.4" y="627.0" width="22.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="423.4" y="638.0">r..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.07%)</title><rect x="422.0" y="611.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="425.0" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.07%)</title><rect x="422.0" y="595.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.0" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.07%)</title><rect x="422.0" y="579.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="425.0" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.07%)</title><rect x="422.0" y="563.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.0" y="574.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (2 samples, 0.07%)</title><rect x="422.0" y="547.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.0" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.07%)</title><rect x="422.0" y="531.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="425.0" y="542.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.cleanSomeSlots (2 samples, 0.07%)</title><rect x="422.0" y="515.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.0" y="526.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (1 samples, 0.03%)</title><rect x="422.0" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.0" y="510.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="422.4" y="499.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="425.4" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="422.8" y="611.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="422.8" y="595.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="425.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="422.8" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="425.8" y="590.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (1 samples, 0.03%)</title><rect x="422.8" y="563.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.8" y="574.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="422.8" y="547.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="425.8" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (51 samples, 1.70%)</title><rect x="423.2" y="611.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="426.2" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.07%)</title><rect x="423.2" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="426.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.07%)</title><rect x="423.2" y="579.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.2" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (49 samples, 1.64%)</title><rect x="423.9" y="595.0" width="19.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (45 samples, 1.50%)</title><rect x="425.1" y="579.0" width="17.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.1" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="425.5" y="563.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="428.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (43 samples, 1.44%)</title><rect x="425.9" y="563.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.9" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (43 samples, 1.44%)</title><rect x="425.9" y="547.0" width="17.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="428.9" y="558.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="436.9" y="531.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="439.9" y="542.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="436.9" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="439.9" y="526.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="436.9" y="499.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="439.9" y="510.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="436.9" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="439.9" y="494.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="436.9" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="439.9" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="436.9" y="451.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="439.9" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="436.9" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="439.9" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="436.9" y="419.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="439.9" y="430.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.47%)</title><rect x="437.3" y="531.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.3" y="542.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.13%)</title><rect x="437.3" y="515.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="440.3" y="526.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (10 samples, 0.33%)</title><rect x="438.9" y="515.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.9" y="526.0"></text>
</g>
<g>
<title>vectorizedMismatch (1 samples, 0.03%)</title><rect x="442.5" y="499.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="445.5" y="510.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="442.9" y="579.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="445.9" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.all (9 samples, 0.30%)</title><rect x="443.2" y="659.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="446.2" y="670.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.30%)</title><rect x="443.2" y="643.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.2" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (6 samples, 0.20%)</title><rect x="443.6" y="627.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (6 samples, 0.20%)</title><rect x="443.6" y="611.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (6 samples, 0.20%)</title><rect x="443.6" y="595.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.07%)</title><rect x="446.0" y="627.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="449.0" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.07%)</title><rect x="446.0" y="611.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.0" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.07%)</title><rect x="446.0" y="595.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.0" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.07%)</title><rect x="446.0" y="579.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.primaryFor (200 samples, 6.68%)</title><rect x="446.8" y="659.0" width="78.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="449.8" y="670.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.07%)</title><rect x="446.8" y="643.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.8" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (1 samples, 0.03%)</title><rect x="447.2" y="627.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="450.2" y="638.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.17%)</title><rect x="447.6" y="643.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.17%)</title><rect x="447.6" y="627.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.6" y="638.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.13%)</title><rect x="448.0" y="611.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.0" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (4 samples, 0.13%)</title><rect x="448.0" y="595.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="451.0" y="606.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="449.2" y="579.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="452.2" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="449.2" y="563.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="452.2" y="574.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="449.2" y="547.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="452.2" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="449.2" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="452.2" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.07%)</title><rect x="449.5" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="452.5" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.07%)</title><rect x="449.5" y="627.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="452.5" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.07%)</title><rect x="449.5" y="611.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.5" y="622.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (186 samples, 6.21%)</title><rect x="450.3" y="643.0" width="73.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.3" y="654.0">java/uti..</text>
</g>
<g>
<title>java/util/TreeSet.addAll (186 samples, 6.21%)</title><rect x="450.3" y="627.0" width="73.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.3" y="638.0">java/uti..</text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (152 samples, 5.07%)</title><rect x="450.3" y="611.0" width="59.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.3" y="622.0">java/u..</text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (26 samples, 0.87%)</title><rect x="450.7" y="595.0" width="10.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="453.7" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (26 samples, 0.87%)</title><rect x="450.7" y="579.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="453.7" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (26 samples, 0.87%)</title><rect x="450.7" y="563.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="453.7" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (26 samples, 0.87%)</title><rect x="450.7" y="547.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.7" y="558.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (5 samples, 0.17%)</title><rect x="450.7" y="531.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="453.7" y="542.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (5 samples, 0.17%)</title><rect x="450.7" y="515.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="453.7" y="526.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (5 samples, 0.17%)</title><rect x="450.7" y="499.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="453.7" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (21 samples, 0.70%)</title><rect x="452.7" y="531.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="455.7" y="542.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.10%)</title><rect x="461.0" y="595.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.0" y="606.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.10%)</title><rect x="461.0" y="579.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.0" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.07%)</title><rect x="461.4" y="563.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="464.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.03%)</title><rect x="461.8" y="547.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="464.8" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.03%)</title><rect x="461.8" y="531.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.8" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="461.8" y="515.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.8" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (9 samples, 0.30%)</title><rect x="462.1" y="595.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.1" y="606.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="465.3" y="579.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="465.3" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="468.3" y="574.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="465.3" y="547.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="468.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeSet.add (113 samples, 3.77%)</title><rect x="465.7" y="595.0" width="44.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.7" y="606.0">java..</text>
</g>
<g>
<title>java/util/TreeMap.put (88 samples, 2.94%)</title><rect x="475.5" y="579.0" width="34.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.5" y="590.0">ja..</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="507.8" y="563.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="510.8" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="507.8" y="547.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.8" y="558.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="507.8" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.8" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="507.8" y="515.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="510.8" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="507.8" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="510.8" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="507.8" y="483.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="507.8" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="510.8" y="478.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="508.2" y="563.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="511.2" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="508.2" y="547.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="511.2" y="558.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="508.2" y="531.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.2" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="508.2" y="515.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="511.2" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="508.2" y="499.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="511.2" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="508.2" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="511.2" y="494.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.07%)</title><rect x="508.6" y="563.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.6" y="574.0"></text>
</g>
<g>
<title>java/lang/String.compareTo (2 samples, 0.07%)</title><rect x="508.6" y="547.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="511.6" y="558.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (2 samples, 0.07%)</title><rect x="508.6" y="531.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="511.6" y="542.0"></text>
</g>
<g>
<title>SATBMarkQueue::should_enqueue_buffer() (2 samples, 0.07%)</title><rect x="508.6" y="515.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="511.6" y="526.0"></text>
</g>
<g>
<title>SATBMarkQueue::filter() (2 samples, 0.07%)</title><rect x="508.6" y="499.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="511.6" y="510.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.07%)</title><rect x="509.4" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.4" y="574.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.size (34 samples, 1.13%)</title><rect x="510.2" y="611.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.2" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.size (33 samples, 1.10%)</title><rect x="510.6" y="595.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="513.6" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$EntrySetView.size (33 samples, 1.10%)</title><rect x="510.6" y="579.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (5 samples, 0.17%)</title><rect x="513.4" y="563.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.4" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (5 samples, 0.17%)</title><rect x="513.4" y="547.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.4" y="558.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.03%)</title><rect x="513.4" y="531.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="516.4" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (4 samples, 0.13%)</title><rect x="513.7" y="531.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="516.7" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.13%)</title><rect x="513.7" y="515.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="516.7" y="526.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (20 samples, 0.67%)</title><rect x="515.3" y="563.0" width="7.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="518.3" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (20 samples, 0.67%)</title><rect x="515.3" y="547.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.3" y="558.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (20 samples, 0.67%)</title><rect x="515.3" y="531.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.3" y="542.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (11 samples, 0.37%)</title><rect x="518.9" y="515.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.9" y="526.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="522.8" y="499.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.8" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="522.8" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="525.8" y="494.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="522.8" y="467.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="525.8" y="478.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.03%)</title><rect x="523.2" y="563.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.2" y="574.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.03%)</title><rect x="523.6" y="643.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="526.6" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="523.6" y="627.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.6" y="638.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.03%)</title><rect x="523.6" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.6" y="622.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.03%)</title><rect x="523.6" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="526.6" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.03%)</title><rect x="523.6" y="579.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.6" y="590.0"></text>
</g>
<g>
<title>java/util/TreeSet.size (4 samples, 0.13%)</title><rect x="524.0" y="643.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="527.0" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (1 samples, 0.03%)</title><rect x="525.2" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="528.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ResponseMerger.&lt;init&gt; (1 samples, 0.03%)</title><rect x="525.6" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="528.6" y="670.0"></text>
</g>
<g>
<title>java/util/ArrayList.removeIf (1 samples, 0.03%)</title><rect x="525.6" y="643.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="528.6" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.removeIf (1 samples, 0.03%)</title><rect x="525.6" y="627.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.6" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (2 samples, 0.07%)</title><rect x="526.0" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="526.0" y="643.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="529.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="526.0" y="627.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.0" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="526.0" y="611.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="529.0" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="526.0" y="595.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="529.0" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="526.3" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="529.3" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="526.3" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="529.3" y="574.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="526.3" y="547.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="529.3" y="558.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="526.3" y="531.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="529.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.selector (568 samples, 18.96%)</title><rect x="526.7" y="659.0" width="223.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.7" y="670.0">ru/mail/polis/service/gogun/S..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (448 samples, 14.95%)</title><rect x="526.7" y="643.0" width="176.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.7" y="654.0">one/nio/http/HttpSessio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (438 samples, 14.62%)</title><rect x="529.1" y="627.0" width="172.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.1" y="638.0">one/nio/http/HttpSessi..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="529.5" y="611.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="532.5" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.37%)</title><rect x="529.9" y="611.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="532.9" y="622.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="531.1" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.1" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="531.1" y="579.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="534.1" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="531.1" y="563.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="534.1" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="531.1" y="547.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="534.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="531.1" y="531.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="534.1" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="531.1" y="515.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="534.1" y="526.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="531.1" y="499.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="534.1" y="510.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.23%)</title><rect x="531.5" y="595.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="534.5" y="606.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.17%)</title><rect x="531.5" y="579.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="534.5" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.07%)</title><rect x="533.4" y="579.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="536.4" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.07%)</title><rect x="533.4" y="563.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.4" y="574.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.07%)</title><rect x="533.4" y="547.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="536.4" y="558.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (425 samples, 14.19%)</title><rect x="534.2" y="611.0" width="167.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="537.2" y="622.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="534.2" y="595.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="537.2" y="606.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.03%)</title><rect x="534.2" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="537.2" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="534.6" y="579.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="537.6" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="534.6" y="563.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="537.6" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="534.6" y="547.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="537.6" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="534.6" y="531.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="537.6" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="534.6" y="515.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="537.6" y="526.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="534.6" y="499.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="537.6" y="510.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="534.6" y="483.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="537.6" y="494.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (423 samples, 14.12%)</title><rect x="535.0" y="595.0" width="166.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="538.0" y="606.0">one/nio/net/Session.w..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="536.2" y="579.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.2" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2 samples, 0.07%)</title><rect x="537.0" y="579.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="540.0" y="590.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (416 samples, 13.89%)</title><rect x="537.8" y="579.0" width="163.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.8" y="590.0">one/nio/net/Session$A..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="537.8" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.8" y="574.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (415 samples, 13.85%)</title><rect x="538.2" y="563.0" width="163.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="541.2" y="574.0">one/nio/net/NativeSoc..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 0.37%)</title><rect x="539.7" y="547.0" width="4.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="542.7" y="558.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.07%)</title><rect x="540.5" y="531.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="543.5" y="542.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="541.3" y="531.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="544.3" y="542.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.20%)</title><rect x="541.7" y="531.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="544.7" y="542.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="542.5" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="545.5" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.0] (2 samples, 0.07%)</title><rect x="542.9" y="515.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="545.9" y="526.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="543.7" y="515.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="546.7" y="526.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="543.7" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="546.7" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="543.7" y="483.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="546.7" y="494.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="543.7" y="467.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.7" y="478.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.07%)</title><rect x="544.1" y="547.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="547.1" y="558.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="544.9" y="547.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="547.9" y="558.0"></text>
</g>
<g>
<title>__libc_send (396 samples, 13.22%)</title><rect x="545.3" y="547.0" width="155.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="548.3" y="558.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (380 samples, 12.68%)</title><rect x="551.6" y="531.0" width="149.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="554.6" y="542.0">entry_SYSCALL_64_af..</text>
</g>
<g>
<title>do_syscall_64 (380 samples, 12.68%)</title><rect x="551.6" y="515.0" width="149.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.6" y="526.0">do_syscall_64</text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.07%)</title><rect x="554.7" y="499.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="557.7" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="554.7" y="483.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="557.7" y="494.0"></text>
</g>
<g>
<title>__x64_sys_sendto (369 samples, 12.32%)</title><rect x="555.5" y="499.0" width="145.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="558.5" y="510.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (367 samples, 12.25%)</title><rect x="556.3" y="483.0" width="144.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="559.3" y="494.0">__sys_sendto</text>
</g>
<g>
<title>import_single_range (2 samples, 0.07%)</title><rect x="556.7" y="467.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="559.7" y="478.0"></text>
</g>
<g>
<title>sock_sendmsg (360 samples, 12.02%)</title><rect x="557.5" y="467.0" width="141.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="560.5" y="478.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.07%)</title><rect x="557.5" y="451.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="560.5" y="462.0"></text>
</g>
<g>
<title>inet_send_prepare (1 samples, 0.03%)</title><rect x="557.9" y="435.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="560.9" y="446.0"></text>
</g>
<g>
<title>tcp_sendmsg (358 samples, 11.95%)</title><rect x="558.3" y="451.0" width="141.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.3" y="462.0">tcp_sendmsg</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="558.3" y="435.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="561.3" y="446.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="558.3" y="419.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="561.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="558.6" y="435.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="561.6" y="446.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.07%)</title><rect x="559.0" y="435.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.07%)</title><rect x="559.0" y="419.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="562.0" y="430.0"></text>
</g>
<g>
<title>release_sock (4 samples, 0.13%)</title><rect x="559.8" y="435.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="562.8" y="446.0"></text>
</g>
<g>
<title>__release_sock (3 samples, 0.10%)</title><rect x="559.8" y="419.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="562.8" y="430.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.10%)</title><rect x="559.8" y="403.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="562.8" y="414.0"></text>
</g>
<g>
<title>tcp_rcv_established (3 samples, 0.10%)</title><rect x="559.8" y="387.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="562.8" y="398.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="560.2" y="371.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="563.2" y="382.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.03%)</title><rect x="560.2" y="355.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="563.2" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="560.2" y="339.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="563.2" y="350.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="560.6" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="563.6" y="382.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="560.6" y="355.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="563.6" y="366.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="561.0" y="419.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="564.0" y="430.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (350 samples, 11.68%)</title><rect x="561.4" y="435.0" width="137.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="564.4" y="446.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__tcp_push_pending_frames (305 samples, 10.18%)</title><rect x="564.9" y="419.0" width="120.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="567.9" y="430.0">__tcp_push_pend..</text>
</g>
<g>
<title>tcp_write_xmit (305 samples, 10.18%)</title><rect x="564.9" y="403.0" width="120.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="567.9" y="414.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (285 samples, 9.51%)</title><rect x="568.5" y="387.0" width="112.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="571.5" y="398.0">__tcp_transmit..</text>
</g>
<g>
<title>__ip_queue_xmit (264 samples, 8.81%)</title><rect x="572.0" y="371.0" width="104.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="575.0" y="382.0">__ip_queue_x..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.07%)</title><rect x="572.8" y="355.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="575.8" y="366.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.07%)</title><rect x="573.6" y="355.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="576.6" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.07%)</title><rect x="573.6" y="339.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="576.6" y="350.0"></text>
</g>
<g>
<title>ip_output (258 samples, 8.61%)</title><rect x="574.4" y="355.0" width="101.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="577.4" y="366.0">ip_output</text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="575.6" y="339.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="578.6" y="350.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="575.6" y="323.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="578.6" y="334.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="575.6" y="307.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="578.6" y="318.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="575.6" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="578.6" y="302.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="575.6" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="578.6" y="286.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="575.6" y="259.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="578.6" y="270.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="575.6" y="243.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="578.6" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="575.6" y="227.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="578.6" y="238.0"></text>
</g>
<g>
<title>ip_finish_output2 (251 samples, 8.38%)</title><rect x="576.0" y="339.0" width="98.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="579.0" y="350.0">ip_finish_ou..</text>
</g>
<g>
<title>__dev_queue_xmit (20 samples, 0.67%)</title><rect x="578.3" y="323.0" width="7.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.3" y="334.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="579.5" y="307.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="582.5" y="318.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (13 samples, 0.43%)</title><rect x="579.9" y="307.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="582.9" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (13 samples, 0.43%)</title><rect x="579.9" y="291.0" width="5.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="582.9" y="302.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="580.7" y="275.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="583.7" y="286.0"></text>
</g>
<g>
<title>netif_rx (8 samples, 0.27%)</title><rect x="581.1" y="275.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="584.1" y="286.0"></text>
</g>
<g>
<title>netif_rx_internal (8 samples, 0.27%)</title><rect x="581.1" y="259.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="584.1" y="270.0"></text>
</g>
<g>
<title>enqueue_to_backlog (7 samples, 0.23%)</title><rect x="581.5" y="243.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="584.5" y="254.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="584.2" y="275.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="587.2" y="286.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="584.6" y="275.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.6" y="286.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.07%)</title><rect x="585.0" y="307.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="588.0" y="318.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="585.0" y="291.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="588.0" y="302.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.03%)</title><rect x="585.4" y="291.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="588.4" y="302.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="585.8" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="588.8" y="318.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (225 samples, 7.51%)</title><rect x="586.2" y="323.0" width="88.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="589.2" y="334.0">__local_bh..</text>
</g>
<g>
<title>do_softirq (221 samples, 7.38%)</title><rect x="587.0" y="307.0" width="87.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.0" y="318.0">do_softirq</text>
</g>
<g>
<title>do_softirq_own_stack (217 samples, 7.24%)</title><rect x="588.6" y="291.0" width="85.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="591.6" y="302.0">do_softirq..</text>
</g>
<g>
<title>asm_call_sysvec_on_stack (217 samples, 7.24%)</title><rect x="588.6" y="275.0" width="85.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="591.6" y="286.0">asm_call_s..</text>
</g>
<g>
<title>__softirqentry_text_start (217 samples, 7.24%)</title><rect x="588.6" y="259.0" width="85.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="591.6" y="270.0">__softirqe..</text>
</g>
<g>
<title>net_rx_action (207 samples, 6.91%)</title><rect x="592.5" y="243.0" width="81.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="595.5" y="254.0">net_rx_ac..</text>
</g>
<g>
<title>debug_smp_processor_id (1 samples, 0.03%)</title><rect x="594.1" y="227.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="597.1" y="238.0"></text>
</g>
<g>
<title>process_backlog (202 samples, 6.74%)</title><rect x="594.5" y="227.0" width="79.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="597.5" y="238.0">process_b..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (199 samples, 6.64%)</title><rect x="595.3" y="211.0" width="78.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="598.3" y="222.0">__netif_r..</text>
</g>
<g>
<title>__netif_receive_skb_core (6 samples, 0.20%)</title><rect x="595.7" y="195.0" width="2.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="598.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv (192 samples, 6.41%)</title><rect x="598.0" y="195.0" width="75.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.0" y="206.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (182 samples, 6.07%)</title><rect x="598.4" y="179.0" width="71.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="601.4" y="190.0">ip_local..</text>
</g>
<g>
<title>ip_local_deliver_finish (180 samples, 6.01%)</title><rect x="599.2" y="163.0" width="70.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="602.2" y="174.0">ip_local..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (180 samples, 6.01%)</title><rect x="599.2" y="147.0" width="70.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="602.2" y="158.0">ip_proto..</text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.10%)</title><rect x="600.0" y="131.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="603.0" y="142.0"></text>
</g>
<g>
<title>tcp_v4_rcv (175 samples, 5.84%)</title><rect x="601.2" y="131.0" width="68.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="604.2" y="142.0">tcp_v4_..</text>
</g>
<g>
<title>__inet_lookup_established (9 samples, 0.30%)</title><rect x="603.2" y="115.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="606.2" y="126.0"></text>
</g>
<g>
<title>_raw_spin_unlock (1 samples, 0.03%)</title><rect x="606.7" y="115.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="609.7" y="126.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="607.1" y="115.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.1" y="126.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (7 samples, 0.23%)</title><rect x="607.5" y="115.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="610.5" y="126.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (3 samples, 0.10%)</title><rect x="607.5" y="99.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.5" y="110.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (4 samples, 0.13%)</title><rect x="608.7" y="99.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.7" y="110.0"></text>
</g>
<g>
<title>tcp_add_backlog (2 samples, 0.07%)</title><rect x="610.2" y="115.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="613.2" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (150 samples, 5.01%)</title><rect x="611.0" y="115.0" width="59.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="614.0" y="126.0">tcp_v4..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="611.0" y="99.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="614.0" y="110.0"></text>
</g>
<g>
<title>tcp_rcv_established (149 samples, 4.97%)</title><rect x="611.4" y="99.0" width="58.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.4" y="110.0">tcp_rc..</text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="613.8" y="83.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="616.8" y="94.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.10%)</title><rect x="613.8" y="67.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="616.8" y="78.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.10%)</title><rect x="613.8" y="51.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="616.8" y="62.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="614.6" y="35.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="617.6" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (92 samples, 3.07%)</title><rect x="615.0" y="83.0" width="36.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="618.0" y="94.0">soc..</text>
</g>
<g>
<title>__rcu_read_lock (1 samples, 0.03%)</title><rect x="615.4" y="67.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="618.4" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (90 samples, 3.00%)</title><rect x="615.8" y="67.0" width="35.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="618.8" y="78.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (90 samples, 3.00%)</title><rect x="615.8" y="51.0" width="35.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="618.8" y="62.0">_ra..</text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="650.8" y="35.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="653.8" y="46.0"></text>
</g>
<g>
<title>tcp_ack (37 samples, 1.23%)</title><rect x="651.2" y="83.0" width="14.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="654.2" y="94.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.27%)</title><rect x="654.4" y="67.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="657.4" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.13%)</title><rect x="654.4" y="51.0" width="1.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="657.4" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.07%)</title><rect x="654.7" y="35.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="657.7" y="46.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (1 samples, 0.03%)</title><rect x="655.5" y="35.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="658.5" y="46.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.13%)</title><rect x="655.9" y="51.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="658.9" y="62.0"></text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.07%)</title><rect x="657.5" y="67.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="660.5" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (7 samples, 0.23%)</title><rect x="658.3" y="67.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="661.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (4 samples, 0.13%)</title><rect x="658.3" y="51.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="661.3" y="62.0"></text>
</g>
<g>
<title>cache_from_obj (2 samples, 0.07%)</title><rect x="659.9" y="51.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="662.9" y="62.0"></text>
</g>
<g>
<title>slab_free_freelist_hook (1 samples, 0.03%)</title><rect x="660.7" y="51.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="663.7" y="62.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="661.0" y="67.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="664.0" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt (4 samples, 0.13%)</title><rect x="661.4" y="67.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="664.4" y="78.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="663.0" y="67.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.0" y="78.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (2 samples, 0.07%)</title><rect x="663.4" y="67.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="666.4" y="78.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (2 samples, 0.07%)</title><rect x="664.2" y="67.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="667.2" y="78.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.07%)</title><rect x="665.0" y="67.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="668.0" y="78.0"></text>
</g>
<g>
<title>tcp_check_space (6 samples, 0.20%)</title><rect x="665.8" y="83.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="668.8" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.07%)</title><rect x="668.1" y="83.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="671.1" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="668.9" y="83.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="671.9" y="94.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="668.9" y="67.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="671.9" y="78.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="668.9" y="51.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.9" y="62.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.07%)</title><rect x="669.3" y="83.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.3" y="94.0"></text>
</g>
<g>
<title>ip_rcv_core (7 samples, 0.23%)</title><rect x="670.1" y="179.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="673.1" y="190.0"></text>
</g>
<g>
<title>check_preemption_disabled (1 samples, 0.03%)</title><rect x="672.5" y="163.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="675.5" y="174.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.07%)</title><rect x="672.9" y="179.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="675.9" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.constprop.0 (2 samples, 0.07%)</title><rect x="672.9" y="163.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="675.9" y="174.0"></text>
</g>
<g>
<title>__rcu_read_unlock (1 samples, 0.03%)</title><rect x="673.7" y="211.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="676.7" y="222.0"></text>
</g>
<g>
<title>preempt_schedule_thunk (2 samples, 0.07%)</title><rect x="674.0" y="307.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="677.0" y="318.0"></text>
</g>
<g>
<title>preempt_schedule_common (2 samples, 0.07%)</title><rect x="674.0" y="291.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="677.0" y="302.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="674.4" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="677.4" y="286.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.10%)</title><rect x="674.8" y="339.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="677.8" y="350.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.07%)</title><rect x="675.2" y="323.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="678.2" y="334.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (5 samples, 0.17%)</title><rect x="676.0" y="371.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="679.0" y="382.0"></text>
</g>
<g>
<title>skb_clone (5 samples, 0.17%)</title><rect x="678.0" y="371.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="681.0" y="382.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.03%)</title><rect x="680.0" y="371.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="683.0" y="382.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="680.3" y="371.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="683.3" y="382.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.07%)</title><rect x="680.7" y="387.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="683.7" y="398.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.07%)</title><rect x="680.7" y="371.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="683.7" y="382.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="681.5" y="387.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.5" y="398.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.17%)</title><rect x="681.9" y="387.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="684.9" y="398.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.10%)</title><rect x="682.3" y="371.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="685.3" y="382.0"></text>
</g>
<g>
<title>__mod_timer (3 samples, 0.10%)</title><rect x="682.3" y="355.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="685.3" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.07%)</title><rect x="682.7" y="339.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="685.7" y="350.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="683.5" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="686.5" y="382.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe.part.0 (2 samples, 0.07%)</title><rect x="683.9" y="387.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.9" y="398.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.0 (1 samples, 0.03%)</title><rect x="684.7" y="387.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="687.7" y="398.0"></text>
</g>
<g>
<title>__x86_retpoline_rax (1 samples, 0.03%)</title><rect x="685.1" y="419.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="688.1" y="430.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="685.5" y="419.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="688.5" y="430.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="685.5" y="403.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="688.5" y="414.0"></text>
</g>
<g>
<title>irq_exit_rcu (2 samples, 0.07%)</title><rect x="685.5" y="387.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="688.5" y="398.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.07%)</title><rect x="685.5" y="371.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.5" y="382.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (2 samples, 0.07%)</title><rect x="685.5" y="355.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="688.5" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.07%)</title><rect x="685.5" y="339.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="688.5" y="350.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="685.9" y="323.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="688.9" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="685.9" y="307.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="688.9" y="318.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (10 samples, 0.33%)</title><rect x="686.3" y="419.0" width="3.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="689.3" y="430.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.30%)</title><rect x="686.6" y="403.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="689.6" y="414.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.13%)</title><rect x="687.0" y="387.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="690.0" y="398.0"></text>
</g>
<g>
<title>__slab_alloc.constprop.0 (1 samples, 0.03%)</title><rect x="687.4" y="371.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="690.4" y="382.0"></text>
</g>
<g>
<title>memcg_kmem_put_cache (2 samples, 0.07%)</title><rect x="687.8" y="371.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="690.8" y="382.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.03%)</title><rect x="688.6" y="387.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="691.6" y="398.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.10%)</title><rect x="689.0" y="387.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="692.0" y="398.0"></text>
</g>
<g>
<title>memset_erms (1 samples, 0.03%)</title><rect x="689.8" y="371.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="692.8" y="382.0"></text>
</g>
<g>
<title>skb_do_copy_data_nocache (9 samples, 0.30%)</title><rect x="690.2" y="419.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="693.2" y="430.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.13%)</title><rect x="690.6" y="403.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="693.6" y="414.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.07%)</title><rect x="691.4" y="387.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="694.4" y="398.0"></text>
</g>
<g>
<title>_copy_from_iter_full (4 samples, 0.13%)</title><rect x="692.2" y="403.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="695.2" y="414.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.10%)</title><rect x="692.6" y="387.0" width="1.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="695.6" y="398.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.07%)</title><rect x="693.7" y="419.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="696.7" y="430.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.03%)</title><rect x="694.5" y="419.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="697.5" y="430.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="694.9" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="697.9" y="430.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.27%)</title><rect x="695.3" y="419.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="698.3" y="430.0"></text>
</g>
<g>
<title>tcp_current_mss (8 samples, 0.27%)</title><rect x="695.3" y="403.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="698.3" y="414.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="698.1" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="701.1" y="398.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.07%)</title><rect x="698.5" y="419.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="701.5" y="430.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.13%)</title><rect x="699.3" y="467.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.3" y="478.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.13%)</title><rect x="699.3" y="451.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="702.3" y="462.0"></text>
</g>
<g>
<title>__fget_files (3 samples, 0.10%)</title><rect x="699.6" y="435.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.6" y="446.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="700.8" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="703.8" y="510.0"></text>
</g>
<g>
<title>__audit_syscall_entry (1 samples, 0.03%)</title><rect x="700.8" y="483.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="703.8" y="494.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="701.2" y="547.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="704.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.10%)</title><rect x="701.6" y="627.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="704.6" y="638.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="702.0" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="705.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="702.0" y="595.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="705.0" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (1 samples, 0.03%)</title><rect x="702.8" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$104/10587719.get (1 samples, 0.03%)</title><rect x="703.2" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="706.2" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ResponseMerger.mergePutResponses (1 samples, 0.03%)</title><rect x="703.2" y="627.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.2" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.03%)</title><rect x="703.2" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="706.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$85/701717217.get (119 samples, 3.97%)</title><rect x="703.6" y="643.0" width="46.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="706.6" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.lambda$handleRequest$2 (119 samples, 3.97%)</title><rect x="703.6" y="627.0" width="46.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="706.6" y="638.0">ru/m..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="704.0" y="611.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="707.0" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handlePut (117 samples, 3.91%)</title><rect x="704.4" y="611.0" width="46.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="707.4" y="622.0">ru/m..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="704.4" y="595.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="707.4" y="606.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="704.4" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="707.4" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="704.4" y="563.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="707.4" y="574.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="704.4" y="547.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="707.4" y="558.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="704.4" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="707.4" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="704.4" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="707.4" y="526.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="704.4" y="499.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="707.4" y="510.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="704.4" y="483.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="707.4" y="494.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.07%)</title><rect x="704.8" y="595.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="707.8" y="606.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="704.8" y="579.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="707.8" y="590.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="704.8" y="563.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="707.8" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="704.8" y="547.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="707.8" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="704.8" y="531.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="707.8" y="542.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.07%)</title><rect x="704.8" y="515.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="707.8" y="526.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="704.8" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="707.8" y="510.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="705.2" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="708.2" y="510.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/DAOImpl.upsert (112 samples, 3.74%)</title><rect x="705.6" y="595.0" width="44.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="708.6" y="606.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (7 samples, 0.23%)</title><rect x="707.9" y="579.0" width="2.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.9" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (7 samples, 0.23%)</title><rect x="707.9" y="563.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="710.9" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared (1 samples, 0.03%)</title><rect x="707.9" y="547.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.9" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (6 samples, 0.20%)</title><rect x="708.3" y="547.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.3" y="558.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.remove (6 samples, 0.20%)</title><rect x="708.3" y="531.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="711.3" y="542.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.10%)</title><rect x="709.5" y="515.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="712.5" y="526.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/MemTable.upsert (99 samples, 3.30%)</title><rect x="710.7" y="579.0" width="39.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="713.7" y="590.0">ru/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="710.7" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="713.7" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="710.7" y="547.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="713.7" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="710.7" y="531.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="713.7" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="710.7" y="515.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="713.7" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="710.7" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="713.7" y="510.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="710.7" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="713.7" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.17%)</title><rect x="711.1" y="563.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.1" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.03%)</title><rect x="712.2" y="547.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="715.2" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="712.6" y="547.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="715.6" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="712.6" y="531.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="715.6" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="712.6" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="715.6" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="712.6" y="499.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="715.6" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="712.6" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="715.6" y="494.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="712.6" y="467.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="715.6" y="478.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="712.6" y="451.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="715.6" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="712.6" y="435.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="715.6" y="446.0"></text>
</g>
<g>
<title>G1AllocRegion::fill_up_remaining_space(HeapRegion*) (1 samples, 0.03%)</title><rect x="712.6" y="419.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="715.6" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (92 samples, 3.07%)</title><rect x="713.0" y="563.0" width="36.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.0" y="574.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (85 samples, 2.84%)</title><rect x="715.0" y="547.0" width="33.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.0" y="558.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="716.2" y="531.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.2" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (80 samples, 2.67%)</title><rect x="717.0" y="531.0" width="31.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.0" y="542.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (80 samples, 2.67%)</title><rect x="717.0" y="515.0" width="31.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.0" y="526.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (25 samples, 0.83%)</title><rect x="738.6" y="499.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="741.6" y="510.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.23%)</title><rect x="738.6" y="483.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="741.6" y="494.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (18 samples, 0.60%)</title><rect x="741.4" y="483.0" width="7.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="744.4" y="494.0"></text>
</g>
<g>
<title>vectorizedMismatch (3 samples, 0.10%)</title><rect x="747.3" y="467.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="750.3" y="478.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.07%)</title><rect x="748.5" y="547.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="751.5" y="558.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="748.5" y="531.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="751.5" y="542.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="748.9" y="531.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="751.9" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/gogun/Value.&lt;init&gt; (1 samples, 0.03%)</title><rect x="749.3" y="563.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="752.3" y="574.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.03%)</title><rect x="749.3" y="547.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="752.3" y="558.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="749.3" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="752.3" y="542.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ServiceUtils.getBuffer (2 samples, 0.07%)</title><rect x="749.7" y="595.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="749.7" y="579.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.7" y="590.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="749.7" y="563.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="752.7" y="574.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="749.7" y="547.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="752.7" y="558.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="749.7" y="531.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="752.7" y="542.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="749.7" y="515.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="752.7" y="526.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="749.7" y="499.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="752.7" y="510.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="749.7" y="483.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="752.7" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.03%)</title><rect x="749.7" y="467.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="752.7" y="478.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="750.1" y="483.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="753.1" y="494.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="750.1" y="467.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="753.1" y="478.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="750.1" y="451.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="753.1" y="462.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="750.1" y="435.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="753.1" y="446.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="750.1" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="753.1" y="430.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="750.1" y="403.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="753.1" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="750.1" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="753.1" y="398.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="750.1" y="371.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="753.1" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="750.1" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="753.1" y="366.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (3 samples, 0.10%)</title><rect x="750.5" y="707.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleRequest (2 samples, 0.07%)</title><rect x="751.6" y="739.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/ConsistentHashing.primaryFor (2 samples, 0.07%)</title><rect x="751.6" y="723.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.6" y="734.0"></text>
</g>
<g>
<title>java/util/TreeSet.size (2 samples, 0.07%)</title><rect x="751.6" y="707.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="754.6" y="718.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (539 samples, 17.99%)</title><rect x="752.4" y="755.0" width="212.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.4" y="766.0">one/nio/server/SelectorThrea..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.13%)</title><rect x="754.4" y="739.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="757.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (165 samples, 5.51%)</title><rect x="756.0" y="739.0" width="65.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="759.0" y="750.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (161 samples, 5.37%)</title><rect x="757.5" y="723.0" width="63.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.5" y="734.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.07%)</title><rect x="760.3" y="707.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="763.3" y="718.0"></text>
</g>
<g>
<title>__clock_gettime (9 samples, 0.30%)</title><rect x="761.1" y="707.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="764.1" y="718.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.07%)</title><rect x="763.8" y="691.0" width="0.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="766.8" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.07%)</title><rect x="764.6" y="707.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="767.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="765.4" y="707.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="768.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="765.4" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="768.4" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="765.4" y="675.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="768.4" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="765.4" y="659.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="768.4" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="765.4" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="768.4" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="765.4" y="627.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="768.4" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="765.4" y="611.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="768.4" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="765.4" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="768.4" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="765.4" y="579.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="768.4" y="590.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="765.8" y="707.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="768.8" y="718.0"></text>
</g>
<g>
<title>epoll_wait (138 samples, 4.61%)</title><rect x="766.2" y="707.0" width="54.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="769.2" y="718.0">epoll..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (117 samples, 3.91%)</title><rect x="774.5" y="691.0" width="46.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="777.5" y="702.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (117 samples, 3.91%)</title><rect x="774.5" y="675.0" width="46.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="777.5" y="686.0">do_s..</text>
</g>
<g>
<title>__syscall_return_slowpath (2 samples, 0.07%)</title><rect x="779.6" y="659.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="782.6" y="670.0"></text>
</g>
<g>
<title>__audit_syscall_exit (2 samples, 0.07%)</title><rect x="779.6" y="643.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="782.6" y="654.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (100 samples, 3.34%)</title><rect x="780.4" y="659.0" width="39.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="783.4" y="670.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (98 samples, 3.27%)</title><rect x="781.2" y="643.0" width="38.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="784.2" y="654.0">do_..</text>
</g>
<g>
<title>__fget_light (5 samples, 0.17%)</title><rect x="786.7" y="627.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="789.7" y="638.0"></text>
</g>
<g>
<title>__fget_files (4 samples, 0.13%)</title><rect x="787.1" y="611.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="790.1" y="622.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.07%)</title><rect x="788.7" y="627.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="791.7" y="638.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="789.1" y="611.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="792.1" y="622.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.0 (38 samples, 1.27%)</title><rect x="789.4" y="627.0" width="15.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="792.4" y="638.0"></text>
</g>
<g>
<title>__x86_retpoline_rbx (2 samples, 0.07%)</title><rect x="789.8" y="611.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="792.8" y="622.0"></text>
</g>
<g>
<title>_raw_write_unlock_irq (2 samples, 0.07%)</title><rect x="790.6" y="611.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="793.6" y="622.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="791.0" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="794.0" y="606.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="791.0" y="579.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="794.0" y="590.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="791.0" y="563.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.0" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="791.0" y="547.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="794.0" y="558.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="791.0" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="794.0" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="791.0" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="794.0" y="526.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="791.0" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="794.0" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="791.0" y="483.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="794.0" y="494.0"></text>
</g>
<g>
<title>ep_send_events_proc (32 samples, 1.07%)</title><rect x="791.4" y="611.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.4" y="622.0"></text>
</g>
<g>
<title>ep_item_poll (23 samples, 0.77%)</title><rect x="795.0" y="595.0" width="9.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="798.0" y="606.0"></text>
</g>
<g>
<title>sock_poll (18 samples, 0.60%)</title><rect x="796.9" y="579.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="799.9" y="590.0"></text>
</g>
<g>
<title>tcp_poll (9 samples, 0.30%)</title><rect x="800.5" y="563.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="803.5" y="574.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.10%)</title><rect x="802.8" y="547.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="805.8" y="558.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="804.0" y="611.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="807.0" y="622.0"></text>
</g>
<g>
<title>fput_many (3 samples, 0.10%)</title><rect x="804.4" y="627.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="807.4" y="638.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (36 samples, 1.20%)</title><rect x="805.6" y="627.0" width="14.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="808.6" y="638.0"></text>
</g>
<g>
<title>schedule (33 samples, 1.10%)</title><rect x="806.8" y="611.0" width="13.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="809.8" y="622.0"></text>
</g>
<g>
<title>__schedule (32 samples, 1.07%)</title><rect x="807.2" y="595.0" width="12.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="810.2" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (27 samples, 0.90%)</title><rect x="809.1" y="579.0" width="10.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="812.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (27 samples, 0.90%)</title><rect x="809.1" y="563.0" width="10.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="812.1" y="574.0"></text>
</g>
<g>
<title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="818.2" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="821.2" y="558.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.03%)</title><rect x="818.2" y="531.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="821.2" y="542.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="818.2" y="515.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="821.2" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="818.2" y="499.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="821.2" y="510.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="818.2" y="483.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="821.2" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="818.2" y="467.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.2" y="478.0"></text>
</g>
<g>
<title>tasklet_action_common.constprop.0 (1 samples, 0.03%)</title><rect x="818.2" y="451.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="821.2" y="462.0"></text>
</g>
<g>
<title>execlists_submission_tasklet?[i915] (1 samples, 0.03%)</title><rect x="818.2" y="435.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="821.2" y="446.0"></text>
</g>
<g>
<title>process_csb?[i915] (1 samples, 0.03%)</title><rect x="818.2" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="821.2" y="430.0"></text>
</g>
<g>
<title>execlists_schedule_out?[i915] (1 samples, 0.03%)</title><rect x="818.2" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="821.2" y="414.0"></text>
</g>
<g>
<title>queue_work_on (1 samples, 0.03%)</title><rect x="818.2" y="387.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="821.2" y="398.0"></text>
</g>
<g>
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="818.6" y="547.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="821.6" y="558.0"></text>
</g>
<g>
<title>sysvec_apic_timer_interrupt (2 samples, 0.07%)</title><rect x="818.6" y="531.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.6" y="542.0"></text>
</g>
<g>
<title>irq_exit_rcu (2 samples, 0.07%)</title><rect x="818.6" y="515.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="821.6" y="526.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.07%)</title><rect x="818.6" y="499.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="821.6" y="510.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (2 samples, 0.07%)</title><rect x="818.6" y="483.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="821.6" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.07%)</title><rect x="818.6" y="467.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="821.6" y="478.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.03%)</title><rect x="819.0" y="451.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="822.0" y="462.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.03%)</title><rect x="819.0" y="435.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="822.0" y="446.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="819.0" y="419.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.0" y="430.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="819.0" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="822.0" y="414.0"></text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="819.0" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="822.0" y="398.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="819.0" y="371.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="822.0" y="382.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="819.0" y="355.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="822.0" y="366.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.03%)</title><rect x="819.0" y="339.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="822.0" y="350.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="819.0" y="323.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="822.0" y="334.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.03%)</title><rect x="819.0" y="307.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="822.0" y="318.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.03%)</title><rect x="819.0" y="291.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="822.0" y="302.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="819.0" y="275.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="822.0" y="286.0"></text>
</g>
<g>
<title>preempt_count_sub (1 samples, 0.03%)</title><rect x="819.4" y="547.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.4" y="558.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="819.8" y="659.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="822.8" y="670.0"></text>
</g>
<g>
<title>epoll_wait@plt (1 samples, 0.03%)</title><rect x="820.6" y="707.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="823.6" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (360 samples, 12.02%)</title><rect x="821.0" y="739.0" width="141.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.0" y="750.0">one/nio/net/Sessio..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.07%)</title><rect x="824.9" y="723.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="827.9" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="824.9" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="827.9" y="718.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="824.9" y="691.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="827.9" y="702.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.03%)</title><rect x="825.3" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="828.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (348 samples, 11.62%)</title><rect x="825.7" y="723.0" width="137.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="828.7" y="734.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (225 samples, 7.51%)</title><rect x="825.7" y="707.0" width="88.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="828.7" y="718.0">one/nio/ht..</text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="826.9" y="691.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="829.9" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (143 samples, 4.77%)</title><rect x="827.3" y="691.0" width="56.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.3" y="702.0">one/ni..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (2 samples, 0.07%)</title><rect x="830.0" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (134 samples, 4.47%)</title><rect x="830.8" y="675.0" width="52.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.8" y="686.0">one/n..</text>
</g>
<g>
<title>RequestHandler0_handleHttpPath.handleRequest (119 samples, 3.97%)</title><rect x="832.8" y="659.0" width="46.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="835.8" y="670.0">Requ..</text>
</g>
<g>
<title>one/nio/http/Request.getRequiredParameter (9 samples, 0.30%)</title><rect x="832.8" y="643.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="835.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.30%)</title><rect x="832.8" y="627.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.8" y="638.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="833.2" y="611.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="836.2" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="833.2" y="595.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.2" y="606.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.17%)</title><rect x="833.6" y="611.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="836.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.10%)</title><rect x="834.3" y="595.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="837.3" y="606.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.07%)</title><rect x="834.3" y="579.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="837.3" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="834.3" y="563.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="837.3" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.07%)</title><rect x="834.3" y="547.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="837.3" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="834.3" y="531.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="837.3" y="542.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="834.3" y="515.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="837.3" y="526.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="834.7" y="515.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="837.7" y="526.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.03%)</title><rect x="834.7" y="499.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="837.7" y="510.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="835.1" y="579.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="838.1" y="590.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.07%)</title><rect x="835.5" y="611.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="838.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="835.5" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.5" y="606.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="835.5" y="579.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.5" y="590.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="835.5" y="563.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.5" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.handleHttpPath (110 samples, 3.67%)</title><rect x="836.3" y="643.0" width="43.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="839.3" y="654.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl.execute (110 samples, 3.67%)</title><rect x="836.3" y="627.0" width="43.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.3" y="638.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="837.5" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="840.5" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="837.5" y="595.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/gogun/AsyncServiceImpl$$Lambda$78/1542953385.get$Lambda (1 samples, 0.03%)</title><rect x="837.5" y="579.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="840.5" y="590.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="837.5" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="840.5" y="574.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="837.5" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="840.5" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="837.5" y="531.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="840.5" y="542.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="837.5" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="840.5" y="526.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="837.5" y="499.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="840.5" y="510.0"></text>
</g>
<g>
<title>ObjectSampler::is_created() (1 samples, 0.03%)</title><rect x="837.5" y="483.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="840.5" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (105 samples, 3.50%)</title><rect x="837.9" y="611.0" width="41.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.9" y="622.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (102 samples, 3.40%)</title><rect x="838.7" y="595.0" width="40.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.7" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (6 samples, 0.20%)</title><rect x="840.6" y="579.0" width="2.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="842.6" y="563.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="842.6" y="547.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.6" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="842.6" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.6" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.03%)</title><rect x="842.6" y="515.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.6" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="842.6" y="499.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="845.6" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="842.6" y="483.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="845.6" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (7 samples, 0.23%)</title><rect x="843.0" y="579.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="846.0" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.23%)</title><rect x="843.0" y="563.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="846.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.20%)</title><rect x="843.0" y="547.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="846.0" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.20%)</title><rect x="843.0" y="531.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="846.0" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.20%)</title><rect x="843.0" y="515.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="846.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.13%)</title><rect x="843.8" y="499.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.8" y="510.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="843.8" y="483.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="846.8" y="494.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="844.2" y="467.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="847.2" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="844.2" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="847.2" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="844.2" y="435.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="847.2" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="844.2" y="419.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="847.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="844.6" y="483.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="847.6" y="494.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="844.6" y="467.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="847.6" y="478.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="845.0" y="467.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="848.0" y="478.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="845.0" y="451.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.0" y="462.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="845.0" y="435.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="848.0" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="845.0" y="419.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="848.0" y="430.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="845.0" y="403.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.0" y="414.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="845.0" y="387.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="848.0" y="398.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="845.0" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="848.0" y="382.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="845.0" y="355.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="848.0" y="366.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="845.4" y="547.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.4" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (84 samples, 2.80%)</title><rect x="845.8" y="579.0" width="33.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="848.8" y="590.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (84 samples, 2.80%)</title><rect x="845.8" y="563.0" width="33.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.8" y="574.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (84 samples, 2.80%)</title><rect x="845.8" y="547.0" width="33.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="848.8" y="558.0">ja..</text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="845.8" y="531.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="848.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="845.8" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="848.8" y="526.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="845.8" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="848.8" y="510.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="845.8" y="483.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="848.8" y="494.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="845.8" y="467.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="848.8" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="845.8" y="451.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="848.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="845.8" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="848.8" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (83 samples, 2.77%)</title><rect x="846.2" y="531.0" width="32.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.2" y="542.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="846.6" y="515.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (81 samples, 2.70%)</title><rect x="846.9" y="515.0" width="32.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="849.9" y="526.0">jd..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.07%)</title><rect x="847.7" y="499.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="850.7" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="848.5" y="499.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="851.5" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="848.9" y="499.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="851.9" y="510.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.47%)</title><rect x="849.3" y="499.0" width="5.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="852.3" y="510.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="850.5" y="483.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="853.5" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="850.9" y="483.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="853.9" y="494.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.07%)</title><rect x="851.7" y="483.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="854.7" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="852.5" y="483.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="855.5" y="494.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.07%)</title><rect x="852.9" y="483.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="855.9" y="494.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.07%)</title><rect x="853.6" y="483.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="856.6" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="854.4" y="483.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="857.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="854.8" y="499.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="857.8" y="510.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="854.8" y="483.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="857.8" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (60 samples, 2.00%)</title><rect x="855.2" y="499.0" width="23.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="858.2" y="510.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (57 samples, 1.90%)</title><rect x="856.4" y="483.0" width="22.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="859.4" y="494.0">e..</text>
</g>
<g>
<title>do_syscall_64 (57 samples, 1.90%)</title><rect x="856.4" y="467.0" width="22.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="859.4" y="478.0">d..</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="857.2" y="451.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="860.2" y="462.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="857.2" y="435.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="860.2" y="446.0"></text>
</g>
<g>
<title>__x64_sys_futex (52 samples, 1.74%)</title><rect x="857.6" y="451.0" width="20.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="860.6" y="462.0"></text>
</g>
<g>
<title>do_futex (52 samples, 1.74%)</title><rect x="857.6" y="435.0" width="20.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="860.6" y="446.0"></text>
</g>
<g>
<title>futex_wake (52 samples, 1.74%)</title><rect x="857.6" y="419.0" width="20.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="860.6" y="430.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="859.2" y="403.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.2" y="414.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.13%)</title><rect x="859.6" y="403.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="862.6" y="414.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="860.7" y="387.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="863.7" y="398.0"></text>
</g>
<g>
<title>wake_up_q (43 samples, 1.44%)</title><rect x="861.1" y="403.0" width="17.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="864.1" y="414.0"></text>
</g>
<g>
<title>try_to_wake_up (43 samples, 1.44%)</title><rect x="861.1" y="387.0" width="17.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="864.1" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (43 samples, 1.44%)</title><rect x="861.1" y="371.0" width="17.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="864.1" y="382.0"></text>
</g>
<g>
<title>syscall_trace_enter (2 samples, 0.07%)</title><rect x="878.1" y="451.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="881.1" y="462.0"></text>
</g>
<g>
<title>__audit_syscall_entry (2 samples, 0.07%)</title><rect x="878.1" y="435.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="881.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.isRunning (1 samples, 0.03%)</title><rect x="878.9" y="595.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="881.9" y="606.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="879.2" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (8 samples, 0.27%)</title><rect x="879.6" y="659.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="882.6" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.27%)</title><rect x="879.6" y="643.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.6" y="654.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.20%)</title><rect x="879.6" y="627.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.6" y="638.0"></text>
</g>
<g>
<title>RequestHandler0_handleHttpPath.handleRequest (4 samples, 0.13%)</title><rect x="879.6" y="611.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.6" y="622.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="881.2" y="611.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="884.2" y="622.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="882.0" y="627.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="885.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="882.0" y="611.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.0" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.07%)</title><rect x="882.0" y="595.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="885.0" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.07%)</title><rect x="882.8" y="659.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="885.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="882.8" y="643.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="882.8" y="627.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.8" y="638.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.07%)</title><rect x="882.8" y="611.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="885.8" y="622.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="882.8" y="595.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="885.8" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="882.8" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="885.8" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="882.8" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="885.8" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="882.8" y="547.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="885.8" y="558.0"></text>
</g>
<g>
<title>asm_sysvec_reschedule_ipi (1 samples, 0.03%)</title><rect x="883.2" y="579.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="886.2" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="883.2" y="563.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="886.2" y="574.0"></text>
</g>
<g>
<title>__prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="883.2" y="547.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.2" y="558.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="883.2" y="531.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="886.2" y="542.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="883.2" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="886.2" y="526.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="883.2" y="499.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="886.2" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irq (1 samples, 0.03%)</title><rect x="883.2" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="886.2" y="494.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 1.00%)</title><rect x="883.6" y="691.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="886.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 0.37%)</title><rect x="884.0" y="675.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="887.0" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="884.0" y="659.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="887.0" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.07%)</title><rect x="884.0" y="643.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="887.0" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="884.4" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="887.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="884.4" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="887.4" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="884.4" y="595.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="887.4" y="606.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="884.4" y="579.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="887.4" y="590.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.30%)</title><rect x="884.8" y="659.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="887.8" y="670.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (9 samples, 0.30%)</title><rect x="884.8" y="643.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="887.8" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (9 samples, 0.30%)</title><rect x="884.8" y="627.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="887.8" y="638.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.13%)</title><rect x="886.7" y="611.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.7" y="622.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (13 samples, 0.43%)</title><rect x="888.3" y="675.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.3" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 0.37%)</title><rect x="889.1" y="659.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="892.1" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.10%)</title><rect x="891.8" y="643.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="894.8" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.10%)</title><rect x="891.8" y="627.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="894.8" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.10%)</title><rect x="891.8" y="611.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="894.8" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (2 samples, 0.07%)</title><rect x="891.8" y="595.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="894.8" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.07%)</title><rect x="891.8" y="579.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="894.8" y="590.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="891.8" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="894.8" y="574.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="891.8" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="894.8" y="558.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="891.8" y="531.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="894.8" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="891.8" y="515.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="894.8" y="526.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="891.8" y="499.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="894.8" y="510.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="892.2" y="563.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="895.2" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="892.2" y="547.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="895.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr_slow (1 samples, 0.03%)</title><rect x="892.6" y="595.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="895.6" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="893.0" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="893.0" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.0" y="638.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="893.0" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="893.0" y="595.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="896.0" y="606.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="893.0" y="579.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="896.0" y="590.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.17%)</title><rect x="893.4" y="675.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.4" y="686.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.13%)</title><rect x="895.4" y="691.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="898.4" y="702.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="895.4" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="898.4" y="686.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="895.4" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="898.4" y="670.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="895.4" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="898.4" y="654.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="895.4" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="898.4" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="895.4" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="898.4" y="622.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="895.4" y="595.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="898.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.10%)</title><rect x="895.8" y="675.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.8" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.07%)</title><rect x="896.2" y="659.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="899.2" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="897.0" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="900.0" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="897.0" y="675.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="900.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.17%)</title><rect x="897.4" y="691.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="900.4" y="702.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="898.5" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="901.5" y="686.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="898.5" y="659.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="901.5" y="670.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 1.27%)</title><rect x="899.3" y="691.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="902.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.53%)</title><rect x="908.0" y="675.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="911.0" y="686.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="911.9" y="659.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="914.9" y="670.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="912.3" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="915.3" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="912.3" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="915.3" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="912.3" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="915.3" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="912.3" y="611.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="915.3" y="622.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="912.3" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="915.3" y="606.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="912.3" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="915.3" y="590.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="912.3" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="915.3" y="574.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="912.3" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="915.3" y="558.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.03%)</title><rect x="912.7" y="659.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="915.7" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.10%)</title><rect x="913.1" y="659.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="916.1" y="670.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.10%)</title><rect x="913.1" y="643.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.1" y="654.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.10%)</title><rect x="913.1" y="627.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.1" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="913.1" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="916.1" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="913.1" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="916.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="913.1" y="579.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="916.1" y="590.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.03%)</title><rect x="913.5" y="611.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="916.5" y="622.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="913.9" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="916.9" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.03%)</title><rect x="914.3" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (122 samples, 4.07%)</title><rect x="914.7" y="707.0" width="48.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.7" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (121 samples, 4.04%)</title><rect x="915.1" y="691.0" width="47.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="918.1" y="702.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (22 samples, 0.73%)</title><rect x="916.3" y="675.0" width="8.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="919.3" y="686.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.10%)</title><rect x="917.4" y="659.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="920.4" y="670.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="918.6" y="659.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="921.6" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.47%)</title><rect x="919.0" y="659.0" width="5.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="922.0" y="670.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.10%)</title><rect x="921.0" y="643.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="924.0" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.20%)</title><rect x="922.2" y="643.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="925.2" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="924.5" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.5" y="670.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.07%)</title><rect x="924.9" y="675.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="927.9" y="686.0"></text>
</g>
<g>
<title>__libc_recv (91 samples, 3.04%)</title><rect x="925.7" y="675.0" width="35.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="928.7" y="686.0">__l..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 2.64%)</title><rect x="930.4" y="659.0" width="31.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="933.4" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (79 samples, 2.64%)</title><rect x="930.4" y="643.0" width="31.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="933.4" y="654.0">do..</text>
</g>
<g>
<title>__syscall_return_slowpath (1 samples, 0.03%)</title><rect x="935.6" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="938.6" y="638.0"></text>
</g>
<g>
<title>__audit_syscall_exit (1 samples, 0.03%)</title><rect x="935.6" y="611.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="938.6" y="622.0"></text>
</g>
<g>
<title>unroll_tree_refs (1 samples, 0.03%)</title><rect x="935.6" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="938.6" y="606.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (64 samples, 2.14%)</title><rect x="936.0" y="627.0" width="25.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="939.0" y="638.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (64 samples, 2.14%)</title><rect x="936.0" y="611.0" width="25.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="939.0" y="622.0">_..</text>
</g>
<g>
<title>inet6_recvmsg (50 samples, 1.67%)</title><rect x="937.9" y="595.0" width="19.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="940.9" y="606.0"></text>
</g>
<g>
<title>tcp_recvmsg (50 samples, 1.67%)</title><rect x="937.9" y="579.0" width="19.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="940.9" y="590.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.30%)</title><rect x="942.3" y="563.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.3" y="574.0"></text>
</g>
<g>
<title>skb_release_head_state (9 samples, 0.30%)</title><rect x="942.3" y="547.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="945.3" y="558.0"></text>
</g>
<g>
<title>dst_release (8 samples, 0.27%)</title><rect x="942.3" y="531.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="945.3" y="542.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="945.4" y="531.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="948.4" y="542.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.07%)</title><rect x="945.8" y="563.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="948.8" y="574.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="946.6" y="563.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="949.6" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.13%)</title><rect x="947.0" y="563.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="950.0" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (4 samples, 0.13%)</title><rect x="947.0" y="547.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="950.0" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.07%)</title><rect x="948.6" y="563.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="951.6" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (2 samples, 0.07%)</title><rect x="948.6" y="547.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="951.6" y="558.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (17 samples, 0.57%)</title><rect x="949.4" y="563.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="952.4" y="574.0"></text>
</g>
<g>
<title>__skb_datagram_iter (17 samples, 0.57%)</title><rect x="949.4" y="547.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="952.4" y="558.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.17%)</title><rect x="952.1" y="531.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="955.1" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.17%)</title><rect x="952.1" y="515.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="955.1" y="526.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.17%)</title><rect x="954.1" y="531.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="957.1" y="542.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.17%)</title><rect x="954.1" y="515.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.1" y="526.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.13%)</title><rect x="954.5" y="499.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.5" y="510.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="956.0" y="563.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="959.0" y="574.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="956.0" y="547.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.0" y="558.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.10%)</title><rect x="956.4" y="563.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="959.4" y="574.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.10%)</title><rect x="956.4" y="547.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="959.4" y="558.0"></text>
</g>
<g>
<title>ktime_get (3 samples, 0.10%)</title><rect x="956.4" y="531.0" width="1.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="959.4" y="542.0"></text>
</g>
<g>
<title>read_tsc (3 samples, 0.10%)</title><rect x="956.4" y="515.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="959.4" y="526.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.03%)</title><rect x="957.6" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="960.6" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="957.6" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="960.6" y="590.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.27%)</title><rect x="958.0" y="595.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="961.0" y="606.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.23%)</title><rect x="958.4" y="579.0" width="2.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="961.4" y="590.0"></text>
</g>
<g>
<title>__fget_files (5 samples, 0.17%)</title><rect x="959.2" y="563.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.2" y="574.0"></text>
</g>
<g>
<title>syscall_trace_enter (1 samples, 0.03%)</title><rect x="961.2" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="964.2" y="638.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.03%)</title><rect x="961.2" y="611.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="964.2" y="622.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.10%)</title><rect x="961.6" y="675.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="964.6" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.17%)</title><rect x="962.7" y="739.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="965.7" y="750.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.10%)</title><rect x="963.5" y="723.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="966.5" y="734.0"></text>
</g>
<g>
<title>start_thread (572 samples, 19.09%)</title><rect x="964.7" y="755.0" width="225.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="967.7" y="766.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (572 samples, 19.09%)</title><rect x="964.7" y="739.0" width="225.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="967.7" y="750.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (572 samples, 19.09%)</title><rect x="964.7" y="723.0" width="225.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="967.7" y="734.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (568 samples, 18.96%)</title><rect x="964.7" y="707.0" width="223.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="967.7" y="718.0">GangWorker::loop()</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (294 samples, 9.81%)</title><rect x="964.7" y="691.0" width="115.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="967.7" y="702.0">G1CMConcurrent..</text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (293 samples, 9.78%)</title><rect x="964.7" y="675.0" width="115.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="967.7" y="686.0">G1CMTask::do_m..</text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="966.7" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="969.7" y="670.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.0] (19 samples, 0.63%)</title><rect x="967.1" y="659.0" width="7.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="970.1" y="670.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (16 samples, 0.53%)</title><rect x="967.9" y="643.0" width="6.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="970.9" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (15 samples, 0.50%)</title><rect x="968.3" y="627.0" width="5.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="971.3" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="974.2" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="977.2" y="654.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1] (199 samples, 6.64%)</title><rect x="974.6" y="659.0" width="78.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="977.6" y="670.0">G1CMTask:..</text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (4 samples, 0.13%)</title><rect x="981.6" y="643.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="984.6" y="654.0"></text>
</g>
<g>
<title>getrusage (4 samples, 0.13%)</title><rect x="981.6" y="627.0" width="1.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="984.6" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.07%)</title><rect x="982.4" y="611.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="985.4" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.07%)</title><rect x="982.4" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="985.4" y="606.0"></text>
</g>
<g>
<title>__do_sys_getrusage (1 samples, 0.03%)</title><rect x="982.8" y="579.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="985.8" y="590.0"></text>
</g>
<g>
<title>getrusage (1 samples, 0.03%)</title><rect x="982.8" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="985.8" y="574.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.07%)</title><rect x="983.2" y="643.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="986.2" y="654.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (173 samples, 5.77%)</title><rect x="984.0" y="643.0" width="68.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="987.0" y="654.0">void G1..</text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (2 samples, 0.07%)</title><rect x="990.7" y="627.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="993.7" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (153 samples, 5.11%)</title><rect x="991.5" y="627.0" width="60.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="994.5" y="638.0">void O..</text>
</g>
<g>
<title>asm_common_interrupt (1 samples, 0.03%)</title><rect x="1051.4" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.4" y="622.0"></text>
</g>
<g>
<title>common_interrupt (1 samples, 0.03%)</title><rect x="1051.4" y="595.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1054.4" y="606.0"></text>
</g>
<g>
<title>irq_exit_rcu (1 samples, 0.03%)</title><rect x="1051.4" y="579.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1054.4" y="590.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1051.4" y="563.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1054.4" y="574.0"></text>
</g>
<g>
<title>asm_call_sysvec_on_stack (1 samples, 0.03%)</title><rect x="1051.4" y="547.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1054.4" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1051.4" y="531.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1054.4" y="542.0"></text>
</g>
<g>
<title>tasklet_action_common.constprop.0 (1 samples, 0.03%)</title><rect x="1051.4" y="515.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1054.4" y="526.0"></text>
</g>
<g>
<title>usb_giveback_urb_bh (1 samples, 0.03%)</title><rect x="1051.4" y="499.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1054.4" y="510.0"></text>
</g>
<g>
<title>__usb_hcd_giveback_urb (1 samples, 0.03%)</title><rect x="1051.4" y="483.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1054.4" y="494.0"></text>
</g>
<g>
<title>hid_irq_in?[usbhid] (1 samples, 0.03%)</title><rect x="1051.4" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1054.4" y="478.0"></text>
</g>
<g>
<title>hid_input_report?[hid] (1 samples, 0.03%)</title><rect x="1051.4" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1054.4" y="462.0"></text>
</g>
<g>
<title>logi_dj_raw_event?[hid_logitech_dj] (1 samples, 0.03%)</title><rect x="1051.4" y="435.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1054.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1051.4" y="419.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1054.4" y="430.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceRefKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1051.8" y="627.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1054.8" y="638.0"></text>
</g>
<g>
<title>bool InstanceRefKlass::try_discover&lt;unsigned int, G1CMOopClosure&gt;(oopDesc*, ReferenceType, G1CMOopClosure*) (1 samples, 0.03%)</title><rect x="1051.8" y="611.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1054.8" y="622.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (2 samples, 0.07%)</title><rect x="1052.1" y="643.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1055.1" y="654.0"></text>
</g>
<g>
<title>G1CMTask::regular_clock_call() (2 samples, 0.07%)</title><rect x="1052.9" y="659.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1055.9" y="670.0"></text>
</g>
<g>
<title>getrusage (2 samples, 0.07%)</title><rect x="1052.9" y="643.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1055.9" y="654.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;G1TaskQueueEntry, (MemoryType)5, 131072u&gt;::pop_local(G1TaskQueueEntry volatile&amp;, unsigned int) [clone .constprop.0] (42 samples, 1.40%)</title><rect x="1053.7" y="659.0" width="16.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1056.7" y="670.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (2 samples, 0.07%)</title><rect x="1070.3" y="659.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1073.3" y="670.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (23 samples, 0.77%)</title><rect x="1071.1" y="659.0" width="9.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1074.1" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (18 samples, 0.60%)</title><rect x="1073.0" y="643.0" width="7.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1076.0" y="654.0"></text>
</g>
<g>
<title>G1CMTask::drain_global_stack(bool) [clone .constprop.0] (1 samples, 0.03%)</title><rect x="1080.1" y="675.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1083.1" y="686.0"></text>
</g>
<g>
<title>G1CMRemarkTask::work(unsigned int) (5 samples, 0.17%)</title><rect x="1080.5" y="691.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.5" y="702.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.17%)</title><rect x="1080.5" y="675.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1083.5" y="686.0"></text>
</g>
<g>
<title>G1CMTask::drain_local_queue(bool) [clone .part.0] [clone .constprop.1] (1 samples, 0.03%)</title><rect x="1080.5" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1083.5" y="670.0"></text>
</g>
<g>
<title>void G1CMTask::process_grey_task_entry&lt;true&gt;(G1TaskQueueEntry) [clone .isra.0] (1 samples, 0.03%)</title><rect x="1080.5" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1083.5" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1CMOopClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1CMOopClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1080.5" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1083.5" y="638.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.13%)</title><rect x="1080.9" y="659.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1083.9" y="670.0"></text>
</g>
<g>
<title>G1CMRootRegionScanTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1082.5" y="691.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1085.5" y="702.0"></text>
</g>
<g>
<title>G1ConcurrentMark::scan_root_region(HeapRegion*, unsigned int) (1 samples, 0.03%)</title><rect x="1082.5" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1085.5" y="686.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.03%)</title><rect x="1082.5" y="659.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.5" y="670.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1082.9" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1085.9" y="702.0"></text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (1 samples, 0.03%)</title><rect x="1082.9" y="675.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.9" y="686.0"></text>
</g>
<g>
<title>G1ClearBitMapTask::G1ClearBitmapHRClosure::do_heap_region(HeapRegion*) (1 samples, 0.03%)</title><rect x="1082.9" y="659.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1085.9" y="670.0"></text>
</g>
<g>
<title>G1CMBitMap::clear_range(MemRegion) (1 samples, 0.03%)</title><rect x="1082.9" y="643.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1085.9" y="654.0"></text>
</g>
<g>
<title>__memset_avx2_erms (1 samples, 0.03%)</title><rect x="1082.9" y="627.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1085.9" y="638.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (133 samples, 4.44%)</title><rect x="1083.3" y="691.0" width="52.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1086.3" y="702.0">G1Par..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (43 samples, 1.44%)</title><rect x="1083.3" y="675.0" width="16.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1086.3" y="686.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1083.3" y="659.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1086.3" y="670.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1083.3" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.3" y="654.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.03%)</title><rect x="1083.7" y="659.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.7" y="670.0"></text>
</g>
<g>
<title>GenericTaskQueueSet&lt;OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;, (MemoryType)5&gt;::steal_best_of_2(unsigned int, int*, StarTask&amp;) (2 samples, 0.07%)</title><rect x="1084.1" y="659.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1087.1" y="670.0"></text>
</g>
<g>
<title>SpinPause (39 samples, 1.30%)</title><rect x="1084.8" y="659.0" width="15.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1087.8" y="670.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (71 samples, 2.37%)</title><rect x="1100.2" y="675.0" width="28.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.2" y="686.0">G..</text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (71 samples, 2.37%)</title><rect x="1100.2" y="659.0" width="28.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1103.2" y="670.0">G..</text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (71 samples, 2.37%)</title><rect x="1100.2" y="643.0" width="28.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1103.2" y="654.0">G..</text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_to_completed_buffer(CardTableEntryClosure*, unsigned int, unsigned long, bool) (71 samples, 2.37%)</title><rect x="1100.2" y="627.0" width="28.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.2" y="638.0">D..</text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (71 samples, 2.37%)</title><rect x="1100.2" y="611.0" width="28.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1103.2" y="622.0">G..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (45 samples, 1.50%)</title><rect x="1100.6" y="595.0" width="17.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1103.6" y="606.0"></text>
</g>
<g>
<title>CompositeElapsedCounterSource::now() (1 samples, 0.03%)</title><rect x="1106.1" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1109.1" y="590.0"></text>
</g>
<g>
<title>os::elapsed_counter() (1 samples, 0.03%)</title><rect x="1106.1" y="563.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1109.1" y="574.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (29 samples, 0.97%)</title><rect x="1106.5" y="579.0" width="11.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1109.5" y="590.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.03%)</title><rect x="1115.6" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1118.6" y="574.0"></text>
</g>
<g>
<title>PLAB::retire() (1 samples, 0.03%)</title><rect x="1115.6" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1118.6" y="558.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="1115.6" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1118.6" y="542.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="1115.6" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1118.6" y="526.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.17%)</title><rect x="1116.0" y="563.0" width="1.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.0" y="574.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1117.9" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1120.9" y="590.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.0] (21 samples, 0.70%)</title><rect x="1118.3" y="595.0" width="8.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.3" y="606.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.10%)</title><rect x="1120.7" y="579.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.7" y="590.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.10%)</title><rect x="1120.7" y="563.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.7" y="574.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (3 samples, 0.10%)</title><rect x="1121.9" y="579.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1124.9" y="590.0"></text>
</g>
<g>
<title>Klass::start_of_vtable() const (1 samples, 0.03%)</title><rect x="1123.0" y="579.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1126.0" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (8 samples, 0.27%)</title><rect x="1123.4" y="579.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.4" y="590.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (3 samples, 0.10%)</title><rect x="1125.4" y="563.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1128.4" y="574.0"></text>
</g>
<g>
<title>oopDesc::size() (4 samples, 0.13%)</title><rect x="1126.6" y="595.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1129.6" y="606.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (12 samples, 0.40%)</title><rect x="1128.2" y="675.0" width="4.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.2" y="686.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (12 samples, 0.40%)</title><rect x="1128.2" y="659.0" width="4.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.2" y="670.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (12 samples, 0.40%)</title><rect x="1128.2" y="643.0" width="4.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1131.2" y="654.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (11 samples, 0.37%)</title><rect x="1128.6" y="627.0" width="4.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.6" y="638.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_card(MemRegion, unsigned int) (8 samples, 0.27%)</title><rect x="1128.6" y="611.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1131.6" y="622.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (3 samples, 0.10%)</title><rect x="1128.6" y="595.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.6" y="606.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (3 samples, 0.10%)</title><rect x="1128.6" y="579.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.6" y="590.0"></text>
</g>
<g>
<title>G1ContiguousSpace::block_start(void const*) (1 samples, 0.03%)</title><rect x="1129.7" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1132.7" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.07%)</title><rect x="1130.1" y="595.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1133.1" y="606.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1130.5" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1133.5" y="590.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringScanRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringScanRSClosure*, oopDesc*, Klass*) (2 samples, 0.07%)</title><rect x="1130.9" y="595.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1133.9" y="606.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::has_next(unsigned long&amp;) (3 samples, 0.10%)</title><rect x="1131.7" y="611.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.7" y="622.0"></text>
</g>
<g>
<title>HeapRegionRemSetIterator::fine_has_next(unsigned long&amp;) (1 samples, 0.03%)</title><rect x="1132.5" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1135.5" y="606.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (7 samples, 0.23%)</title><rect x="1132.9" y="675.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1135.9" y="686.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (6 samples, 0.20%)</title><rect x="1132.9" y="659.0" width="2.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1135.9" y="670.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (6 samples, 0.20%)</title><rect x="1132.9" y="643.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.9" y="654.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (6 samples, 0.20%)</title><rect x="1132.9" y="627.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1135.9" y="638.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (2 samples, 0.07%)</title><rect x="1132.9" y="611.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1135.9" y="622.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (2 samples, 0.07%)</title><rect x="1132.9" y="595.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1135.9" y="606.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="1133.7" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1136.7" y="622.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="1133.7" y="595.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.7" y="606.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="1133.7" y="579.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1136.7" y="590.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (3 samples, 0.10%)</title><rect x="1134.1" y="611.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1137.1" y="622.0"></text>
</g>
<g>
<title>InterpreterFrameClosure::offset_do(int) (1 samples, 0.03%)</title><rect x="1134.5" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1137.5" y="606.0"></text>
</g>
<g>
<title>Method::mask_for(int, InterpreterOopMap*) (1 samples, 0.03%)</title><rect x="1134.9" y="595.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1137.9" y="606.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1134.9" y="579.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1137.9" y="590.0"></text>
</g>
<g>
<title>G1RootProcessor::process_vm_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1135.3" y="659.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.3" y="670.0"></text>
</g>
<g>
<title>Universe::oops_do(OopClosure*, bool) (1 samples, 0.03%)</title><rect x="1135.3" y="643.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.3" y="654.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)1&gt;::do_oop(oopDesc**) (1 samples, 0.03%)</title><rect x="1135.3" y="627.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1138.3" y="638.0"></text>
</g>
<g>
<title>G1ParallelCleaningTask::work(unsigned int) (2 samples, 0.07%)</title><rect x="1135.6" y="691.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.6" y="702.0"></text>
</g>
<g>
<title>G1CodeCacheUnloadingTask::work_first_pass(unsigned int) (1 samples, 0.03%)</title><rect x="1135.6" y="675.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1138.6" y="686.0"></text>
</g>
<g>
<title>CompiledMethod::do_unloading_parallel(BoolObjectClosure*, bool) (1 samples, 0.03%)</title><rect x="1135.6" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1138.6" y="670.0"></text>
</g>
<g>
<title>nmethod::do_unloading_oops(unsigned char*, BoolObjectClosure*) (1 samples, 0.03%)</title><rect x="1135.6" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.6" y="654.0"></text>
</g>
<g>
<title>RelocIterator::initialize(CompiledMethod*, unsigned char*, unsigned char*) (1 samples, 0.03%)</title><rect x="1135.6" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.6" y="638.0"></text>
</g>
<g>
<title>SymbolTable::possibly_parallel_unlink(int*, int*) (1 samples, 0.03%)</title><rect x="1136.0" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.0" y="686.0"></text>
</g>
<g>
<title>SymbolTable::buckets_unlink(int, int, BasicHashtable&lt;(MemoryType)9&gt;::BucketUnlinkContext*) (1 samples, 0.03%)</title><rect x="1136.0" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.0" y="670.0"></text>
</g>
<g>
<title>G1RebuildRemSetTask::work(unsigned int) (130 samples, 4.34%)</title><rect x="1136.4" y="691.0" width="51.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.4" y="702.0">G1Reb..</text>
</g>
<g>
<title>HeapRegionManager::par_iterate(HeapRegionClosure*, HeapRegionClaimer*, unsigned int) const (130 samples, 4.34%)</title><rect x="1136.4" y="675.0" width="51.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1139.4" y="686.0">HeapR..</text>
</g>
<g>
<title>G1RebuildRemSetTask::G1RebuildRemSetHeapRegionClosure::do_heap_region(HeapRegion*) (126 samples, 4.21%)</title><rect x="1136.4" y="659.0" width="49.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1139.4" y="670.0">G1Reb..</text>
</g>
<g>
<title>Klass::start_of_vtable() const (3 samples, 0.10%)</title><rect x="1166.0" y="643.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.0" y="654.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (48 samples, 1.60%)</title><rect x="1167.2" y="643.0" width="18.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.2" y="654.0"></text>
</g>
<g>
<title>OtherRegionsTable::add_reference(void*, unsigned int) (10 samples, 0.33%)</title><rect x="1182.1" y="627.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.1" y="638.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1RebuildRemSetClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1RebuildRemSetClosure*, oopDesc*, Klass*) (4 samples, 0.13%)</title><rect x="1186.1" y="659.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.1" y="670.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.07%)</title><rect x="1187.6" y="691.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.6" y="702.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.07%)</title><rect x="1187.6" y="675.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.6" y="686.0"></text>
</g>
<g>
<title>ParallelSPCleanupThreadClosure::do_thread(Thread*) (2 samples, 0.07%)</title><rect x="1187.6" y="659.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.6" y="670.0"></text>
</g>
<g>
<title>ObjectSynchronizer::deflate_thread_local_monitors(Thread*, DeflateMonitorCounters*) (2 samples, 0.07%)</title><rect x="1187.6" y="643.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.6" y="654.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.13%)</title><rect x="1188.4" y="707.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="718.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.13%)</title><rect x="1188.4" y="691.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.4" y="702.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1188.4" y="675.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.4" y="686.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1188.4" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.4" y="670.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="1188.4" y="643.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.4" y="654.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1188.4" y="627.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1191.4" y="638.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1188.4" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.4" y="622.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1188.4" y="595.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1191.4" y="606.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1188.4" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1191.4" y="590.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="1188.4" y="563.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1191.4" y="574.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1188.4" y="547.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1191.4" y="558.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.03%)</title><rect x="1188.8" y="675.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.8" y="686.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.03%)</title><rect x="1188.8" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.8" y="670.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1188.8" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.8" y="654.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1188.8" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.8" y="638.0"></text>
</g>
<g>
<title>__new_sem_post (1 samples, 0.03%)</title><rect x="1188.8" y="611.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1191.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1188.8" y="595.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1191.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1188.8" y="579.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.8" y="590.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.0] (2 samples, 0.07%)</title><rect x="1189.2" y="675.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.2" y="686.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.07%)</title><rect x="1189.2" y="659.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.2" y="670.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.07%)</title><rect x="1189.2" y="643.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.2" y="654.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.07%)</title><rect x="1189.2" y="627.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.2" y="638.0"></text>
</g>
<g>
<title>GCHeapLog::log_heap(CollectedHeap*, bool) [clone .part.0] (1 samples, 0.03%)</title><rect x="1189.6" y="611.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.6" y="622.0"></text>
</g>
<g>
<title>outputStream::print_cr(char const*, ...) (1 samples, 0.03%)</title><rect x="1189.6" y="595.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.6" y="606.0"></text>
</g>
<g>
<title>stringStream::write(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="1189.6" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.6" y="590.0"></text>
</g>
</g>
</svg>
